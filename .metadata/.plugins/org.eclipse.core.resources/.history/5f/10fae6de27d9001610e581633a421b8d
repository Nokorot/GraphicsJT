import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferStrategy;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

public class Display extends Canvas	 {
	
	public static final int WIDTH = 800, HEIGHT = 600;

	private boolean running = false;
	private Thread thread;
	
	private int width, height;
	private JLabel label;
	
	private BufferedImage image;
	
	private Color background = Color.RED;
	
	public Display(int width, int height) {
		image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
	}
	
	public void start(){
		if (running) return;
		running = true;
		thread = new Thread(() -> run());
		thread.start();
	}
	
	public void stop(){
		running = false;
		try {
			thread.join();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	private void run(){
		while (running) {
			render();
		}
	}
	
	public void render(){
		BufferStrategy bs = this.getBufferStrategy();
		if (bs == null){
			this.createBufferStrategy(3);
			return;
		}
		
		Graphics g = bs.getDrawGraphics();
		
		g.setColor(background);
		g.fillRect(0, 0, width, height);
		g.dispose();
		bs.show();
//		label.setIcon(new ImageIcon(image));
	}
	
	
	
	public static void main(String[] args) {
		Display display = new Display(800, 600); 
		JFrame frame = new JFrame("Title");
		frame.setDefaultCloseOperation(3);
		frame.setSize(WIDTH, HWIGHT);
		frame.add(display);
		frame.pack();
		frame.setLocationRelativeTo(null);
		frame.setResizable(false);
		frame.setVisible(true);
		
		display.start();
		
	}
	
}
