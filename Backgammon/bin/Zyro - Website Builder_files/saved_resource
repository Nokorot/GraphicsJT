
		var WB_USER_IP = "37.191.215.168";
		var WB_DEBUG_MODE = (WB_USER_IP == "192.168.1.140");
		var WB_SAVE_URL = "http://us.zyro.com/save/";
		CKEDITOR_BASEPATH = "http://us.zyro.com/modules/builder/js/lib/ckeditor/";
		;

/** jQuery **/
/*! jQuery v1.11.3 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l="1.11.3",m=function(a,b){return new m.fn.init(a,b)},n=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,o=/^-ms-/,p=/-([\da-z])/gi,q=function(a,b){return b.toUpperCase()};m.fn=m.prototype={jquery:l,constructor:m,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=m.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return m.each(this,a,b)},map:function(a){return this.pushStack(m.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},m.extend=m.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||m.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&&(j&&c&&(m.isPlainObject(c)||(b=m.isArray(c)))?(b?(b=!1,f=a&&m.isArray(a)?a:[]):f=a&&m.isPlainObject(a)?a:{},g[d]=m.extend(j,f,c)):void 0!==c&&(g[d]=c));return g},m.extend({expando:"jQuery"+(l+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===m.type(a)},isArray:Array.isArray||function(a){return"array"===m.type(a)},isWindow:function(a){return null!=a&&a==a.window},isNumeric:function(a){return!m.isArray(a)&&a-parseFloat(a)+1>=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||"object"!==m.type(a)||a.nodeType||m.isWindow(a))return!1;try{if(a.constructor&&!j.call(a,"constructor")&&!j.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}if(k.ownLast)for(b in a)return j.call(a,b);for(b in a);return void 0===b||j.call(a,b)},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(b){b&&m.trim(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(o,"ms-").replace(p,q)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=r(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(n,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(r(Object(a))?m.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(g)return g.call(b,a,c);for(d=b.length,c=c?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c>d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=r(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(f=a[b],b=a,a=f),m.isFunction(a)?(c=d.call(arguments,2),e=function(){return a.apply(b||this,c.concat(d.call(arguments)))},e.guid=a.guid=a.guid||m.guid++,e):void 0},now:function(){return+new Date},support:k}),m.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function r(a){var b="length"in a&&a.length,c=m.type(a);return"function"===c||m.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var s=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",N=M.replace("w","w#"),O="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+N+"))|)"+L+"*\\]",P=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+O+")*)|.*)\\)|)",Q=new RegExp(L+"+","g"),R=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),S=new RegExp("^"+L+"*,"+L+"*"),T=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),U=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),V=new RegExp(P),W=new RegExp("^"+N+"$"),X={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+O),PSEUDO:new RegExp("^"+P),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,aa=/[+~]/,ba=/'|\\/g,ca=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),da=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ea=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fa){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,"string"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(ba,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+ra(o[l]);w=aa.test(a)&&pa(b.parentNode)||b,x=o.join(",")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function oa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pa(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener("unload",ea,!1):e.attachEvent&&e.attachEvent("onunload",ea)),p=!f(g),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(g.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\f]' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+L+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ja(function(a){var b=g.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+L+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",P)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?la(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ca,da),a[3]=(a[3]||a[4]||a[5]||"").replace(ca,da),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ca,da).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(Q," ")+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(ca,da),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return W.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(ca,da).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:oa(function(){return[0]}),last:oa(function(a,b){return[b-1]}),eq:oa(function(a,b,c){return[0>c?c+b:c]}),even:oa(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:oa(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:oa(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:oa(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function qa(){}qa.prototype=d.filters=d.pseudos,d.setFilters=new qa,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function ra(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function sa(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function ta(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ua(a,b,c){for(var d=0,e=b.length;e>d;d++)ga(a,b[d],c);return c}function va(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wa(a,b,c,d,e,f){return d&&!d[u]&&(d=wa(d)),e&&!e[u]&&(e=wa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ua(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:va(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=va(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=va(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=sa(function(a){return a===b},h,!0),l=sa(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sa(ta(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wa(i>1&&ta(m),i>1&&ra(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&xa(a.slice(i,e)),f>e&&xa(a=a.slice(e)),f>e&&ra(a))}m.push(c)}return ta(m)}function ya(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=va(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&ga.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,ya(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ca,da),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ca,da),aa.test(j[0].type)&&pa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&ra(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,aa.test(a)&&pa(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ja(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);m.find=s,m.expr=s.selectors,m.expr[":"]=m.expr.pseudos,m.unique=s.uniqueSort,m.text=s.getText,m.isXMLDoc=s.isXML,m.contains=s.contains;var t=m.expr.match.needsContext,u=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,v=/^.[^:#\[\.,]*$/;function w(a,b,c){if(m.isFunction(b))return m.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return m.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(v.test(b))return m.filter(b,a,c);b=m.filter(b,a)}return m.grep(a,function(a){return m.inArray(a,b)>=0!==c})}m.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?m.find.matchesSelector(d,a)?[d]:[]:m.find.matches(a,m.grep(b,function(a){return 1===a.nodeType}))},m.fn.extend({find:function(a){var b,c=[],d=this,e=d.length;if("string"!=typeof a)return this.pushStack(m(a).filter(function(){for(b=0;e>b;b++)if(m.contains(d[b],this))return!0}));for(b=0;e>b;b++)m.find(a,d[b],c);return c=this.pushStack(e>1?m.unique(c):c),c.selector=this.selector?this.selector+" "+a:a,c},filter:function(a){return this.pushStack(w(this,a||[],!1))},not:function(a){return this.pushStack(w(this,a||[],!0))},is:function(a){return!!w(this,"string"==typeof a&&t.test(a)?m(a):a||[],!1).length}});var x,y=a.document,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=m.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a.charAt(0)&&">"===a.charAt(a.length-1)&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||x).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof m?b[0]:b,m.merge(this,m.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:y,!0)),u.test(c[1])&&m.isPlainObject(b))for(c in b)m.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}if(d=y.getElementById(c[2]),d&&d.parentNode){if(d.id!==c[2])return x.find(a);this.length=1,this[0]=d}return this.context=y,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):m.isFunction(a)?"undefined"!=typeof x.ready?x.ready(a):a(m):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),m.makeArray(a,this))};A.prototype=m.fn,x=m(y);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};m.extend({dir:function(a,b,c){var d=[],e=a[b];while(e&&9!==e.nodeType&&(void 0===c||1!==e.nodeType||!m(e).is(c)))1===e.nodeType&&d.push(e),e=e[b];return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),m.fn.extend({has:function(a){var b,c=m(a,this),d=c.length;return this.filter(function(){for(b=0;d>b;b++)if(m.contains(this,c[b]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=t.test(a)||"string"!=typeof a?m(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&m.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?m.unique(f):f)},index:function(a){return a?"string"==typeof a?m.inArray(this[0],m(a)):m.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(m.unique(m.merge(this.get(),m(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}m.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return m.dir(a,"parentNode")},parentsUntil:function(a,b,c){return m.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return m.dir(a,"nextSibling")},prevAll:function(a){return m.dir(a,"previousSibling")},nextUntil:function(a,b,c){return m.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return m.dir(a,"previousSibling",c)},siblings:function(a){return m.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return m.sibling(a.firstChild)},contents:function(a){return m.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:m.merge([],a.childNodes)}},function(a,b){m.fn[a]=function(c,d){var e=m.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=m.filter(d,e)),this.length>1&&(C[a]||(e=m.unique(e)),B.test(a)&&(e=e.reverse())),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return m.each(a.match(E)||[],function(a,c){b[c]=!0}),b}m.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):m.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(c=a.memory&&l,d=!0,f=g||0,g=0,e=h.length,b=!0;h&&e>f;f++)if(h[f].apply(l[0],l[1])===!1&&a.stopOnFalse){c=!1;break}b=!1,h&&(i?i.length&&j(i.shift()):c?h=[]:k.disable())},k={add:function(){if(h){var d=h.length;!function f(b){m.each(b,function(b,c){var d=m.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&f(c)})}(arguments),b?e=h.length:c&&(g=d,j(c))}return this},remove:function(){return h&&m.each(arguments,function(a,c){var d;while((d=m.inArray(c,h,d))>-1)h.splice(d,1),b&&(e>=d&&e--,f>=d&&f--)}),this},has:function(a){return a?m.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],e=0,this},disable:function(){return h=i=c=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,c||k.disable(),this},locked:function(){return!i},fireWith:function(a,c){return!h||d&&!i||(c=c||[],c=[a,c.slice?c.slice():c],b?i.push(c):j(c)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!d}};return k},m.extend({Deferred:function(a){var b=[["resolve","done",m.Callbacks("once memory"),"resolved"],["reject","fail",m.Callbacks("once memory"),"rejected"],["notify","progress",m.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return m.Deferred(function(c){m.each(b,function(b,f){var g=m.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&m.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?m.extend(a,d):d}},e={};return d.pipe=d.then,m.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&m.isFunction(a.promise)?e:0,g=1===f?a:m.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&m.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;m.fn.ready=function(a){return m.ready.promise().done(a),this},m.extend({isReady:!1,readyWait:1,holdReady:function(a){a?m.readyWait++:m.ready(!0)},ready:function(a){if(a===!0?!--m.readyWait:!m.isReady){if(!y.body)return setTimeout(m.ready);m.isReady=!0,a!==!0&&--m.readyWait>0||(H.resolveWith(y,[m]),m.fn.triggerHandler&&(m(y).triggerHandler("ready"),m(y).off("ready")))}}});function I(){y.addEventListener?(y.removeEventListener("DOMContentLoaded",J,!1),a.removeEventListener("load",J,!1)):(y.detachEvent("onreadystatechange",J),a.detachEvent("onload",J))}function J(){(y.addEventListener||"load"===event.type||"complete"===y.readyState)&&(I(),m.ready())}m.ready.promise=function(b){if(!H)if(H=m.Deferred(),"complete"===y.readyState)setTimeout(m.ready);else if(y.addEventListener)y.addEventListener("DOMContentLoaded",J,!1),a.addEventListener("load",J,!1);else{y.attachEvent("onreadystatechange",J),a.attachEvent("onload",J);var c=!1;try{c=null==a.frameElement&&y.documentElement}catch(d){}c&&c.doScroll&&!function e(){if(!m.isReady){try{c.doScroll("left")}catch(a){return setTimeout(e,50)}I(),m.ready()}}()}return H.promise(b)};var K="undefined",L;for(L in m(k))break;k.ownLast="0"!==L,k.inlineBlockNeedsLayout=!1,m(function(){var a,b,c,d;c=y.getElementsByTagName("body")[0],c&&c.style&&(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&&(b.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",k.inlineBlockNeedsLayout=a=3===b.offsetWidth,a&&(c.style.zoom=1)),c.removeChild(d))}),function(){var a=y.createElement("div");if(null==k.deleteExpando){k.deleteExpando=!0;try{delete a.test}catch(b){k.deleteExpando=!1}}a=null}(),m.acceptData=function(a){var b=m.noData[(a.nodeName+" ").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute("classid")===b};var M=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,N=/([A-Z])/g;function O(a,b,c){if(void 0===c&&1===a.nodeType){var d="data-"+b.replace(N,"-$1").toLowerCase();if(c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:M.test(c)?m.parseJSON(c):c}catch(e){}m.data(a,b,c)}else c=void 0}return c}function P(a){var b;for(b in a)if(("data"!==b||!m.isEmptyObject(a[b]))&&"toJSON"!==b)return!1;

return!0}function Q(a,b,d,e){if(m.acceptData(a)){var f,g,h=m.expando,i=a.nodeType,j=i?m.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||"string"!=typeof b)return k||(k=i?a[h]=c.pop()||m.guid++:h),j[k]||(j[k]=i?{}:{toJSON:m.noop}),("object"==typeof b||"function"==typeof b)&&(e?j[k]=m.extend(j[k],b):j[k].data=m.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[m.camelCase(b)]=d),"string"==typeof b?(f=g[b],null==f&&(f=g[m.camelCase(b)])):f=g,f}}function R(a,b,c){if(m.acceptData(a)){var d,e,f=a.nodeType,g=f?m.cache:a,h=f?a[m.expando]:m.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){m.isArray(b)?b=b.concat(m.map(b,m.camelCase)):b in d?b=[b]:(b=m.camelCase(b),b=b in d?[b]:b.split(" ")),e=b.length;while(e--)delete d[b[e]];if(c?!P(d):!m.isEmptyObject(d))return}(c||(delete g[h].data,P(g[h])))&&(f?m.cleanData([a],!0):k.deleteExpando||g!=g.window?delete g[h]:g[h]=null)}}}m.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){return a=a.nodeType?m.cache[a[m.expando]]:a[m.expando],!!a&&!P(a)},data:function(a,b,c){return Q(a,b,c)},removeData:function(a,b){return R(a,b)},_data:function(a,b,c){return Q(a,b,c,!0)},_removeData:function(a,b){return R(a,b,!0)}}),m.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=m.data(f),1===f.nodeType&&!m._data(f,"parsedAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=m.camelCase(d.slice(5)),O(f,d,e[d])));m._data(f,"parsedAttrs",!0)}return e}return"object"==typeof a?this.each(function(){m.data(this,a)}):arguments.length>1?this.each(function(){m.data(this,a,b)}):f?O(f,a,m.data(f,a)):void 0},removeData:function(a){return this.each(function(){m.removeData(this,a)})}}),m.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=m._data(a,b),c&&(!d||m.isArray(c)?d=m._data(a,b,m.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=m.queue(a,b),d=c.length,e=c.shift(),f=m._queueHooks(a,b),g=function(){m.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return m._data(a,c)||m._data(a,c,{empty:m.Callbacks("once memory").add(function(){m._removeData(a,b+"queue"),m._removeData(a,c)})})}}),m.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?m.queue(this[0],a):void 0===b?this:this.each(function(){var c=m.queue(this,a,b);m._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&m.dequeue(this,a)})},dequeue:function(a){return this.each(function(){m.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=m.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=m._data(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var S=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,T=["Top","Right","Bottom","Left"],U=function(a,b){return a=b||a,"none"===m.css(a,"display")||!m.contains(a.ownerDocument,a)},V=m.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===m.type(c)){e=!0;for(h in c)m.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,m.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(m(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},W=/^(?:checkbox|radio)$/i;!function(){var a=y.createElement("input"),b=y.createElement("div"),c=y.createDocumentFragment();if(b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",k.leadingWhitespace=3===b.firstChild.nodeType,k.tbody=!b.getElementsByTagName("tbody").length,k.htmlSerialize=!!b.getElementsByTagName("link").length,k.html5Clone="<:nav></:nav>"!==y.createElement("nav").cloneNode(!0).outerHTML,a.type="checkbox",a.checked=!0,c.appendChild(a),k.appendChecked=a.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue,c.appendChild(b),b.innerHTML="<input type='radio' checked='checked' name='t'/>",k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,k.noCloneEvent=!0,b.attachEvent&&(b.attachEvent("onclick",function(){k.noCloneEvent=!1}),b.cloneNode(!0).click()),null==k.deleteExpando){k.deleteExpando=!0;try{delete b.test}catch(d){k.deleteExpando=!1}}}(),function(){var b,c,d=y.createElement("div");for(b in{submit:!0,change:!0,focusin:!0})c="on"+b,(k[b+"Bubbles"]=c in a)||(d.setAttribute(c,"t"),k[b+"Bubbles"]=d.attributes[c].expando===!1);d=null}();var X=/^(?:input|select|textarea)$/i,Y=/^key/,Z=/^(?:mouse|pointer|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=/^([^.]*)(?:\.(.+)|)$/;function aa(){return!0}function ba(){return!1}function ca(){try{return y.activeElement}catch(a){}}m.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m._data(a);if(r){c.handler&&(i=c,c=i.handler,e=i.selector),c.guid||(c.guid=m.guid++),(g=r.events)||(g=r.events={}),(k=r.handle)||(k=r.handle=function(a){return typeof m===K||a&&m.event.triggered===a.type?void 0:m.event.dispatch.apply(k.elem,arguments)},k.elem=a),b=(b||"").match(E)||[""],h=b.length;while(h--)f=_.exec(b[h])||[],o=q=f[1],p=(f[2]||"").split(".").sort(),o&&(j=m.event.special[o]||{},o=(e?j.delegateType:j.bindType)||o,j=m.event.special[o]||{},l=m.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&m.expr.match.needsContext.test(e),namespace:p.join(".")},i),(n=g[o])||(n=g[o]=[],n.delegateCount=0,j.setup&&j.setup.call(a,d,p,k)!==!1||(a.addEventListener?a.addEventListener(o,k,!1):a.attachEvent&&a.attachEvent("on"+o,k))),j.add&&(j.add.call(a,l),l.handler.guid||(l.handler.guid=c.guid)),e?n.splice(n.delegateCount++,0,l):n.push(l),m.event.global[o]=!0);a=null}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m.hasData(a)&&m._data(a);if(r&&(k=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=_.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=m.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,n=k[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=f=n.length;while(f--)g=n[f],!e&&q!==g.origType||c&&c.guid!==g.guid||h&&!h.test(g.namespace)||d&&d!==g.selector&&("**"!==d||!g.selector)||(n.splice(f,1),g.selector&&n.delegateCount--,l.remove&&l.remove.call(a,g));i&&!n.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||m.removeEvent(a,o,r.handle),delete k[o])}else for(o in k)m.event.remove(a,o+b[j],c,d,!0);m.isEmptyObject(k)&&(delete r.handle,m._removeData(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,l,n,o=[d||y],p=j.call(b,"type")?b.type:b,q=j.call(b,"namespace")?b.namespace.split("."):[];if(h=l=d=d||y,3!==d.nodeType&&8!==d.nodeType&&!$.test(p+m.event.triggered)&&(p.indexOf(".")>=0&&(q=p.split("."),p=q.shift(),q.sort()),g=p.indexOf(":")<0&&"on"+p,b=b[m.expando]?b:new m.Event(p,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=q.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:m.makeArray(c,[b]),k=m.event.special[p]||{},e||!k.trigger||k.trigger.apply(d,c)!==!1)){if(!e&&!k.noBubble&&!m.isWindow(d)){for(i=k.delegateType||p,$.test(i+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),l=h;l===(d.ownerDocument||y)&&o.push(l.defaultView||l.parentWindow||a)}n=0;while((h=o[n++])&&!b.isPropagationStopped())b.type=n>1?i:k.bindType||p,f=(m._data(h,"events")||{})[b.type]&&m._data(h,"handle"),f&&f.apply(h,c),f=g&&h[g],f&&f.apply&&m.acceptData(h)&&(b.result=f.apply(h,c),b.result===!1&&b.preventDefault());if(b.type=p,!e&&!b.isDefaultPrevented()&&(!k._default||k._default.apply(o.pop(),c)===!1)&&m.acceptData(d)&&g&&d[p]&&!m.isWindow(d)){l=d[g],l&&(d[g]=null),m.event.triggered=p;try{d[p]()}catch(r){}m.event.triggered=void 0,l&&(d[g]=l)}return b.result}},dispatch:function(a){a=m.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(m._data(this,"events")||{})[a.type]||[],k=m.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=m.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,g=0;while((e=f.handlers[g++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(e.namespace))&&(a.handleObj=e,a.data=e.data,c=((m.event.special[e.origType]||{}).handle||e.handler).apply(f.elem,i),void 0!==c&&(a.result=c)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!=this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||"click"!==a.type)){for(e=[],f=0;h>f;f++)d=b[f],c=d.selector+" ",void 0===e[c]&&(e[c]=d.needsContext?m(c,this).index(i)>=0:m.find(c,this,null,[i]).length),e[c]&&e.push(d);e.length&&g.push({elem:i,handlers:e})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},fix:function(a){if(a[m.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=Z.test(e)?this.mouseHooks:Y.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new m.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=f.srcElement||y),3===a.target.nodeType&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,g.filter?g.filter(a,f):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button,g=b.fromElement;return null==a.pageX&&null!=b.clientX&&(d=a.target.ownerDocument||y,e=d.documentElement,c=d.body,a.pageX=b.clientX+(e&&e.scrollLeft||c&&c.scrollLeft||0)-(e&&e.clientLeft||c&&c.clientLeft||0),a.pageY=b.clientY+(e&&e.scrollTop||c&&c.scrollTop||0)-(e&&e.clientTop||c&&c.clientTop||0)),!a.relatedTarget&&g&&(a.relatedTarget=g===a.target?b.toElement:g),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==ca()&&this.focus)try{return this.focus(),!1}catch(a){}},delegateType:"focusin"},blur:{trigger:function(){return this===ca()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return m.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(a){return m.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=m.extend(new m.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?m.event.trigger(e,null,b):m.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},m.removeEvent=y.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&&(typeof a[d]===K&&(a[d]=null),a.detachEvent(d,c))},m.Event=function(a,b){return this instanceof m.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?aa:ba):this.type=a,b&&m.extend(this,b),this.timeStamp=a&&a.timeStamp||m.now(),void(this[m.expando]=!0)):new m.Event(a,b)},m.Event.prototype={isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=aa,a&&(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=aa,a&&(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=aa,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},m.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){m.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!m.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.submitBubbles||(m.event.special.submit={setup:function(){return m.nodeName(this,"form")?!1:void m.event.add(this,"click._submit keypress._submit",function(a){var b=a.target,c=m.nodeName(b,"input")||m.nodeName(b,"button")?b.form:void 0;c&&!m._data(c,"submitBubbles")&&(m.event.add(c,"submit._submit",function(a){a._submit_bubble=!0}),m._data(c,"submitBubbles",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&m.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){return m.nodeName(this,"form")?!1:void m.event.remove(this,"._submit")}}),k.changeBubbles||(m.event.special.change={setup:function(){return X.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(m.event.add(this,"propertychange._change",function(a){"checked"===a.originalEvent.propertyName&&(this._just_changed=!0)}),m.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),m.event.simulate("change",this,a,!0)})),!1):void m.event.add(this,"beforeactivate._change",function(a){var b=a.target;X.test(b.nodeName)&&!m._data(b,"changeBubbles")&&(m.event.add(b,"change._change",function(a){!this.parentNode||a.isSimulated||a.isTrigger||m.event.simulate("change",this.parentNode,a,!0)}),m._data(b,"changeBubbles",!0))})},handle:function(a){var b=a.target;return this!==b||a.isSimulated||a.isTrigger||"radio"!==b.type&&"checkbox"!==b.type?a.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return m.event.remove(this,"._change"),!X.test(this.nodeName)}}),k.focusinBubbles||m.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){m.event.simulate(b,a.target,m.event.fix(a),!0)};m.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=m._data(d,b);e||d.addEventListener(a,c,!0),m._data(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=m._data(d,b)-1;e?m._data(d,b,e):(d.removeEventListener(a,c,!0),m._removeData(d,b))}}}),m.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(f in a)this.on(f,b,c,a[f],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=ba;else if(!d)return this;return 1===e&&(g=d,d=function(a){return m().off(a),g.apply(this,arguments)},d.guid=g.guid||(g.guid=m.guid++)),this.each(function(){m.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,m(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=ba),this.each(function(){m.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){m.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?m.event.trigger(a,b,c,!0):void 0}});function da(a){var b=ea.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}var ea="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",fa=/ jQuery\d+="(?:null|\d+)"/g,ga=new RegExp("<(?:"+ea+")[\\s/>]","i"),ha=/^\s+/,ia=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,ja=/<([\w:]+)/,ka=/<tbody/i,la=/<|&#?\w+;/,ma=/<(?:script|style|link)/i,na=/checked\s*(?:[^=]|=\s*.checked.)/i,oa=/^$|\/(?:java|ecma)script/i,pa=/^true\/(.*)/,qa=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,ra={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:k.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},sa=da(y),ta=sa.appendChild(y.createElement("div"));ra.optgroup=ra.option,ra.tbody=ra.tfoot=ra.colgroup=ra.caption=ra.thead,ra.th=ra.td;function ua(a,b){var c,d,e=0,f=typeof a.getElementsByTagName!==K?a.getElementsByTagName(b||"*"):typeof a.querySelectorAll!==K?a.querySelectorAll(b||"*"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||m.nodeName(d,b)?f.push(d):m.merge(f,ua(d,b));return void 0===b||b&&m.nodeName(a,b)?m.merge([a],f):f}function va(a){W.test(a.type)&&(a.defaultChecked=a.checked)}function wa(a,b){return m.nodeName(a,"table")&&m.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function xa(a){return a.type=(null!==m.find.attr(a,"type"))+"/"+a.type,a}function ya(a){var b=pa.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function za(a,b){for(var c,d=0;null!=(c=a[d]);d++)m._data(c,"globalEval",!b||m._data(b[d],"globalEval"))}function Aa(a,b){if(1===b.nodeType&&m.hasData(a)){var c,d,e,f=m._data(a),g=m._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)m.event.add(b,c,h[c][d])}g.data&&(g.data=m.extend({},g.data))}}function Ba(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!k.noCloneEvent&&b[m.expando]){e=m._data(b);for(d in e.events)m.removeEvent(b,d,e.handle);b.removeAttribute(m.expando)}"script"===c&&b.text!==a.text?(xa(b).text=a.text,ya(b)):"object"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),k.html5Clone&&a.innerHTML&&!m.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):"input"===c&&W.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):"option"===c?b.defaultSelected=b.selected=a.defaultSelected:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}}m.extend({clone:function(a,b,c){var d,e,f,g,h,i=m.contains(a.ownerDocument,a);if(k.html5Clone||m.isXMLDoc(a)||!ga.test("<"+a.nodeName+">")?f=a.cloneNode(!0):(ta.innerHTML=a.outerHTML,ta.removeChild(f=ta.firstChild)),!(k.noCloneEvent&&k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||m.isXMLDoc(a)))for(d=ua(f),h=ua(a),g=0;null!=(e=h[g]);++g)d[g]&&Ba(e,d[g]);if(b)if(c)for(h=h||ua(a),d=d||ua(f),g=0;null!=(e=h[g]);g++)Aa(e,d[g]);else Aa(a,f);return d=ua(f,"script"),d.length>0&&za(d,!i&&ua(a,"script")),d=h=e=null,f},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,l,n=a.length,o=da(b),p=[],q=0;n>q;q++)if(f=a[q],f||0===f)if("object"===m.type(f))m.merge(p,f.nodeType?[f]:f);else if(la.test(f)){h=h||o.appendChild(b.createElement("div")),i=(ja.exec(f)||["",""])[1].toLowerCase(),l=ra[i]||ra._default,h.innerHTML=l[1]+f.replace(ia,"<$1></$2>")+l[2],e=l[0];while(e--)h=h.lastChild;if(!k.leadingWhitespace&&ha.test(f)&&p.push(b.createTextNode(ha.exec(f)[0])),!k.tbody){f="table"!==i||ka.test(f)?"<table>"!==l[1]||ka.test(f)?0:h:h.firstChild,e=f&&f.childNodes.length;while(e--)m.nodeName(j=f.childNodes[e],"tbody")&&!j.childNodes.length&&f.removeChild(j)}m.merge(p,h.childNodes),h.textContent="";while(h.firstChild)h.removeChild(h.firstChild);h=o.lastChild}else p.push(b.createTextNode(f));h&&o.removeChild(h),k.appendChecked||m.grep(ua(p,"input"),va),q=0;while(f=p[q++])if((!d||-1===m.inArray(f,d))&&(g=m.contains(f.ownerDocument,f),h=ua(o.appendChild(f),"script"),g&&za(h),c)){e=0;while(f=h[e++])oa.test(f.type||"")&&c.push(f)}return h=null,o},cleanData:function(a,b){for(var d,e,f,g,h=0,i=m.expando,j=m.cache,l=k.deleteExpando,n=m.event.special;null!=(d=a[h]);h++)if((b||m.acceptData(d))&&(f=d[i],g=f&&j[f])){if(g.events)for(e in g.events)n[e]?m.event.remove(d,e):m.removeEvent(d,e,g.handle);j[f]&&(delete j[f],l?delete d[i]:typeof d.removeAttribute!==K?d.removeAttribute(i):d[i]=null,c.push(f))}}}),m.fn.extend({text:function(a){return V(this,function(a){return void 0===a?m.text(this):this.empty().append((this[0]&&this[0].ownerDocument||y).createTextNode(a))},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wa(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wa(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?m.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||m.cleanData(ua(c)),c.parentNode&&(b&&m.contains(c.ownerDocument,c)&&za(ua(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++){1===a.nodeType&&m.cleanData(ua(a,!1));while(a.firstChild)a.removeChild(a.firstChild);a.options&&m.nodeName(a,"select")&&(a.options.length=0)}return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return m.clone(this,a,b)})},html:function(a){return V(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a)return 1===b.nodeType?b.innerHTML.replace(fa,""):void 0;if(!("string"!=typeof a||ma.test(a)||!k.htmlSerialize&&ga.test(a)||!k.leadingWhitespace&&ha.test(a)||ra[(ja.exec(a)||["",""])[1].toLowerCase()])){a=a.replace(ia,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(m.cleanData(ua(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,m.cleanData(ua(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,n=this,o=l-1,p=a[0],q=m.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&na.test(p))return this.each(function(c){var d=n.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(i=m.buildFragment(a,this[0].ownerDocument,!1,this),c=i.firstChild,1===i.childNodes.length&&(i=c),c)){for(g=m.map(ua(i,"script"),xa),f=g.length;l>j;j++)d=i,j!==o&&(d=m.clone(d,!0,!0),f&&m.merge(g,ua(d,"script"))),b.call(this[j],d,j);if(f)for(h=g[g.length-1].ownerDocument,m.map(g,ya),j=0;f>j;j++)d=g[j],oa.test(d.type||"")&&!m._data(d,"globalEval")&&m.contains(h,d)&&(d.src?m._evalUrl&&m._evalUrl(d.src):m.globalEval((d.text||d.textContent||d.innerHTML||"").replace(qa,"")));i=c=null}return this}}),m.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){m.fn[a]=function(a){for(var c,d=0,e=[],g=m(a),h=g.length-1;h>=d;d++)c=d===h?this:this.clone(!0),m(g[d])[b](c),f.apply(e,c.get());return this.pushStack(e)}});var Ca,Da={};function Ea(b,c){var d,e=m(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:m.css(e[0],"display");return e.detach(),f}function Fa(a){var b=y,c=Da[a];return c||(c=Ea(a,b),"none"!==c&&c||(Ca=(Ca||m("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=(Ca[0].contentWindow||Ca[0].contentDocument).document,b.write(),b.close(),c=Ea(a,b),Ca.detach()),Da[a]=c),c}!function(){var a;k.shrinkWrapBlocks=function(){if(null!=a)return a;a=!1;var b,c,d;return c=y.getElementsByTagName("body")[0],c&&c.style?(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&&(b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",b.appendChild(y.createElement("div")).style.width="5px",a=3!==b.offsetWidth),c.removeChild(d),a):void 0}}();var Ga=/^margin/,Ha=new RegExp("^("+S+")(?!px)[a-z%]+$","i"),Ia,Ja,Ka=/^(top|right|bottom|left)$/;a.getComputedStyle?(Ia=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)},Ja=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ia(a),g=c?c.getPropertyValue(b)||c[b]:void 0,c&&(""!==g||m.contains(a.ownerDocument,a)||(g=m.style(a,b)),Ha.test(g)&&Ga.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0===g?g:g+""}):y.documentElement.currentStyle&&(Ia=function(a){return a.currentStyle},Ja=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ia(a),g=c?c[b]:void 0,null==g&&h&&h[b]&&(g=h[b]),Ha.test(g)&&!Ka.test(b)&&(d=h.left,e=a.runtimeStyle,f=e&&e.left,f&&(e.left=a.currentStyle.left),h.left="fontSize"===b?"1em":g,g=h.pixelLeft+"px",h.left=d,f&&(e.left=f)),void 0===g?g:g+""||"auto"});function La(a,b){return{get:function(){var c=a();if(null!=c)return c?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d,e,f,g,h;if(b=y.createElement("div"),b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",d=b.getElementsByTagName("a")[0],c=d&&d.style){c.cssText="float:left;opacity:.5",k.opacity="0.5"===c.opacity,k.cssFloat=!!c.cssFloat,b.style.backgroundClip="content-box",b.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===b.style.backgroundClip,k.boxSizing=""===c.boxSizing||""===c.MozBoxSizing||""===c.WebkitBoxSizing,m.extend(k,{reliableHiddenOffsets:function(){return null==g&&i(),g},boxSizingReliable:function(){return null==f&&i(),f},pixelPosition:function(){return null==e&&i(),e},reliableMarginRight:function(){return null==h&&i(),h}});function i(){var b,c,d,i;c=y.getElementsByTagName("body")[0],c&&c.style&&(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),b.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",e=f=!1,h=!0,a.getComputedStyle&&(e="1%"!==(a.getComputedStyle(b,null)||{}).top,f="4px"===(a.getComputedStyle(b,null)||{width:"4px"}).width,i=b.appendChild(y.createElement("div")),i.style.cssText=b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",i.style.marginRight=i.style.width="0",b.style.width="1px",h=!parseFloat((a.getComputedStyle(i,null)||{}).marginRight),b.removeChild(i)),b.innerHTML="<table><tr><td></td><td>t</td></tr></table>",i=b.getElementsByTagName("td"),i[0].style.cssText="margin:0;border:0;padding:0;display:none",g=0===i[0].offsetHeight,g&&(i[0].style.display="",i[1].style.display="none",g=0===i[0].offsetHeight),c.removeChild(d))}}}(),m.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var Ma=/alpha\([^)]*\)/i,Na=/opacity\s*=\s*([^)]*)/,Oa=/^(none|table(?!-c[ea]).+)/,Pa=new RegExp("^("+S+")(.*)$","i"),Qa=new RegExp("^([+-])=("+S+")","i"),Ra={position:"absolute",visibility:"hidden",display:"block"},Sa={letterSpacing:"0",fontWeight:"400"},Ta=["Webkit","O","Moz","ms"];function Ua(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=Ta.length;while(e--)if(b=Ta[e]+c,b in a)return b;return d}function Va(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=m._data(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&U(d)&&(f[g]=m._data(d,"olddisplay",Fa(d.nodeName)))):(e=U(d),(c&&"none"!==c||!e)&&m._data(d,"olddisplay",e?c:m.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}function Wa(a,b,c){var d=Pa.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Xa(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=m.css(a,c+T[f],!0,e)),d?("content"===c&&(g-=m.css(a,"padding"+T[f],!0,e)),"margin"!==c&&(g-=m.css(a,"border"+T[f]+"Width",!0,e))):(g+=m.css(a,"padding"+T[f],!0,e),"padding"!==c&&(g+=m.css(a,"border"+T[f]+"Width",!0,e)));return g}function Ya(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=Ia(a),g=k.boxSizing&&"border-box"===m.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=Ja(a,b,f),(0>e||null==e)&&(e=a.style[b]),Ha.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Xa(a,b,c||(g?"border":"content"),d,f)+"px"}m.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Ja(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":k.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=m.camelCase(b),i=a.style;if(b=m.cssProps[h]||(m.cssProps[h]=Ua(i,h)),g=m.cssHooks[b]||m.cssHooks[h],void 0===c)return g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b];if(f=typeof c,"string"===f&&(e=Qa.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(m.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||m.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),!(g&&"set"in g&&void 0===(c=g.set(a,c,d)))))try{i[b]=c}catch(j){}}},css:function(a,b,c,d){var e,f,g,h=m.camelCase(b);return b=m.cssProps[h]||(m.cssProps[h]=Ua(a.style,h)),g=m.cssHooks[b]||m.cssHooks[h],g&&"get"in g&&(f=g.get(a,!0,c)),void 0===f&&(f=Ja(a,b,d)),"normal"===f&&b in Sa&&(f=Sa[b]),""===c||c?(e=parseFloat(f),c===!0||m.isNumeric(e)?e||0:f):f}}),m.each(["height","width"],function(a,b){m.cssHooks[b]={get:function(a,c,d){return c?Oa.test(m.css(a,"display"))&&0===a.offsetWidth?m.swap(a,Ra,function(){return Ya(a,b,d)}):Ya(a,b,d):void 0},set:function(a,c,d){var e=d&&Ia(a);return Wa(a,c,d?Xa(a,b,d,k.boxSizing&&"border-box"===m.css(a,"boxSizing",!1,e),e):0)}}}),k.opacity||(m.cssHooks.opacity={get:function(a,b){return Na.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=m.isNumeric(b)?"alpha(opacity="+100*b+")":"",f=d&&d.filter||c.filter||"";c.zoom=1,(b>=1||""===b)&&""===m.trim(f.replace(Ma,""))&&c.removeAttribute&&(c.removeAttribute("filter"),""===b||d&&!d.filter)||(c.filter=Ma.test(f)?f.replace(Ma,e):f+" "+e)}}),m.cssHooks.marginRight=La(k.reliableMarginRight,function(a,b){return b?m.swap(a,{display:"inline-block"},Ja,[a,"marginRight"]):void 0}),m.each({margin:"",padding:"",border:"Width"},function(a,b){m.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+T[d]+b]=f[d]||f[d-2]||f[0];return e}},Ga.test(a)||(m.cssHooks[a+b].set=Wa)}),m.fn.extend({css:function(a,b){return V(this,function(a,b,c){var d,e,f={},g=0;if(m.isArray(b)){for(d=Ia(a),e=b.length;e>g;g++)f[b[g]]=m.css(a,b[g],!1,d);return f}return void 0!==c?m.style(a,b,c):m.css(a,b)},a,b,arguments.length>1)},show:function(){return Va(this,!0)},hide:function(){return Va(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){U(this)?m(this).show():m(this).hide()})}});function Za(a,b,c,d,e){
return new Za.prototype.init(a,b,c,d,e)}m.Tween=Za,Za.prototype={constructor:Za,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(m.cssNumber[c]?"":"px")},cur:function(){var a=Za.propHooks[this.prop];return a&&a.get?a.get(this):Za.propHooks._default.get(this)},run:function(a){var b,c=Za.propHooks[this.prop];return this.options.duration?this.pos=b=m.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Za.propHooks._default.set(this),this}},Za.prototype.init.prototype=Za.prototype,Za.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=m.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){m.fx.step[a.prop]?m.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[m.cssProps[a.prop]]||m.cssHooks[a.prop])?m.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Za.propHooks.scrollTop=Za.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},m.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},m.fx=Za.prototype.init,m.fx.step={};var $a,_a,ab=/^(?:toggle|show|hide)$/,bb=new RegExp("^(?:([+-])=|)("+S+")([a-z%]*)$","i"),cb=/queueHooks$/,db=[ib],eb={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=bb.exec(b),f=e&&e[3]||(m.cssNumber[a]?"":"px"),g=(m.cssNumber[a]||"px"!==f&&+d)&&bb.exec(m.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,m.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function fb(){return setTimeout(function(){$a=void 0}),$a=m.now()}function gb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=T[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function hb(a,b,c){for(var d,e=(eb[b]||[]).concat(eb["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function ib(a,b,c){var d,e,f,g,h,i,j,l,n=this,o={},p=a.style,q=a.nodeType&&U(a),r=m._data(a,"fxshow");c.queue||(h=m._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,n.always(function(){n.always(function(){h.unqueued--,m.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=m.css(a,"display"),l="none"===j?m._data(a,"olddisplay")||Fa(a.nodeName):j,"inline"===l&&"none"===m.css(a,"float")&&(k.inlineBlockNeedsLayout&&"inline"!==Fa(a.nodeName)?p.zoom=1:p.display="inline-block")),c.overflow&&(p.overflow="hidden",k.shrinkWrapBlocks()||n.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],ab.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(q?"hide":"show")){if("show"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||m.style(a,d)}else j=void 0;if(m.isEmptyObject(o))"inline"===("none"===j?Fa(a.nodeName):j)&&(p.display=j);else{r?"hidden"in r&&(q=r.hidden):r=m._data(a,"fxshow",{}),f&&(r.hidden=!q),q?m(a).show():n.done(function(){m(a).hide()}),n.done(function(){var b;m._removeData(a,"fxshow");for(b in o)m.style(a,b,o[b])});for(d in o)g=hb(q?r[d]:0,d,n),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function jb(a,b){var c,d,e,f,g;for(c in a)if(d=m.camelCase(c),e=b[d],f=a[c],m.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=m.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function kb(a,b,c){var d,e,f=0,g=db.length,h=m.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=$a||fb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:m.extend({},b),opts:m.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:$a||fb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=m.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(jb(k,j.opts.specialEasing);g>f;f++)if(d=db[f].call(j,a,k,j.opts))return d;return m.map(k,hb,j),m.isFunction(j.opts.start)&&j.opts.start.call(a,j),m.fx.timer(m.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}m.Animation=m.extend(kb,{tweener:function(a,b){m.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],eb[c]=eb[c]||[],eb[c].unshift(b)},prefilter:function(a,b){b?db.unshift(a):db.push(a)}}),m.speed=function(a,b,c){var d=a&&"object"==typeof a?m.extend({},a):{complete:c||!c&&b||m.isFunction(a)&&a,duration:a,easing:c&&b||b&&!m.isFunction(b)&&b};return d.duration=m.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in m.fx.speeds?m.fx.speeds[d.duration]:m.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){m.isFunction(d.old)&&d.old.call(this),d.queue&&m.dequeue(this,d.queue)},d},m.fn.extend({fadeTo:function(a,b,c,d){return this.filter(U).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=m.isEmptyObject(a),f=m.speed(b,c,d),g=function(){var b=kb(this,m.extend({},a),f);(e||m._data(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=m.timers,g=m._data(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&cb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&m.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=m._data(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=m.timers,g=d?d.length:0;for(c.finish=!0,m.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),m.each(["toggle","show","hide"],function(a,b){var c=m.fn[b];m.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(gb(b,!0),a,d,e)}}),m.each({slideDown:gb("show"),slideUp:gb("hide"),slideToggle:gb("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){m.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),m.timers=[],m.fx.tick=function(){var a,b=m.timers,c=0;for($a=m.now();c<b.length;c++)a=b[c],a()||b[c]!==a||b.splice(c--,1);b.length||m.fx.stop(),$a=void 0},m.fx.timer=function(a){m.timers.push(a),a()?m.fx.start():m.timers.pop()},m.fx.interval=13,m.fx.start=function(){_a||(_a=setInterval(m.fx.tick,m.fx.interval))},m.fx.stop=function(){clearInterval(_a),_a=null},m.fx.speeds={slow:600,fast:200,_default:400},m.fn.delay=function(a,b){return a=m.fx?m.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a,b,c,d,e;b=y.createElement("div"),b.setAttribute("className","t"),b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",d=b.getElementsByTagName("a")[0],c=y.createElement("select"),e=c.appendChild(y.createElement("option")),a=b.getElementsByTagName("input")[0],d.style.cssText="top:1px",k.getSetAttribute="t"!==b.className,k.style=/top/.test(d.getAttribute("style")),k.hrefNormalized="/a"===d.getAttribute("href"),k.checkOn=!!a.value,k.optSelected=e.selected,k.enctype=!!y.createElement("form").enctype,c.disabled=!0,k.optDisabled=!e.disabled,a=y.createElement("input"),a.setAttribute("value",""),k.input=""===a.getAttribute("value"),a.value="t",a.setAttribute("type","radio"),k.radioValue="t"===a.value}();var lb=/\r/g;m.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=m.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,m(this).val()):a,null==e?e="":"number"==typeof e?e+="":m.isArray(e)&&(e=m.map(e,function(a){return null==a?"":a+""})),b=m.valHooks[this.type]||m.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=m.valHooks[e.type]||m.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(lb,""):null==c?"":c)}}}),m.extend({valHooks:{option:{get:function(a){var b=m.find.attr(a,"value");return null!=b?b:m.trim(m.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&m.nodeName(c.parentNode,"optgroup"))){if(b=m(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=m.makeArray(b),g=e.length;while(g--)if(d=e[g],m.inArray(m.valHooks.option.get(d),f)>=0)try{d.selected=c=!0}catch(h){d.scrollHeight}else d.selected=!1;return c||(a.selectedIndex=-1),e}}}}),m.each(["radio","checkbox"],function(){m.valHooks[this]={set:function(a,b){return m.isArray(b)?a.checked=m.inArray(m(a).val(),b)>=0:void 0}},k.checkOn||(m.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var mb,nb,ob=m.expr.attrHandle,pb=/^(?:checked|selected)$/i,qb=k.getSetAttribute,rb=k.input;m.fn.extend({attr:function(a,b){return V(this,m.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){m.removeAttr(this,a)})}}),m.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===K?m.prop(a,b,c):(1===f&&m.isXMLDoc(a)||(b=b.toLowerCase(),d=m.attrHooks[b]||(m.expr.match.bool.test(b)?nb:mb)),void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=m.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void m.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=m.propFix[c]||c,m.expr.match.bool.test(c)?rb&&qb||!pb.test(c)?a[d]=!1:a[m.camelCase("default-"+c)]=a[d]=!1:m.attr(a,c,""),a.removeAttribute(qb?c:d)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&m.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),nb={set:function(a,b,c){return b===!1?m.removeAttr(a,c):rb&&qb||!pb.test(c)?a.setAttribute(!qb&&m.propFix[c]||c,c):a[m.camelCase("default-"+c)]=a[c]=!0,c}},m.each(m.expr.match.bool.source.match(/\w+/g),function(a,b){var c=ob[b]||m.find.attr;ob[b]=rb&&qb||!pb.test(b)?function(a,b,d){var e,f;return d||(f=ob[b],ob[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,ob[b]=f),e}:function(a,b,c){return c?void 0:a[m.camelCase("default-"+b)]?b.toLowerCase():null}}),rb&&qb||(m.attrHooks.value={set:function(a,b,c){return m.nodeName(a,"input")?void(a.defaultValue=b):mb&&mb.set(a,b,c)}}),qb||(mb={set:function(a,b,c){var d=a.getAttributeNode(c);return d||a.setAttributeNode(d=a.ownerDocument.createAttribute(c)),d.value=b+="","value"===c||b===a.getAttribute(c)?b:void 0}},ob.id=ob.name=ob.coords=function(a,b,c){var d;return c?void 0:(d=a.getAttributeNode(b))&&""!==d.value?d.value:null},m.valHooks.button={get:function(a,b){var c=a.getAttributeNode(b);return c&&c.specified?c.value:void 0},set:mb.set},m.attrHooks.contenteditable={set:function(a,b,c){mb.set(a,""===b?!1:b,c)}},m.each(["width","height"],function(a,b){m.attrHooks[b]={set:function(a,c){return""===c?(a.setAttribute(b,"auto"),c):void 0}}})),k.style||(m.attrHooks.style={get:function(a){return a.style.cssText||void 0},set:function(a,b){return a.style.cssText=b+""}});var sb=/^(?:input|select|textarea|button|object)$/i,tb=/^(?:a|area)$/i;m.fn.extend({prop:function(a,b){return V(this,m.prop,a,b,arguments.length>1)},removeProp:function(a){return a=m.propFix[a]||a,this.each(function(){try{this[a]=void 0,delete this[a]}catch(b){}})}}),m.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!m.isXMLDoc(a),f&&(b=m.propFix[b]||b,e=m.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=m.find.attr(a,"tabindex");return b?parseInt(b,10):sb.test(a.nodeName)||tb.test(a.nodeName)&&a.href?0:-1}}}}),k.hrefNormalized||m.each(["href","src"],function(a,b){m.propHooks[b]={get:function(a){return a.getAttribute(b,4)}}}),k.optSelected||(m.propHooks.selected={get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}}),m.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){m.propFix[this.toLowerCase()]=this}),k.enctype||(m.propFix.enctype="encoding");var ub=/[\t\r\n\f]/g;m.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j="string"==typeof a&&a;if(m.isFunction(a))return this.each(function(b){m(this).addClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i>h;h++)if(c=this[h],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ub," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=m.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j=0===arguments.length||"string"==typeof a&&a;if(m.isFunction(a))return this.each(function(b){m(this).removeClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i>h;h++)if(c=this[h],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ub," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?m.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(m.isFunction(a)?function(c){m(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=m(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===K||"boolean"===c)&&(this.className&&m._data(this,"__className__",this.className),this.className=this.className||a===!1?"":m._data(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(ub," ").indexOf(b)>=0)return!0;return!1}}),m.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){m.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),m.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var vb=m.now(),wb=/\?/,xb=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;m.parseJSON=function(b){if(a.JSON&&a.JSON.parse)return a.JSON.parse(b+"");var c,d=null,e=m.trim(b+"");return e&&!m.trim(e.replace(xb,function(a,b,e,f){return c&&b&&(d=0),0===d?a:(c=e||b,d+=!f-!e,"")}))?Function("return "+e)():m.error("Invalid JSON: "+b)},m.parseXML=function(b){var c,d;if(!b||"string"!=typeof b)return null;try{a.DOMParser?(d=new DOMParser,c=d.parseFromString(b,"text/xml")):(c=new ActiveXObject("Microsoft.XMLDOM"),c.async="false",c.loadXML(b))}catch(e){c=void 0}return c&&c.documentElement&&!c.getElementsByTagName("parsererror").length||m.error("Invalid XML: "+b),c};var yb,zb,Ab=/#.*$/,Bb=/([?&])_=[^&]*/,Cb=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Db=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Eb=/^(?:GET|HEAD)$/,Fb=/^\/\//,Gb=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Hb={},Ib={},Jb="*/".concat("*");try{zb=location.href}catch(Kb){zb=y.createElement("a"),zb.href="",zb=zb.href}yb=Gb.exec(zb.toLowerCase())||[];function Lb(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(m.isFunction(c))while(d=f[e++])"+"===d.charAt(0)?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Mb(a,b,c,d){var e={},f=a===Ib;function g(h){var i;return e[h]=!0,m.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function Nb(a,b){var c,d,e=m.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&m.extend(!0,a,c),a}function Ob(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader("Content-Type"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+" "+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function Pb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}m.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:zb,type:"GET",isLocal:Db.test(yb[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Jb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":m.parseJSON,"text xml":m.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Nb(Nb(a,m.ajaxSettings),b):Nb(m.ajaxSettings,a)},ajaxPrefilter:Lb(Hb),ajaxTransport:Lb(Ib),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=m.ajaxSetup({},b),l=k.context||k,n=k.context&&(l.nodeType||l.jquery)?m(l):m.event,o=m.Deferred(),p=m.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!j){j={};while(b=Cb.exec(f))j[b[1].toLowerCase()]=b[2]}b=j[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?f:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return i&&i.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||zb)+"").replace(Ab,"").replace(Fb,yb[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=m.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(c=Gb.exec(k.url.toLowerCase()),k.crossDomain=!(!c||c[1]===yb[1]&&c[2]===yb[2]&&(c[3]||("http:"===c[1]?"80":"443"))===(yb[3]||("http:"===yb[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=m.param(k.data,k.traditional)),Mb(Hb,k,b,v),2===t)return v;h=m.event&&k.global,h&&0===m.active++&&m.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!Eb.test(k.type),e=k.url,k.hasContent||(k.data&&(e=k.url+=(wb.test(e)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=Bb.test(e)?e.replace(Bb,"$1_="+vb++):e+(wb.test(e)?"&":"?")+"_="+vb++)),k.ifModified&&(m.lastModified[e]&&v.setRequestHeader("If-Modified-Since",m.lastModified[e]),m.etag[e]&&v.setRequestHeader("If-None-Match",m.etag[e])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+Jb+"; q=0.01":""):k.accepts["*"]);for(d in k.headers)v.setRequestHeader(d,k.headers[d]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(d in{success:1,error:1,complete:1})v[d](k[d]);if(i=Mb(Ib,k,b,v)){v.readyState=1,h&&n.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,i.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,c,d){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),i=void 0,f=d||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,c&&(u=Ob(k,v,c)),u=Pb(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(m.lastModified[e]=w),w=v.getResponseHeader("etag"),w&&(m.etag[e]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,h&&n.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),h&&(n.trigger("ajaxComplete",[v,k]),--m.active||m.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return m.get(a,b,c,"json")},getScript:function(a,b){return m.get(a,void 0,b,"script")}}),m.each(["get","post"],function(a,b){m[b]=function(a,c,d,e){return m.isFunction(c)&&(e=e||d,d=c,c=void 0),m.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),m._evalUrl=function(a){return m.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},m.fn.extend({wrapAll:function(a){if(m.isFunction(a))return this.each(function(b){m(this).wrapAll(a.call(this,b))});if(this[0]){var b=m(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&1===a.firstChild.nodeType)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return this.each(m.isFunction(a)?function(b){m(this).wrapInner(a.call(this,b))}:function(){var b=m(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=m.isFunction(a);return this.each(function(c){m(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){m.nodeName(this,"body")||m(this).replaceWith(this.childNodes)}).end()}}),m.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0||!k.reliableHiddenOffsets()&&"none"===(a.style&&a.style.display||m.css(a,"display"))},m.expr.filters.visible=function(a){return!m.expr.filters.hidden(a)};var Qb=/%20/g,Rb=/\[\]$/,Sb=/\r?\n/g,Tb=/^(?:submit|button|image|reset|file)$/i,Ub=/^(?:input|select|textarea|keygen)/i;function Vb(a,b,c,d){var e;if(m.isArray(b))m.each(b,function(b,e){c||Rb.test(a)?d(a,e):Vb(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==m.type(b))d(a,b);else for(e in b)Vb(a+"["+e+"]",b[e],c,d)}m.param=function(a,b){var c,d=[],e=function(a,b){b=m.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=m.ajaxSettings&&m.ajaxSettings.traditional),m.isArray(a)||a.jquery&&!m.isPlainObject(a))m.each(a,function(){e(this.name,this.value)});else for(c in a)Vb(c,a[c],b,e);return d.join("&").replace(Qb,"+")},m.fn.extend({serialize:function(){return m.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=m.prop(this,"elements");return a?m.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!m(this).is(":disabled")&&Ub.test(this.nodeName)&&!Tb.test(a)&&(this.checked||!W.test(a))}).map(function(a,b){var c=m(this).val();return null==c?null:m.isArray(c)?m.map(c,function(a){return{name:b.name,value:a.replace(Sb,"\r\n")}}):{name:b.name,value:c.replace(Sb,"\r\n")}}).get()}}),m.ajaxSettings.xhr=void 0!==a.ActiveXObject?function(){return!this.isLocal&&/^(get|post|head|put|delete|options)$/i.test(this.type)&&Zb()||$b()}:Zb;var Wb=0,Xb={},Yb=m.ajaxSettings.xhr();a.attachEvent&&a.attachEvent("onunload",function(){for(var a in Xb)Xb[a](void 0,!0)}),k.cors=!!Yb&&"withCredentials"in Yb,Yb=k.ajax=!!Yb,Yb&&m.ajaxTransport(function(a){if(!a.crossDomain||k.cors){var b;return{send:function(c,d){var e,f=a.xhr(),g=++Wb;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)void 0!==c[e]&&f.setRequestHeader(e,c[e]+"");f.send(a.hasContent&&a.data||null),b=function(c,e){var h,i,j;if(b&&(e||4===f.readyState))if(delete Xb[g],b=void 0,f.onreadystatechange=m.noop,e)4!==f.readyState&&f.abort();else{j={},h=f.status,"string"==typeof f.responseText&&(j.text=f.responseText);try{i=f.statusText}catch(k){i=""}h||!a.isLocal||a.crossDomain?1223===h&&(h=204):h=j.text?200:404}j&&d(h,i,j,f.getAllResponseHeaders())},a.async?4===f.readyState?setTimeout(b):f.onreadystatechange=Xb[g]=b:b()},abort:function(){b&&b(void 0,!0)}}}});function Zb(){try{return new a.XMLHttpRequest}catch(b){}}function $b(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}m.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return m.globalEval(a),a}}}),m.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),m.ajaxTransport("script",function(a){if(a.crossDomain){var b,c=y.head||m("head")[0]||y.documentElement;return{send:function(d,e){b=y.createElement("script"),b.async=!0,a.scriptCharset&&(b.charset=a.scriptCharset),b.src=a.url,b.onload=b.onreadystatechange=function(a,c){(c||!b.readyState||/loaded|complete/.test(b.readyState))&&(b.onload=b.onreadystatechange=null,b.parentNode&&b.parentNode.removeChild(b),b=null,c||e(200,"success"))},c.insertBefore(b,c.firstChild)},abort:function(){b&&b.onload(void 0,!0)}}}});var _b=[],ac=/(=)\?(?=&|$)|\?\?/;m.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=_b.pop()||m.expando+"_"+vb++;return this[a]=!0,a}}),m.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(ac.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&ac.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=m.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(ac,"$1"+e):b.jsonp!==!1&&(b.url+=(wb.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||m.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,_b.push(e)),g&&m.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),m.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||y;var d=u.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=m.buildFragment([a],b,e),e&&e.length&&m(e).remove(),m.merge([],d.childNodes))};var bc=m.fn.load;m.fn.load=function(a,b,c){if("string"!=typeof a&&bc)return bc.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=m.trim(a.slice(h,a.length)),a=a.slice(0,h)),m.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(f="POST"),g.length>0&&m.ajax({url:a,type:f,dataType:"html",data:b}).done(function(a){e=arguments,g.html(d?m("<div>").append(m.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,e||[a.responseText,b,a])}),this},m.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){m.fn[b]=function(a){return this.on(b,a)}}),m.expr.filters.animated=function(a){return m.grep(m.timers,function(b){return a===b.elem}).length};var cc=a.document.documentElement;function dc(a){return m.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}m.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=m.css(a,"position"),l=m(a),n={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=m.css(a,"top"),i=m.css(a,"left"),j=("absolute"===k||"fixed"===k)&&m.inArray("auto",[f,i])>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),m.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(n.top=b.top-h.top+g),null!=b.left&&(n.left=b.left-h.left+e),"using"in b?b.using.call(a,n):l.css(n)}},m.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){m.offset.setOffset(this,a,b)});var b,c,d={top:0,left:0},e=this[0],f=e&&e.ownerDocument;if(f)return b=f.documentElement,m.contains(b,e)?(typeof e.getBoundingClientRect!==K&&(d=e.getBoundingClientRect()),c=dc(f),{top:d.top+(c.pageYOffset||b.scrollTop)-(b.clientTop||0),left:d.left+(c.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}):d},position:function(){if(this[0]){var a,b,c={top:0,left:0},d=this[0];return"fixed"===m.css(d,"position")?b=d.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),m.nodeName(a[0],"html")||(c=a.offset()),c.top+=m.css(a[0],"borderTopWidth",!0),c.left+=m.css(a[0],"borderLeftWidth",!0)),{top:b.top-c.top-m.css(d,"marginTop",!0),left:b.left-c.left-m.css(d,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||cc;while(a&&!m.nodeName(a,"html")&&"static"===m.css(a,"position"))a=a.offsetParent;return a||cc})}}),m.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c=/Y/.test(b);m.fn[a]=function(d){return V(this,function(a,d,e){var f=dc(a);return void 0===e?f?b in f?f[b]:f.document.documentElement[d]:a[d]:void(f?f.scrollTo(c?m(f).scrollLeft():e,c?e:m(f).scrollTop()):a[d]=e)},a,d,arguments.length,null)}}),m.each(["top","left"],function(a,b){m.cssHooks[b]=La(k.pixelPosition,function(a,c){return c?(c=Ja(a,b),Ha.test(c)?m(a).position()[b]+"px":c):void 0})}),m.each({Height:"height",Width:"width"},function(a,b){m.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){m.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return V(this,function(b,c,d){var e;return m.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?m.css(b,c,g):m.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),m.fn.size=function(){return this.length},m.fn.andSelf=m.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return m});var ec=a.jQuery,fc=a.$;return m.noConflict=function(b){return a.$===m&&(a.$=fc),b&&a.jQuery===m&&(a.jQuery=ec),m},typeof b===K&&(a.jQuery=a.$=m),m});
;

/** jQueryBrowser **/
/*!
 * jQuery Browser Plugin 0.1.0
 * https://github.com/gabceb/jquery-browser-plugin
 *
 * Original jquery-browser code Copyright 2005, 2015 jQuery Foundation, Inc. and other contributors
 * http://jquery.org/license
 *
 * Modifications Copyright 2015 Gabriel Cebrian
 * https://github.com/gabceb
 *
 * Released under the MIT license
 *
 * Date: 23-11-2015
 */!function(a){"function"==typeof define&&define.amd?define(["jquery"],function(b){return a(b)}):"object"==typeof module&&"object"==typeof module.exports?module.exports=a(require("jquery")):a(window.jQuery)}(function(a){"use strict";function b(a){void 0===a&&(a=window.navigator.userAgent),a=a.toLowerCase();var b=/(edge)\/([\w.]+)/.exec(a)||/(opr)[\/]([\w.]+)/.exec(a)||/(chrome)[ \/]([\w.]+)/.exec(a)||/(iemobile)[\/]([\w.]+)/.exec(a)||/(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||a.indexOf("trident")>=0&&/(rv)(?::| )([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a)||[],c=/(ipad)/.exec(a)||/(ipod)/.exec(a)||/(windows phone)/.exec(a)||/(iphone)/.exec(a)||/(kindle)/.exec(a)||/(silk)/.exec(a)||/(android)/.exec(a)||/(win)/.exec(a)||/(mac)/.exec(a)||/(linux)/.exec(a)||/(cros)/.exec(a)||/(playbook)/.exec(a)||/(bb)/.exec(a)||/(blackberry)/.exec(a)||[],d={},e={browser:b[5]||b[3]||b[1]||"",version:b[2]||b[4]||"0",versionNumber:b[4]||b[2]||"0",platform:c[0]||""};if(e.browser&&(d[e.browser]=!0,d.version=e.version,d.versionNumber=parseInt(e.versionNumber,10)),e.platform&&(d[e.platform]=!0),(d.android||d.bb||d.blackberry||d.ipad||d.iphone||d.ipod||d.kindle||d.playbook||d.silk||d["windows phone"])&&(d.mobile=!0),(d.cros||d.mac||d.linux||d.win)&&(d.desktop=!0),(d.chrome||d.opr||d.safari)&&(d.webkit=!0),d.rv||d.iemobile){var f="msie";e.browser=f,d[f]=!0}if(d.edge){delete d.edge;var g="msedge";e.browser=g,d[g]=!0}if(d.safari&&d.blackberry){var h="blackberry";e.browser=h,d[h]=!0}if(d.safari&&d.playbook){var i="playbook";e.browser=i,d[i]=!0}if(d.bb){var j="blackberry";e.browser=j,d[j]=!0}if(d.opr){var k="opera";e.browser=k,d[k]=!0}if(d.safari&&d.android){var l="android";e.browser=l,d[l]=!0}if(d.safari&&d.kindle){var m="kindle";e.browser=m,d[m]=!0}if(d.safari&&d.silk){var n="silk";e.browser=n,d[n]=!0}return d.name=e.browser,d.platform=e.platform,d}return window.jQBrowser=b(window.navigator.userAgent),window.jQBrowser.uaMatch=b,a&&(a.browser=window.jQBrowser),window.jQBrowser});;

/** Twitter Bootstrap **/
/*!
 * Bootstrap v3.3.5 (http://getbootstrap.com)
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

/*!
 * Generated using the Bootstrap Customizer (http://getbootstrap.com/customize/?id=c877038203e2893857c8)
 * Config saved to config.json and https://gist.github.com/c877038203e2893857c8
 */
if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(t){"use strict";var e=t.fn.jquery.split(" ")[0].split(".");if(e[0]<2&&e[1]<9||1==e[0]&&9==e[1]&&e[2]<1||e[0]>2)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3")}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var i=t(this),n=i.data("bs.alert");n||i.data("bs.alert",n=new o(this)),"string"==typeof e&&n[e].call(i)})}var i='[data-dismiss="alert"]',o=function(e){t(e).on("click",i,this.close)};o.VERSION="3.3.6",o.TRANSITION_DURATION=150,o.prototype.close=function(e){function i(){a.detach().trigger("closed.bs.alert").remove()}var n=t(this),s=n.attr("data-target");s||(s=n.attr("href"),s=s&&s.replace(/.*(?=#[^\s]*$)/,""));var a=t(s);e&&e.preventDefault(),a.length||(a=n.closest(".alert")),a.trigger(e=t.Event("close.bs.alert")),e.isDefaultPrevented()||(a.removeClass("in"),t.support.transition&&a.hasClass("fade")?a.one("bsTransitionEnd",i).emulateTransitionEnd(o.TRANSITION_DURATION):i())};var n=t.fn.alert;t.fn.alert=e,t.fn.alert.Constructor=o,t.fn.alert.noConflict=function(){return t.fn.alert=n,this},t(document).on("click.bs.alert.data-api",i,o.prototype.close)}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.button"),s="object"==typeof e&&e;n||o.data("bs.button",n=new i(this,s)),"toggle"==e?n.toggle():e&&n.setState(e)})}var i=function(e,o){this.$element=t(e),this.options=t.extend({},i.DEFAULTS,o),this.isLoading=!1};i.VERSION="3.3.6",i.DEFAULTS={loadingText:"loading..."},i.prototype.setState=function(e){var i="disabled",o=this.$element,n=o.is("input")?"val":"html",s=o.data();e+="Text",null==s.resetText&&o.data("resetText",o[n]()),setTimeout(t.proxy(function(){o[n](null==s[e]?this.options[e]:s[e]),"loadingText"==e?(this.isLoading=!0,o.addClass(i).attr(i,i)):this.isLoading&&(this.isLoading=!1,o.removeClass(i).removeAttr(i))},this),0)},i.prototype.toggle=function(){var t=!0,e=this.$element.closest('[data-toggle="buttons"]');if(e.length){var i=this.$element.find("input");"radio"==i.prop("type")?(i.prop("checked")&&(t=!1),e.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==i.prop("type")&&(i.prop("checked")!==this.$element.hasClass("active")&&(t=!1),this.$element.toggleClass("active")),i.prop("checked",this.$element.hasClass("active")),t&&i.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var o=t.fn.button;t.fn.button=e,t.fn.button.Constructor=i,t.fn.button.noConflict=function(){return t.fn.button=o,this},t(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(i){var o=t(i.target);o.hasClass("btn")||(o=o.closest(".btn")),e.call(o,"toggle"),t(i.target).is('input[type="radio"]')||t(i.target).is('input[type="checkbox"]')||i.preventDefault()}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(e){t(e.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(e.type))})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.carousel"),s=t.extend({},i.DEFAULTS,o.data(),"object"==typeof e&&e),a="string"==typeof e?e:s.slide;n||o.data("bs.carousel",n=new i(this,s)),"number"==typeof e?n.to(e):a?n[a]():s.interval&&n.pause().cycle()})}var i=function(e,i){this.$element=t(e),this.$indicators=this.$element.find(".carousel-indicators"),this.options=i,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",t.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",t.proxy(this.pause,this)).on("mouseleave.bs.carousel",t.proxy(this.cycle,this))};i.VERSION="3.3.6",i.TRANSITION_DURATION=600,i.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},i.prototype.keydown=function(t){if(!/input|textarea/i.test(t.target.tagName)){switch(t.which){case 37:this.prev();break;case 39:this.next();break;default:return}t.preventDefault()}},i.prototype.cycle=function(e){return e||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(t.proxy(this.next,this),this.options.interval)),this},i.prototype.getItemIndex=function(t){return this.$items=t.parent().children(".item"),this.$items.index(t||this.$active)},i.prototype.getItemForDirection=function(t,e){var i=this.getItemIndex(e),o="prev"==t&&0===i||"next"==t&&i==this.$items.length-1;if(o&&!this.options.wrap)return e;var n="prev"==t?-1:1,s=(i+n)%this.$items.length;return this.$items.eq(s)},i.prototype.to=function(t){var e=this,i=this.getItemIndex(this.$active=this.$element.find(".item.active"));return t>this.$items.length-1||0>t?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){e.to(t)}):i==t?this.pause().cycle():this.slide(t>i?"next":"prev",this.$items.eq(t))},i.prototype.pause=function(e){return e||(this.paused=!0),this.$element.find(".next, .prev").length&&t.support.transition&&(this.$element.trigger(t.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},i.prototype.next=function(){return this.sliding?void 0:this.slide("next")},i.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},i.prototype.slide=function(e,o){var n=this.$element.find(".item.active"),s=o||this.getItemForDirection(e,n),a=this.interval,r="next"==e?"left":"right",l=this;if(s.hasClass("active"))return this.sliding=!1;var h=s[0],d=t.Event("slide.bs.carousel",{relatedTarget:h,direction:r});if(this.$element.trigger(d),!d.isDefaultPrevented()){if(this.sliding=!0,a&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var p=t(this.$indicators.children()[this.getItemIndex(s)]);p&&p.addClass("active")}var c=t.Event("slid.bs.carousel",{relatedTarget:h,direction:r});return t.support.transition&&this.$element.hasClass("slide")?(s.addClass(e),s[0].offsetWidth,n.addClass(r),s.addClass(r),n.one("bsTransitionEnd",function(){s.removeClass([e,r].join(" ")).addClass("active"),n.removeClass(["active",r].join(" ")),l.sliding=!1,setTimeout(function(){l.$element.trigger(c)},0)}).emulateTransitionEnd(i.TRANSITION_DURATION)):(n.removeClass("active"),s.addClass("active"),this.sliding=!1,this.$element.trigger(c)),a&&this.cycle(),this}};var o=t.fn.carousel;t.fn.carousel=e,t.fn.carousel.Constructor=i,t.fn.carousel.noConflict=function(){return t.fn.carousel=o,this};var n=function(i){var o,n=t(this),s=t(n.attr("data-target")||(o=n.attr("href"))&&o.replace(/.*(?=#[^\s]+$)/,""));if(s.hasClass("carousel")){var a=t.extend({},s.data(),n.data()),r=n.attr("data-slide-to");r&&(a.interval=!1),e.call(s,a),r&&s.data("bs.carousel").to(r),i.preventDefault()}};t(document).on("click.bs.carousel.data-api","[data-slide]",n).on("click.bs.carousel.data-api","[data-slide-to]",n),t(window).on("load",function(){t('[data-ride="carousel"]').each(function(){var i=t(this);e.call(i,i.data())})})}(jQuery),+function(t){"use strict";function e(e){var i=e.attr("data-target");i||(i=e.attr("href"),i=i&&/#[A-Za-z]/.test(i)&&i.replace(/.*(?=#[^\s]*$)/,""));var o=i&&t(i);return o&&o.length?o:e.parent()}function i(i){i&&3===i.which||(t(n).remove(),t(s).each(function(){var o=t(this),n=e(o),s={relatedTarget:this};n.hasClass("open")&&(i&&"click"==i.type&&/input|textarea/i.test(i.target.tagName)&&t.contains(n[0],i.target)||(n.trigger(i=t.Event("hide.bs.dropdown",s)),i.isDefaultPrevented()||(o.attr("aria-expanded","false"),n.removeClass("open").trigger(t.Event("hidden.bs.dropdown",s)))))}))}function o(e){return this.each(function(){var i=t(this),o=i.data("bs.dropdown");o||i.data("bs.dropdown",o=new a(this)),"string"==typeof e&&o[e].call(i)})}var n=".dropdown-backdrop",s='[data-toggle="dropdown"]',a=function(e){t(e).on("click.bs.dropdown",this.toggle)};a.VERSION="3.3.6",a.prototype.toggle=function(o){var n=t(this);if(!n.is(".disabled, :disabled")){var s=e(n),a=s.hasClass("open");if(i(),!a){"ontouchstart"in document.documentElement&&!s.closest(".navbar-nav").length&&t(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(t(this)).on("click",i);var r={relatedTarget:this};if(s.trigger(o=t.Event("show.bs.dropdown",r)),o.isDefaultPrevented())return;n.trigger("focus").attr("aria-expanded","true"),s.toggleClass("open").trigger(t.Event("shown.bs.dropdown",r))}return!1}},a.prototype.keydown=function(i){if(/(38|40|27|32)/.test(i.which)&&!/input|textarea/i.test(i.target.tagName)){var o=t(this);if(i.preventDefault(),i.stopPropagation(),!o.is(".disabled, :disabled")){var n=e(o),a=n.hasClass("open");if(!a&&27!=i.which||a&&27==i.which)return 27==i.which&&n.find(s).trigger("focus"),o.trigger("click");var r=" li:not(.disabled):visible a",l=n.find(".dropdown-menu"+r);if(l.length){var h=l.index(i.target);38==i.which&&h>0&&h--,40==i.which&&h<l.length-1&&h++,~h||(h=0),l.eq(h).trigger("focus")}}}};var r=t.fn.dropdown;t.fn.dropdown=o,t.fn.dropdown.Constructor=a,t.fn.dropdown.noConflict=function(){return t.fn.dropdown=r,this},t(document).on("click.bs.dropdown.data-api",i).on("click.bs.dropdown.data-api",".dropdown form",function(t){t.stopPropagation()}).on("click.bs.dropdown.data-api",s,a.prototype.toggle).on("keydown.bs.dropdown.data-api",s,a.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",a.prototype.keydown)}(jQuery),+function(t){"use strict";function e(e,o){return this.each(function(){var n=t(this),s=n.data("bs.modal"),a=t.extend({},i.DEFAULTS,n.data(),"object"==typeof e&&e);s||n.data("bs.modal",s=new i(this,a)),"string"==typeof e?s[e](o):a.show&&s.show(o)})}var i=function(e,i){this.options=i,this.$body=t(document.body),this.$element=t(e),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,t.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};i.VERSION="3.3.6",i.TRANSITION_DURATION=300,i.BACKDROP_TRANSITION_DURATION=150,i.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},i.prototype.toggle=function(t){return this.isShown?this.hide():this.show(t)},i.prototype.show=function(e){var o=this,n=t.Event("show.bs.modal",{relatedTarget:e});this.$element.trigger(n),this.isShown||n.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',t.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){o.$element.one("mouseup.dismiss.bs.modal",function(e){t(e.target).is(o.$element)&&(o.ignoreBackdropClick=!0)})}),this.backdrop(function(){var n=t.support.transition&&o.$element.hasClass("fade");o.$element.parent().length||o.$element.appendTo(o.$body),o.$element.show().scrollTop(0),o.adjustDialog(),n&&o.$element[0].offsetWidth,o.$element.addClass("in"),o.enforceFocus();var s=t.Event("shown.bs.modal",{relatedTarget:e});n?o.$dialog.one("bsTransitionEnd",function(){o.$element.trigger("focus").trigger(s)}).emulateTransitionEnd(i.TRANSITION_DURATION):o.$element.trigger("focus").trigger(s)}))},i.prototype.hide=function(e){e&&e.preventDefault(),e=t.Event("hide.bs.modal"),this.$element.trigger(e),this.isShown&&!e.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),t(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),t.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",t.proxy(this.hideModal,this)).emulateTransitionEnd(i.TRANSITION_DURATION):this.hideModal())},i.prototype.enforceFocus=function(){t(document).off("focusin.bs.modal").on("focusin.bs.modal",t.proxy(function(t){this.$element[0]===t.target||this.$element.has(t.target).length||this.$element.trigger("focus")},this))},i.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",t.proxy(function(t){27==t.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},i.prototype.resize=function(){this.isShown?t(window).on("resize.bs.modal",t.proxy(this.handleUpdate,this)):t(window).off("resize.bs.modal")},i.prototype.hideModal=function(){var t=this;this.$element.hide(),this.backdrop(function(){t.$body.removeClass("modal-open"),t.resetAdjustments(),t.resetScrollbar(),t.$element.trigger("hidden.bs.modal")})},i.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},i.prototype.backdrop=function(e){var o=this,n=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var s=t.support.transition&&n;if(this.$backdrop=t(document.createElement("div")).addClass("modal-backdrop "+n).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",t.proxy(function(t){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(t.target===t.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),s&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!e)return;s?this.$backdrop.one("bsTransitionEnd",e).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):e()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var a=function(){o.removeBackdrop(),e&&e()};t.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",a).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):a()}else e&&e()},i.prototype.handleUpdate=function(){this.adjustDialog()},i.prototype.adjustDialog=function(){var t=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&t?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!t?this.scrollbarWidth:""})},i.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},i.prototype.checkScrollbar=function(){var t=window.innerWidth;if(!t){var e=document.documentElement.getBoundingClientRect();t=e.right-Math.abs(e.left)}this.bodyIsOverflowing=document.body.clientWidth<t,this.scrollbarWidth=this.measureScrollbar()},i.prototype.setScrollbar=function(){var t=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",t+this.scrollbarWidth)},i.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},i.prototype.measureScrollbar=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",this.$body.append(t);var e=t.offsetWidth-t.clientWidth;return this.$body[0].removeChild(t),e};var o=t.fn.modal;t.fn.modal=e,t.fn.modal.Constructor=i,t.fn.modal.noConflict=function(){return t.fn.modal=o,this},t(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(i){var o=t(this),n=o.attr("href"),s=t(o.attr("data-target")||n&&n.replace(/.*(?=#[^\s]+$)/,"")),a=s.data("bs.modal")?"toggle":t.extend({remote:!/#/.test(n)&&n},s.data(),o.data());o.is("a")&&i.preventDefault(),s.one("show.bs.modal",function(t){t.isDefaultPrevented()||s.one("hidden.bs.modal",function(){o.is(":visible")&&o.trigger("focus")})}),e.call(s,a,this)})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.tooltip"),s="object"==typeof e&&e;(n||!/destroy|hide/.test(e))&&(n||o.data("bs.tooltip",n=new i(this,s)),"string"==typeof e&&n[e]())})}var i=function(t,e){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",t,e)};i.VERSION="3.3.6",i.TRANSITION_DURATION=150,i.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},i.prototype.init=function(e,i,o){if(this.enabled=!0,this.type=e,this.$element=t(i),this.options=this.getOptions(o),this.$viewport=this.options.viewport&&t(t.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var n=this.options.trigger.split(" "),s=n.length;s--;){var a=n[s];if("click"==a)this.$element.on("click."+this.type,this.options.selector,t.proxy(this.toggle,this));else if("manual"!=a){var r="hover"==a?"mouseenter":"focusin",l="hover"==a?"mouseleave":"focusout";this.$element.on(r+"."+this.type,this.options.selector,t.proxy(this.enter,this)),this.$element.on(l+"."+this.type,this.options.selector,t.proxy(this.leave,this))}}this.options.selector?this._options=t.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.getOptions=function(e){return e=t.extend({},this.getDefaults(),this.$element.data(),e),e.delay&&"number"==typeof e.delay&&(e.delay={show:e.delay,hide:e.delay}),e},i.prototype.getDelegateOptions=function(){var e={},i=this.getDefaults();return this._options&&t.each(this._options,function(t,o){i[t]!=o&&(e[t]=o)}),e},i.prototype.enter=function(e){var i=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);return i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i)),e instanceof t.Event&&(i.inState["focusin"==e.type?"focus":"hover"]=!0),i.tip().hasClass("in")||"in"==i.hoverState?void(i.hoverState="in"):(clearTimeout(i.timeout),i.hoverState="in",i.options.delay&&i.options.delay.show?void(i.timeout=setTimeout(function(){"in"==i.hoverState&&i.show()},i.options.delay.show)):i.show())},i.prototype.isInStateTrue=function(){for(var t in this.inState)if(this.inState[t])return!0;return!1},i.prototype.leave=function(e){var i=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);return i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i)),e instanceof t.Event&&(i.inState["focusout"==e.type?"focus":"hover"]=!1),i.isInStateTrue()?void 0:(clearTimeout(i.timeout),i.hoverState="out",i.options.delay&&i.options.delay.hide?void(i.timeout=setTimeout(function(){"out"==i.hoverState&&i.hide()},i.options.delay.hide)):i.hide())},i.prototype.show=function(){var e=t.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(e);var o=t.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(e.isDefaultPrevented()||!o)return;var n=this,s=this.tip(),a=this.getUID(this.type);this.setContent(),s.attr("id",a),this.$element.attr("aria-describedby",a),this.options.animation&&s.addClass("fade");var r="function"==typeof this.options.placement?this.options.placement.call(this,s[0],this.$element[0]):this.options.placement,l=/\s?auto?\s?/i,h=l.test(r);h&&(r=r.replace(l,"")||"top"),s.detach().css({top:0,left:0,display:"block"}).addClass(r).data("bs."+this.type,this),this.options.container?s.appendTo(this.options.container):s.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var d=this.getPosition(),p=s[0].offsetWidth,c=s[0].offsetHeight;if(h){var f=r,u=this.getPosition(this.$viewport);r="bottom"==r&&d.bottom+c>u.bottom?"top":"top"==r&&d.top-c<u.top?"bottom":"right"==r&&d.right+p>u.width?"left":"left"==r&&d.left-p<u.left?"right":r,s.removeClass(f).addClass(r)}var g=this.getCalculatedOffset(r,d,p,c);this.applyPlacement(g,r);var v=function(){var t=n.hoverState;n.$element.trigger("shown.bs."+n.type),n.hoverState=null,"out"==t&&n.leave(n)};t.support.transition&&this.$tip.hasClass("fade")?s.one("bsTransitionEnd",v).emulateTransitionEnd(i.TRANSITION_DURATION):v()}},i.prototype.applyPlacement=function(e,i){var o=this.tip(),n=o[0].offsetWidth,s=o[0].offsetHeight,a=parseInt(o.css("margin-top"),10),r=parseInt(o.css("margin-left"),10);isNaN(a)&&(a=0),isNaN(r)&&(r=0),e.top+=a,e.left+=r,t.offset.setOffset(o[0],t.extend({using:function(t){o.css({top:Math.round(t.top),left:Math.round(t.left)})}},e),0),o.addClass("in");var l=o[0].offsetWidth,h=o[0].offsetHeight;"top"==i&&h!=s&&(e.top=e.top+s-h);var d=this.getViewportAdjustedDelta(i,e,l,h);d.left?e.left+=d.left:e.top+=d.top;var p=/top|bottom/.test(i),c=p?2*d.left-n+l:2*d.top-s+h,f=p?"offsetWidth":"offsetHeight";o.offset(e),this.replaceArrow(c,o[0][f],p)},i.prototype.replaceArrow=function(t,e,i){this.arrow().css(i?"left":"top",50*(1-t/e)+"%").css(i?"top":"left","")},i.prototype.setContent=function(){var t=this.tip(),e=this.getTitle();t.find(".tooltip-inner")[this.options.html?"html":"text"](e),t.removeClass("fade in top bottom left right")},i.prototype.hide=function(e){function o(){"in"!=n.hoverState&&s.detach(),n.$element.removeAttr("aria-describedby").trigger("hidden.bs."+n.type),e&&e()}var n=this,s=t(this.$tip),a=t.Event("hide.bs."+this.type);return this.$element.trigger(a),a.isDefaultPrevented()?void 0:(s.removeClass("in"),t.support.transition&&s.hasClass("fade")?s.one("bsTransitionEnd",o).emulateTransitionEnd(i.TRANSITION_DURATION):o(),this.hoverState=null,this)},i.prototype.fixTitle=function(){var t=this.$element;(t.attr("title")||"string"!=typeof t.attr("data-original-title"))&&t.attr("data-original-title",t.attr("title")||"").attr("title","")},i.prototype.hasContent=function(){return this.getTitle()},i.prototype.getPosition=function(e){e=e||this.$element;var i=e[0],o="BODY"==i.tagName,n=i.getBoundingClientRect();null==n.width&&(n=t.extend({},n,{width:n.right-n.left,height:n.bottom-n.top}));var s=o?{top:0,left:0}:e.offset(),a={scroll:o?document.documentElement.scrollTop||document.body.scrollTop:e.scrollTop()},r=o?{width:t(window).width(),height:t(window).height()}:null;return t.extend({},n,a,r,s)},i.prototype.getCalculatedOffset=function(t,e,i,o){return"bottom"==t?{top:e.top+e.height,left:e.left+e.width/2-i/2}:"top"==t?{top:e.top-o,left:e.left+e.width/2-i/2}:"left"==t?{top:e.top+e.height/2-o/2,left:e.left-i}:{top:e.top+e.height/2-o/2,left:e.left+e.width}},i.prototype.getViewportAdjustedDelta=function(t,e,i,o){var n={top:0,left:0};if(!this.$viewport)return n;var s=this.options.viewport&&this.options.viewport.padding||0,a=this.getPosition(this.$viewport);if(/right|left/.test(t)){var r=e.top-s-a.scroll,l=e.top+s-a.scroll+o;r<a.top?n.top=a.top-r:l>a.top+a.height&&(n.top=a.top+a.height-l)}else{var h=e.left-s,d=e.left+s+i;h<a.left?n.left=a.left-h:d>a.right&&(n.left=a.left+a.width-d)}return n},i.prototype.getTitle=function(){var t,e=this.$element,i=this.options;return t=e.attr("data-original-title")||("function"==typeof i.title?i.title.call(e[0]):i.title)},i.prototype.getUID=function(t){do t+=~~(1e6*Math.random());while(document.getElementById(t));return t},i.prototype.tip=function(){if(!this.$tip&&(this.$tip=t(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},i.prototype.enable=function(){this.enabled=!0},i.prototype.disable=function(){this.enabled=!1},i.prototype.toggleEnabled=function(){this.enabled=!this.enabled},i.prototype.toggle=function(e){var i=this;e&&(i=t(e.currentTarget).data("bs."+this.type),i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i))),e?(i.inState.click=!i.inState.click,i.isInStateTrue()?i.enter(i):i.leave(i)):i.tip().hasClass("in")?i.leave(i):i.enter(i)},i.prototype.destroy=function(){var t=this;clearTimeout(this.timeout),this.hide(function(){t.$element.off("."+t.type).removeData("bs."+t.type),t.$tip&&t.$tip.detach(),t.$tip=null,t.$arrow=null,t.$viewport=null})};var o=t.fn.tooltip;t.fn.tooltip=e,t.fn.tooltip.Constructor=i,t.fn.tooltip.noConflict=function(){return t.fn.tooltip=o,this}}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.popover"),s="object"==typeof e&&e;(n||!/destroy|hide/.test(e))&&(n||o.data("bs.popover",n=new i(this,s)),"string"==typeof e&&n[e]())})}var i=function(t,e){this.init("popover",t,e)};if(!t.fn.tooltip)throw new Error("Popover requires tooltip.js");i.VERSION="3.3.6",i.DEFAULTS=t.extend({},t.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),i.prototype=t.extend({},t.fn.tooltip.Constructor.prototype),i.prototype.constructor=i,i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.setContent=function(){var t=this.tip(),e=this.getTitle(),i=this.getContent();t.find(".popover-title")[this.options.html?"html":"text"](e),t.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof i?"html":"append":"text"](i),t.removeClass("fade top bottom left right in"),t.find(".popover-title").html()||t.find(".popover-title").hide()},i.prototype.hasContent=function(){return this.getTitle()||this.getContent()},i.prototype.getContent=function(){var t=this.$element,e=this.options;return t.attr("data-content")||("function"==typeof e.content?e.content.call(t[0]):e.content)},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var o=t.fn.popover;t.fn.popover=e,t.fn.popover.Constructor=i,t.fn.popover.noConflict=function(){return t.fn.popover=o,this}}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.tab");n||o.data("bs.tab",n=new i(this)),"string"==typeof e&&n[e]()})}var i=function(e){this.element=t(e)};i.VERSION="3.3.6",i.TRANSITION_DURATION=150,i.prototype.show=function(){var e=this.element,i=e.closest("ul:not(.dropdown-menu)"),o=e.data("target");if(o||(o=e.attr("href"),o=o&&o.replace(/.*(?=#[^\s]*$)/,"")),!e.parent("li").hasClass("active")){var n=i.find(".active:last a"),s=t.Event("hide.bs.tab",{relatedTarget:e[0]}),a=t.Event("show.bs.tab",{relatedTarget:n[0]});if(n.trigger(s),e.trigger(a),!a.isDefaultPrevented()&&!s.isDefaultPrevented()){var r=t(o);this.activate(e.closest("li"),i),this.activate(r,r.parent(),function(){n.trigger({type:"hidden.bs.tab",relatedTarget:e[0]}),e.trigger({type:"shown.bs.tab",relatedTarget:n[0]})})}}},i.prototype.activate=function(e,o,n){function s(){a.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),e.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),r?(e[0].offsetWidth,e.addClass("in")):e.removeClass("fade"),e.parent(".dropdown-menu").length&&e.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),n&&n()}var a=o.find("> .active"),r=n&&t.support.transition&&(a.length&&a.hasClass("fade")||!!o.find("> .fade").length);a.length&&r?a.one("bsTransitionEnd",s).emulateTransitionEnd(i.TRANSITION_DURATION):s(),a.removeClass("in")};var o=t.fn.tab;t.fn.tab=e,t.fn.tab.Constructor=i,t.fn.tab.noConflict=function(){return t.fn.tab=o,this};var n=function(i){i.preventDefault(),e.call(t(this),"show")};t(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',n).on("click.bs.tab.data-api",'[data-toggle="pill"]',n)}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.affix"),s="object"==typeof e&&e;n||o.data("bs.affix",n=new i(this,s)),"string"==typeof e&&n[e]()})}var i=function(e,o){this.options=t.extend({},i.DEFAULTS,o),this.$target=t(this.options.target).on("scroll.bs.affix.data-api",t.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",t.proxy(this.checkPositionWithEventLoop,this)),this.$element=t(e),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};i.VERSION="3.3.6",i.RESET="affix affix-top affix-bottom",i.DEFAULTS={offset:0,target:window},i.prototype.getState=function(t,e,i,o){var n=this.$target.scrollTop(),s=this.$element.offset(),a=this.$target.height();if(null!=i&&"top"==this.affixed)return i>n?"top":!1;if("bottom"==this.affixed)return null!=i?n+this.unpin<=s.top?!1:"bottom":t-o>=n+a?!1:"bottom";var r=null==this.affixed,l=r?n:s.top,h=r?a:e;return null!=i&&i>=n?"top":null!=o&&l+h>=t-o?"bottom":!1},i.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(i.RESET).addClass("affix");var t=this.$target.scrollTop(),e=this.$element.offset();return this.pinnedOffset=e.top-t},i.prototype.checkPositionWithEventLoop=function(){setTimeout(t.proxy(this.checkPosition,this),1)},i.prototype.checkPosition=function(){if(this.$element.is(":visible")){var e=this.$element.height(),o=this.options.offset,n=o.top,s=o.bottom,a=Math.max(t(document).height(),t(document.body).height());"object"!=typeof o&&(s=n=o),"function"==typeof n&&(n=o.top(this.$element)),"function"==typeof s&&(s=o.bottom(this.$element));var r=this.getState(a,e,n,s);if(this.affixed!=r){null!=this.unpin&&this.$element.css("top","");var l="affix"+(r?"-"+r:""),h=t.Event(l+".bs.affix");if(this.$element.trigger(h),h.isDefaultPrevented())return;this.affixed=r,this.unpin="bottom"==r?this.getPinnedOffset():null,this.$element.removeClass(i.RESET).addClass(l).trigger(l.replace("affix","affixed")+".bs.affix")}"bottom"==r&&this.$element.offset({top:a-e-s})}};var o=t.fn.affix;t.fn.affix=e,t.fn.affix.Constructor=i,t.fn.affix.noConflict=function(){return t.fn.affix=o,this},t(window).on("load",function(){t('[data-spy="affix"]').each(function(){var i=t(this),o=i.data();o.offset=o.offset||{},null!=o.offsetBottom&&(o.offset.bottom=o.offsetBottom),null!=o.offsetTop&&(o.offset.top=o.offsetTop),e.call(i,o)})})}(jQuery),+function(t){"use strict";function e(e){var i,o=e.attr("data-target")||(i=e.attr("href"))&&i.replace(/.*(?=#[^\s]+$)/,"");return t(o)}function i(e){return this.each(function(){var i=t(this),n=i.data("bs.collapse"),s=t.extend({},o.DEFAULTS,i.data(),"object"==typeof e&&e);!n&&s.toggle&&/show|hide/.test(e)&&(s.toggle=!1),n||i.data("bs.collapse",n=new o(this,s)),"string"==typeof e&&n[e]()})}var o=function(e,i){this.$element=t(e),this.options=t.extend({},o.DEFAULTS,i),this.$trigger=t('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};o.VERSION="3.3.6",o.TRANSITION_DURATION=350,o.DEFAULTS={toggle:!0},o.prototype.dimension=function(){var t=this.$element.hasClass("width");return t?"width":"height"},o.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var e,n=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(n&&n.length&&(e=n.data("bs.collapse"),e&&e.transitioning))){var s=t.Event("show.bs.collapse");if(this.$element.trigger(s),!s.isDefaultPrevented()){n&&n.length&&(i.call(n,"hide"),e||n.data("bs.collapse",null));var a=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var r=function(){this.$element.removeClass("collapsing").addClass("collapse in")[a](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!t.support.transition)return r.call(this);var l=t.camelCase(["scroll",a].join("-"));this.$element.one("bsTransitionEnd",t.proxy(r,this)).emulateTransitionEnd(o.TRANSITION_DURATION)[a](this.$element[0][l]);
}}}},o.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var e=t.Event("hide.bs.collapse");if(this.$element.trigger(e),!e.isDefaultPrevented()){var i=this.dimension();this.$element[i](this.$element[i]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var n=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return t.support.transition?void this.$element[i](0).one("bsTransitionEnd",t.proxy(n,this)).emulateTransitionEnd(o.TRANSITION_DURATION):n.call(this)}}},o.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},o.prototype.getParent=function(){return t(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(t.proxy(function(i,o){var n=t(o);this.addAriaAndCollapsedClass(e(n),n)},this)).end()},o.prototype.addAriaAndCollapsedClass=function(t,e){var i=t.hasClass("in");t.attr("aria-expanded",i),e.toggleClass("collapsed",!i).attr("aria-expanded",i)};var n=t.fn.collapse;t.fn.collapse=i,t.fn.collapse.Constructor=o,t.fn.collapse.noConflict=function(){return t.fn.collapse=n,this},t(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(o){var n=t(this);n.attr("data-target")||o.preventDefault();var s=e(n),a=s.data("bs.collapse"),r=a?"toggle":n.data();i.call(s,r)})}(jQuery),+function(t){"use strict";function e(i,o){this.$body=t(document.body),this.$scrollElement=t(t(i).is(document.body)?window:i),this.options=t.extend({},e.DEFAULTS,o),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",t.proxy(this.process,this)),this.refresh(),this.process()}function i(i){return this.each(function(){var o=t(this),n=o.data("bs.scrollspy"),s="object"==typeof i&&i;n||o.data("bs.scrollspy",n=new e(this,s)),"string"==typeof i&&n[i]()})}e.VERSION="3.3.6",e.DEFAULTS={offset:10},e.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},e.prototype.refresh=function(){var e=this,i="offset",o=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),t.isWindow(this.$scrollElement[0])||(i="position",o=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var e=t(this),n=e.data("target")||e.attr("href"),s=/^#./.test(n)&&t(n);return s&&s.length&&s.is(":visible")&&[[s[i]().top+o,n]]||null}).sort(function(t,e){return t[0]-e[0]}).each(function(){e.offsets.push(this[0]),e.targets.push(this[1])})},e.prototype.process=function(){var t,e=this.$scrollElement.scrollTop()+this.options.offset,i=this.getScrollHeight(),o=this.options.offset+i-this.$scrollElement.height(),n=this.offsets,s=this.targets,a=this.activeTarget;if(this.scrollHeight!=i&&this.refresh(),e>=o)return a!=(t=s[s.length-1])&&this.activate(t);if(a&&e<n[0])return this.activeTarget=null,this.clear();for(t=n.length;t--;)a!=s[t]&&e>=n[t]&&(void 0===n[t+1]||e<n[t+1])&&this.activate(s[t])},e.prototype.activate=function(e){this.activeTarget=e,this.clear();var i=this.selector+'[data-target="'+e+'"],'+this.selector+'[href="'+e+'"]',o=t(i).parents("li").addClass("active");o.parent(".dropdown-menu").length&&(o=o.closest("li.dropdown").addClass("active")),o.trigger("activate.bs.scrollspy")},e.prototype.clear=function(){t(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var o=t.fn.scrollspy;t.fn.scrollspy=i,t.fn.scrollspy.Constructor=e,t.fn.scrollspy.noConflict=function(){return t.fn.scrollspy=o,this},t(window).on("load.bs.scrollspy.data-api",function(){t('[data-spy="scroll"]').each(function(){var e=t(this);i.call(e,e.data())})})}(jQuery),+function(t){"use strict";function e(){var t=document.createElement("bootstrap"),e={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var i in e)if(void 0!==t.style[i])return{end:e[i]};return!1}t.fn.emulateTransitionEnd=function(e){var i=!1,o=this;t(this).one("bsTransitionEnd",function(){i=!0});var n=function(){i||t(o).trigger(t.support.transition.end)};return setTimeout(n,e),this},t(function(){t.support.transition=e(),t.support.transition&&(t.event.special.bsTransitionEnd={bindType:t.support.transition.end,delegateType:t.support.transition.end,handle:function(e){return t(e.target).is(this)?e.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery);;

/** jQueryUI **/
/*! jQuery UI - v1.9.2 - 2012-12-21
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.menu.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.effect.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js
* Copyright (c) 2012 jQuery Foundation and other contributors Licensed MIT */

(function(e,t){function i(t,n){var r,i,o,u=t.nodeName.toLowerCase();return"area"===u?(r=t.parentNode,i=r.name,!t.href||!i||r.nodeName.toLowerCase()!=="map"?!1:(o=e("img[usemap=#"+i+"]")[0],!!o&&s(o))):(/input|select|textarea|button|object/.test(u)?!t.disabled:"a"===u?t.href||n:n)&&s(t)}function s(t){return e.expr.filters.visible(t)&&!e(t).parents().andSelf().filter(function(){return e.css(this,"visibility")==="hidden"}).length}var n=0,r=/^ui-id-\d+$/;e.ui=e.ui||{};if(e.ui.version)return;e.extend(e.ui,{version:"1.9.2",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,n){return typeof t=="number"?this.each(function(){var r=this;setTimeout(function(){e(r).focus(),n&&n.call(r)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return e.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?t=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):t=this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(n){if(n!==t)return this.css("zIndex",n);if(this.length){var r=e(this[0]),i,s;while(r.length&&r[0]!==document){i=r.css("position");if(i==="absolute"||i==="relative"||i==="fixed"){s=parseInt(r.css("zIndex"),10);if(!isNaN(s)&&s!==0)return s}r=r.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++n)})},removeUniqueId:function(){return this.each(function(){r.test(this.id)&&e(this).removeAttr("id")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(n){return!!e.data(n,t)}}):function(t,n,r){return!!e.data(t,r[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var n=e.attr(t,"tabindex"),r=isNaN(n);return(r||n>=0)&&i(t,!r)}}),e(function(){var t=document.body,n=t.appendChild(n=document.createElement("div"));n.offsetHeight,e.extend(n.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),e.support.minHeight=n.offsetHeight===100,e.support.selectstart="onselectstart"in n,t.removeChild(n).style.display="none"}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(n,r){function u(t,n,r,s){return e.each(i,function(){n-=parseFloat(e.css(t,"padding"+this))||0,r&&(n-=parseFloat(e.css(t,"border"+this+"Width"))||0),s&&(n-=parseFloat(e.css(t,"margin"+this))||0)}),n}var i=r==="Width"?["Left","Right"]:["Top","Bottom"],s=r.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+r]=function(n){return n===t?o["inner"+r].call(this):this.each(function(){e(this).css(s,u(this,n)+"px")})},e.fn["outer"+r]=function(t,n){return typeof t!="number"?o["outer"+r].call(this,t):this.each(function(){e(this).css(s,u(this,t,!0,n)+"px")})}}),e("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(e.fn.removeData=function(t){return function(n){return arguments.length?t.call(this,e.camelCase(n)):t.call(this)}}(e.fn.removeData)),function(){var t=/msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase())||[];e.ui.ie=t.length?!0:!1,e.ui.ie6=parseFloat(t[1],10)===6}(),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,n,r){var i,s=e.ui[t].prototype;for(i in r)s.plugins[i]=s.plugins[i]||[],s.plugins[i].push([n,r[i]])},call:function(e,t,n){var r,i=e.plugins[t];if(!i||!e.element[0].parentNode||e.element[0].parentNode.nodeType===11)return;for(r=0;r<i.length;r++)e.options[i[r][0]]&&i[r][1].apply(e.element,n)}},contains:e.contains,hasScroll:function(t,n){if(e(t).css("overflow")==="hidden")return!1;var r=n&&n==="left"?"scrollLeft":"scrollTop",i=!1;return t[r]>0?!0:(t[r]=1,i=t[r]>0,t[r]=0,i)},isOverAxis:function(e,t,n){return e>t&&e<t+n},isOver:function(t,n,r,i,s,o){return e.ui.isOverAxis(t,r,s)&&e.ui.isOverAxis(n,i,o)}})})(jQuery);(function(e,t){var n=0,r=Array.prototype.slice,i=e.cleanData;e.cleanData=function(t){for(var n=0,r;(r=t[n])!=null;n++)try{e(r).triggerHandler("remove")}catch(s){}i(t)},e.widget=function(t,n,r){var i,s,o,u,a=t.split(".")[0];t=t.split(".")[1],i=a+"-"+t,r||(r=n,n=e.Widget),e.expr[":"][i.toLowerCase()]=function(t){return!!e.data(t,i)},e[a]=e[a]||{},s=e[a][t],o=e[a][t]=function(e,t){if(!this._createWidget)return new o(e,t);arguments.length&&this._createWidget(e,t)},e.extend(o,s,{version:r.version,_proto:e.extend({},r),_childConstructors:[]}),u=new n,u.options=e.widget.extend({},u.options),e.each(r,function(t,i){e.isFunction(i)&&(r[t]=function(){var e=function(){return n.prototype[t].apply(this,arguments)},r=function(e){return n.prototype[t].apply(this,e)};return function(){var t=this._super,n=this._superApply,s;return this._super=e,this._superApply=r,s=i.apply(this,arguments),this._super=t,this._superApply=n,s}}())}),o.prototype=e.widget.extend(u,{widgetEventPrefix:s?u.widgetEventPrefix:t},r,{constructor:o,namespace:a,widgetName:t,widgetBaseClass:i,widgetFullName:i}),s?(e.each(s._childConstructors,function(t,n){var r=n.prototype;e.widget(r.namespace+"."+r.widgetName,o,n._proto)}),delete s._childConstructors):n._childConstructors.push(o),e.widget.bridge(t,o)},e.widget.extend=function(n){var i=r.call(arguments,1),s=0,o=i.length,u,a;for(;s<o;s++)for(u in i[s])a=i[s][u],i[s].hasOwnProperty(u)&&a!==t&&(e.isPlainObject(a)?n[u]=e.isPlainObject(n[u])?e.widget.extend({},n[u],a):e.widget.extend({},a):n[u]=a);return n},e.widget.bridge=function(n,i){var s=i.prototype.widgetFullName||n;e.fn[n]=function(o){var u=typeof o=="string",a=r.call(arguments,1),f=this;return o=!u&&a.length?e.widget.extend.apply(null,[o].concat(a)):o,u?this.each(function(){var r,i=e.data(this,s);if(!i)return e.error("cannot call methods on "+n+" prior to initialization; "+"attempted to call method '"+o+"'");if(!e.isFunction(i[o])||o.charAt(0)==="_")return e.error("no such method '"+o+"' for "+n+" widget instance");r=i[o].apply(i,a);if(r!==i&&r!==t)return f=r&&r.jquery?f.pushStack(r.get()):r,!1}):this.each(function(){var t=e.data(this,s);t?t.option(o||{})._init():e.data(this,s,new i(o,this))}),f}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,r){r=e(r||this.defaultElement||this)[0],this.element=e(r),this.uuid=n++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),r!==this&&(e.data(r,this.widgetName,this),e.data(r,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===r&&this.destroy()}}),this.document=e(r.style?r.ownerDocument:r.document||r),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(n,r){var i=n,s,o,u;if(arguments.length===0)return e.widget.extend({},this.options);if(typeof n=="string"){i={},s=n.split("."),n=s.shift();if(s.length){o=i[n]=e.widget.extend({},this.options[n]);for(u=0;u<s.length-1;u++)o[s[u]]=o[s[u]]||{},o=o[s[u]];n=s.pop();if(r===t)return o[n]===t?null:o[n];o[n]=r}else{if(r===t)return this.options[n]===t?null:this.options[n];i[n]=r}}return this._setOptions(i),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,e==="disabled"&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!t).attr("aria-disabled",t),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(t,n,r){var i,s=this;typeof t!="boolean"&&(r=n,n=t,t=!1),r?(n=i=e(n),this.bindings=this.bindings.add(n)):(r=n,n=this.element,i=this.widget()),e.each(r,function(r,o){function u(){if(!t&&(s.options.disabled===!0||e(this).hasClass("ui-state-disabled")))return;return(typeof o=="string"?s[o]:o).apply(s,arguments)}typeof o!="string"&&(u.guid=o.guid=o.guid||u.guid||e.guid++);var a=r.match(/^(\w+)\s*(.*)$/),f=a[1]+s.eventNamespace,l=a[2];l?i.delegate(l,f,u):n.bind(f,u)})},_off:function(e,t){t=(t||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function n(){return(typeof e=="string"?r[e]:e).apply(r,arguments)}var r=this;return setTimeout(n,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,n,r){var i,s,o=this.options[t];r=r||{},n=e.Event(n),n.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),n.target=this.element[0],s=n.originalEvent;if(s)for(i in s)i in n||(n[i]=s[i]);return this.element.trigger(n,r),!(e.isFunction(o)&&o.apply(this.element[0],[n].concat(r))===!1||n.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,n){e.Widget.prototype["_"+t]=function(r,i,s){typeof i=="string"&&(i={effect:i});var o,u=i?i===!0||typeof i=="number"?n:i.effect||n:t;i=i||{},typeof i=="number"&&(i={duration:i}),o=!e.isEmptyObject(i),i.complete=s,i.delay&&r.delay(i.delay),o&&e.effects&&(e.effects.effect[u]||e.uiBackCompat!==!1&&e.effects[u])?r[t](i):u!==t&&r[u]?r[u](i.duration,i.easing,s):r.queue(function(n){e(this)[t](),s&&s.call(r[0]),n()})}}),e.uiBackCompat!==!1&&(e.Widget.prototype._getCreateOptions=function(){return e.metadata&&e.metadata.get(this.element[0])[this.widgetName]})})(jQuery);(function(e,t){var n=!1;e(document).mouseup(function(e){n=!1}),e.widget("ui.mouse",{version:"1.9.2",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(n){if(!0===e.data(n.target,t.widgetName+".preventClickEvent"))return e.removeData(n.target,t.widgetName+".preventClickEvent"),n.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(n)return;this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var r=this,i=t.which===1,s=typeof this.options.cancel=="string"&&t.target.nodeName?e(t.target).closest(this.options.cancel).length:!1;if(!i||s||!this._mouseCapture(t))return!0;this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){r.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)){this._mouseStarted=this._mouseStart(t)!==!1;if(!this._mouseStarted)return t.preventDefault(),!0}return!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return r._mouseMove(e)},this._mouseUpDelegate=function(e){return r._mouseUp(e)},e(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),n=!0,!0},_mouseMove:function(t){return!e.ui.ie||document.documentMode>=9||!!t.button?this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted):this._mouseUp(t)},_mouseUp:function(t){return e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(e){return this.mouseDelayMet},_mouseStart:function(e){},_mouseDrag:function(e){},_mouseStop:function(e){},_mouseCapture:function(e){return!0}})})(jQuery);(function(e,t){function h(e,t,n){return[parseInt(e[0],10)*(l.test(e[0])?t/100:1),parseInt(e[1],10)*(l.test(e[1])?n/100:1)]}function p(t,n){return parseInt(e.css(t,n),10)||0}e.ui=e.ui||{};var n,r=Math.max,i=Math.abs,s=Math.round,o=/left|center|right/,u=/top|center|bottom/,a=/[\+\-]\d+%?/,f=/^\w+/,l=/%$/,c=e.fn.position;e.position={scrollbarWidth:function(){if(n!==t)return n;var r,i,s=e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=s.children()[0];return e("body").append(s),r=o.offsetWidth,s.css("overflow","scroll"),i=o.offsetWidth,r===i&&(i=s[0].clientWidth),s.remove(),n=r-i},getScrollInfo:function(t){var n=t.isWindow?"":t.element.css("overflow-x"),r=t.isWindow?"":t.element.css("overflow-y"),i=n==="scroll"||n==="auto"&&t.width<t.element[0].scrollWidth,s=r==="scroll"||r==="auto"&&t.height<t.element[0].scrollHeight;return{width:i?e.position.scrollbarWidth():0,height:s?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var n=e(t||window),r=e.isWindow(n[0]);return{element:n,isWindow:r,offset:n.offset()||{left:0,top:0},scrollLeft:n.scrollLeft(),scrollTop:n.scrollTop(),width:r?n.width():n.outerWidth(),height:r?n.height():n.outerHeight()}}},e.fn.position=function(t){if(!t||!t.of)return c.apply(this,arguments);t=e.extend({},t);var n,l,d,v,m,g=e(t.of),y=e.position.getWithinInfo(t.within),b=e.position.getScrollInfo(y),w=g[0],E=(t.collision||"flip").split(" "),S={};return w.nodeType===9?(l=g.width(),d=g.height(),v={top:0,left:0}):e.isWindow(w)?(l=g.width(),d=g.height(),v={top:g.scrollTop(),left:g.scrollLeft()}):w.preventDefault?(t.at="left top",l=d=0,v={top:w.pageY,left:w.pageX}):(l=g.outerWidth(),d=g.outerHeight(),v=g.offset()),m=e.extend({},v),e.each(["my","at"],function(){var e=(t[this]||"").split(" "),n,r;e.length===1&&(e=o.test(e[0])?e.concat(["center"]):u.test(e[0])?["center"].concat(e):["center","center"]),e[0]=o.test(e[0])?e[0]:"center",e[1]=u.test(e[1])?e[1]:"center",n=a.exec(e[0]),r=a.exec(e[1]),S[this]=[n?n[0]:0,r?r[0]:0],t[this]=[f.exec(e[0])[0],f.exec(e[1])[0]]}),E.length===1&&(E[1]=E[0]),t.at[0]==="right"?m.left+=l:t.at[0]==="center"&&(m.left+=l/2),t.at[1]==="bottom"?m.top+=d:t.at[1]==="center"&&(m.top+=d/2),n=h(S.at,l,d),m.left+=n[0],m.top+=n[1],this.each(function(){var o,u,a=e(this),f=a.outerWidth(),c=a.outerHeight(),w=p(this,"marginLeft"),x=p(this,"marginTop"),T=f+w+p(this,"marginRight")+b.width,N=c+x+p(this,"marginBottom")+b.height,C=e.extend({},m),k=h(S.my,a.outerWidth(),a.outerHeight());t.my[0]==="right"?C.left-=f:t.my[0]==="center"&&(C.left-=f/2),t.my[1]==="bottom"?C.top-=c:t.my[1]==="center"&&(C.top-=c/2),C.left+=k[0],C.top+=k[1],e.support.offsetFractions||(C.left=s(C.left),C.top=s(C.top)),o={marginLeft:w,marginTop:x},e.each(["left","top"],function(r,i){e.ui.position[E[r]]&&e.ui.position[E[r]][i](C,{targetWidth:l,targetHeight:d,elemWidth:f,elemHeight:c,collisionPosition:o,collisionWidth:T,collisionHeight:N,offset:[n[0]+k[0],n[1]+k[1]],my:t.my,at:t.at,within:y,elem:a})}),e.fn.bgiframe&&a.bgiframe(),t.using&&(u=function(e){var n=v.left-C.left,s=n+l-f,o=v.top-C.top,u=o+d-c,h={target:{element:g,left:v.left,top:v.top,width:l,height:d},element:{element:a,left:C.left,top:C.top,width:f,height:c},horizontal:s<0?"left":n>0?"right":"center",vertical:u<0?"top":o>0?"bottom":"middle"};l<f&&i(n+s)<l&&(h.horizontal="center"),d<c&&i(o+u)<d&&(h.vertical="middle"),r(i(n),i(s))>r(i(o),i(u))?h.important="horizontal":h.important="vertical",t.using.call(this,e,h)}),a.offset(e.extend(C,{using:u}))})},e.ui.position={fit:{left:function(e,t){var n=t.within,i=n.isWindow?n.scrollLeft:n.offset.left,s=n.width,o=e.left-t.collisionPosition.marginLeft,u=i-o,a=o+t.collisionWidth-s-i,f;t.collisionWidth>s?u>0&&a<=0?(f=e.left+u+t.collisionWidth-s-i,e.left+=u-f):a>0&&u<=0?e.left=i:u>a?e.left=i+s-t.collisionWidth:e.left=i:u>0?e.left+=u:a>0?e.left-=a:e.left=r(e.left-o,e.left)},top:function(e,t){var n=t.within,i=n.isWindow?n.scrollTop:n.offset.top,s=t.within.height,o=e.top-t.collisionPosition.marginTop,u=i-o,a=o+t.collisionHeight-s-i,f;t.collisionHeight>s?u>0&&a<=0?(f=e.top+u+t.collisionHeight-s-i,e.top+=u-f):a>0&&u<=0?e.top=i:u>a?e.top=i+s-t.collisionHeight:e.top=i:u>0?e.top+=u:a>0?e.top-=a:e.top=r(e.top-o,e.top)}},flip:{left:function(e,t){var n=t.within,r=n.offset.left+n.scrollLeft,s=n.width,o=n.isWindow?n.scrollLeft:n.offset.left,u=e.left-t.collisionPosition.marginLeft,a=u-o,f=u+t.collisionWidth-s-o,l=t.my[0]==="left"?-t.elemWidth:t.my[0]==="right"?t.elemWidth:0,c=t.at[0]==="left"?t.targetWidth:t.at[0]==="right"?-t.targetWidth:0,h=-2*t.offset[0],p,d;if(a<0){p=e.left+l+c+h+t.collisionWidth-s-r;if(p<0||p<i(a))e.left+=l+c+h}else if(f>0){d=e.left-t.collisionPosition.marginLeft+l+c+h-o;if(d>0||i(d)<f)e.left+=l+c+h}},top:function(e,t){var n=t.within,r=n.offset.top+n.scrollTop,s=n.height,o=n.isWindow?n.scrollTop:n.offset.top,u=e.top-t.collisionPosition.marginTop,a=u-o,f=u+t.collisionHeight-s-o,l=t.my[1]==="top",c=l?-t.elemHeight:t.my[1]==="bottom"?t.elemHeight:0,h=t.at[1]==="top"?t.targetHeight:t.at[1]==="bottom"?-t.targetHeight:0,p=-2*t.offset[1],d,v;a<0?(v=e.top+c+h+p+t.collisionHeight-s-r,e.top+c+h+p>a&&(v<0||v<i(a))&&(e.top+=c+h+p)):f>0&&(d=e.top-t.collisionPosition.marginTop+c+h+p-o,e.top+c+h+p>f&&(d>0||i(d)<f)&&(e.top+=c+h+p))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}},function(){var t,n,r,i,s,o=document.getElementsByTagName("body")[0],u=document.createElement("div");t=document.createElement(o?"div":"body"),r={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},o&&e.extend(r,{position:"absolute",left:"-1000px",top:"-1000px"});for(s in r)t.style[s]=r[s];t.appendChild(u),n=o||document.documentElement,n.insertBefore(t,n.firstChild),u.style.cssText="position: absolute; left: 10.7432222px;",i=e(u).offset().left,e.support.offsetFractions=i>10&&i<11,t.innerHTML="",n.removeChild(t)}(),e.uiBackCompat!==!1&&function(e){var n=e.fn.position;e.fn.position=function(r){if(!r||!r.offset)return n.call(this,r);var i=r.offset.split(" "),s=r.at.split(" ");return i.length===1&&(i[1]=i[0]),/^\d/.test(i[0])&&(i[0]="+"+i[0]),/^\d/.test(i[1])&&(i[1]="+"+i[1]),s.length===1&&(/left|center|right/.test(s[0])?s[1]="center":(s[1]=s[0],s[0]="center")),n.call(this,e.extend(r,{at:s[0]+i[0]+" "+s[1]+i[1],offset:t}))}}(jQuery)})(jQuery);(function(e,t){e.widget("ui.draggable",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1},_create:function(){this.options.helper=="original"&&!/^(?:r|a|f)/.test(this.element.css("position"))&&(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy()},_mouseCapture:function(t){var n=this.options;return this.helper||n.disabled||e(t.target).is(".ui-resizable-handle")?!1:(this.handle=this._getHandle(t),this.handle?(e(n.iframeFix===!0?"iframe":n.iframeFix).each(function(){e('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(e(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(t){var n=this.options;return this.helper=this._createHelper(t),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,n.cursorAt&&this._adjustOffsetFromHelper(n.cursorAt),n.containment&&this._setContainment(),this._trigger("start",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!n.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_mouseDrag:function(t,n){this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute");if(!n){var r=this._uiHash();if(this._trigger("drag",t,r)===!1)return this._mouseUp({}),!1;this.position=r.position}if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";return e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var n=!1;e.ui.ddmanager&&!this.options.dropBehaviour&&(n=e.ui.ddmanager.drop(this,t)),this.dropped&&(n=this.dropped,this.dropped=!1);var r=this.element[0],i=!1;while(r&&(r=r.parentNode))r==document&&(i=!0);if(!i&&this.options.helper==="original")return!1;if(this.options.revert=="invalid"&&!n||this.options.revert=="valid"&&n||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)){var s=this;e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){s._trigger("stop",t)!==!1&&s._clear()})}else this._trigger("stop",t)!==!1&&this._clear();return!1},_mouseUp:function(t){return e("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(t){var n=!this.options.handle||!e(this.options.handle,this.element).length?!0:!1;return e(this.options.handle,this.element).find("*").andSelf().each(function(){this==t.target&&(n=!0)}),n},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t])):n.helper=="clone"?this.element.clone().removeAttr("id"):this.element;return r.parents("body").length||r.appendTo(n.appendTo=="parent"?this.element[0].parentNode:n.appendTo),r[0]!=this.element[0]&&!/(fixed|absolute)/.test(r.css("position"))&&r.css("position","absolute"),r},_adjustOffsetFromHelper:function(t){typeof t=="string"&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&e.ui.ie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var e=this.element.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;t.containment=="parent"&&(t.containment=this.helper[0].parentNode);if(t.containment=="document"||t.containment=="window")this.containment=[t.containment=="document"?0:e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t.containment=="document"?0:e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,(t.containment=="document"?0:e(window).scrollLeft())+e(t.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(t.containment=="document"?0:e(window).scrollTop())+(e(t.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(t.containment)&&t.containment.constructor!=Array){var n=e(t.containment),r=n[0];if(!r)return;var i=n.offset(),s=e(r).css("overflow")!="hidden";this.containment=[(parseInt(e(r).css("borderLeftWidth"),10)||0)+(parseInt(e(r).css("paddingLeft"),10)||0),(parseInt(e(r).css("borderTopWidth"),10)||0)+(parseInt(e(r).css("paddingTop"),10)||0),(s?Math.max(r.scrollWidth,r.offsetWidth):r.offsetWidth)-(parseInt(e(r).css("borderLeftWidth"),10)||0)-(parseInt(e(r).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(s?Math.max(r.scrollHeight,r.offsetHeight):r.offsetHeight)-(parseInt(e(r).css("borderTopWidth"),10)||0)-(parseInt(e(r).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=n}else t.containment.constructor==Array&&(this.containment=t.containment)},_convertPositionTo:function(t,n){n||(n=this.position);var r=t=="absolute"?1:-1,i=this.options,s=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(s[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():o?0:s.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():o?0:s.scrollLeft())*r}},_generatePosition:function(t){var n=this.options,r=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,i=/(html|body)/i.test(r[0].tagName),s=t.pageX,o=t.pageY;if(this.originalPosition){var u;if(this.containment){if(this.relative_container){var a=this.relative_container.offset();u=[this.containment[0]+a.left,this.containment[1]+a.top,this.containment[2]+a.left,this.containment[3]+a.top]}else u=this.containment;t.pageX-this.offset.click.left<u[0]&&(s=u[0]+this.offset.click.left),t.pageY-this.offset.click.top<u[1]&&(o=u[1]+this.offset.click.top),t.pageX-this.offset.click.left>u[2]&&(s=u[2]+this.offset.click.left),t.pageY-this.offset.click.top>u[3]&&(o=u[3]+this.offset.click.top)}if(n.grid){var f=n.grid[1]?this.originalPageY+Math.round((o-this.originalPageY)/n.grid[1])*n.grid[1]:this.originalPageY;o=u?f-this.offset.click.top<u[1]||f-this.offset.click.top>u[3]?f-this.offset.click.top<u[1]?f+n.grid[1]:f-n.grid[1]:f:f;var l=n.grid[0]?this.originalPageX+Math.round((s-this.originalPageX)/n.grid[0])*n.grid[0]:this.originalPageX;s=u?l-this.offset.click.left<u[0]||l-this.offset.click.left>u[2]?l-this.offset.click.left<u[0]?l+n.grid[0]:l-n.grid[0]:l:l}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():i?0:r.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():i?0:r.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(t,n,r){return r=r||this._uiHash(),e.ui.plugin.call(this,t,[n,r]),t=="drag"&&(this.positionAbs=this._convertPositionTo("absolute")),e.Widget.prototype._trigger.call(this,t,n,r)},plugins:{},_uiHash:function(e){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add("draggable","connectToSortable",{start:function(t,n){var r=e(this).data("draggable"),i=r.options,s=e.extend({},n,{item:r.element});r.sortables=[],e(i.connectToSortable).each(function(){var n=e.data(this,"sortable");n&&!n.options.disabled&&(r.sortables.push({instance:n,shouldRevert:n.options.revert}),n.refreshPositions(),n._trigger("activate",t,s))})},stop:function(t,n){var r=e(this).data("draggable"),i=e.extend({},n,{item:r.element});e.each(r.sortables,function(){this.instance.isOver?(this.instance.isOver=0,r.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=!0),this.instance._mouseStop(t),this.instance.options.helper=this.instance.options._helper,r.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",t,i))})},drag:function(t,n){var r=e(this).data("draggable"),i=this,s=function(t){var n=this.offset.click.top,r=this.offset.click.left,i=this.positionAbs.top,s=this.positionAbs.left,o=t.height,u=t.width,a=t.top,f=t.left;return e.ui.isOver(i+n,s+r,a,f,o,u)};e.each(r.sortables,function(s){var o=!1,u=this;this.instance.positionAbs=r.positionAbs,this.instance.helperProportions=r.helperProportions,this.instance.offset.click=r.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(o=!0,e.each(r.sortables,function(){return this.instance.positionAbs=r.positionAbs,this.instance.helperProportions=r.helperProportions,this.instance.offset.click=r.offset.click,this!=u&&this.instance._intersectsWith(this.instance.containerCache)&&e.ui.contains(u.instance.element[0],this.instance.element[0])&&(o=!1),o})),o?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=e(i).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return n.helper[0]},t.target=this.instance.currentItem[0],this.instance._mouseCapture(t,!0),this.instance._mouseStart(t,!0,!0),this.instance.offset.click.top=r.offset.click.top,this.instance.offset.click.left=r.offset.click.left,this.instance.offset.parent.left-=r.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=r.offset.parent.top-this.instance.offset.parent.top,r._trigger("toSortable",t),r.dropped=this.instance.element,r.currentItem=r.element,this.instance.fromOutside=r),this.instance.currentItem&&this.instance._mouseDrag(t)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",t,this.instance._uiHash(this.instance)),this.instance._mouseStop(t,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),r._trigger("fromSortable",t),r.dropped=!1)})}}),e.ui.plugin.add("draggable","cursor",{start:function(t,n){var r=e("body"),i=e(this).data("draggable").options;r.css("cursor")&&(i._cursor=r.css("cursor")),r.css("cursor",i.cursor)},stop:function(t,n){var r=e(this).data("draggable").options;r._cursor&&e("body").css("cursor",r._cursor)}}),e.ui.plugin.add("draggable","opacity",{start:function(t,n){var r=e(n.helper),i=e(this).data("draggable").options;r.css("opacity")&&(i._opacity=r.css("opacity")),r.css("opacity",i.opacity)},stop:function(t,n){var r=e(this).data("draggable").options;r._opacity&&e(n.helper).css("opacity",r._opacity)}}),e.ui.plugin.add("draggable","scroll",{start:function(t,n){var r=e(this).data("draggable");r.scrollParent[0]!=document&&r.scrollParent[0].tagName!="HTML"&&(r.overflowOffset=r.scrollParent.offset())},drag:function(t,n){var r=e(this).data("draggable"),i=r.options,s=!1;if(r.scrollParent[0]!=document&&r.scrollParent[0].tagName!="HTML"){if(!i.axis||i.axis!="x")r.overflowOffset.top+r.scrollParent[0].offsetHeight-t.pageY<i.scrollSensitivity?r.scrollParent[0].scrollTop=s=r.scrollParent[0].scrollTop+i.scrollSpeed:t.pageY-r.overflowOffset.top<i.scrollSensitivity&&(r.scrollParent[0].scrollTop=s=r.scrollParent[0].scrollTop-i.scrollSpeed);if(!i.axis||i.axis!="y")r.overflowOffset.left+r.scrollParent[0].offsetWidth-t.pageX<i.scrollSensitivity?r.scrollParent[0].scrollLeft=s=r.scrollParent[0].scrollLeft+i.scrollSpeed:t.pageX-r.overflowOffset.left<i.scrollSensitivity&&(r.scrollParent[0].scrollLeft=s=r.scrollParent[0].scrollLeft-i.scrollSpeed)}else{if(!i.axis||i.axis!="x")t.pageY-e(document).scrollTop()<i.scrollSensitivity?s=e(document).scrollTop(e(document).scrollTop()-i.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<i.scrollSensitivity&&(s=e(document).scrollTop(e(document).scrollTop()+i.scrollSpeed));if(!i.axis||i.axis!="y")t.pageX-e(document).scrollLeft()<i.scrollSensitivity?s=e(document).scrollLeft(e(document).scrollLeft()-i.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<i.scrollSensitivity&&(s=e(document).scrollLeft(e(document).scrollLeft()+i.scrollSpeed))}s!==!1&&e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(r,t)}}),e.ui.plugin.add("draggable","snap",{start:function(t,n){var r=e(this).data("draggable"),i=r.options;r.snapElements=[],e(i.snap.constructor!=String?i.snap.items||":data(draggable)":i.snap).each(function(){var t=e(this),n=t.offset();this!=r.element[0]&&r.snapElements.push({item:this,width:t.outerWidth(),height:t.outerHeight(),top:n.top,left:n.left})})},drag:function(t,n){var r=e(this).data("draggable"),i=r.options,s=i.snapTolerance,o=n.offset.left,u=o+r.helperProportions.width,a=n.offset.top,f=a+r.helperProportions.height;for(var l=r.snapElements.length-1;l>=0;l--){var c=r.snapElements[l].left,h=c+r.snapElements[l].width,p=r.snapElements[l].top,d=p+r.snapElements[l].height;if(!(c-s<o&&o<h+s&&p-s<a&&a<d+s||c-s<o&&o<h+s&&p-s<f&&f<d+s||c-s<u&&u<h+s&&p-s<a&&a<d+s||c-s<u&&u<h+s&&p-s<f&&f<d+s)){r.snapElements[l].snapping&&r.options.snap.release&&r.options.snap.release.call(r.element,t,e.extend(r._uiHash(),{snapItem:r.snapElements[l].item})),r.snapElements[l].snapping=!1;continue}if(i.snapMode!="inner"){var v=Math.abs(p-f)<=s,m=Math.abs(d-a)<=s,g=Math.abs(c-u)<=s,y=Math.abs(h-o)<=s;v&&(n.position.top=r._convertPositionTo("relative",{top:p-r.helperProportions.height,left:0}).top-r.margins.top),m&&(n.position.top=r._convertPositionTo("relative",{top:d,left:0}).top-r.margins.top),g&&(n.position.left=r._convertPositionTo("relative",{top:0,left:c-r.helperProportions.width}).left-r.margins.left),y&&(n.position.left=r._convertPositionTo("relative",{top:0,left:h}).left-r.margins.left)}var b=v||m||g||y;if(i.snapMode!="outer"){var v=Math.abs(p-a)<=s,m=Math.abs(d-f)<=s,g=Math.abs(c-o)<=s,y=Math.abs(h-u)<=s;v&&(n.position.top=r._convertPositionTo("relative",{top:p,left:0}).top-r.margins.top),m&&(n.position.top=r._convertPositionTo("relative",{top:d-r.helperProportions.height,left:0}).top-r.margins.top),g&&(n.position.left=r._convertPositionTo("relative",{top:0,left:c}).left-r.margins.left),y&&(n.position.left=r._convertPositionTo("relative",{top:0,left:h-r.helperProportions.width}).left-r.margins.left)}!r.snapElements[l].snapping&&(v||m||g||y||b)&&r.options.snap.snap&&r.options.snap.snap.call(r.element,t,e.extend(r._uiHash(),{snapItem:r.snapElements[l].item})),r.snapElements[l].snapping=v||m||g||y||b}}}),e.ui.plugin.add("draggable","stack",{start:function(t,n){var r=e(this).data("draggable").options,i=e.makeArray(e(r.stack)).sort(function(t,n){return(parseInt(e(t).css("zIndex"),10)||0)-(parseInt(e(n).css("zIndex"),10)||0)});if(!i.length)return;var s=parseInt(i[0].style.zIndex)||0;e(i).each(function(e){this.style.zIndex=s+e}),this[0].style.zIndex=s+i.length}}),e.ui.plugin.add("draggable","zIndex",{start:function(t,n){var r=e(n.helper),i=e(this).data("draggable").options;r.css("zIndex")&&(i._zIndex=r.css("zIndex")),r.css("zIndex",i.zIndex)},stop:function(t,n){var r=e(this).data("draggable").options;r._zIndex&&e(n.helper).css("zIndex",r._zIndex)}})})(jQuery);(function(e,t){e.widget("ui.droppable",{version:"1.9.2",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect"},_create:function(){var t=this.options,n=t.accept;this.isover=0,this.isout=1,this.accept=e.isFunction(n)?n:function(e){return e.is(n)},this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight},e.ui.ddmanager.droppables[t.scope]=e.ui.ddmanager.droppables[t.scope]||[],e.ui.ddmanager.droppables[t.scope].push(this),t.addClasses&&this.element.addClass("ui-droppable")},_destroy:function(){var t=e.ui.ddmanager.droppables[this.options.scope];for(var n=0;n<t.length;n++)t[n]==this&&t.splice(n,1);this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(t,n){t=="accept"&&(this.accept=e.isFunction(n)?n:function(e){return e.is(n)}),e.Widget.prototype._setOption.apply(this,arguments)},_activate:function(t){var n=e.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),n&&this._trigger("activate",t,this.ui(n))},_deactivate:function(t){var n=e.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),n&&this._trigger("deactivate",t,this.ui(n))},_over:function(t){var n=e.ui.ddmanager.current;if(!n||(n.currentItem||n.element)[0]==this.element[0])return;this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",t,this.ui(n)))},_out:function(t){var n=e.ui.ddmanager.current;if(!n||(n.currentItem||n.element)[0]==this.element[0])return;this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",t,this.ui(n)))},_drop:function(t,n){var r=n||e.ui.ddmanager.current;if(!r||(r.currentItem||r.element)[0]==this.element[0])return!1;var i=!1;return this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function(){var t=e.data(this,"droppable");if(t.options.greedy&&!t.options.disabled&&t.options.scope==r.options.scope&&t.accept.call(t.element[0],r.currentItem||r.element)&&e.ui.intersect(r,e.extend(t,{offset:t.element.offset()}),t.options.tolerance))return i=!0,!1}),i?!1:this.accept.call(this.element[0],r.currentItem||r.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",t,this.ui(r)),this.element):!1},ui:function(e){return{draggable:e.currentItem||e.element,helper:e.helper,position:e.position,offset:e.positionAbs}}}),e.ui.intersect=function(t,n,r){if(!n.offset)return!1;var i=(t.positionAbs||t.position.absolute).left,s=i+t.helperProportions.width,o=(t.positionAbs||t.position.absolute).top,u=o+t.helperProportions.height,a=n.offset.left,f=a+n.proportions.width,l=n.offset.top,c=l+n.proportions.height;switch(r){case"fit":return a<=i&&s<=f&&l<=o&&u<=c;case"intersect":return a<i+t.helperProportions.width/2&&s-t.helperProportions.width/2<f&&l<o+t.helperProportions.height/2&&u-t.helperProportions.height/2<c;case"pointer":var h=(t.positionAbs||t.position.absolute).left+(t.clickOffset||t.offset.click).left,p=(t.positionAbs||t.position.absolute).top+(t.clickOffset||t.offset.click).top,d=e.ui.isOver(p,h,l,a,n.proportions.height,n.proportions.width);return d;case"touch":return(o>=l&&o<=c||u>=l&&u<=c||o<l&&u>c)&&(i>=a&&i<=f||s>=a&&s<=f||i<a&&s>f);default:return!1}},e.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(t,n){var r=e.ui.ddmanager.droppables[t.options.scope]||[],i=n?n.type:null,s=(t.currentItem||t.element).find(":data(droppable)").andSelf();e:for(var o=0;o<r.length;o++){if(r[o].options.disabled||t&&!r[o].accept.call(r[o].element[0],t.currentItem||t.element))continue;for(var u=0;u<s.length;u++)if(s[u]==r[o].element[0]){r[o].proportions.height=0;continue e}r[o].visible=r[o].element.css("display")!="none";if(!r[o].visible)continue;i=="mousedown"&&r[o]._activate.call(r[o],n),r[o].offset=r[o].element.offset(),r[o].proportions={width:r[o].element[0].offsetWidth,height:r[o].element[0].offsetHeight}}},drop:function(t,n){var r=!1;return e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(!this.options)return;!this.options.disabled&&this.visible&&e.ui.intersect(t,this,this.options.tolerance)&&(r=this._drop.call(this,n)||r),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],t.currentItem||t.element)&&(this.isout=1,this.isover=0,this._deactivate.call(this,n))}),r},dragStart:function(t,n){t.element.parentsUntil("body").bind("scroll.droppable",function(){t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,n)})},drag:function(t,n){t.options.refreshPositions&&e.ui.ddmanager.prepareOffsets(t,n),e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(this.options.disabled||this.greedyChild||!this.visible)return;var r=e.ui.intersect(t,this,this.options.tolerance),i=!r&&this.isover==1?"isout":r&&this.isover==0?"isover":null;if(!i)return;var s;if(this.options.greedy){var o=this.options.scope,u=this.element.parents(":data(droppable)").filter(function(){return e.data(this,"droppable").options.scope===o});u.length&&(s=e.data(u[0],"droppable"),s.greedyChild=i=="isover"?1:0)}s&&i=="isover"&&(s.isover=0,s.isout=1,s._out.call(s,n)),this[i]=1,this[i=="isout"?"isover":"isout"]=0,this[i=="isover"?"_over":"_out"].call(this,n),s&&i=="isout"&&(s.isout=0,s.isover=1,s._over.call(s,n))})},dragStop:function(t,n){t.element.parentsUntil("body").unbind("scroll.droppable"),t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,n)}}})(jQuery);(function(e,t){e.widget("ui.resizable",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1e3},_create:function(){var t=this,n=this.options;this.element.addClass("ui-resizable"),e.extend(this,{_aspectRatio:!!n.aspectRatio,aspectRatio:n.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:n.helper||n.ghost||n.animate?n.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("resizable",this.element.data("resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=n.handles||(e(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se");if(this.handles.constructor==String){this.handles=="all"&&(this.handles="n,e,s,w,se,sw,ne,nw");var r=this.handles.split(",");this.handles={};for(var i=0;i<r.length;i++){var s=e.trim(r[i]),o="ui-resizable-"+s,u=e('<div class="ui-resizable-handle '+o+'"></div>');u.css({zIndex:n.zIndex}),"se"==s&&u.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[s]=".ui-resizable-"+s,this.element.append(u)}}this._renderAxis=function(t){t=t||this.element;for(var n in this.handles){this.handles[n].constructor==String&&(this.handles[n]=e(this.handles[n],this.element).show());if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var r=e(this.handles[n],this.element),i=0;i=/sw|ne|nw|se|n|s/.test(n)?r.outerHeight():r.outerWidth();var s=["padding",/ne|nw|n/.test(n)?"Top":/se|sw|s/.test(n)?"Bottom":/^e$/.test(n)?"Right":"Left"].join("");t.css(s,i),this._proportionallyResize()}if(!e(this.handles[n]).length)continue}},this._renderAxis(this.element),this._handles=e(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){if(!t.resizing){if(this.className)var e=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);t.axis=e&&e[1]?e[1]:"se"}}),n.autoHide&&(this._handles.hide(),e(this.element).addClass("ui-resizable-autohide").mouseenter(function(){if(n.disabled)return;e(this).removeClass("ui-resizable-autohide"),t._handles.show()}).mouseleave(function(){if(n.disabled)return;t.resizing||(e(this).addClass("ui-resizable-autohide"),t._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t=function(t){e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){t(this.element);var n=this.element;this.originalElement.css({position:n.css("position"),width:n.outerWidth(),height:n.outerHeight(),top:n.css("top"),left:n.css("left")}).insertAfter(n),n.remove()}return this.originalElement.css("resize",this.originalResizeStyle),t(this.originalElement),this},_mouseCapture:function(t){var n=!1;for(var r in this.handles)e(this.handles[r])[0]==t.target&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(t){var r=this.options,i=this.element.position(),s=this.element;this.resizing=!0,this.documentScroll={top:e(document).scrollTop(),left:e(document).scrollLeft()},(s.is(".ui-draggable")||/absolute/.test(s.css("position")))&&s.css({position:"absolute",top:i.top,left:i.left}),this._renderProxy();var o=n(this.helper.css("left")),u=n(this.helper.css("top"));r.containment&&(o+=e(r.containment).scrollLeft()||0,u+=e(r.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:o,top:u},this.size=this._helper?{width:s.outerWidth(),height:s.outerHeight()}:{width:s.width(),height:s.height()},this.originalSize=this._helper?{width:s.outerWidth(),height:s.outerHeight()}:{width:s.width(),height:s.height()},this.originalPosition={left:o,top:u},this.sizeDiff={width:s.outerWidth()-s.width(),height:s.outerHeight()-s.height()},this.originalMousePosition={left:t.pageX,top:t.pageY},this.aspectRatio=typeof r.aspectRatio=="number"?r.aspectRatio:this.originalSize.width/this.originalSize.height||1;var a=e(".ui-resizable-"+this.axis).css("cursor");return e("body").css("cursor",a=="auto"?this.axis+"-resize":a),s.addClass("ui-resizable-resizing"),this._propagate("start",t),!0},_mouseDrag:function(e){var t=this.helper,n=this.options,r={},i=this,s=this.originalMousePosition,o=this.axis,u=e.pageX-s.left||0,a=e.pageY-s.top||0,f=this._change[o];if(!f)return!1;var l=f.apply(this,[e,u,a]);this._updateVirtualBoundaries(e.shiftKey);if(this._aspectRatio||e.shiftKey)l=this._updateRatio(l,e);return l=this._respectSize(l,e),this._propagate("resize",e),t.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"}),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),this._updateCache(l),this._trigger("resize",e,this.ui()),!1},_mouseStop:function(t){this.resizing=!1;var n=this.options,r=this;if(this._helper){var i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),o=s&&e.ui.hasScroll(i[0],"left")?0:r.sizeDiff.height,u=s?0:r.sizeDiff.width,a={width:r.helper.width()-u,height:r.helper.height()-o},f=parseInt(r.element.css("left"),10)+(r.position.left-r.originalPosition.left)||null,l=parseInt(r.element.css("top"),10)+(r.position.top-r.originalPosition.top)||null;n.animate||this.element.css(e.extend(a,{top:l,left:f})),r.helper.height(r.size.height),r.helper.width(r.size.width),this._helper&&!n.animate&&this._proportionallyResize()}return e("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",t),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(e){var t=this.options,n,i,s,o,u;u={minWidth:r(t.minWidth)?t.minWidth:0,maxWidth:r(t.maxWidth)?t.maxWidth:Infinity,minHeight:r(t.minHeight)?t.minHeight:0,maxHeight:r(t.maxHeight)?t.maxHeight:Infinity};if(this._aspectRatio||e)n=u.minHeight*this.aspectRatio,s=u.minWidth/this.aspectRatio,i=u.maxHeight*this.aspectRatio,o=u.maxWidth/this.aspectRatio,n>u.minWidth&&(u.minWidth=n),s>u.minHeight&&(u.minHeight=s),i<u.maxWidth&&(u.maxWidth=i),o<u.maxHeight&&(u.maxHeight=o);this._vBoundaries=u},_updateCache:function(e){var t=this.options;this.offset=this.helper.offset(),r(e.left)&&(this.position.left=e.left),r(e.top)&&(this.position.top=e.top),r(e.height)&&(this.size.height=e.height),r(e.width)&&(this.size.width=e.width)},_updateRatio:function(e,t){var n=this.options,i=this.position,s=this.size,o=this.axis;return r(e.height)?e.width=e.height*this.aspectRatio:r(e.width)&&(e.height=e.width/this.aspectRatio),o=="sw"&&(e.left=i.left+(s.width-e.width),e.top=null),o=="nw"&&(e.top=i.top+(s.height-e.height),e.left=i.left+(s.width-e.width)),e},_respectSize:function(e,t){var n=this.helper,i=this._vBoundaries,s=this._aspectRatio||t.shiftKey,o=this.axis,u=r(e.width)&&i.maxWidth&&i.maxWidth<e.width,a=r(e.height)&&i.maxHeight&&i.maxHeight<e.height,f=r(e.width)&&i.minWidth&&i.minWidth>e.width,l=r(e.height)&&i.minHeight&&i.minHeight>e.height;f&&(e.width=i.minWidth),l&&(e.height=i.minHeight),u&&(e.width=i.maxWidth),a&&(e.height=i.maxHeight);var c=this.originalPosition.left+this.originalSize.width,h=this.position.top+this.size.height,p=/sw|nw|w/.test(o),d=/nw|ne|n/.test(o);f&&p&&(e.left=c-i.minWidth),u&&p&&(e.left=c-i.maxWidth),l&&d&&(e.top=h-i.minHeight),a&&d&&(e.top=h-i.maxHeight);var v=!e.width&&!e.height;return v&&!e.left&&e.top?e.top=null:v&&!e.top&&e.left&&(e.left=null),e},_proportionallyResize:function(){var t=this.options;if(!this._proportionallyResizeElements.length)return;var n=this.helper||this.element;for(var r=0;r<this._proportionallyResizeElements.length;r++){var i=this._proportionallyResizeElements[r];if(!this.borderDif){var s=[i.css("borderTopWidth"),i.css("borderRightWidth"),i.css("borderBottomWidth"),i.css("borderLeftWidth")],o=[i.css("paddingTop"),i.css("paddingRight"),i.css("paddingBottom"),i.css("paddingLeft")];this.borderDif=e.map(s,function(e,t){var n=parseInt(e,10)||0,r=parseInt(o[t],10)||0;return n+r})}i.css({height:n.height()-this.borderDif[0]-this.borderDif[2]||0,width:n.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var t=this.element,n=this.options;this.elementOffset=t.offset();if(this._helper){this.helper=this.helper||e('<div style="overflow:hidden;"></div>');var r=e.ui.ie6?1:0,i=e.ui.ie6?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+i,height:this.element.outerHeight()+i,position:"absolute",left:this.elementOffset.left-r+"px",top:this.elementOffset.top-r+"px",zIndex:++n.zIndex}),this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(e,t,n){return{width:this.originalSize.width+t}},w:function(e,t,n){var r=this.options,i=this.originalSize,s=this.originalPosition;return{left:s.left+t,width:i.width-t}},n:function(e,t,n){var r=this.options,i=this.originalSize,s=this.originalPosition;return{top:s.top+n,height:i.height-n}},s:function(e,t,n){return{height:this.originalSize.height+n}},se:function(t,n,r){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,n,r]))},sw:function(t,n,r){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,n,r]))},ne:function(t,n,r){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,n,r]))},nw:function(t,n,r){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,n,r]))}},_propagate:function(t,n){e.ui.plugin.call(this,t,[n,this.ui()]),t!="resize"&&this._trigger(t,n,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add("resizable","alsoResize",{start:function(t,n){var r=e(this).data("resizable"),i=r.options,s=function(t){e(t).each(function(){var t=e(this);t.data("resizable-alsoresize",{width:parseInt(t.width(),10),height:parseInt(t.height(),10),left:parseInt(t.css("left"),10),top:parseInt(t.css("top"),10)})})};typeof i.alsoResize=="object"&&!i.alsoResize.parentNode?i.alsoResize.length?(i.alsoResize=i.alsoResize[0],s(i.alsoResize)):e.each(i.alsoResize,function(e){s(e)}):s(i.alsoResize)},resize:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.originalSize,o=r.originalPosition,u={height:r.size.height-s.height||0,width:r.size.width-s.width||0,top:r.position.top-o.top||0,left:r.position.left-o.left||0},a=function(t,r){e(t).each(function(){var t=e(this),i=e(this).data("resizable-alsoresize"),s={},o=r&&r.length?r:t.parents(n.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(o,function(e,t){var n=(i[t]||0)+(u[t]||0);n&&n>=0&&(s[t]=n||null)}),t.css(s)})};typeof i.alsoResize=="object"&&!i.alsoResize.nodeType?e.each(i.alsoResize,function(e,t){a(e,t)}):a(i.alsoResize)},stop:function(t,n){e(this).removeData("resizable-alsoresize")}}),e.ui.plugin.add("resizable","animate",{stop:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r._proportionallyResizeElements,o=s.length&&/textarea/i.test(s[0].nodeName),u=o&&e.ui.hasScroll(s[0],"left")?0:r.sizeDiff.height,a=o?0:r.sizeDiff.width,f={width:r.size.width-a,height:r.size.height-u},l=parseInt(r.element.css("left"),10)+(r.position.left-r.originalPosition.left)||null,c=parseInt(r.element.css("top"),10)+(r.position.top-r.originalPosition.top)||null;r.element.animate(e.extend(f,c&&l?{top:c,left:l}:{}),{duration:i.animateDuration,easing:i.animateEasing,step:function(){var n={width:parseInt(r.element.css("width"),10),height:parseInt(r.element.css("height"),10),top:parseInt(r.element.css("top"),10),left:parseInt(r.element.css("left"),10)};s&&s.length&&e(s[0]).css({width:n.width,height:n.height}),r._updateCache(n),r._propagate("resize",t)}})}}),e.ui.plugin.add("resizable","containment",{start:function(t,r){var i=e(this).data("resizable"),s=i.options,o=i.element,u=s.containment,a=u instanceof e?u.get(0):/parent/.test(u)?o.parent().get(0):u;if(!a)return;i.containerElement=e(a);if(/document/.test(u)||u==document)i.containerOffset={left:0,top:0},i.containerPosition={left:0,top:0},i.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight};else{var f=e(a),l=[];e(["Top","Right","Left","Bottom"]).each(function(e,t){l[e]=n(f.css("padding"+t))}),i.containerOffset=f.offset(),i.containerPosition=f.position(),i.containerSize={height:f.innerHeight()-l[3],width:f.innerWidth()-l[1]};var c=i.containerOffset,h=i.containerSize.height,p=i.containerSize.width,d=e.ui.hasScroll(a,"left")?a.scrollWidth:p,v=e.ui.hasScroll(a)?a.scrollHeight:h;i.parentData={element:a,left:c.left,top:c.top,width:d,height:v}}},resize:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.containerSize,o=r.containerOffset,u=r.size,a=r.position,f=r._aspectRatio||t.shiftKey,l={top:0,left:0},c=r.containerElement;c[0]!=document&&/static/.test(c.css("position"))&&(l=o),a.left<(r._helper?o.left:0)&&(r.size.width=r.size.width+(r._helper?r.position.left-o.left:r.position.left-l.left),f&&(r.size.height=r.size.width/r.aspectRatio),r.position.left=i.helper?o.left:0),a.top<(r._helper?o.top:0)&&(r.size.height=r.size.height+(r._helper?r.position.top-o.top:r.position.top),f&&(r.size.width=r.size.height*r.aspectRatio),r.position.top=r._helper?o.top:0),r.offset.left=r.parentData.left+r.position.left,r.offset.top=r.parentData.top+r.position.top;var h=Math.abs((r._helper?r.offset.left-l.left:r.offset.left-l.left)+r.sizeDiff.width),p=Math.abs((r._helper?r.offset.top-l.top:r.offset.top-o.top)+r.sizeDiff.height),d=r.containerElement.get(0)==r.element.parent().get(0),v=/relative|absolute/.test(r.containerElement.css("position"));d&&v&&(h-=r.parentData.left),h+r.size.width>=r.parentData.width&&(r.size.width=r.parentData.width-h,f&&(r.size.height=r.size.width/r.aspectRatio)),p+r.size.height>=r.parentData.height&&(r.size.height=r.parentData.height-p,f&&(r.size.width=r.size.height*r.aspectRatio))},stop:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.position,o=r.containerOffset,u=r.containerPosition,a=r.containerElement,f=e(r.helper),l=f.offset(),c=f.outerWidth()-r.sizeDiff.width,h=f.outerHeight()-r.sizeDiff.height;r._helper&&!i.animate&&/relative/.test(a.css("position"))&&e(this).css({left:l.left-u.left-o.left,width:c,height:h}),r._helper&&!i.animate&&/static/.test(a.css("position"))&&e(this).css({left:l.left-u.left-o.left,width:c,height:h})}}),e.ui.plugin.add("resizable","ghost",{start:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.size;r.ghost=r.originalElement.clone(),r.ghost.css({opacity:.25,display:"block",position:"relative",height:s.height,width:s.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof i.ghost=="string"?i.ghost:""),r.ghost.appendTo(r.helper)},resize:function(t,n){var r=e(this).data("resizable"),i=r.options;r.ghost&&r.ghost.css({position:"relative",height:r.size.height,width:r.size.width})},stop:function(t,n){var r=e(this).data("resizable"),i=r.options;r.ghost&&r.helper&&r.helper.get(0).removeChild(r.ghost.get(0))}}),e.ui.plugin.add("resizable","grid",{resize:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.size,o=r.originalSize,u=r.originalPosition,a=r.axis,f=i._aspectRatio||t.shiftKey;i.grid=typeof i.grid=="number"?[i.grid,i.grid]:i.grid;var l=Math.round((s.width-o.width)/(i.grid[0]||1))*(i.grid[0]||1),c=Math.round((s.height-o.height)/(i.grid[1]||1))*(i.grid[1]||1);/^(se|s|e)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c):/^(ne)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c,r.position.top=u.top-c):/^(sw)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c,r.position.left=u.left-l):(r.size.width=o.width+l,r.size.height=o.height+c,r.position.top=u.top-c,r.position.left=u.left-l)}});var n=function(e){return parseInt(e,10)||0},r=function(e){return!isNaN(parseInt(e,10))}})(jQuery);(function(e,t){e.widget("ui.selectable",e.ui.mouse,{version:"1.9.2",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch"},_create:function(){var t=this;this.element.addClass("ui-selectable"),this.dragged=!1;var n;this.refresh=function(){n=e(t.options.filter,t.element[0]),n.addClass("ui-selectee"),n.each(function(){var t=e(this),n=t.offset();e.data(this,"selectable-item",{element:this,$element:t,left:n.left,top:n.top,right:n.left+t.outerWidth(),bottom:n.top+t.outerHeight(),startselected:!1,selected:t.hasClass("ui-selected"),selecting:t.hasClass("ui-selecting"),unselecting:t.hasClass("ui-unselecting")})})},this.refresh(),this.selectees=n.addClass("ui-selectee"),this._mouseInit(),this.helper=e("<div class='ui-selectable-helper'></div>")},_destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item"),this.element.removeClass("ui-selectable ui-selectable-disabled"),this._mouseDestroy()},_mouseStart:function(t){var n=this;this.opos=[t.pageX,t.pageY];if(this.options.disabled)return;var r=this.options;this.selectees=e(r.filter,this.element[0]),this._trigger("start",t),e(r.appendTo).append(this.helper),this.helper.css({left:t.clientX,top:t.clientY,width:0,height:0}),r.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var r=e.data(this,"selectable-item");r.startselected=!0,!t.metaKey&&!t.ctrlKey&&(r.$element.removeClass("ui-selected"),r.selected=!1,r.$element.addClass("ui-unselecting"),r.unselecting=!0,n._trigger("unselecting",t,{unselecting:r.element}))}),e(t.target).parents().andSelf().each(function(){var r=e.data(this,"selectable-item");if(r){var i=!t.metaKey&&!t.ctrlKey||!r.$element.hasClass("ui-selected");return r.$element.removeClass(i?"ui-unselecting":"ui-selected").addClass(i?"ui-selecting":"ui-unselecting"),r.unselecting=!i,r.selecting=i,r.selected=i,i?n._trigger("selecting",t,{selecting:r.element}):n._trigger("unselecting",t,{unselecting:r.element}),!1}})},_mouseDrag:function(t){var n=this;this.dragged=!0;if(this.options.disabled)return;var r=this.options,i=this.opos[0],s=this.opos[1],o=t.pageX,u=t.pageY;if(i>o){var a=o;o=i,i=a}if(s>u){var a=u;u=s,s=a}return this.helper.css({left:i,top:s,width:o-i,height:u-s}),this.selectees.each(function(){var a=e.data(this,"selectable-item");if(!a||a.element==n.element[0])return;var f=!1;r.tolerance=="touch"?f=!(a.left>o||a.right<i||a.top>u||a.bottom<s):r.tolerance=="fit"&&(f=a.left>i&&a.right<o&&a.top>s&&a.bottom<u),f?(a.selected&&(a.$element.removeClass("ui-selected"),a.selected=!1),a.unselecting&&(a.$element.removeClass("ui-unselecting"),a.unselecting=!1),a.selecting||(a.$element.addClass("ui-selecting"),a.selecting=!0,n._trigger("selecting",t,{selecting:a.element}))):(a.selecting&&((t.metaKey||t.ctrlKey)&&a.startselected?(a.$element.removeClass("ui-selecting"),a.selecting=!1,a.$element.addClass("ui-selected"),a.selected=!0):(a.$element.removeClass("ui-selecting"),a.selecting=!1,a.startselected&&(a.$element.addClass("ui-unselecting"),a.unselecting=!0),n._trigger("unselecting",t,{unselecting:a.element}))),a.selected&&!t.metaKey&&!t.ctrlKey&&!a.startselected&&(a.$element.removeClass("ui-selected"),a.selected=!1,a.$element.addClass("ui-unselecting"),a.unselecting=!0,n._trigger("unselecting",t,{unselecting:a.element})))}),!1},_mouseStop:function(t){var n=this;this.dragged=!1;var r=this.options;return e(".ui-unselecting",this.element[0]).each(function(){var r=e.data(this,"selectable-item");r.$element.removeClass("ui-unselecting"),r.unselecting=!1,r.startselected=!1,n._trigger("unselected",t,{unselected:r.element})}),e(".ui-selecting",this.element[0]).each(function(){var r=e.data(this,"selectable-item");r.$element.removeClass("ui-selecting").addClass("ui-selected"),r.selecting=!1,r.selected=!0,r.startselected=!0,n._trigger("selected",t,{selected:r.element})}),this._trigger("stop",t),this.helper.remove(),!1}})})(jQuery);(function(e,t){e.widget("ui.sortable",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3},_create:function(){var e=this.options;this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.floating=this.items.length?e.axis==="x"||/left|right/.test(this.items[0].item.css("float"))||/inline|table-cell/.test(this.items[0].item.css("display")):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled"),this._mouseDestroy();for(var e=this.items.length-1;e>=0;e--)this.items[e].item.removeData(this.widgetName+"-item");return this},_setOption:function(t,n){t==="disabled"?(this.options[t]=n,this.widget().toggleClass("ui-sortable-disabled",!!n)):e.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(t,n){var r=this;if(this.reverting)return!1;if(this.options.disabled||this.options.type=="static")return!1;this._refreshItems(t);var i=null,s=e(t.target).parents().each(function(){if(e.data(this,r.widgetName+"-item")==r)return i=e(this),!1});e.data(t.target,r.widgetName+"-item")==r&&(i=e(t.target));if(!i)return!1;if(this.options.handle&&!n){var o=!1;e(this.options.handle,i).find("*").andSelf().each(function(){this==t.target&&(o=!0)});if(!o)return!1}return this.currentItem=i,this._removeCurrentsFromItems(),!0},_mouseStart:function(t,n,r){var i=this.options;this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(t),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!=this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),i.containment&&this._setContainment(),i.cursor&&(e("body").css("cursor")&&(this._storedCursor=e("body").css("cursor")),e("body").css("cursor",i.cursor)),i.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",i.opacity)),i.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",i.zIndex)),this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",t,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions();if(!r)for(var s=this.containers.length-1;s>=0;s--)this.containers[s]._trigger("activate",t,this._uiHash(this));return e.ui.ddmanager&&(e.ui.ddmanager.current=this),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(t),!0},_mouseDrag:function(t){this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs);if(this.options.scroll){var n=this.options,r=!1;this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-t.pageY<n.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+n.scrollSpeed:t.pageY-this.overflowOffset.top<n.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-n.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-t.pageX<n.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+n.scrollSpeed:t.pageX-this.overflowOffset.left<n.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-n.scrollSpeed)):(t.pageY-e(document).scrollTop()<n.scrollSensitivity?r=e(document).scrollTop(e(document).scrollTop()-n.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<n.scrollSensitivity&&(r=e(document).scrollTop(e(document).scrollTop()+n.scrollSpeed)),t.pageX-e(document).scrollLeft()<n.scrollSensitivity?r=e(document).scrollLeft(e(document).scrollLeft()-n.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<n.scrollSensitivity&&(r=e(document).scrollLeft(e(document).scrollLeft()+n.scrollSpeed))),r!==!1&&e.ui.ddmanager&&!n.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t)}this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";for(var i=this.items.length-1;i>=0;i--){var s=this.items[i],o=s.item[0],u=this._intersectsWithPointer(s);if(!u)continue;if(s.instance!==this.currentContainer)continue;if(o!=this.currentItem[0]&&this.placeholder[u==1?"next":"prev"]()[0]!=o&&!e.contains(this.placeholder[0],o)&&(this.options.type=="semi-dynamic"?!e.contains(this.element[0],o):!0)){this.direction=u==1?"down":"up";if(this.options.tolerance!="pointer"&&!this._intersectsWithSides(s))break;this._rearrange(t,s),this._trigger("change",t,this._uiHash());break}}return this._contactContainers(t),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),this._trigger("sort",t,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(t,n){if(!t)return;e.ui.ddmanager&&!this.options.dropBehaviour&&e.ui.ddmanager.drop(this,t);if(this.options.revert){var r=this,i=this.placeholder.offset();this.reverting=!0,e(this.helper).animate({left:i.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollLeft),top:i.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){r._clear(t)})}else this._clear(t,n);return!1},cancel:function(){if(this.dragging){this._mouseUp({target:null}),this.options.helper=="original"?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var t=this.containers.length-1;t>=0;t--)this.containers[t]._trigger("deactivate",null,this._uiHash(this)),this.containers[t].containerCache.over&&(this.containers[t]._trigger("out",null,this._uiHash(this)),this.containers[t].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.options.helper!="original"&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),e.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?e(this.domPosition.prev).after(this.currentItem):e(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},e(n).each(function(){var n=(e(t.item||this).attr(t.attribute||"id")||"").match(t.expression||/(.+)[-=_](.+)/);n&&r.push((t.key||n[1]+"[]")+"="+(t.key&&t.expression?n[1]:n[2]))}),!r.length&&t.key&&r.push(t.key+"="),r.join("&")},toArray:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},n.each(function(){r.push(e(t.item||this).attr(t.attribute||"id")||"")}),r},_intersectsWith:function(e){var t=this.positionAbs.left,n=t+this.helperProportions.width,r=this.positionAbs.top,i=r+this.helperProportions.height,s=e.left,o=s+e.width,u=e.top,a=u+e.height,f=this.offset.click.top,l=this.offset.click.left,c=r+f>u&&r+f<a&&t+l>s&&t+l<o;return this.options.tolerance=="pointer"||this.options.forcePointerForContainers||this.options.tolerance!="pointer"&&this.helperProportions[this.floating?"width":"height"]>e[this.floating?"width":"height"]?c:s<t+this.helperProportions.width/2&&n-this.helperProportions.width/2<o&&u<r+this.helperProportions.height/2&&i-this.helperProportions.height/2<a},_intersectsWithPointer:function(t){var n=this.options.axis==="x"||e.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),r=this.options.axis==="y"||e.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),i=n&&r,s=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return i?this.floating?o&&o=="right"||s=="down"?2:1:s&&(s=="down"?2:1):!1},_intersectsWithSides:function(t){var n=e.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),r=e.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),i=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?s=="right"&&r||s=="left"&&!r:i&&(i=="down"&&n||i=="up"&&!n)},_getDragVerticalDirection:function(){var e=this.positionAbs.top-this.lastPositionAbs.top;return e!=0&&(e>0?"down":"up")},_getDragHorizontalDirection:function(){var e=this.positionAbs.left-this.lastPositionAbs.left;return e!=0&&(e>0?"right":"left")},refresh:function(e){return this._refreshItems(e),this.refreshPositions(),this},_connectWith:function(){var e=this.options;return e.connectWith.constructor==String?[e.connectWith]:e.connectWith},_getItemsAsjQuery:function(t){var n=[],r=[],i=this._connectWith();if(i&&t)for(var s=i.length-1;s>=0;s--){var o=e(i[s]);for(var u=o.length-1;u>=0;u--){var a=e.data(o[u],this.widgetName);a&&a!=this&&!a.options.disabled&&r.push([e.isFunction(a.options.items)?a.options.items.call(a.element):e(a.options.items,a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),a])}}r.push([e.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):e(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]);for(var s=r.length-1;s>=0;s--)r[s][0].each(function(){n.push(this)});return e(n)},_removeCurrentsFromItems:function(){var t=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=e.grep(this.items,function(e){for(var n=0;n<t.length;n++)if(t[n]==e.item[0])return!1;return!0})},_refreshItems:function(t){this.items=[],this.containers=[this];var n=this.items,r=[[e.isFunction(this.options.items)?this.options.items.call(this.element[0],t,{item:this.currentItem}):e(this.options.items,this.element),this]],i=this._connectWith();if(i&&this.ready)for(var s=i.length-1;s>=0;s--){var o=e(i[s]);for(var u=o.length-1;u>=0;u--){var a=e.data(o[u],this.widgetName);a&&a!=this&&!a.options.disabled&&(r.push([e.isFunction(a.options.items)?a.options.items.call(a.element[0],t,{item:this.currentItem}):e(a.options.items,a.element),a]),this.containers.push(a))}}for(var s=r.length-1;s>=0;s--){var f=r[s][1],l=r[s][0];for(var u=0,c=l.length;u<c;u++){var h=e(l[u]);h.data(this.widgetName+"-item",f),n.push({item:h,instance:f,width:0,height:0,left:0,top:0})}}},refreshPositions:function(t){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());for(var n=this.items.length-1;n>=0;n--){var r=this.items[n];if(r.instance!=this.currentContainer&&this.currentContainer&&r.item[0]!=this.currentItem[0])continue;var i=this.options.toleranceElement?e(this.options.toleranceElement,r.item):r.item;t||(r.width=i.outerWidth(),r.height=i.outerHeight());var s=i.offset();r.left=s.left,r.top=s.top}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(var n=this.containers.length-1;n>=0;n--){var s=this.containers[n].element.offset();this.containers[n].containerCache.left=s.left,this.containers[n].containerCache.top=s.top,this.containers[n].containerCache.width=this.containers[n].element.outerWidth(),this.containers[n].containerCache.height=this.containers[n].element.outerHeight()}return this},_createPlaceholder:function(t){t=t||this;var n=t.options;if(!n.placeholder||n.placeholder.constructor==String){var r=n.placeholder;n.placeholder={element:function(){var n=e(document.createElement(t.currentItem[0].nodeName)).addClass(r||t.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];return r||(n.style.visibility="hidden"),n},update:function(e,i){if(r&&!n.forcePlaceholderSize)return;i.height()||i.height(t.currentItem.innerHeight()-parseInt(t.currentItem.css("paddingTop")||0,10)-parseInt(t.currentItem.css("paddingBottom")||0,10)),i.width()||i.width(t.currentItem.innerWidth()-parseInt(t.currentItem.css("paddingLeft")||0,10)-parseInt(t.currentItem.css("paddingRight")||0,10))}}}t.placeholder=e(n.placeholder.element.call(t.element,t.currentItem)),t.currentItem.after(t.placeholder),n.placeholder.update(t,t.placeholder)},_contactContainers:function(t){var n=null,r=null;for(var i=this.containers.length-1;i>=0;i--){if(e.contains(this.currentItem[0],this.containers[i].element[0]))continue;if(this._intersectsWith(this.containers[i].containerCache)){if(n&&e.contains(this.containers[i].element[0],n.element[0]))continue;n=this.containers[i],r=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",t,this._uiHash(this)),this.containers[i].containerCache.over=0)}if(!n)return;if(this.containers.length===1)this.containers[r]._trigger("over",t,this._uiHash(this)),this.containers[r].containerCache.over=1;else{var s=1e4,o=null,u=this.containers[r].floating?"left":"top",a=this.containers[r].floating?"width":"height",f=this.positionAbs[u]+this.offset.click[u];for(var l=this.items.length-1;l>=0;l--){if(!e.contains(this.containers[r].element[0],this.items[l].item[0]))continue;if(this.items[l].item[0]==this.currentItem[0])continue;var c=this.items[l].item.offset()[u],h=!1;Math.abs(c-f)>Math.abs(c+this.items[l][a]-f)&&(h=!0,c+=this.items[l][a]),Math.abs(c-f)<s&&(s=Math.abs(c-f),o=this.items[l],this.direction=h?"up":"down")}if(!o&&!this.options.dropOnEmpty)return;this.currentContainer=this.containers[r],o?this._rearrange(t,o,null,!0):this._rearrange(t,null,this.containers[r].element,!0),this._trigger("change",t,this._uiHash()),this.containers[r]._trigger("change",t,this._uiHash(this)),this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[r]._trigger("over",t,this._uiHash(this)),this.containers[r].containerCache.over=1}},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t,this.currentItem])):n.helper=="clone"?this.currentItem.clone():this.currentItem;return r.parents("body").length||e(n.appendTo!="parent"?n.appendTo:this.currentItem[0].parentNode)[0].appendChild(r[0]),r[0]==this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(r[0].style.width==""||n.forceHelperSize)&&r.width(this.currentItem.width()),(r[0].style.height==""||n.forceHelperSize)&&r.height(this.currentItem.height()),r},_adjustOffsetFromHelper:function(t){typeof t=="string"&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&e.ui.ie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var e=this.currentItem.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;t.containment=="parent"&&(t.containment=this.helper[0].parentNode);if(t.containment=="document"||t.containment=="window")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,e(t.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(e(t.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(t.containment)){var n=e(t.containment)[0],r=e(t.containment).offset(),i=e(n).css("overflow")!="hidden";this.containment=[r.left+(parseInt(e(n).css("borderLeftWidth"),10)||0)+(parseInt(e(n).css("paddingLeft"),10)||0)-this.margins.left,r.top+(parseInt(e(n).css("borderTopWidth"),10)||0)+(parseInt(e(n).css("paddingTop"),10)||0)-this.margins.top,r.left+(i?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(e(n).css("borderLeftWidth"),10)||0)-(parseInt(e(n).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,r.top+(i?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(e(n).css("borderTopWidth"),10)||0)-(parseInt(e(n).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(t,n){n||(n=this.position);var r=t=="absolute"?1:-1,i=this.options,s=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(s[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():o?0:s.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():o?0:s.scrollLeft())*r}},_generatePosition:function(t){var n=this.options,r=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,i=/(html|body)/i.test(r[0].tagName);this.cssPosition=="relative"&&(this.scrollParent[0]==document||this.scrollParent[0]==this.offsetParent[0])&&(this.offset.relative=this._getRelativeOffset());var s=t.pageX,o=t.pageY;if(this.originalPosition){this.containment&&(t.pageX-this.offset.click.left<this.containment[0]&&(s=this.containment[0]+this.offset.click.left),t.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),t.pageX-this.offset.click.left>this.containment[2]&&(s=this.containment[2]+this.offset.click.left),t.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top));if(n.grid){var u=this.originalPageY+Math.round((o-this.originalPageY)/n.grid[1])*n.grid[1];o=this.containment?u-this.offset.click.top<this.containment[1]||u-this.offset.click.top>this.containment[3]?u-this.offset.click.top<this.containment[1]?u+n.grid[1]:u-n.grid[1]:u:u;var a=this.originalPageX+Math.round((s-this.originalPageX)/n.grid[0])*n.grid[0];s=this.containment?a-this.offset.click.left<this.containment[0]||a-this.offset.click.left>this.containment[2]?a-this.offset.click.left<this.containment[0]?a+n.grid[0]:a-n.grid[0]:a:a}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():i?0:r.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():i?0:r.scrollLeft())}},_rearrange:function(e,t,n,r){n?n[0].appendChild(this.placeholder[0]):t.item[0].parentNode.insertBefore(this.placeholder[0],this.direction=="down"?t.item[0]:t.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var i=this.counter;this._delay(function(){i==this.counter&&this.refreshPositions(!r)})},_clear:function(t,n){this.reverting=!1;var r=[];!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var i in this._storedCSS)if(this._storedCSS[i]=="auto"||this._storedCSS[i]=="static")this._storedCSS[i]="";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();this.fromOutside&&!n&&r.push(function(e){this._trigger("receive",e,this._uiHash(this.fromOutside))}),(this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!n&&r.push(function(e){this._trigger("update",e,this._uiHash())}),this!==this.currentContainer&&(n||(r.push(function(e){this._trigger("remove",e,this._uiHash())}),r.push(function(e){return function(t){e._trigger("receive",t,this._uiHash(this))}}.call(this,this.currentContainer)),r.push(function(e){return function(t){e._trigger("update",t,this._uiHash(this))}}.call(this,this.currentContainer))));for(var i=this.containers.length-1;i>=0;i--)n||r.push(function(e){return function(t){e._trigger("deactivate",t,this._uiHash(this))}}.call(this,this.containers[i])),this.containers[i].containerCache.over&&(r.push(function(e){return function(t){e._trigger("out",t,this._uiHash(this))}}.call(this,this.containers[i])),this.containers[i].containerCache.over=0);this._storedCursor&&e("body").css("cursor",this._storedCursor),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex",this._storedZIndex=="auto"?"":this._storedZIndex),this.dragging=!1;if(this.cancelHelperRemoval){if(!n){this._trigger("beforeStop",t,this._uiHash());for(var i=0;i<r.length;i++)r[i].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!1}n||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!=this.currentItem[0]&&this.helper.remove(),this.helper=null;if(!n){for(var i=0;i<r.length;i++)r[i].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){e.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(t){var n=t||this;return{helper:n.helper,placeholder:n.placeholder||e([]),position:n.position,originalPosition:n.originalPosition,offset:n.positionAbs,item:n.currentItem,sender:t?t.element:null}}})})(jQuery);(function(e,t){var n=0,r={},i={};r.height=r.paddingTop=r.paddingBottom=r.borderTopWidth=r.borderBottomWidth="hide",i.height=i.paddingTop=i.paddingBottom=i.borderTopWidth=i.borderBottomWidth="show",e.widget("ui.accordion",{version:"1.9.2",options:{active:0,animate:{},collapsible:!1,event:"click",header:"> li > :first-child,> :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},_create:function(){var t=this.accordionId="ui-accordion-"+(this.element.attr("id")||++n),r=this.options;this.prevShow=this.prevHide=e(),this.element.addClass("ui-accordion ui-widget ui-helper-reset"),this.headers=this.element.find(r.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"),this._hoverable(this.headers),this._focusable(this.headers),this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").hide(),!r.collapsible&&(r.active===!1||r.active==null)&&(r.active=0),r.active<0&&(r.active+=this.headers.length),this.active=this._findActive(r.active).addClass("ui-accordion-header-active ui-state-active").toggleClass("ui-corner-all ui-corner-top"),this.active.next().addClass("ui-accordion-content-active").show(),this._createIcons(),this.refresh(),this.element.attr("role","tablist"),this.headers.attr("role","tab").each(function(n){var r=e(this),i=r.attr("id"),s=r.next(),o=s.attr("id");i||(i=t+"-header-"+n,r.attr("id",i)),o||(o=t+"-panel-"+n,s.attr("id",o)),r.attr("aria-controls",o),s.attr("aria-labelledby",i)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false",tabIndex:-1}).next().attr({"aria-expanded":"false","aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true",tabIndex:0}).next().attr({"aria-expanded":"true","aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._on(this.headers,{keydown:"_keydown"}),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._setupEvents(r.event)},_getCreateEventData:function(){return{header:this.active,content:this.active.length?this.active.next():e()}},_createIcons:function(){var t=this.options.icons;t&&(e("<span>").addClass("ui-accordion-header-icon ui-icon "+t.header).prependTo(this.headers),this.active.children(".ui-accordion-header-icon").removeClass(t.header).addClass(t.activeHeader),this.headers.addClass("ui-accordion-icons"))},_destroyIcons:function(){this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()},_destroy:function(){var e;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")}),this._destroyIcons(),e=this.headers.next().css("display","").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")}),this.options.heightStyle!=="content"&&e.css("height","")},_setOption:function(e,t){if(e==="active"){this._activate(t);return}e==="event"&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(t)),this._super(e,t),e==="collapsible"&&!t&&this.options.active===!1&&this._activate(0),e==="icons"&&(this._destroyIcons(),t&&this._createIcons()),e==="disabled"&&this.headers.add(this.headers.next()).toggleClass("ui-state-disabled",!!t)},_keydown:function(t){if(t.altKey||t.ctrlKey)return;var n=e.ui.keyCode,r=this.headers.length,i=this.headers.index(t.target),s=!1;switch(t.keyCode){case n.RIGHT:case n.DOWN:s=this.headers[(i+1)%r];break;case n.LEFT:case n.UP:s=this.headers[(i-1+r)%r];break;case n.SPACE:case n.ENTER:this._eventHandler(t);break;case n.HOME:s=this.headers[0];break;case n.END:s=this.headers[r-1]}s&&(e(t.target).attr("tabIndex",-1),e(s).attr("tabIndex",0),s.focus(),t.preventDefault())},_panelKeyDown:function(t){t.keyCode===e.ui.keyCode.UP&&t.ctrlKey&&e(t.currentTarget).prev().focus()},refresh:function(){var t,n,r=this.options.heightStyle,i=this.element.parent();r==="fill"?(e.support.minHeight||(n=i.css("overflow"),i.css("overflow","hidden")),t=i.height(),this.element.siblings(":visible").each(function(){var n=e(this),r=n.css("position");if(r==="absolute"||r==="fixed")return;t-=n.outerHeight(!0)}),n&&i.css("overflow",n),this.headers.each(function(){t-=e(this).outerHeight(!0)}),this.headers.next().each(function(){e(this).height(Math.max(0,t-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):r==="auto"&&(t=0,this.headers.next().each(function(){t=Math.max(t,e(this).css("height","").height())}).height(t))},_activate:function(t){var n=this._findActive(t)[0];if(n===this.active[0])return;n=n||this.active[0],this._eventHandler({target:n,currentTarget:n,preventDefault:e.noop})},_findActive:function(t){return typeof t=="number"?this.headers.eq(t):e()},_setupEvents:function(t){var n={};if(!t)return;e.each(t.split(" "),function(e,t){n[t]="_eventHandler"}),this._on(this.headers,n)},_eventHandler:function(t){var n=this.options,r=this.active,i=e(t.currentTarget),s=i[0]===r[0],o=s&&n.collapsible,u=o?e():i.next(),a=r.next(),f={oldHeader:r,oldPanel:a,newHeader:o?e():i,newPanel:u};t.preventDefault();if(s&&!n.collapsible||this._trigger("beforeActivate",t,f)===!1)return;n.active=o?!1:this.headers.index(i),this.active=s?e():i,this._toggle(f),r.removeClass("ui-accordion-header-active ui-state-active"),n.icons&&r.children(".ui-accordion-header-icon").removeClass(n.icons.activeHeader).addClass(n.icons.header),s||(i.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),n.icons&&i.children(".ui-accordion-header-icon").removeClass(n.icons.header).addClass(n.icons.activeHeader),i.next().addClass("ui-accordion-content-active"))},_toggle:function(t){var n=t.newPanel,r=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=n,this.prevHide=r,this.options.animate?this._animate(n,r,t):(r.hide(),n.show(),this._toggleComplete(t)),r.attr({"aria-expanded":"false","aria-hidden":"true"}),r.prev().attr("aria-selected","false"),n.length&&r.length?r.prev().attr("tabIndex",-1):n.length&&this.headers.filter(function(){return e(this).attr("tabIndex")===0}).attr("tabIndex",-1),n.attr({"aria-expanded":"true","aria-hidden":"false"}).prev().attr({"aria-selected":"true",tabIndex:0})},_animate:function(e,t,n){var s,o,u,a=this,f=0,l=e.length&&(!t.length||e.index()<t.index()),c=this.options.animate||{},h=l&&c.down||c,p=function(){a._toggleComplete(n)};typeof h=="number"&&(u=h),typeof h=="string"&&(o=h),o=o||h.easing||c.easing,u=u||h.duration||c.duration;if(!t.length)return e.animate(i,u,o,p);if(!e.length)return t.animate(r,u,o,p);s=e.show().outerHeight(),t.animate(r,{duration:u,easing:o,step:function(e,t){t.now=Math.round(e)}}),e.hide().animate(i,{duration:u,easing:o,complete:p,step:function(e,n){n.now=Math.round(e),n.prop!=="height"?f+=n.now:a.options.heightStyle!=="content"&&(n.now=Math.round(s-t.outerHeight()-f),f=0)}})},_toggleComplete:function(e){var t=e.oldPanel;t.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"),t.length&&(t.parent()[0].className=t.parent()[0].className),this._trigger("activate",null,e)}}),e.uiBackCompat!==!1&&(function(e,t){e.extend(t.options,{navigation:!1,navigationFilter:function(){return this.href.toLowerCase()===location.href.toLowerCase()}});var n=t._create;t._create=function(){if(this.options.navigation){var t=this,r=this.element.find(this.options.header),i=r.next(),s=r.add(i).find("a").filter(this.options.navigationFilter)[0];s&&r.add(i).each(function(n){if(e.contains(this,s))return t.options.active=Math.floor(n/2),!1})}n.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{heightStyle:null,autoHeight:!0,clearStyle:!1,fillSpace:!1});var n=t._create,r=t._setOption;e.extend(t,{_create:function(){this.options.heightStyle=this.options.heightStyle||this._mergeHeightStyle(),n.call(this)},_setOption:function(e){if(e==="autoHeight"||e==="clearStyle"||e==="fillSpace")this.options.heightStyle=this._mergeHeightStyle();r.apply(this,arguments)},_mergeHeightStyle:function(){var e=this.options;if(e.fillSpace)return"fill";if(e.clearStyle)return"content";if(e.autoHeight)return"auto"}})}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options.icons,{activeHeader:null,headerSelected:"ui-icon-triangle-1-s"});var n=t._createIcons;t._createIcons=function(){this.options.icons&&(this.options.icons.activeHeader=this.options.icons.activeHeader||this.options.icons.headerSelected),n.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){t.activate=t._activate;var n=t._findActive;t._findActive=function(e){return e===-1&&(e=!1),e&&typeof e!="number"&&(e=this.headers.index(this.headers.filter(e)),e===-1&&(e=!1)),n.call(this,e)}}(jQuery,jQuery.ui.accordion.prototype),jQuery.ui.accordion.prototype.resize=jQuery.ui.accordion.prototype.refresh,function(e,t){e.extend(t.options,{change:null,changestart:null});var n=t._trigger;t._trigger=function(e,t,r){var i=n.apply(this,arguments);return i?(e==="beforeActivate"?i=n.call(this,"changestart",t,{oldHeader:r.oldHeader,oldContent:r.oldPanel,newHeader:r.newHeader,newContent:r.newPanel}):e==="activate"&&(i=n.call(this,"change",t,{oldHeader:r.oldHeader,oldContent:r.oldPanel,newHeader:r.newHeader,newContent:r.newPanel})),i):!1}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{animate:null,animated:"slide"});var n=t._create;t._create=function(){var e=this.options;e.animate===null&&(e.animated?e.animated==="slide"?e.animate=300:e.animated==="bounceslide"?e.animate={duration:200,down:{easing:"easeOutBounce",duration:1e3}}:e.animate=e.animated:e.animate=!1),n.call(this)}}(jQuery,jQuery.ui.accordion.prototype))})(jQuery);(function(e,t){var n=0;e.widget("ui.autocomplete",{version:"1.9.2",defaultElement:"<input>",options:{appendTo:"body",autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},pending:0,_create:function(){var t,n,r;this.isMultiLine=this._isMultiLine(),this.valueMethod=this.element[this.element.is("input,textarea")?"val":"text"],this.isNewMenu=!0,this.element.addClass("ui-autocomplete-input").attr("autocomplete","off"),this._on(this.element,{keydown:function(i){if(this.element.prop("readOnly")){t=!0,r=!0,n=!0;return}t=!1,r=!1,n=!1;var s=e.ui.keyCode;switch(i.keyCode){case s.PAGE_UP:t=!0,this._move("previousPage",i);break;case s.PAGE_DOWN:t=!0,this._move("nextPage",i);break;case s.UP:t=!0,this._keyEvent("previous",i);break;case s.DOWN:t=!0,this._keyEvent("next",i);break;case s.ENTER:case s.NUMPAD_ENTER:this.menu.active&&(t=!0,i.preventDefault(),this.menu.select(i));break;case s.TAB:this.menu.active&&this.menu.select(i);break;case s.ESCAPE:this.menu.element.is(":visible")&&(this._value(this.term),this.close(i),i.preventDefault());break;default:n=!0,this._searchTimeout(i)}},keypress:function(r){if(t){t=!1,r.preventDefault();return}if(n)return;var i=e.ui.keyCode;switch(r.keyCode){case i.PAGE_UP:this._move("previousPage",r);break;case i.PAGE_DOWN:this._move("nextPage",r);break;case i.UP:this._keyEvent("previous",r);break;case i.DOWN:this._keyEvent("next",r)}},input:function(e){if(r){r=!1,e.preventDefault();return}this._searchTimeout(e)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){if(this.cancelBlur){delete this.cancelBlur;return}clearTimeout(this.searching),this.close(e),this._change(e)}}),this._initSource(),this.menu=e("<ul>").addClass("ui-autocomplete").appendTo(this.document.find(this.options.appendTo||"body")[0]).menu({input:e(),role:null}).zIndex(this.element.zIndex()+1).hide().data("menu"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var n=this.menu.element[0];e(t.target).closest(".ui-menu-item").length||this._delay(function(){var t=this;this.document.one("mousedown",function(r){r.target!==t.element[0]&&r.target!==n&&!e.contains(n,r.target)&&t.close()})})},menufocus:function(t,n){if(this.isNewMenu){this.isNewMenu=!1;if(t.originalEvent&&/^mouse/.test(t.originalEvent.type)){this.menu.blur(),this.document.one("mousemove",function(){e(t.target).trigger(t.originalEvent)});return}}var r=n.item.data("ui-autocomplete-item")||n.item.data("item.autocomplete");!1!==this._trigger("focus",t,{item:r})?t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(r.value):this.liveRegion.text(r.value)},menuselect:function(e,t){var n=t.item.data("ui-autocomplete-item")||t.item.data("item.autocomplete"),r=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=r,this._delay(function(){this.previous=r,this.selectedItem=n})),!1!==this._trigger("select",e,{item:n})&&this._value(n.value),this.term=this._value(),this.close(e),this.selectedItem=n}}),this.liveRegion=e("<span>",{role:"status","aria-live":"polite"}).addClass("ui-helper-hidden-accessible").insertAfter(this.element),e.fn.bgiframe&&this.menu.element.bgiframe(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),e==="source"&&this._initSource(),e==="appendTo"&&this.menu.element.appendTo(this.document.find(t||"body")[0]),e==="disabled"&&t&&this.xhr&&this.xhr.abort()},_isMultiLine:function(){return this.element.is("textarea")?!0:this.element.is("input")?!1:this.element.prop("isContentEditable")},_initSource:function(){var t,n,r=this;e.isArray(this.options.source)?(t=this.options.source,this.source=function(n,r){r(e.ui.autocomplete.filter(t,n.term))}):typeof this.options.source=="string"?(n=this.options.source,this.source=function(t,i){r.xhr&&r.xhr.abort(),r.xhr=e.ajax({url:n,data:t,dataType:"json",success:function(e){i(e)},error:function(){i([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,e))},this.options.delay)},search:function(e,t){e=e!=null?e:this._value(),this.term=this._value();if(e.length<this.options.minLength)return this.close(t);if(this._trigger("search",t)===!1)return;return this._search(e)},_search:function(e){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var e=this,t=++n;return function(r){t===n&&e.__response(r),e.pending--,e.pending||e.element.removeClass("ui-autocomplete-loading")}},__response:function(e){e&&(e=this._normalize(e)),this._trigger("response",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger("open")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",e))},_change:function(e){this.previous!==this._value()&&this._trigger("change",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,function(t){return typeof t=="string"?{label:t,value:t}:e.extend({label:t.label||t.value,value:t.value||t.label},t)})},_suggest:function(t){var n=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(n,t),this.menu.refresh(),n.show(),this._resizeMenu(),n.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,n){var r=this;e.each(n,function(e,n){r._renderItemData(t,n)})},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-autocomplete-item",t)},_renderItem:function(t,n){return e("<li>").append(e("<a>").text(n.label)).appendTo(t)},_move:function(e,t){if(!this.menu.element.is(":visible")){this.search(null,t);return}if(this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)){this._value(this.term),this.menu.blur();return}this.menu[e](t)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){if(!this.isMultiLine||this.menu.element.is(":visible"))this._move(e,t),t.preventDefault()}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(t,n){var r=new RegExp(e.ui.autocomplete.escapeRegex(n),"i");return e.grep(t,function(e){return r.test(e.label||e.value||e)})}}),e.widget("ui.autocomplete",e.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(e){return e+(e>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var t;this._superApply(arguments);if(this.options.disabled||this.cancelSearch)return;e&&e.length?t=this.options.messages.results(e.length):t=this.options.messages.noResults,this.liveRegion.text(t)}})})(jQuery);(function(e,t){var n,r,i,s,o="ui-button ui-widget ui-state-default ui-corner-all",u="ui-state-hover ui-state-active ",a="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",f=function(){var t=e(this).find(":ui-button");setTimeout(function(){t.button("refresh")},1)},l=function(t){var n=t.name,r=t.form,i=e([]);return n&&(r?i=e(r).find("[name='"+n+"']"):i=e("[name='"+n+"']",t.ownerDocument).filter(function(){return!this.form})),i};e.widget("ui.button",{version:"1.9.2",defaultElement:"<button>",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset"+this.eventNamespace).bind("reset"+this.eventNamespace,f),typeof this.options.disabled!="boolean"?this.options.disabled=!!this.element.prop("disabled"):this.element.prop("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var t=this,u=this.options,a=this.type==="checkbox"||this.type==="radio",c=a?"":"ui-state-active",h="ui-state-focus";u.label===null&&(u.label=this.type==="input"?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(o).attr("role","button").bind("mouseenter"+this.eventNamespace,function(){if(u.disabled)return;this===n&&e(this).addClass("ui-state-active")}).bind("mouseleave"+this.eventNamespace,function(){if(u.disabled)return;e(this).removeClass(c)}).bind("click"+this.eventNamespace,function(e){u.disabled&&(e.preventDefault(),e.stopImmediatePropagation())}),this.element.bind("focus"+this.eventNamespace,function(){t.buttonElement.addClass(h)}).bind("blur"+this.eventNamespace,function(){t.buttonElement.removeClass(h)}),a&&(this.element.bind("change"+this.eventNamespace,function(){if(s)return;t.refresh()}),this.buttonElement.bind("mousedown"+this.eventNamespace,function(e){if(u.disabled)return;s=!1,r=e.pageX,i=e.pageY}).bind("mouseup"+this.eventNamespace,function(e){if(u.disabled)return;if(r!==e.pageX||i!==e.pageY)s=!0})),this.type==="checkbox"?this.buttonElement.bind("click"+this.eventNamespace,function(){if(u.disabled||s)return!1;e(this).toggleClass("ui-state-active"),t.buttonElement.attr("aria-pressed",t.element[0].checked)}):this.type==="radio"?this.buttonElement.bind("click"+this.eventNamespace,function(){if(u.disabled||s)return!1;e(this).addClass("ui-state-active"),t.buttonElement.attr("aria-pressed","true");var n=t.element[0];l(n).not(n).map(function(){return e(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown"+this.eventNamespace,function(){if(u.disabled)return!1;e(this).addClass("ui-state-active"),n=this,t.document.one("mouseup",function(){n=null})}).bind("mouseup"+this.eventNamespace,function(){if(u.disabled)return!1;e(this).removeClass("ui-state-active")}).bind("keydown"+this.eventNamespace,function(t){if(u.disabled)return!1;(t.keyCode===e.ui.keyCode.SPACE||t.keyCode===e.ui.keyCode.ENTER)&&e(this).addClass("ui-state-active")}).bind("keyup"+this.eventNamespace,function(){e(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(t){t.keyCode===e.ui.keyCode.SPACE&&e(this).click()})),this._setOption("disabled",u.disabled),this._resetButton()},_determineButtonType:function(){var e,t,n;this.element.is("[type=checkbox]")?this.type="checkbox":this.element.is("[type=radio]")?this.type="radio":this.element.is("input")?this.type="input":this.type="button",this.type==="checkbox"||this.type==="radio"?(e=this.element.parents().last(),t="label[for='"+this.element.attr("id")+"']",this.buttonElement=e.find(t),this.buttonElement.length||(e=e.length?e.siblings():this.element.siblings(),this.buttonElement=e.filter(t),this.buttonElement.length||(this.buttonElement=e.find(t))),this.element.addClass("ui-helper-hidden-accessible"),n=this.element.is(":checked"),n&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.prop("aria-pressed",n)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(o+" "+u+" "+a).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title")},_setOption:function(e,t){this._super(e,t);if(e==="disabled"){t?this.element.prop("disabled",!0):this.element.prop("disabled",!1);return}this._resetButton()},refresh:function(){var t=this.element.is("input, button")?this.element.is(":disabled"):this.element.hasClass("ui-button-disabled");t!==this.options.disabled&&this._setOption("disabled",t),this.type==="radio"?l(this.element[0]).each(function(){e(this).is(":checked")?e(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):e(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):this.type==="checkbox"&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if(this.type==="input"){this.options.label&&this.element.val(this.options.label);return}var t=this.buttonElement.removeClass(a),n=e("<span></span>",this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(t.empty()).text(),r=this.options.icons,i=r.primary&&r.secondary,s=[];r.primary||r.secondary?(this.options.text&&s.push("ui-button-text-icon"+(i?"s":r.primary?"-primary":"-secondary")),r.primary&&t.prepend("<span class='ui-button-icon-primary ui-icon "+r.primary+"'></span>"),r.secondary&&t.append("<span class='ui-button-icon-secondary ui-icon "+r.secondary+"'></span>"),this.options.text||(s.push(i?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||t.attr("title",e.trim(n)))):s.push("ui-button-text-only"),t.addClass(s.join(" "))}}),e.widget("ui.buttonset",{version:"1.9.2",options:{items:"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(e,t){e==="disabled"&&this.buttons.button("option",e,t),this._super(e,t)},refresh:function(){var t=this.element.css("direction")==="rtl";this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(t?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(t?"ui-corner-left":"ui-corner-right").end().end()},_destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")}})})(jQuery);(function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[""]),this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function bindHover(e){var t="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(t,"mouseout",function(){$(this).removeClass("ui-state-hover"),this.className.indexOf("ui-datepicker-prev")!=-1&&$(this).removeClass("ui-datepicker-prev-hover"),this.className.indexOf("ui-datepicker-next")!=-1&&$(this).removeClass("ui-datepicker-next-hover")}).delegate(t,"mouseover",function(){$.datepicker._isDisabledDatepicker(instActive.inline?e.parent()[0]:instActive.input[0])||($(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),$(this).addClass("ui-state-hover"),this.className.indexOf("ui-datepicker-prev")!=-1&&$(this).addClass("ui-datepicker-prev-hover"),this.className.indexOf("ui-datepicker-next")!=-1&&$(this).addClass("ui-datepicker-next-hover"))})}function extendRemove(e,t){$.extend(e,t);for(var n in t)if(t[n]==null||t[n]==undefined)e[n]=t[n];return e}$.extend($.ui,{datepicker:{version:"1.9.2"}});var PROP_NAME="datepicker",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return extendRemove(this._defaults,e||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline=nodeName=="div"||nodeName=="span";target.id||(this.uuid+=1,target.id="dp"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),nodeName=="input"?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(e,t){var n=e[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1");return{id:n,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:t,dpDiv:t?bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')):this.dpDiv}},_connectDatepicker:function(e,t){var n=$(e);t.append=$([]),t.trigger=$([]);if(n.hasClass(this.markerClassName))return;this._attachments(n,t),n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(e,n,r){t.settings[n]=r}).bind("getData.datepicker",function(e,n){return this._get(t,n)}),this._autoSize(t),$.data(e,PROP_NAME,t),t.settings.disabled&&this._disableDatepicker(e)},_attachments:function(e,t){var n=this._get(t,"appendText"),r=this._get(t,"isRTL");t.append&&t.append.remove(),n&&(t.append=$('<span class="'+this._appendClass+'">'+n+"</span>"),e[r?"before":"after"](t.append)),e.unbind("focus",this._showDatepicker),t.trigger&&t.trigger.remove();var i=this._get(t,"showOn");(i=="focus"||i=="both")&&e.focus(this._showDatepicker);if(i=="button"||i=="both"){var s=this._get(t,"buttonText"),o=this._get(t,"buttonImage");t.trigger=$(this._get(t,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:o,alt:s,title:s}):$('<button type="button"></button>').addClass(this._triggerClass).html(o==""?s:$("<img/>").attr({src:o,alt:s,title:s}))),e[r?"before":"after"](t.trigger),t.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==e[0]?$.datepicker._hideDatepicker():$.datepicker._datepickerShowing&&$.datepicker._lastInput!=e[0]?($.datepicker._hideDatepicker(),$.datepicker._showDatepicker(e[0])):$.datepicker._showDatepicker(e[0]),!1})}},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t=new Date(2009,11,20),n=this._get(e,"dateFormat");if(n.match(/[DM]/)){var r=function(e){var t=0,n=0;for(var r=0;r<e.length;r++)e[r].length>t&&(t=e[r].length,n=r);return n};t.setMonth(r(this._get(e,n.match(/MM/)?"monthNames":"monthNamesShort"))),t.setDate(r(this._get(e,n.match(/DD/)?"dayNames":"dayNamesShort"))+20-t.getDay())}e.input.attr("size",this._formatDate(e,t).length)}},_inlineDatepicker:function(e,t){var n=$(e);if(n.hasClass(this.markerClassName))return;n.addClass(this.markerClassName).append(t.dpDiv).bind("setData.datepicker",function(e,n,r){t.settings[n]=r}).bind("getData.datepicker",function(e,n){return this._get(t,n)}),$.data(e,PROP_NAME,t),this._setDate(t,this._getDefaultDate(t),!0),this._updateDatepicker(t),this._updateAlternate(t),t.settings.disabled&&this._disableDatepicker(e),t.dpDiv.css("display","block")},_dialogDatepicker:function(e,t,n,r,i){var s=this._dialogInst;if(!s){this.uuid+=1;var o="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+o+'" style="position: absolute; top: -100px; width: 0px;"/>'),this._dialogInput.keydown(this._doKeyDown),$("body").append(this._dialogInput),s=this._dialogInst=this._newInst(this._dialogInput,!1),s.settings={},$.data(this._dialogInput[0],PROP_NAME,s)}extendRemove(s.settings,r||{}),t=t&&t.constructor==Date?this._formatDate(s,t):t,this._dialogInput.val(t),this._pos=i?i.length?i:[i.pageX,i.pageY]:null;if(!this._pos){var u=document.documentElement.clientWidth,a=document.documentElement.clientHeight,f=document.documentElement.scrollLeft||document.body.scrollLeft,l=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[u/2-100+f,a/2-150+l]}return this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),s.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,s),this},_destroyDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();$.removeData(e,PROP_NAME),r=="input"?(n.append.remove(),n.trigger.remove(),t.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):(r=="div"||r=="span")&&t.removeClass(this.markerClassName).empty()},_enableDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();if(r=="input")e.disabled=!1,n.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if(r=="div"||r=="span"){var i=t.children("."+this._inlineClass);i.children().removeClass("ui-state-disabled"),i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t})},_disableDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();if(r=="input")e.disabled=!0,n.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if(r=="div"||r=="span"){var i=t.children("."+this._inlineClass);i.children().addClass("ui-state-disabled"),i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t}),this._disabledInputs[this._disabledInputs.length]=e},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;t<this._disabledInputs.length;t++)if(this._disabledInputs[t]==e)return!0;return!1},_getInst:function(e){try{return $.data(e,PROP_NAME)}catch(t){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,t,n){var r=this._getInst(e);if(arguments.length==2&&typeof t=="string")return t=="defaults"?$.extend({},$.datepicker._defaults):r?t=="all"?$.extend({},r.settings):this._get(r,t):null;var i=t||{};typeof t=="string"&&(i={},i[t]=n);if(r){this._curInst==r&&this._hideDatepicker();var s=this._getDateDatepicker(e,!0),o=this._getMinMaxDate(r,"min"),u=this._getMinMaxDate(r,"max");extendRemove(r.settings,i),o!==null&&i.dateFormat!==undefined&&i.minDate===undefined&&(r.settings.minDate=this._formatDate(r,o)),u!==null&&i.dateFormat!==undefined&&i.maxDate===undefined&&(r.settings.maxDate=this._formatDate(r,u)),this._attachments($(e),r),this._autoSize(r),this._setDate(r,s),this._updateAlternate(r),this._updateDatepicker(r)}},_changeDatepicker:function(e,t,n){this._optionDatepicker(e,t,n)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var n=this._getInst(e);n&&(this._setDate(n,t),this._updateDatepicker(n),this._updateAlternate(n))},_getDateDatepicker:function(e,t){var n=this._getInst(e);return n&&!n.inline&&this._setDateFromField(n,t),n?this._getDate(n):null},_doKeyDown:function(e){var t=$.datepicker._getInst(e.target),n=!0,r=t.dpDiv.is(".ui-datepicker-rtl");t._keyEvent=!0;if($.datepicker._datepickerShowing)switch(e.keyCode){case 9:$.datepicker._hideDatepicker(),n=!1;break;case 13:var i=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",t.dpDiv);i[0]&&$.datepicker._selectDay(e.target,t.selectedMonth,t.selectedYear,i[0]);var s=$.datepicker._get(t,"onSelect");if(s){var o=$.datepicker._formatDate(t);s.apply(t.input?t.input[0]:null,[o,t])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 34:$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&$.datepicker._clearDate(e.target),n=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&$.datepicker._gotoToday(e.target),n=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,r?1:-1,"D"),n=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,-7,"D"),n=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,r?-1:1,"D"),n=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,7,"D"),n=e.ctrlKey||e.metaKey;break;default:n=!1}else e.keyCode==36&&e.ctrlKey?$.datepicker._showDatepicker(this):n=!1;n&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var t=$.datepicker._getInst(e.target);if($.datepicker._get(t,"constrainInput")){var n=$.datepicker._possibleChars($.datepicker._get(t,"dateFormat")),r=String.fromCharCode(e.charCode==undefined?e.keyCode:e.charCode);return e.ctrlKey||e.metaKey||r<" "||!n||n.indexOf(r)>-1}},_doKeyUp:function(e){var t=$.datepicker._getInst(e.target);if(t.input.val()!=t.lastVal)try{var n=$.datepicker.parseDate($.datepicker._get(t,"dateFormat"),t.input?t.input.val():null,$.datepicker._getFormatConfig(t));n&&($.datepicker._setDateFromField(t),$.datepicker._updateAlternate(t),$.datepicker._updateDatepicker(t))}catch(r){$.datepicker.log(r)}return!0},_showDatepicker:function(e){e=e.target||e,e.nodeName.toLowerCase()!="input"&&(e=$("input",e.parentNode)[0]);if($.datepicker._isDisabledDatepicker(e)||$.datepicker._lastInput==e)return;var t=$.datepicker._getInst(e);$.datepicker._curInst&&$.datepicker._curInst!=t&&($.datepicker._curInst.dpDiv.stop(!0,!0),t&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var n=$.datepicker._get(t,"beforeShow"),r=n?n.apply(e,[e,t]):{};if(r===!1)return;extendRemove(t.settings,r),t.lastVal=null,$.datepicker._lastInput=e,$.datepicker._setDateFromField(t),$.datepicker._inDialog&&(e.value=""),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(e),$.datepicker._pos[1]+=e.offsetHeight);var i=!1;$(e).parents().each(function(){return i|=$(this).css("position")=="fixed",!i});var s={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};$.datepicker._pos=null,t.dpDiv.empty(),t.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),$.datepicker._updateDatepicker(t),s=$.datepicker._checkOffset(t,s,i),t.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?"static":i?"fixed":"absolute",display:"none",left:s.left+"px",top:s.top+"px"});if(!t.inline){var o=$.datepicker._get(t,"showAnim"),u=$.datepicker._get(t,"duration"),a=function(){var e=t.dpDiv.find("iframe.ui-datepicker-cover");if(!!e.length){var n=$.datepicker._getBorders(t.dpDiv);e.css({left:-n[0],top:-n[1],width:t.dpDiv.outerWidth(),height:t.dpDiv.outerHeight()})}};t.dpDiv.zIndex($(e).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&($.effects.effect[o]||$.effects[o])?t.dpDiv.show(o,$.datepicker._get(t,"showOptions"),u,a):t.dpDiv[o||"show"](o?u:null,a),(!o||!u)&&a(),t.input.is(":visible")&&!t.input.is(":disabled")&&t.input.focus(),$.datepicker._curInst=t}},_updateDatepicker:function(e){this.maxRows=4;var t=$.datepicker._getBorders(e.dpDiv);instActive=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var n=e.dpDiv.find("iframe.ui-datepicker-cover");!n.length||n.css({left:-t[0],top:-t[1],width:e.dpDiv.outerWidth(),height:e.dpDiv.outerHeight()}),e.dpDiv.find("."+this._dayOverClass+" a").mouseover();var r=this._getNumberOfMonths(e),i=r[1],s=17;e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),i>1&&e.dpDiv.addClass("ui-datepicker-multi-"+i).css("width",s*i+"em"),e.dpDiv[(r[0]!=1||r[1]!=1?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e==$.datepicker._curInst&&$.datepicker._datepickerShowing&&e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&e.input[0]!=document.activeElement&&e.input.focus();if(e.yearshtml){var o=e.yearshtml;setTimeout(function(){o===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),o=e.yearshtml=null},0)}},_getBorders:function(e){var t=function(e){return{thin:1,medium:2,thick:3}[e]||e};return[parseFloat(t(e.css("border-left-width"))),parseFloat(t(e.css("border-top-width")))]},_checkOffset:function(e,t,n){var r=e.dpDiv.outerWidth(),i=e.dpDiv.outerHeight(),s=e.input?e.input.outerWidth():0,o=e.input?e.input.outerHeight():0,u=document.documentElement.clientWidth+(n?0:$(document).scrollLeft()),a=document.documentElement.clientHeight+(n?0:$(document).scrollTop());return t.left-=this._get(e,"isRTL")?r-s:0,t.left-=n&&t.left==e.input.offset().left?$(document).scrollLeft():0,t.top-=n&&t.top==e.input.offset().top+o?$(document).scrollTop():0,t.left-=Math.min(t.left,t.left+r>u&&u>r?Math.abs(t.left+r-u):0),t.top-=Math.min(t.top,t.top+i>a&&a>i?Math.abs(i+o):0),t},_findPos:function(e){var t=this._getInst(e),n=this._get(t,"isRTL");while(e&&(e.type=="hidden"||e.nodeType!=1||$.expr.filters.hidden(e)))e=e[n?"previousSibling":"nextSibling"];var r=$(e).offset();return[r.left,r.top]},_hideDatepicker:function(e){var t=this._curInst;if(!t||e&&t!=$.data(e,PROP_NAME))return;if(this._datepickerShowing){var n=this._get(t,"showAnim"),r=this._get(t,"duration"),i=function(){$.datepicker._tidyDialog(t)};$.effects&&($.effects.effect[n]||$.effects[n])?t.dpDiv.hide(n,$.datepicker._get(t,"showOptions"),r,i):t.dpDiv[n=="slideDown"?"slideUp":n=="fadeIn"?"fadeOut":"hide"](n?r:null,i),n||i(),this._datepickerShowing=!1;var s=this._get(t,"onClose");s&&s.apply(t.input?t.input[0]:null,[t.input?t.input.val():"",t]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),$.blockUI&&($.unblockUI(),$("body").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(!$.datepicker._curInst)return;var t=$(e.target),n=$.datepicker._getInst(t[0]);(t[0].id!=$.datepicker._mainDivId&&t.parents("#"+$.datepicker._mainDivId).length==0&&!t.hasClass($.datepicker.markerClassName)&&!t.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&(!$.datepicker._inDialog||!$.blockUI)||t.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=n)&&$.datepicker._hideDatepicker()},_adjustDate:function(e,t,n){var r=$(e),i=this._getInst(r[0]);if(this._isDisabledDatepicker(r[0]))return;this._adjustInstDate(i,t+(n=="M"?this._get(i,"showCurrentAtPos"):0),n),this._updateDatepicker(i)},_gotoToday:function(e){var t=$(e),n=this._getInst(t[0]);if(this._get(n,"gotoCurrent")&&n.currentDay)n.selectedDay=n.currentDay,n.drawMonth=n.selectedMonth=n.currentMonth,n.drawYear=n.selectedYear=n.currentYear;else{var r=new Date;n.selectedDay=r.getDate(),n.drawMonth=n.selectedMonth=r.getMonth(),n.drawYear=n.selectedYear=r.getFullYear()}this._notifyChange(n),this._adjustDate(t)},_selectMonthYear:function(e,t,n){var r=$(e),i=this._getInst(r[0]);i["selected"+(n=="M"?"Month":"Year")]=i["draw"+(n=="M"?"Month":"Year")]=parseInt(t.options[t.selectedIndex].value,10),this._notifyChange(i),this._adjustDate(r)},_selectDay:function(e,t,n,r){var i=$(e);if($(r).hasClass(this._unselectableClass)||this._isDisabledDatepicker(i[0]))return;var s=this._getInst(i[0]);s.selectedDay=s.currentDay=$("a",r).html(),s.selectedMonth=s.currentMonth=t,s.selectedYear=s.currentYear=n,this._selectDate(e,this._formatDate(s,s.currentDay,s.currentMonth,s.currentYear))},_clearDate:function(e){var t=$(e),n=this._getInst(t[0]);this._selectDate(t,"")},_selectDate:function(e,t){var n=$(e),r=this._getInst(n[0]);t=t!=null?t:this._formatDate(r),r.input&&r.input.val(t),this._updateAlternate(r);var i=this._get(r,"onSelect");i?i.apply(r.input?r.input[0]:null,[t,r]):r.input&&r.input.trigger("change"),r.inline?this._updateDatepicker(r):(this._hideDatepicker(),this._lastInput=r.input[0],typeof r.input[0]!="object"&&r.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var t=this._get(e,"altField");if(t){var n=this._get(e,"altFormat")||this._get(e,"dateFormat"),r=this._getDate(e),i=this.formatDate(n,r,this._getFormatConfig(e));$(t).each(function(){$(this).val(i)})}},noWeekends:function(e){var t=e.getDay();return[t>0&&t<6,""]},iso8601Week:function(e){var t=new Date(e.getTime());t.setDate(t.getDate()+4-(t.getDay()||7));var n=t.getTime();return t.setMonth(0),t.setDate(1),Math.floor(Math.round((n-t)/864e5)/7)+1},parseDate:function(e,t,n){if(e==null||t==null)throw"Invalid arguments";t=typeof t=="object"?t.toString():t+"";if(t=="")return null;var r=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff;r=typeof r!="string"?r:(new Date).getFullYear()%100+parseInt(r,10);var i=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,s=(n?n.dayNames:null)||this._defaults.dayNames,o=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,u=(n?n.monthNames:null)||this._defaults.monthNames,a=-1,f=-1,l=-1,c=-1,h=!1,p=function(t){var n=y+1<e.length&&e.charAt(y+1)==t;return n&&y++,n},d=function(e){var n=p(e),r=e=="@"?14:e=="!"?20:e=="y"&&n?4:e=="o"?3:2,i=new RegExp("^\\d{1,"+r+"}"),s=t.substring(g).match(i);if(!s)throw"Missing number at position "+g;return g+=s[0].length,parseInt(s[0],10)},v=function(e,n,r){var i=$.map(p(e)?r:n,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)}),s=-1;$.each(i,function(e,n){var r=n[1];if(t.substr(g,r.length).toLowerCase()==r.toLowerCase())return s=n[0],g+=r.length,!1});if(s!=-1)return s+1;throw"Unknown name at position "+g},m=function(){if(t.charAt(g)!=e.charAt(y))throw"Unexpected literal at position "+g;g++},g=0;for(var y=0;y<e.length;y++)if(h)e.charAt(y)=="'"&&!p("'")?h=!1:m();else switch(e.charAt(y)){case"d":l=d("d");break;case"D":v("D",i,s);break;case"o":c=d("o");break;case"m":f=d("m");break;case"M":f=v("M",o,u);break;case"y":a=d("y");break;case"@":var b=new Date(d("@"));a=b.getFullYear(),f=b.getMonth()+1,l=b.getDate();break;case"!":var b=new Date((d("!")-this._ticksTo1970)/1e4);a=b.getFullYear(),f=b.getMonth()+1,l=b.getDate();break;case"'":p("'")?m():h=!0;break;default:m()}if(g<t.length){var w=t.substr(g);if(!/^\s+/.test(w))throw"Extra/unparsed characters found in date: "+w}a==-1?a=(new Date).getFullYear():a<100&&(a+=(new Date).getFullYear()-(new Date).getFullYear()%100+(a<=r?0:-100));if(c>-1){f=1,l=c;do{var E=this._getDaysInMonth(a,f-1);if(l<=E)break;f++,l-=E}while(!0)}var b=this._daylightSavingAdjust(new Date(a,f-1,l));if(b.getFullYear()!=a||b.getMonth()+1!=f||b.getDate()!=l)throw"Invalid date";return b},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*24*60*60*1e7,formatDate:function(e,t,n){if(!t)return"";var r=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,i=(n?n.dayNames:null)||this._defaults.dayNames,s=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,o=(n?n.monthNames:null)||this._defaults.monthNames,u=function(t){var n=h+1<e.length&&e.charAt(h+1)==t;return n&&h++,n},a=function(e,t,n){var r=""+t;if(u(e))while(r.length<n)r="0"+r;return r},f=function(e,t,n,r){return u(e)?r[t]:n[t]},l="",c=!1;if(t)for(var h=0;h<e.length;h++)if(c)e.charAt(h)=="'"&&!u("'")?c=!1:l+=e.charAt(h);else switch(e.charAt(h)){case"d":l+=a("d",t.getDate(),2);break;case"D":l+=f("D",t.getDay(),r,i);break;case"o":l+=a("o",Math.round(((new Date(t.getFullYear(),t.getMonth(),t.getDate())).getTime()-(new Date(t.getFullYear(),0,0)).getTime())/864e5),3);break;case"m":l+=a("m",t.getMonth()+1,2);break;case"M":l+=f("M",t.getMonth(),s,o);break;case"y":l+=u("y")?t.getFullYear():(t.getYear()%100<10?"0":"")+t.getYear()%100;break;case"@":l+=t.getTime();break;case"!":l+=t.getTime()*1e4+this._ticksTo1970;break;case"'":u("'")?l+="'":c=!0;break;default:l+=e.charAt(h)}return l},_possibleChars:function(e){var t="",n=!1,r=function(t){var n=i+1<e.length&&e.charAt(i+1)==t;return n&&i++,n};for(var i=0;i<e.length;i++)if(n)e.charAt(i)=="'"&&!r("'")?n=!1:t+=e.charAt(i);else switch(e.charAt(i)){case"d":case"m":case"y":case"@":t+="0123456789";break;case"D":case"M":return null;case"'":r("'")?t+="'":n=!0;break;default:t+=e.charAt(i)}return t},_get:function(e,t){return e.settings[t]!==undefined?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()==e.lastVal)return;var n=this._get(e,"dateFormat"),r=e.lastVal=e.input?e.input.val():null,i,s;i=s=this._getDefaultDate(e);var o=this._getFormatConfig(e);try{i=this.parseDate(n,r,o)||s}catch(u){this.log(u),r=t?"":r}e.selectedDay=i.getDate(),e.drawMonth=e.selectedMonth=i.getMonth(),e.drawYear=e.selectedYear=i.getFullYear(),e.currentDay=r?i.getDate():0,e.currentMonth=r?i.getMonth():0,e.currentYear=r?i.getFullYear():0,this._adjustInstDate(e)},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(e,t,n){var r=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},i=function(t){try{return $.datepicker.parseDate($.datepicker._get(e,"dateFormat"),t,$.datepicker._getFormatConfig(e))}catch(n){}var r=(t.toLowerCase().match(/^c/)?$.datepicker._getDate(e):null)||new Date,i=r.getFullYear(),s=r.getMonth(),o=r.getDate(),u=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,a=u.exec(t);while(a){switch(a[2]||"d"){case"d":case"D":o+=parseInt(a[1],10);break;case"w":case"W":o+=parseInt(a[1],10)*7;break;case"m":case"M":s+=parseInt(a[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(i,s));break;case"y":case"Y":i+=parseInt(a[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(i,s))}a=u.exec(t)}return new Date(i,s,o)},s=t==null||t===""?n:typeof t=="string"?i(t):typeof t=="number"?isNaN(t)?n:r(t):new Date(t.getTime());return s=s&&s.toString()=="Invalid Date"?n:s,s&&(s.setHours(0),s.setMinutes(0),s.setSeconds(0),s.setMilliseconds(0)),this._daylightSavingAdjust(s)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,n){var r=!t,i=e.selectedMonth,s=e.selectedYear,o=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=o.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=o.getMonth(),e.drawYear=e.selectedYear=e.currentYear=o.getFullYear(),(i!=e.selectedMonth||s!=e.selectedYear)&&!n&&this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(r?"":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&e.input.val()==""?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(e){var t=this._get(e,"stepMonths"),n="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(n,-t,"M")},next:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(n,+t,"M")},hide:function(){window["DP_jQuery_"+dpuuid].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+dpuuid].datepicker._gotoToday(n)},selectDay:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectDay(n,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(n,this,"M"),!1},selectYear:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(n,this,"Y"),!1}};$(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(e){var t=new Date;t=this._daylightSavingAdjust(new Date(t.getFullYear(),t.getMonth(),t.getDate()));var n=this._get(e,"isRTL"),r=this._get(e,"showButtonPanel"),i=this._get(e,"hideIfNoPrevNext"),s=this._get(e,"navigationAsDateFormat"),o=this._getNumberOfMonths(e),u=this._get(e,"showCurrentAtPos"),a=this._get(e,"stepMonths"),f=o[0]!=1||o[1]!=1,l=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),c=this._getMinMaxDate(e,"min"),h=this._getMinMaxDate(e,"max"),p=e.drawMonth-u,d=e.drawYear;p<0&&(p+=12,d--);if(h){var v=this._daylightSavingAdjust(new Date(h.getFullYear(),h.getMonth()-o[0]*o[1]+1,h.getDate()));v=c&&v<c?c:v;while(this._daylightSavingAdjust(new Date(d,p,1))>v)p--,p<0&&(p=11,d--)}e.drawMonth=p,e.drawYear=d;var m=this._get(e,"prevText");m=s?this.formatDate(m,this._daylightSavingAdjust(new Date(d,p-a,1)),this._getFormatConfig(e)):m;var g=this._canAdjustMonth(e,-1,d,p)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+m+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"e":"w")+'">'+m+"</span></a>":i?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+m+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"e":"w")+'">'+m+"</span></a>",y=this._get(e,"nextText");y=s?this.formatDate(y,this._daylightSavingAdjust(new Date(d,p+a,1)),this._getFormatConfig(e)):y;var b=this._canAdjustMonth(e,1,d,p)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+y+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"w":"e")+'">'+y+"</span></a>":i?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+y+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"w":"e")+'">'+y+"</span></a>",w=this._get(e,"currentText"),E=this._get(e,"gotoCurrent")&&e.currentDay?l:t;w=s?this.formatDate(w,E,this._getFormatConfig(e)):w;var S=e.inline?"":'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(e,"closeText")+"</button>",x=r?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(n?S:"")+(this._isInRange(e,E)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+w+"</button>":"")+(n?"":S)+"</div>":"",T=parseInt(this._get(e,"firstDay"),10);T=isNaN(T)?0:T;var N=this._get(e,"showWeek"),C=this._get(e,"dayNames"),k=this._get(e,"dayNamesShort"),L=this._get(e,"dayNamesMin"),A=this._get(e,"monthNames"),O=this._get(e,"monthNamesShort"),M=this._get(e,"beforeShowDay"),_=this._get(e,"showOtherMonths"),D=this._get(e,"selectOtherMonths"),P=this._get(e,"calculateWeek")||this.iso8601Week,H=this._getDefaultDate(e),B="";for(var j=0;j<o[0];j++){var F="";this.maxRows=4;for(var I=0;I<o[1];I++){var q=this._daylightSavingAdjust(new Date(d,p,e.selectedDay)),R=" ui-corner-all",U="";if(f){U+='<div class="ui-datepicker-group';if(o[1]>1)switch(I){case 0:U+=" ui-datepicker-group-first",R=" ui-corner-"+(n?"right":"left");break;case o[1]-1:U+=" ui-datepicker-group-last",R=" ui-corner-"+(n?"left":"right");break;default:U+=" ui-datepicker-group-middle",R=""}U+='">'}U+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+R+'">'+(/all|left/.test(R)&&j==0?n?b:g:"")+(/all|right/.test(R)&&j==0?n?g:b:"")+this._generateMonthYearHeader(e,p,d,c,h,j>0||I>0,A,O)+'</div><table class="ui-datepicker-calendar"><thead>'+"<tr>";var z=N?'<th class="ui-datepicker-week-col">'+this._get(e,"weekHeader")+"</th>":"";for(var W=0;W<7;W++){var X=(W+T)%7;z+="<th"+((W+T+6)%7>=5?' class="ui-datepicker-week-end"':"")+">"+'<span title="'+C[X]+'">'+L[X]+"</span></th>"}U+=z+"</tr></thead><tbody>";var V=this._getDaysInMonth(d,p);d==e.selectedYear&&p==e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,V));var J=(this._getFirstDayOfMonth(d,p)-T+7)%7,K=Math.ceil((J+V)/7),Q=f?this.maxRows>K?this.maxRows:K:K;this.maxRows=Q;var G=this._daylightSavingAdjust(new Date(d,p,1-J));for(var Y=0;Y<Q;Y++){U+="<tr>";var Z=N?'<td class="ui-datepicker-week-col">'+this._get(e,"calculateWeek")(G)+"</td>":"";for(var W=0;W<7;W++){var et=M?M.apply(e.input?e.input[0]:null,[G]):[!0,""],tt=G.getMonth()!=p,nt=tt&&!D||!et[0]||c&&G<c||h&&G>h;Z+='<td class="'+((W+T+6)%7>=5?" ui-datepicker-week-end":"")+(tt?" ui-datepicker-other-month":"")+(G.getTime()==q.getTime()&&p==e.selectedMonth&&e._keyEvent||H.getTime()==G.getTime()&&H.getTime()==q.getTime()?" "+this._dayOverClass:"")+(nt?" "+this._unselectableClass+" ui-state-disabled":"")+(tt&&!_?"":" "+et[1]+(G.getTime()==l.getTime()?" "+this._currentClass:"")+(G.getTime()==t.getTime()?" ui-datepicker-today":""))+'"'+((!tt||_)&&et[2]?' title="'+et[2]+'"':"")+(nt?"":' data-handler="selectDay" data-event="click" data-month="'+G.getMonth()+'" data-year="'+G.getFullYear()+'"')+">"+(tt&&!_?"&#xa0;":nt?'<span class="ui-state-default">'+G.getDate()+"</span>":'<a class="ui-state-default'+(G.getTime()==t.getTime()?" ui-state-highlight":"")+(G.getTime()==l.getTime()?" ui-state-active":"")+(tt?" ui-priority-secondary":"")+'" href="#">'+G.getDate()+"</a>")+"</td>",G.setDate(G.getDate()+1),G=this._daylightSavingAdjust(G)}U+=Z+"</tr>"}p++,p>11&&(p=0,d++),U+="</tbody></table>"+(f?"</div>"+(o[0]>0&&I==o[1]-1?'<div class="ui-datepicker-row-break"></div>':""):""),F+=U}B+=F}return B+=x+($.ui.ie6&&!e.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':""),e._keyEvent=!1,B},_generateMonthYearHeader:function(e,t,n,r,i,s,o,u){var a=this._get(e,"changeMonth"),f=this._get(e,"changeYear"),l=this._get(e,"showMonthAfterYear"),c='<div class="ui-datepicker-title">',h="";if(s||!a)h+='<span class="ui-datepicker-month">'+o[t]+"</span>";else{var p=r&&r.getFullYear()==n,d=i&&i.getFullYear()==n;h+='<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';for(var v=0;v<12;v++)(!p||v>=r.getMonth())&&(!d||v<=i.getMonth())&&(h+='<option value="'+v+'"'+(v==t?' selected="selected"':"")+">"+u[v]+"</option>");h+="</select>"}l||(c+=h+(s||!a||!f?"&#xa0;":""));if(!e.yearshtml){e.yearshtml="";if(s||!f)c+='<span class="ui-datepicker-year">'+n+"</span>";else{var m=this._get(e,"yearRange").split(":"),g=(new Date).getFullYear(),y=function(e){var t=e.match(/c[+-].*/)?n+parseInt(e.substring(1),10):e.match(/[+-].*/)?g+parseInt(e,10):parseInt(e,10);return isNaN(t)?g:t},b=y(m[0]),w=Math.max(b,y(m[1]||""));b=r?Math.max(b,r.getFullYear()):b,w=i?Math.min(w,i.getFullYear()):w,e.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';for(;b<=w;b++)e.yearshtml+='<option value="'+b+'"'+(b==n?' selected="selected"':"")+">"+b+"</option>";e.yearshtml+="</select>",c+=e.yearshtml,e.yearshtml=null}}return c+=this._get(e,"yearSuffix"),l&&(c+=(s||!a||!f?"&#xa0;":"")+h),c+="</div>",c},_adjustInstDate:function(e,t,n){var r=e.drawYear+(n=="Y"?t:0),i=e.drawMonth+(n=="M"?t:0),s=Math.min(e.selectedDay,this._getDaysInMonth(r,i))+(n=="D"?t:0),o=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(r,i,s)));e.selectedDay=o.getDate(),e.drawMonth=e.selectedMonth=o.getMonth(),e.drawYear=e.selectedYear=o.getFullYear(),(n=="M"||n=="Y")&&this._notifyChange(e)},_restrictMinMax:function(e,t){var n=this._getMinMaxDate(e,"min"),r=this._getMinMaxDate(e,"max"),i=n&&t<n?n:t;return i=r&&i>r?r:i,i},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return t==null?[1,1]:typeof t=="number"?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return(new Date(e,t,1)).getDay()},_canAdjustMonth:function(e,t,n,r){var i=this._getNumberOfMonths(e),s=this._daylightSavingAdjust(new Date(n,r+(t<0?t:i[0]*i[1]),1));return t<0&&s.setDate(this._getDaysInMonth(s.getFullYear(),s.getMonth())),this._isInRange(e,s)},_isInRange:function(e,t){var n=this._getMinMaxDate(e,"min"),r=this._getMinMaxDate(e,"max");return(!n||t.getTime()>=n.getTime())&&(!r||t.getTime()<=r.getTime())},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return t=typeof t!="string"?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,n,r){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var i=t?typeof t=="object"?t:this._daylightSavingAdjust(new Date(r,n,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),i,this._getFormatConfig(e))}}),$.fn.datepicker=function(e){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv),$.datepicker.initialized=!0);var t=Array.prototype.slice.call(arguments,1);return typeof e!="string"||e!="isDisabled"&&e!="getDate"&&e!="widget"?e=="option"&&arguments.length==2&&typeof arguments[1]=="string"?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t)):this.each(function(){typeof e=="string"?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this].concat(t)):$.datepicker._attachDatepicker(this,e)}):$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t))},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version="1.9.2",window["DP_jQuery_"+dpuuid]=$})(jQuery);(function(e,t){var n="ui-dialog ui-widget ui-widget-content ui-corner-all ",r={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},i={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};e.widget("ui.dialog",{version:"1.9.2",options:{autoOpen:!0,buttons:{},closeOnEscape:!0,closeText:"close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:!1,maxWidth:!1,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(t){var n=e(this).css(t).offset().top;n<0&&e(this).css("top",t.top-n)}},resizable:!0,show:null,stack:!0,title:"",width:300,zIndex:1e3},_create:function(){this.originalTitle=this.element.attr("title"),typeof this.originalTitle!="string"&&(this.originalTitle=""),this.oldPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.options.title=this.options.title||this.originalTitle;var t=this,r=this.options,i=r.title||"&#160;",s,o,u,a,f;s=(this.uiDialog=e("<div>")).addClass(n+r.dialogClass).css({display:"none",outline:0,zIndex:r.zIndex}).attr("tabIndex",-1).keydown(function(n){r.closeOnEscape&&!n.isDefaultPrevented()&&n.keyCode&&n.keyCode===e.ui.keyCode.ESCAPE&&(t.close(n),n.preventDefault())}).mousedown(function(e){t.moveToTop(!1,e)}).appendTo("body"),this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(s),o=(this.uiDialogTitlebar=e("<div>")).addClass("ui-dialog-titlebar  ui-widget-header  ui-corner-all  ui-helper-clearfix").bind("mousedown",function(){s.focus()}).prependTo(s),u=e("<a href='#'></a>").addClass("ui-dialog-titlebar-close  ui-corner-all").attr("role","button").click(function(e){e.preventDefault(),t.close(e)}).appendTo(o),(this.uiDialogTitlebarCloseText=e("<span>")).addClass("ui-icon ui-icon-closethick").text(r.closeText).appendTo(u),a=e("<span>").uniqueId().addClass("ui-dialog-title").html(i).prependTo(o),f=(this.uiDialogButtonPane=e("<div>")).addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),(this.uiButtonSet=e("<div>")).addClass("ui-dialog-buttonset").appendTo(f),s.attr({role:"dialog","aria-labelledby":a.attr("id")}),o.find("*").add(o).disableSelection(),this._hoverable(u),this._focusable(u),r.draggable&&e.fn.draggable&&this._makeDraggable(),r.resizable&&e.fn.resizable&&this._makeResizable(),this._createButtons(r.buttons),this._isOpen=!1,e.fn.bgiframe&&s.bgiframe(),this._on(s,{keydown:function(t){if(!r.modal||t.keyCode!==e.ui.keyCode.TAB)return;var n=e(":tabbable",s),i=n.filter(":first"),o=n.filter(":last");if(t.target===o[0]&&!t.shiftKey)return i.focus(1),!1;if(t.target===i[0]&&t.shiftKey)return o.focus(1),!1}})},_init:function(){this.options.autoOpen&&this.open()},_destroy:function(){var e,t=this.oldPosition;this.overlay&&this.overlay.destroy(),this.uiDialog.hide(),this.element.removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),e=t.parent.children().eq(t.index),e.length&&e[0]!==this.element[0]?e.before(this.element):t.parent.append(this.element)},widget:function(){return this.uiDialog},close:function(t){var n=this,r,i;if(!this._isOpen)return;if(!1===this._trigger("beforeClose",t))return;return this._isOpen=!1,this.overlay&&this.overlay.destroy(),this.options.hide?this._hide(this.uiDialog,this.options.hide,function(){n._trigger("close",t)}):(this.uiDialog.hide(),this._trigger("close",t)),e.ui.dialog.overlay.resize(),this.options.modal&&(r=0,e(".ui-dialog").each(function(){this!==n.uiDialog[0]&&(i=e(this).css("z-index"),isNaN(i)||(r=Math.max(r,i)))}),e.ui.dialog.maxZ=r),this},isOpen:function(){return this._isOpen},moveToTop:function(t,n){var r=this.options,i;return r.modal&&!t||!r.stack&&!r.modal?this._trigger("focus",n):(r.zIndex>e.ui.dialog.maxZ&&(e.ui.dialog.maxZ=r.zIndex),this.overlay&&(e.ui.dialog.maxZ+=1,e.ui.dialog.overlay.maxZ=e.ui.dialog.maxZ,this.overlay.$el.css("z-index",e.ui.dialog.overlay.maxZ)),i={scrollTop:this.element.scrollTop(),scrollLeft:this.element.scrollLeft()},e.ui.dialog.maxZ+=1,this.uiDialog.css("z-index",e.ui.dialog.maxZ),this.element.attr(i),this._trigger("focus",n),this)},open:function(){if(this._isOpen)return;var t,n=this.options,r=this.uiDialog;return this._size(),this._position(n.position),r.show(n.show),this.overlay=n.modal?new e.ui.dialog.overlay(this):null,this.moveToTop(!0),t=this.element.find(":tabbable"),t.length||(t=this.uiDialogButtonPane.find(":tabbable"),t.length||(t=r)),t.eq(0).focus(),this._isOpen=!0,this._trigger("open"),this},_createButtons:function(t){var n=this,r=!1;this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),typeof t=="object"&&t!==null&&e.each(t,function(){return!(r=!0)}),r?(e.each(t,function(t,r){var i,s;r=e.isFunction(r)?{click:r,text:t}:r,r=e.extend({type:"button"},r),s=r.click,r.click=function(){s.apply(n.element[0],arguments)},i=e("<button></button>",r).appendTo(n.uiButtonSet),e.fn.button&&i.button()}),this.uiDialog.addClass("ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog)):this.uiDialog.removeClass("ui-dialog-buttons")},_makeDraggable:function(){function r(e){return{position:e.position,offset:e.offset}}var t=this,n=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(n,i){e(this).addClass("ui-dialog-dragging"),t._trigger("dragStart",n,r(i))},drag:function(e,n){t._trigger("drag",e,r(n))},stop:function(i,s){n.position=[s.position.left-t.document.scrollLeft(),s.position.top-t.document.scrollTop()],e(this).removeClass("ui-dialog-dragging"),t._trigger("dragStop",i,r(s)),e.ui.dialog.overlay.resize()}})},_makeResizable:function(n){function u(e){return{originalPosition:e.originalPosition,originalSize:e.originalSize,position:e.position,size:e.size}}n=n===t?this.options.resizable:n;var r=this,i=this.options,s=this.uiDialog.css("position"),o=typeof n=="string"?n:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:i.maxWidth,maxHeight:i.maxHeight,minWidth:i.minWidth,minHeight:this._minHeight(),handles:o,start:function(t,n){e(this).addClass("ui-dialog-resizing"),r._trigger("resizeStart",t,u(n))},resize:function(e,t){r._trigger("resize",e,u(t))},stop:function(t,n){e(this).removeClass("ui-dialog-resizing"),i.height=e(this).height(),i.width=e(this).width(),r._trigger("resizeStop",t,u(n)),e.ui.dialog.overlay.resize()}}).css("position",s).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")},_minHeight:function(){var e=this.options;return e.height==="auto"?e.minHeight:Math.min(e.minHeight,e.height)},_position:function(t){var n=[],r=[0,0],i;if(t){if(typeof t=="string"||typeof t=="object"&&"0"in t)n=t.split?t.split(" "):[t[0],t[1]],n.length===1&&(n[1]=n[0]),e.each(["left","top"],function(e,t){+n[e]===n[e]&&(r[e]=n[e],n[e]=t)}),t={my:n[0]+(r[0]<0?r[0]:"+"+r[0])+" "+n[1]+(r[1]<0?r[1]:"+"+r[1]),at:n.join(" ")};t=e.extend({},e.ui.dialog.prototype.options.position,t)}else t=e.ui.dialog.prototype.options.position;i=this.uiDialog.is(":visible"),i||this.uiDialog.show(),this.uiDialog.position(t),i||this.uiDialog.hide()},_setOptions:function(t){var n=this,s={},o=!1;e.each(t,function(e,t){n._setOption(e,t),e in r&&(o=!0),e in i&&(s[e]=t)}),o&&this._size(),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option",s)},_setOption:function(t,r){var i,s,o=this.uiDialog;switch(t){case"buttons":this._createButtons(r);break;case"closeText":this.uiDialogTitlebarCloseText.text(""+r);break;case"dialogClass":o.removeClass(this.options.dialogClass).addClass(n+r);break;case"disabled":r?o.addClass("ui-dialog-disabled"):o.removeClass("ui-dialog-disabled");break;case"draggable":i=o.is(":data(draggable)"),i&&!r&&o.draggable("destroy"),!i&&r&&this._makeDraggable();break;case"position":this._position(r);break;case"resizable":s=o.is(":data(resizable)"),s&&!r&&o.resizable("destroy"),s&&typeof r=="string"&&o.resizable("option","handles",r),!s&&r!==!1&&this._makeResizable(r);break;case"title":e(".ui-dialog-title",this.uiDialogTitlebar).html(""+(r||"&#160;"))}this._super(t,r)},_size:function(){var t,n,r,i=this.options,s=this.uiDialog.is(":visible");this.element.show().css({width:"auto",minHeight:0,height:0}),i.minWidth>i.width&&(i.width=i.minWidth),t=this.uiDialog.css({height:"auto",width:i.width}).outerHeight(),n=Math.max(0,i.minHeight-t),i.height==="auto"?e.support.minHeight?this.element.css({minHeight:n,height:"auto"}):(this.uiDialog.show(),r=this.element.css("height","auto").height(),s||this.uiDialog.hide(),this.element.height(Math.max(r,n))):this.element.height(Math.max(i.height-t,0)),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())}}),e.extend(e.ui.dialog,{uuid:0,maxZ:0,getTitleId:function(e){var t=e.attr("id");return t||(this.uuid+=1,t=this.uuid),"ui-dialog-title-"+t},overlay:function(t){this.$el=e.ui.dialog.overlay.create(t)}}),e.extend(e.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:e.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(e){return e+".dialog-overlay"}).join(" "),create:function(t){this.instances.length===0&&(setTimeout(function(){e.ui.dialog.overlay.instances.length&&e(document).bind(e.ui.dialog.overlay.events,function(t){if(e(t.target).zIndex()<e.ui.dialog.overlay.maxZ)return!1})},1),e(window).bind("resize.dialog-overlay",e.ui.dialog.overlay.resize));var n=this.oldInstances.pop()||e("<div>").addClass("ui-widget-overlay");return e(document).bind("keydown.dialog-overlay",function(r){var i=e.ui.dialog.overlay.instances;i.length!==0&&i[i.length-1]===n&&t.options.closeOnEscape&&!r.isDefaultPrevented()&&r.keyCode&&r.keyCode===e.ui.keyCode.ESCAPE&&(t.close(r),r.preventDefault())}),n.appendTo(document.body).css({width:this.width(),height:this.height()}),e.fn.bgiframe&&n.bgiframe(),this.instances.push(n),n},destroy:function(t){var n=e.inArray(t,this.instances),r=0;n!==-1&&this.oldInstances.push(this.instances.splice(n,1)[0]),this.instances.length===0&&e([document,window]).unbind(".dialog-overlay"),t.height(0).width(0).remove(),e.each(this.instances,function(){r=Math.max(r,this.css("z-index"))}),this.maxZ=r},height:function(){var t,n;return e.ui.ie?(t=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),n=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight),t<n?e(window).height()+"px":t+"px"):e(document).height()+"px"},width:function(){var t,n;return e.ui.ie?(t=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth),n=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth),t<n?e(window).width()+"px":t+"px"):e(document).width()+"px"},resize:function(){var t=e([]);e.each(e.ui.dialog.overlay.instances,function(){t=t.add(this)}),t.css({width:0,height:0}).css({width:e.ui.dialog.overlay.width(),height:e.ui.dialog.overlay.height()})}}),e.extend(e.ui.dialog.overlay.prototype,{destroy:function(){e.ui.dialog.overlay.destroy(this.$el)}})})(jQuery);(function(e,t){var n=!1;e.widget("ui.menu",{version:"1.9.2",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}).bind("click"+this.eventNamespace,e.proxy(function(e){this.options.disabled&&e.preventDefault()},this)),this.options.disabled&&this.element.addClass("ui-state-disabled").attr("aria-disabled","true"),this._on({"mousedown .ui-menu-item > a":function(e){e.preventDefault()},"click .ui-state-disabled > a":function(e){e.preventDefault()},"click .ui-menu-item:has(a)":function(t){var r=e(t.target).closest(".ui-menu-item");!n&&r.not(".ui-state-disabled").length&&(n=!0,this.select(t),r.has(".ui-menu").length?this.expand(t):this.element.is(":focus")||(this.element.trigger("focus",[!0]),this.active&&this.active.parents(".ui-menu").length===1&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(t){var n=e(t.currentTarget);n.siblings().children(".ui-state-active").removeClass("ui-state-active"),this.focus(t,n)},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(e,t){var n=this.active||this.element.children(".ui-menu-item").eq(0);t||this.focus(e,n)},blur:function(t){this._delay(function(){e.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(t)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(t){e(t.target).closest(".ui-menu").length||this.collapseAll(t),n=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").andSelf().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var t=e(this);t.data("ui-menu-submenu-carat")&&t.remove()}),this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(t){function a(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}var n,r,i,s,o,u=!0;switch(t.keyCode){case e.ui.keyCode.PAGE_UP:this.previousPage(t);break;case e.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case e.ui.keyCode.HOME:this._move("first","first",t);break;case e.ui.keyCode.END:this._move("last","last",t);break;case e.ui.keyCode.UP:this.previous(t);break;case e.ui.keyCode.DOWN:this.next(t);break;case e.ui.keyCode.LEFT:this.collapse(t);break;case e.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(t);break;case e.ui.keyCode.ENTER:case e.ui.keyCode.SPACE:this._activate(t);break;case e.ui.keyCode.ESCAPE:this.collapse(t);break;default:u=!1,r=this.previousFilter||"",i=String.fromCharCode(t.keyCode),s=!1,clearTimeout(this.filterTimer),i===r?s=!0:i=r+i,o=new RegExp("^"+a(i),"i"),n=this.activeMenu.children(".ui-menu-item").filter(function(){return o.test(e(this).children("a").text())}),n=s&&n.index(this.active.next())!==-1?this.active.nextAll(".ui-menu-item"):n,n.length||(i=String.fromCharCode(t.keyCode),o=new RegExp("^"+a(i),"i"),n=this.activeMenu.children(".ui-menu-item").filter(function(){return o.test(e(this).children("a").text())})),n.length?(this.focus(t,n),n.length>1?(this.previousFilter=i,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter):delete this.previousFilter}u&&t.preventDefault()},_activate:function(e){this.active.is(".ui-state-disabled")||(this.active.children("a[aria-haspopup='true']").length?this.expand(e):this.select(e))},refresh:function(){var t,n=this.options.icons.submenu,r=this.element.find(this.options.menus);r.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var t=e(this),r=t.prev("a"),i=e("<span>").addClass("ui-menu-icon ui-icon "+n).data("ui-menu-submenu-carat",!0);r.attr("aria-haspopup","true").prepend(i),t.attr("aria-labelledby",r.attr("id"))}),t=r.add(this.element),t.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","presentation").children("a").uniqueId().addClass("ui-corner-all").attr({tabIndex:-1,role:this._itemRole()}),t.children(":not(.ui-menu-item)").each(function(){var t=e(this);/[^\-—–\s]/.test(t.text())||t.addClass("ui-widget-content ui-menu-divider")}),t.children(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!e.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},focus:function(e,t){var n,r;this.blur(e,e&&e.type==="focus"),this._scrollIntoView(t),this.active=t.first(),r=this.active.children("a").addClass("ui-state-focus"),this.options.role&&this.element.attr("aria-activedescendant",r.attr("id")),this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"),e&&e.type==="keydown"?this._close():this.timer=this._delay(function(){this._close()},this.delay),n=t.children(".ui-menu"),n.length&&/^mouse/.test(e.type)&&this._startOpening(n),this.activeMenu=t.parent(),this._trigger("focus",e,{item:t})},_scrollIntoView:function(t){var n,r,i,s,o,u;this._hasScroll()&&(n=parseFloat(e.css(this.activeMenu[0],"borderTopWidth"))||0,r=parseFloat(e.css(this.activeMenu[0],"paddingTop"))||0,i=t.offset().top-this.activeMenu.offset().top-n-r,s=this.activeMenu.scrollTop(),o=this.activeMenu.height(),u=t.height(),i<0?this.activeMenu.scrollTop(s+i):i+u>o&&this.activeMenu.scrollTop(s+i-o+u))},blur:function(e,t){t||clearTimeout(this.timer);if(!this.active)return;this.active.children("a").removeClass("ui-state-focus"),this.active=null,this._trigger("blur",e,{item:this.active})},_startOpening:function(e){clearTimeout(this.timer);if(e.attr("aria-hidden")!=="true")return;this.timer=this._delay(function(){this._close(),this._open(e)},this.delay)},_open:function(t){var n=e.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden","true"),t.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(n)},collapseAll:function(t,n){clearTimeout(this.timer),this.timer=this._delay(function(){var r=n?this.element:e(t&&t.target).closest(this.element.find(".ui-menu"));r.length||(r=this.element),this._close(r),this.blur(t),this.activeMenu=r},this.delay)},_close:function(e){e||(e=this.active?this.active.parent():this.element),e.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find("a.ui-state-active").removeClass("ui-state-active")},collapse:function(e){var t=this.active&&this.active.parent().closest(".ui-menu-item",this.element);t&&t.length&&(this._close(),this.focus(e,t))},expand:function(e){var t=this.active&&this.active.children(".ui-menu ").children(".ui-menu-item").first();t&&t.length&&(this._open(t.parent()),this._delay(function(){this.focus(e,t)}))},next:function(e){this._move("next","first",e)},previous:function(e){this._move("prev","last",e)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(e,t,n){var r;this.active&&(e==="first"||e==="last"?r=this.active[e==="first"?"prevAll":"nextAll"](".ui-menu-item").eq(-1):r=this.active[e+"All"](".ui-menu-item").eq(0));if(!r||!r.length||!this.active)r=this.activeMenu.children(".ui-menu-item")[t]();this.focus(n,r)},nextPage:function(t){var n,r,i;if(!this.active){this.next(t);return}if(this.isLastItem())return;this._hasScroll()?(r=this.active.offset().top,i=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return n=e(this),n.offset().top-r-i<0}),this.focus(t,n)):this.focus(t,this.activeMenu.children(".ui-menu-item")[this.active?"last":"first"]())},previousPage:function(t){var n,r,i;if(!this.active){this.next(t);return}if(this.isFirstItem())return;this._hasScroll()?(r=this.active.offset().top,i=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return n=e(this),n.offset().top-r+i>0}),this.focus(t,n)):this.focus(t,this.activeMenu.children(".ui-menu-item").first())},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(t){this.active=this.active||e(t.target).closest(".ui-menu-item");var n={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(t,!0),this._trigger("select",t,n)}})})(jQuery);(function(e,t){e.widget("ui.progressbar",{version:"1.9.2",options:{value:0,max:100},min:0,_create:function(){this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min,"aria-valuemax":this.options.max,"aria-valuenow":this._value()}),this.valueDiv=e("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element),this.oldValue=this._value(),this._refreshValue()},_destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.valueDiv.remove()},value:function(e){return e===t?this._value():(this._setOption("value",e),this)},_setOption:function(e,t){e==="value"&&(this.options.value=t,this._refreshValue(),this._value()===this.options.max&&this._trigger("complete")),this._super(e,t)},_value:function(){var e=this.options.value;return typeof e!="number"&&(e=0),Math.min(this.options.max,Math.max(this.min,e))},_percentage:function(){return 100*this._value()/this.options.max},_refreshValue:function(){var e=this.value(),t=this._percentage();this.oldValue!==e&&(this.oldValue=e,this._trigger("change")),this.valueDiv.toggle(e>this.min).toggleClass("ui-corner-right",e===this.options.max).width(t.toFixed(0)+"%"),this.element.attr("aria-valuenow",e)}})})(jQuery);(function(e,t){var n=5;e.widget("ui.slider",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null},_create:function(){var t,r,i=this.options,s=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),o="<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",u=[];this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget"+" ui-widget-content"+" ui-corner-all"+(i.disabled?" ui-slider-disabled ui-disabled":"")),this.range=e([]),i.range&&(i.range===!0&&(i.values||(i.values=[this._valueMin(),this._valueMin()]),i.values.length&&i.values.length!==2&&(i.values=[i.values[0],i.values[0]])),this.range=e("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header"+(i.range==="min"||i.range==="max"?" ui-slider-range-"+i.range:""))),r=i.values&&i.values.length||1;for(t=s.length;t<r;t++)u.push(o);this.handles=s.add(e(u.join("")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.add(this.range).filter("a").click(function(e){e.preventDefault()}).mouseenter(function(){i.disabled||e(this).addClass("ui-state-hover")}).mouseleave(function(){e(this).removeClass("ui-state-hover")}).focus(function(){i.disabled?e(this).blur():(e(".ui-slider .ui-state-focus").removeClass("ui-state-focus"),e(this).addClass("ui-state-focus"))}).blur(function(){e(this).removeClass("ui-state-focus")}),this.handles.each(function(t){e(this).data("ui-slider-handle-index",t)}),this._on(this.handles,{keydown:function(t){var r,i,s,o,u=e(t.target).data("ui-slider-handle-index");switch(t.keyCode){case e.ui.keyCode.HOME:case e.ui.keyCode.END:case e.ui.keyCode.PAGE_UP:case e.ui.keyCode.PAGE_DOWN:case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:t.preventDefault();if(!this._keySliding){this._keySliding=!0,e(t.target).addClass("ui-state-active"),r=this._start(t,u);if(r===!1)return}}o=this.options.step,this.options.values&&this.options.values.length?i=s=this.values(u):i=s=this.value();switch(t.keyCode){case e.ui.keyCode.HOME:s=this._valueMin();break;case e.ui.keyCode.END:s=this._valueMax();break;case e.ui.keyCode.PAGE_UP:s=this._trimAlignValue(i+(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(i-(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:if(i===this._valueMax())return;s=this._trimAlignValue(i+o);break;case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(i===this._valueMin())return;s=this._trimAlignValue(i-o)}this._slide(t,u,s)},keyup:function(t){var n=e(t.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(t,n),this._change(t,n),e(t.target).removeClass("ui-state-active"))}}),this._refreshValue(),this._animateOff=!1},_destroy:function(){this.handles.remove(),this.range.remove(),this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all"),this._mouseDestroy()},_mouseCapture:function(t){var n,r,i,s,o,u,a,f,l=this,c=this.options;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),n={x:t.pageX,y:t.pageY},r=this._normValueFromMouse(n),i=this._valueMax()-this._valueMin()+1,this.handles.each(function(t){var n=Math.abs(r-l.values(t));i>n&&(i=n,s=e(this),o=t)}),c.range===!0&&this.values(1)===c.min&&(o+=1,s=e(this.handles[o])),u=this._start(t,o),u===!1?!1:(this._mouseSliding=!0,this._handleIndex=o,s.addClass("ui-state-active").focus(),a=s.offset(),f=!e(t.target).parents().andSelf().is(".ui-slider-handle"),this._clickOffset=f?{left:0,top:0}:{left:t.pageX-a.left-s.width()/2,top:t.pageY-a.top-s.height()/2-(parseInt(s.css("borderTopWidth"),10)||0)-(parseInt(s.css("borderBottomWidth"),10)||0)+(parseInt(s.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(t,o,r),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(e){var t={x:e.pageX,y:e.pageY},n=this._normValueFromMouse(t);return this._slide(e,this._handleIndex,n),!1},_mouseStop:function(e){return this.handles.removeClass("ui-state-active"),this._mouseSliding=!1,this._stop(e,this._handleIndex),this._change(e,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation=this.options.orientation==="vertical"?"vertical":"horizontal"},_normValueFromMouse:function(e){var t,n,r,i,s;return this.orientation==="horizontal"?(t=this.elementSize.width,n=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(t=this.elementSize.height,n=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),r=n/t,r>1&&(r=1),r<0&&(r=0),this.orientation==="vertical"&&(r=1-r),i=this._valueMax()-this._valueMin(),s=this._valueMin()+r*i,this._trimAlignValue(s)},_start:function(e,t){var n={handle:this.handles[t],value:this.value()};return this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("start",e,n)},_slide:function(e,t,n){var r,i,s;this.options.values&&this.options.values.length?(r=this.values(t?0:1),this.options.values.length===2&&this.options.range===!0&&(t===0&&n>r||t===1&&n<r)&&(n=r),n!==this.values(t)&&(i=this.values(),i[t]=n,s=this._trigger("slide",e,{handle:this.handles[t],value:n,values:i}),r=this.values(t?0:1),s!==!1&&this.values(t,n,!0))):n!==this.value()&&(s=this._trigger("slide",e,{handle:this.handles[t],value:n}),s!==!1&&this.value(n))},_stop:function(e,t){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("stop",e,n)},_change:function(e,t){if(!this._keySliding&&!this._mouseSliding){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("change",e,n)}},value:function(e){if(arguments.length){this.options.value=this._trimAlignValue(e),this._refreshValue(),this._change(null,0);return}return this._value()},values:function(t,n){var r,i,s;if(arguments.length>1){this.options.values[t]=this._trimAlignValue(n),this._refreshValue(),this._change(null,t);return}if(!arguments.length)return this._values();if(!e.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(t):this.value();r=this.options.values,i=arguments[0];for(s=0;s<r.length;s+=1)r[s]=this._trimAlignValue(i[s]),this._change(null,s);this._refreshValue()},_setOption:function(t,n){var r,i=0;e.isArray(this.options.values)&&(i=this.options.values.length),e.Widget.prototype._setOption.apply(this,arguments);switch(t){case"disabled":n?(this.handles.filter(".ui-state-focus").blur(),this.handles.removeClass("ui-state-hover"),this.handles.prop("disabled",!0),this.element.addClass("ui-disabled")):(this.handles.prop("disabled",!1),this.element.removeClass("ui-disabled"));break;case"orientation":this._detectOrientation(),this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation),this._refreshValue();break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":this._animateOff=!0,this._refreshValue();for(r=0;r<i;r+=1)this._change(null,r);this._animateOff=!1;break;case"min":case"max":this._animateOff=!0,this._refreshValue(),this._animateOff=!1}},_value:function(){var e=this.options.value;return e=this._trimAlignValue(e),e},_values:function(e){var t,n,r;if(arguments.length)return t=this.options.values[e],t=this._trimAlignValue(t),t;n=this.options.values.slice();for(r=0;r<n.length;r+=1)n[r]=this._trimAlignValue(n[r]);return n},_trimAlignValue:function(e){if(e<=this._valueMin())return this._valueMin();if(e>=this._valueMax())return this._valueMax();var t=this.options.step>0?this.options.step:1,n=(e-this._valueMin())%t,r=e-n;return Math.abs(n)*2>=t&&(r+=n>0?t:-t),parseFloat(r.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var t,n,r,i,s,o=this.options.range,u=this.options,a=this,f=this._animateOff?!1:u.animate,l={};this.options.values&&this.options.values.length?this.handles.each(function(r){n=(a.values(r)-a._valueMin())/(a._valueMax()-a._valueMin())*100,l[a.orientation==="horizontal"?"left":"bottom"]=n+"%",e(this).stop(1,1)[f?"animate":"css"](l,u.animate),a.options.range===!0&&(a.orientation==="horizontal"?(r===0&&a.range.stop(1,1)[f?"animate":"css"]({left:n+"%"},u.animate),r===1&&a.range[f?"animate":"css"]({width:n-t+"%"},{queue:!1,duration:u.animate})):(r===0&&a.range.stop(1,1)[f?"animate":"css"]({bottom:n+"%"},u.animate),r===1&&a.range[f?"animate":"css"]({height:n-t+"%"},{queue:!1,duration:u.animate}))),t=n}):(r=this.value(),i=this._valueMin(),s=this._valueMax(),n=s!==i?(r-i)/(s-i)*100:0,l[this.orientation==="horizontal"?"left":"bottom"]=n+"%",this.handle.stop(1,1)[f?"animate":"css"](l,u.animate),o==="min"&&this.orientation==="horizontal"&&this.range.stop(1,1)[f?"animate":"css"]({width:n+"%"},u.animate),o==="max"&&this.orientation==="horizontal"&&this.range[f?"animate":"css"]({width:100-n+"%"},{queue:!1,duration:u.animate}),o==="min"&&this.orientation==="vertical"&&this.range.stop(1,1)[f?"animate":"css"]({height:n+"%"},u.animate),o==="max"&&this.orientation==="vertical"&&this.range[f?"animate":"css"]({height:100-n+"%"},{queue:!1,duration:u.animate}))}})})(jQuery);(function(e){function t(e){return function(){var t=this.element.val();e.apply(this,arguments),this._refresh(),t!==this.element.val()&&this._trigger("change")}}e.widget("ui.spinner",{version:"1.9.2",defaultElement:"<input>",widgetEventPrefix:"spin",options:{culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var t={},n=this.element;return e.each(["min","max","step"],function(e,r){var i=n.attr(r);i!==undefined&&i.length&&(t[r]=i)}),t},_events:{keydown:function(e){this._start(e)&&this._keydown(e)&&e.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(e){if(this.cancelBlur){delete this.cancelBlur;return}this._refresh(),this.previous!==this.element.val()&&this._trigger("change",e)},mousewheel:function(e,t){if(!t)return;if(!this.spinning&&!this._start(e))return!1;this._spin((t>0?1:-1)*this.options.step,e),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(e)},100),e.preventDefault()},"mousedown .ui-spinner-button":function(t){function r(){var e=this.element[0]===this.document[0].activeElement;e||(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n}))}var n;n=this.element[0]===this.document[0].activeElement?this.previous:this.element.val(),t.preventDefault(),r.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,r.call(this)});if(this._start(t)===!1)return;this._repeat(null,e(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(t){if(!e(t.currentTarget).hasClass("ui-state-active"))return;if(this._start(t)===!1)return!1;this._repeat(null,e(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t)},"mouseleave .ui-spinner-button":"_stop"},_draw:function(){var e=this.uiSpinner=this.element.addClass("ui-spinner-input").attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());this.element.attr("role","spinbutton"),this.buttons=e.find(".ui-spinner-button").attr("tabIndex",-1).button().removeClass("ui-corner-all"),this.buttons.height()>Math.ceil(e.height()*.5)&&e.height()>0&&e.height(e.height()),this.options.disabled&&this.disable()},_keydown:function(t){var n=this.options,r=e.ui.keyCode;switch(t.keyCode){case r.UP:return this._repeat(null,1,t),!0;case r.DOWN:return this._repeat(null,-1,t),!0;case r.PAGE_UP:return this._repeat(null,n.page,t),!0;case r.PAGE_DOWN:return this._repeat(null,-n.page,t),!0}return!1},_uiSpinnerHtml:function(){return"<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"},_buttonHtml:function(){return"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon "+this.options.icons.up+"'>&#9650;</span>"+"</a>"+"<a class='ui-spinner-button ui-spinner-down ui-corner-br'>"+"<span class='ui-icon "+this.options.icons.down+"'>&#9660;</span>"+"</a>"},_start:function(e){return!this.spinning&&this._trigger("start",e)===!1?!1:(this.counter||(this.counter=1),this.spinning=!0,!0)},_repeat:function(e,t,n){e=e||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,t,n)},e),this._spin(t*this.options.step,n)},_spin:function(e,t){var n=this.value()||0;this.counter||(this.counter=1),n=this._adjustValue(n+e*this._increment(this.counter));if(!this.spinning||this._trigger("spin",t,{value:n})!==!1)this._value(n),this.counter++},_increment:function(t){var n=this.options.incremental;return n?e.isFunction(n)?n(t):Math.floor(t*t*t/5e4-t*t/500+17*t/200+1):1},_precision:function(){var e=this._precisionOf(this.options.step);return this.options.min!==null&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=e.toString(),n=t.indexOf(".");return n===-1?0:t.length-n-1},_adjustValue:function(e){var t,n,r=this.options;return t=r.min!==null?r.min:0,n=e-t,n=Math.round(n/r.step)*r.step,e=t+n,e=parseFloat(e.toFixed(this._precision())),r.max!==null&&e>r.max?r.max:r.min!==null&&e<r.min?r.min:e},_stop:function(e){if(!this.spinning)return;clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",e)},_setOption:function(e,t){if(e==="culture"||e==="numberFormat"){var n=this._parse(this.element.val());this.options[e]=t,this.element.val(this._format(n));return}(e==="max"||e==="min"||e==="step")&&typeof t=="string"&&(t=this._parse(t)),this._super(e,t),e==="disabled"&&(t?(this.element.prop("disabled",!0),this.buttons.button("disable")):(this.element.prop("disabled",!1),this.buttons.button("enable")))},_setOptions:t(function(e){this._super(e),this._value(this.element.val())}),_parse:function(e){return typeof e=="string"&&e!==""&&(e=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(e,10,this.options.culture):+e),e===""||isNaN(e)?null:e},_format:function(e){return e===""?"":window.Globalize&&this.options.numberFormat?Globalize.format(e,this.options.numberFormat,this.options.culture):e},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},_value:function(e,t){var n;e!==""&&(n=this._parse(e),n!==null&&(t||(n=this._adjustValue(n)),e=this._format(n))),this.element.val(e),this._refresh()},_destroy:function(){this.element.removeClass("ui-spinner-input").prop("disabled",!1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:t(function(e){this._stepUp(e)}),_stepUp:function(e){this._spin((e||1)*this.options.step)},stepDown:t(function(e){this._stepDown(e)}),_stepDown:function(e){this._spin((e||1)*-this.options.step)},pageUp:t(function(e){this._stepUp((e||1)*this.options.page)}),pageDown:t(function(e){this._stepDown((e||1)*this.options.page)}),value:function(e){if(!arguments.length)return this._parse(this.element.val());t(this._value).call(this,e)},widget:function(){return this.uiSpinner}})})(jQuery);(function(e,t){function i(){return++n}function s(e){return e.hash.length>1&&e.href.replace(r,"")===location.href.replace(r,"").replace(/\s/g,"%20")}var n=0,r=/#.*$/;e.widget("ui.tabs",{version:"1.9.2",delay:300,options:{active:null,collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_create:function(){var t=this,n=this.options,r=n.active,i=location.hash.substring(1);this.running=!1,this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible",n.collapsible).delegate(".ui-tabs-nav > li","mousedown"+this.eventNamespace,function(t){e(this).is(".ui-state-disabled")&&t.preventDefault()}).delegate(".ui-tabs-anchor","focus"+this.eventNamespace,function(){e(this).closest("li").is(".ui-state-disabled")&&this.blur()}),this._processTabs();if(r===null){i&&this.tabs.each(function(t,n){if(e(n).attr("aria-controls")===i)return r=t,!1}),r===null&&(r=this.tabs.index(this.tabs.filter(".ui-tabs-active")));if(r===null||r===-1)r=this.tabs.length?0:!1}r!==!1&&(r=this.tabs.index(this.tabs.eq(r)),r===-1&&(r=n.collapsible?!1:0)),n.active=r,!n.collapsible&&n.active===!1&&this.anchors.length&&(n.active=0),e.isArray(n.disabled)&&(n.disabled=e.unique(n.disabled.concat(e.map(this.tabs.filter(".ui-state-disabled"),function(e){return t.tabs.index(e)}))).sort()),this.options.active!==!1&&this.anchors.length?this.active=this._findActive(this.options.active):this.active=e(),this._refresh(),this.active.length&&this.load(n.active)},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):e()}},_tabKeydown:function(t){var n=e(this.document[0].activeElement).closest("li"),r=this.tabs.index(n),i=!0;if(this._handlePageNav(t))return;switch(t.keyCode){case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:r++;break;case e.ui.keyCode.UP:case e.ui.keyCode.LEFT:i=!1,r--;break;case e.ui.keyCode.END:r=this.anchors.length-1;break;case e.ui.keyCode.HOME:r=0;break;case e.ui.keyCode.SPACE:t.preventDefault(),clearTimeout(this.activating),this._activate(r);return;case e.ui.keyCode.ENTER:t.preventDefault(),clearTimeout(this.activating),this._activate(r===this.options.active?!1:r);return;default:return}t.preventDefault(),clearTimeout(this.activating),r=this._focusNextTab(r,i),t.ctrlKey||(n.attr("aria-selected","false"),this.tabs.eq(r).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",r)},this.delay))},_panelKeydown:function(t){if(this._handlePageNav(t))return;t.ctrlKey&&t.keyCode===e.ui.keyCode.UP&&(t.preventDefault(),this.active.focus())},_handlePageNav:function(t){if(t.altKey&&t.keyCode===e.ui.keyCode.PAGE_UP)return this._activate(this._focusNextTab(this.options.active-1,!1)),!0;if(t.altKey&&t.keyCode===e.ui.keyCode.PAGE_DOWN)return this._activate(this._focusNextTab(this.options.active+1,!0)),!0},_findNextTab:function(t,n){function i(){return t>r&&(t=0),t<0&&(t=r),t}var r=this.tabs.length-1;while(e.inArray(i(),this.options.disabled)!==-1)t=n?t+1:t-1;return t},_focusNextTab:function(e,t){return e=this._findNextTab(e,t),this.tabs.eq(e).focus(),e},_setOption:function(e,t){if(e==="active"){this._activate(t);return}if(e==="disabled"){this._setupDisabled(t);return}this._super(e,t),e==="collapsible"&&(this.element.toggleClass("ui-tabs-collapsible",t),!t&&this.options.active===!1&&this._activate(0)),e==="event"&&this._setupEvents(t),e==="heightStyle"&&this._setupHeightStyle(t)},_tabId:function(e){return e.attr("aria-controls")||"ui-tabs-"+i()},_sanitizeSelector:function(e){return e?e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var t=this.options,n=this.tablist.children(":has(a[href])");t.disabled=e.map(n.filter(".ui-state-disabled"),function(e){return n.index(e)}),this._processTabs(),t.active===!1||!this.anchors.length?(t.active=!1,this.active=e()):this.active.length&&!e.contains(this.tablist[0],this.active[0])?this.tabs.length===t.disabled.length?(t.active=!1,this.active=e()):this._activate(this._findNextTab(Math.max(0,t.active-1),!1)):t.active=this.tabs.index(this.active),this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-expanded":"false","aria-hidden":"true"}),this.active.length?(this.active.addClass("ui-tabs-active ui-state-active").attr({"aria-selected":"true",tabIndex:0}),this._getPanelForTab(this.active).show().attr({"aria-expanded":"true","aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var t=this;this.tablist=this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role","tablist"),this.tabs=this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({role:"tab",tabIndex:-1}),this.anchors=this.tabs.map(function(){return e("a",this)[0]}).addClass("ui-tabs-anchor").attr({role:"presentation",tabIndex:-1}),this.panels=e(),this.anchors.each(function(n,r){var i,o,u,a=e(r).uniqueId().attr("id"),f=e(r).closest("li"),l=f.attr("aria-controls");s(r)?(i=r.hash,o=t.element.find(t._sanitizeSelector(i))):(u=t._tabId(f),i="#"+u,o=t.element.find(i),o.length||(o=t._createPanel(u),o.insertAfter(t.panels[n-1]||t.tablist)),o.attr("aria-live","polite")),o.length&&(t.panels=t.panels.add(o)),l&&f.data("ui-tabs-aria-controls",l),f.attr({"aria-controls":i.substring(1),"aria-labelledby":a}),o.attr("aria-labelledby",a)}),this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role","tabpanel")},_getList:function(){return this.element.find("ol,ul").eq(0)},_createPanel:function(t){return e("<div>").attr("id",t).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)},_setupDisabled:function(t){e.isArray(t)&&(t.length?t.length===this.anchors.length&&(t=!0):t=!1);for(var n=0,r;r=this.tabs[n];n++)t===!0||e.inArray(n,t)!==-1?e(r).addClass("ui-state-disabled").attr("aria-disabled","true"):e(r).removeClass("ui-state-disabled").removeAttr("aria-disabled");this.options.disabled=t},_setupEvents:function(t){var n={click:function(e){e.preventDefault()}};t&&e.each(t.split(" "),function(e,t){n[t]="_eventHandler"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(this.anchors,n),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(t){var n,r,i=this.element.parent();t==="fill"?(e.support.minHeight||(r=i.css("overflow"),i.css("overflow","hidden")),n=i.height(),this.element.siblings(":visible").each(function(){var t=e(this),r=t.css("position");if(r==="absolute"||r==="fixed")return;n-=t.outerHeight(!0)}),r&&i.css("overflow",r),this.element.children().not(this.panels).each(function(){n-=e(this).outerHeight(!0)}),this.panels.each(function(){e(this).height(Math.max(0,n-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):t==="auto"&&(n=0,this.panels.each(function(){n=Math.max(n,e(this).height("").height())}).height(n))},_eventHandler:function(t){var n=this.options,r=this.active,i=e(t.currentTarget),s=i.closest("li"),o=s[0]===r[0],u=o&&n.collapsible,a=u?e():this._getPanelForTab(s),f=r.length?this._getPanelForTab(r):e(),l={oldTab:r,oldPanel:f,newTab:u?e():s,newPanel:a};t.preventDefault();if(s.hasClass("ui-state-disabled")||s.hasClass("ui-tabs-loading")||this.running||o&&!n.collapsible||this._trigger("beforeActivate",t,l)===!1)return;n.active=u?!1:this.tabs.index(s),this.active=o?e():s,this.xhr&&this.xhr.abort(),!f.length&&!a.length&&e.error("jQuery UI Tabs: Mismatching fragment identifier."),a.length&&this.load(this.tabs.index(s),t),this._toggle(t,l)},_toggle:function(t,n){function o(){r.running=!1,r._trigger("activate",t,n)}function u(){n.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),i.length&&r.options.show?r._show(i,r.options.show,o):(i.show(),o())}var r=this,i=n.newPanel,s=n.oldPanel;this.running=!0,s.length&&this.options.hide?this._hide(s,this.options.hide,function(){n.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),u()}):(n.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),s.hide(),u()),s.attr({"aria-expanded":"false","aria-hidden":"true"}),n.oldTab.attr("aria-selected","false"),i.length&&s.length?n.oldTab.attr("tabIndex",-1):i.length&&this.tabs.filter(function(){return e(this).attr("tabIndex")===0}).attr("tabIndex",-1),i.attr({"aria-expanded":"true","aria-hidden":"false"}),n.newTab.attr({"aria-selected":"true",tabIndex:0})},_activate:function(t){var n,r=this._findActive(t);if(r[0]===this.active[0])return;r.length||(r=this.active),n=r.find(".ui-tabs-anchor")[0],this._eventHandler({target:n,currentTarget:n,preventDefault:e.noop})},_findActive:function(t){return t===!1?e():this.tabs.eq(t)},_getIndex:function(e){return typeof e=="string"&&(e=this.anchors.index(this.anchors.filter("[href$='"+e+"']"))),e},_destroy:function(){this.xhr&&this.xhr.abort(),this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"),this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"),this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeData("href.tabs").removeData("load.tabs").removeUniqueId(),this.tabs.add(this.panels).each(function(){e.data(this,"ui-tabs-destroy")?e(this).remove():e(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")}),this.tabs.each(function(){var t=e(this),n=t.data("ui-tabs-aria-controls");n?t.attr("aria-controls",n):t.removeAttr("aria-controls")}),this.panels.show(),this.options.heightStyle!=="content"&&this.panels.css("height","")},enable:function(n){var r=this.options.disabled;if(r===!1)return;n===t?r=!1:(n=this._getIndex(n),e.isArray(r)?r=e.map(r,function(e){return e!==n?e:null}):r=e.map(this.tabs,function(e,t){return t!==n?t:null})),this._setupDisabled(r)},disable:function(n){var r=this.options.disabled;if(r===!0)return;if(n===t)r=!0;else{n=this._getIndex(n);if(e.inArray(n,r)!==-1)return;e.isArray(r)?r=e.merge([n],r).sort():r=[n]}this._setupDisabled(r)},load:function(t,n){t=this._getIndex(t);var r=this,i=this.tabs.eq(t),o=i.find(".ui-tabs-anchor"),u=this._getPanelForTab(i),a={tab:i,panel:u};if(s(o[0]))return;this.xhr=e.ajax(this._ajaxSettings(o,n,a)),this.xhr&&this.xhr.statusText!=="canceled"&&(i.addClass("ui-tabs-loading"),u.attr("aria-busy","true"),this.xhr.success(function(e){setTimeout(function(){u.html(e),r._trigger("load",n,a)},1)}).complete(function(e,t){setTimeout(function(){t==="abort"&&r.panels.stop(!1,!0),i.removeClass("ui-tabs-loading"),u.removeAttr("aria-busy"),e===r.xhr&&delete r.xhr},1)}))},_ajaxSettings:function(t,n,r){var i=this;return{url:t.attr("href"),beforeSend:function(t,s){return i._trigger("beforeLoad",n,e.extend({jqXHR:t,ajaxSettings:s},r))}}},_getPanelForTab:function(t){var n=e(t).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+n))}}),e.uiBackCompat!==!1&&(e.ui.tabs.prototype._ui=function(e,t){return{tab:e,panel:t,index:this.anchors.index(e)}},e.widget("ui.tabs",e.ui.tabs,{url:function(e,t){this.anchors.eq(e).attr("href",t)}}),e.widget("ui.tabs",e.ui.tabs,{options:{ajaxOptions:null,cache:!1},_create:function(){this._super();var t=this;this._on({tabsbeforeload:function(n,r){if(e.data(r.tab[0],"cache.tabs")){n.preventDefault();return}r.jqXHR.success(function(){t.options.cache&&e.data(r.tab[0],"cache.tabs",!0)})}})},_ajaxSettings:function(t,n,r){var i=this.options.ajaxOptions;return e.extend({},i,{error:function(e,t){try{i.error(e,t,r.tab.closest("li").index(),r.tab[0])}catch(n){}}},this._superApply(arguments))},_setOption:function(e,t){e==="cache"&&t===!1&&this.anchors.removeData("cache.tabs"),this._super(e,t)},_destroy:function(){this.anchors.removeData("cache.tabs"),this._super()},url:function(e){this.anchors.eq(e).removeData("cache.tabs"),this._superApply(arguments)}}),e.widget("ui.tabs",e.ui.tabs,{abort:function(){this.xhr&&this.xhr.abort()}}),e.widget("ui.tabs",e.ui.tabs,{options:{spinner:"<em>Loading&#8230;</em>"},_create:function(){this._super(),this._on({tabsbeforeload:function(e,t){if(e.target!==this.element[0]||!this.options.spinner)return;var n=t.tab.find("span"),r=n.html();n.html(this.options.spinner),t.jqXHR.complete(function(){n.html(r)})}})}}),e.widget("ui.tabs",e.ui.tabs,{options:{enable:null,disable:null},enable:function(t){var n=this.options,r;if(t&&n.disabled===!0||e.isArray(n.disabled)&&e.inArray(t,n.disabled)!==-1)r=!0;this._superApply(arguments),r&&this._trigger("enable",null,this._ui(this.anchors[t],this.panels[t]))},disable:function(t){var n=this.options,r;if(t&&n.disabled===!1||e.isArray(n.disabled)&&e.inArray(t,n.disabled)===-1)r=!0;this._superApply(arguments),r&&this._trigger("disable",null,this._ui(this.anchors[t],this.panels[t]))}}),e.widget("ui.tabs",e.ui.tabs,{options:{add:null,remove:null,tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"},add:function(n,r,i){i===t&&(i=this.anchors.length);var s,o,u=this.options,a=e(u.tabTemplate.replace(/#\{href\}/g,n).replace(/#\{label\}/g,r)),f=n.indexOf("#")?this._tabId(a):n.replace("#","");return a.addClass("ui-state-default ui-corner-top").data("ui-tabs-destroy",!0),a.attr("aria-controls",f),s=i>=this.tabs.length,o=this.element.find("#"+f),o.length||(o=this._createPanel(f),s?i>0?o.insertAfter(this.panels.eq(-1)):o.appendTo(this.element):o.insertBefore(this.panels[i])),o.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").hide(),s?a.appendTo(this.tablist):a.insertBefore(this.tabs[i]),u.disabled=e.map(u.disabled,function(e){return e>=i?++e:e}),this.refresh(),this.tabs.length===1&&u.active===!1&&this.option("active",0),this._trigger("add",null,this._ui(this.anchors[i],this.panels[i])),this},remove:function(t){t=this._getIndex(t);var n=this.options,r=this.tabs.eq(t).remove(),i=this._getPanelForTab(r).remove();return r.hasClass("ui-tabs-active")&&this.anchors.length>2&&this._activate(t+(t+1<this.anchors.length?1:-1)),n.disabled=e.map(e.grep(n.disabled,function(e){return e!==t}),function(e){return e>=t?--e:e}),this.refresh(),this._trigger("remove",null,this._ui(r.find("a")[0],i[0])),this}}),e.widget("ui.tabs",e.ui.tabs,{length:function(){return this.anchors.length}}),e.widget("ui.tabs",e.ui.tabs,{options:{idPrefix:"ui-tabs-"},_tabId:function(t){var n=t.is("li")?t.find("a[href]"):t;return n=n[0],e(n).closest("li").attr("aria-controls")||n.title&&n.title.replace(/\s/g,"_").replace(/[^\w\u00c0-\uFFFF\-]/g,"")||this.options.idPrefix+i()}}),e.widget("ui.tabs",e.ui.tabs,{options:{panelTemplate:"<div></div>"},_createPanel:function(t){return e(this.options.panelTemplate).attr("id",t).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)}}),e.widget("ui.tabs",e.ui.tabs,{_create:function(){var e=this.options;e.active===null&&e.selected!==t&&(e.active=e.selected===-1?!1:e.selected),this._super(),e.selected=e.active,e.selected===!1&&(e.selected=-1)},_setOption:function(e,t){if(e!=="selected")return this._super(e,t);var n=this.options;this._super("active",t===-1?!1:t),n.selected=n.active,n.selected===!1&&(n.selected=-1)},_eventHandler:function(){this._superApply(arguments),this.options.selected=this.options.active,this.options.selected===!1&&(this.options.selected=-1)}}),e.widget("ui.tabs",e.ui.tabs,{options:{show:null,select:null},_create:function(){this._super(),this.options.active!==!1&&this._trigger("show",null,this._ui(this.active.find(".ui-tabs-anchor")[0],this._getPanelForTab(this.active)[0]))},_trigger:function(e,t,n){var r,i,s=this._superApply(arguments);return s?(e==="beforeActivate"?(r=n.newTab.length?n.newTab:n.oldTab,i=n.newPanel.length?n.newPanel:n.oldPanel,s=this._super("select",t,{tab:r.find(".ui-tabs-anchor")[0],panel:i[0],index:r.closest("li").index()})):e==="activate"&&n.newTab.length&&(s=this._super("show",t,{tab:n.newTab.find(".ui-tabs-anchor")[0],panel:n.newPanel[0],index:n.newTab.closest("li").index()})),s):!1}}),e.widget("ui.tabs",e.ui.tabs,{select:function(e){e=this._getIndex(e);if(e===-1){if(!this.options.collapsible||this.options.selected===-1)return;e=this.options.selected}this.anchors.eq(e).trigger(this.options.event+this.eventNamespace)}}),function(){var t=0;e.widget("ui.tabs",e.ui.tabs,{options:{cookie:null},_create:function(){var e=this.options,t;e.active==null&&e.cookie&&(t=parseInt(this._cookie(),10),t===-1&&(t=!1),e.active=t),this._super()},_cookie:function(n){var r=[this.cookie||(this.cookie=this.options.cookie.name||"ui-tabs-"+ ++t)];return arguments.length&&(r.push(n===!1?-1:n),r.push(this.options.cookie)),e.cookie.apply(null,r)},_refresh:function(){this._super(),this.options.cookie&&this._cookie(this.options.active,this.options.cookie)},_eventHandler:function(){this._superApply(arguments),this.options.cookie&&this._cookie(this.options.active,this.options.cookie)},_destroy:function(){this._super(),this.options.cookie&&this._cookie(null,this.options.cookie)}})}(),e.widget("ui.tabs",e.ui.tabs,{_trigger:function(t,n,r){var i=e.extend({},r);return t==="load"&&(i.panel=i.panel[0],i.tab=i.tab.find(".ui-tabs-anchor")[0]),this._super(t,n,i)}}),e.widget("ui.tabs",e.ui.tabs,{options:{fx:null},_getFx:function(){var t,n,r=this.options.fx;return r&&(e.isArray(r)?(t=r[0],n=r[1]):t=n=r),r?{show:n,hide:t}:null},_toggle:function(e,t){function o(){n.running=!1,n._trigger("activate",e,t)}function u(){t.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),r.length&&s.show?r.animate(s.show,s.show.duration,function(){o()}):(r.show(),o())}var n=this,r=t.newPanel,i=t.oldPanel,s=this._getFx();if(!s)return this._super(e,t);n.running=!0,i.length&&s.hide?i.animate(s.hide,s.hide.duration,function(){t.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),u()}):(t.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),i.hide(),u())}}))})(jQuery);jQuery.effects||function(e,t){var n=e.uiBackCompat!==!1,r="ui-effects-";e.effects={effect:{}},function(t,n){function p(e,t,n){var r=a[t.type]||{};return e==null?n||!t.def?null:t.def:(e=r.floor?~~e:parseFloat(e),isNaN(e)?t.def:r.mod?(e+r.mod)%r.mod:0>e?0:r.max<e?r.max:e)}function d(e){var n=o(),r=n._rgba=[];return e=e.toLowerCase(),h(s,function(t,i){var s,o=i.re.exec(e),a=o&&i.parse(o),f=i.space||"rgba";if(a)return s=n[f](a),n[u[f].cache]=s[u[f].cache],r=n._rgba=s._rgba,!1}),r.length?(r.join()==="0,0,0,0"&&t.extend(r,c.transparent),n):c[e]}function v(e,t,n){return n=(n+1)%1,n*6<1?e+(t-e)*n*6:n*2<1?t:n*3<2?e+(t-e)*(2/3-n)*6:e}var r="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "),i=/^([\-+])=\s*(\d+\.?\d*)/,s=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1],e[2],e[3],e[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1]*2.55,e[2]*2.55,e[3]*2.55,e[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(e){return[e[1],e[2]/100,e[3]/100,e[4]]}}],o=t.Color=function(e,n,r,i){return new t.Color.fn.parse(e,n,r,i)},u={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},a={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},f=o.support={},l=t("<p>")[0],c,h=t.each;l.style.cssText="background-color:rgba(1,1,1,.5)",f.rgba=l.style.backgroundColor.indexOf("rgba")>-1,h(u,function(e,t){t.cache="_"+e,t.props.alpha={idx:3,type:"percent",def:1}}),o.fn=t.extend(o.prototype,{parse:function(r,i,s,a){if(r===n)return this._rgba=[null,null,null,null],this;if(r.jquery||r.nodeType)r=t(r).css(i),i=n;var f=this,l=t.type(r),v=this._rgba=[];i!==n&&(r=[r,i,s,a],l="array");if(l==="string")return this.parse(d(r)||c._default);if(l==="array")return h(u.rgba.props,function(e,t){v[t.idx]=p(r[t.idx],t)}),this;if(l==="object")return r instanceof o?h(u,function(e,t){r[t.cache]&&(f[t.cache]=r[t.cache].slice())}):h(u,function(t,n){var i=n.cache;h(n.props,function(e,t){if(!f[i]&&n.to){if(e==="alpha"||r[e]==null)return;f[i]=n.to(f._rgba)}f[i][t.idx]=p(r[e],t,!0)}),f[i]&&e.inArray(null,f[i].slice(0,3))<0&&(f[i][3]=1,n.from&&(f._rgba=n.from(f[i])))}),this},is:function(e){var t=o(e),n=!0,r=this;return h(u,function(e,i){var s,o=t[i.cache];return o&&(s=r[i.cache]||i.to&&i.to(r._rgba)||[],h(i.props,function(e,t){if(o[t.idx]!=null)return n=o[t.idx]===s[t.idx],n})),n}),n},_space:function(){var e=[],t=this;return h(u,function(n,r){t[r.cache]&&e.push(n)}),e.pop()},transition:function(e,t){var n=o(e),r=n._space(),i=u[r],s=this.alpha()===0?o("transparent"):this,f=s[i.cache]||i.to(s._rgba),l=f.slice();return n=n[i.cache],h(i.props,function(e,r){var i=r.idx,s=f[i],o=n[i],u=a[r.type]||{};if(o===null)return;s===null?l[i]=o:(u.mod&&(o-s>u.mod/2?s+=u.mod:s-o>u.mod/2&&(s-=u.mod)),l[i]=p((o-s)*t+s,r))}),this[r](l)},blend:function(e){if(this._rgba[3]===1)return this;var n=this._rgba.slice(),r=n.pop(),i=o(e)._rgba;return o(t.map(n,function(e,t){return(1-r)*i[t]+r*e}))},toRgbaString:function(){var e="rgba(",n=t.map(this._rgba,function(e,t){return e==null?t>2?1:0:e});return n[3]===1&&(n.pop(),e="rgb("),e+n.join()+")"},toHslaString:function(){var e="hsla(",n=t.map(this.hsla(),function(e,t){return e==null&&(e=t>2?1:0),t&&t<3&&(e=Math.round(e*100)+"%"),e});return n[3]===1&&(n.pop(),e="hsl("),e+n.join()+")"},toHexString:function(e){var n=this._rgba.slice(),r=n.pop();return e&&n.push(~~(r*255)),"#"+t.map(n,function(e){return e=(e||0).toString(16),e.length===1?"0"+e:e}).join("")},toString:function(){return this._rgba[3]===0?"transparent":this.toRgbaString()}}),o.fn.parse.prototype=o.fn,u.hsla.to=function(e){if(e[0]==null||e[1]==null||e[2]==null)return[null,null,null,e[3]];var t=e[0]/255,n=e[1]/255,r=e[2]/255,i=e[3],s=Math.max(t,n,r),o=Math.min(t,n,r),u=s-o,a=s+o,f=a*.5,l,c;return o===s?l=0:t===s?l=60*(n-r)/u+360:n===s?l=60*(r-t)/u+120:l=60*(t-n)/u+240,f===0||f===1?c=f:f<=.5?c=u/a:c=u/(2-a),[Math.round(l)%360,c,f,i==null?1:i]},u.hsla.from=function(e){if(e[0]==null||e[1]==null||e[2]==null)return[null,null,null,e[3]];var t=e[0]/360,n=e[1],r=e[2],i=e[3],s=r<=.5?r*(1+n):r+n-r*n,o=2*r-s;return[Math.round(v(o,s,t+1/3)*255),Math.round(v(o,s,t)*255),Math.round(v(o,s,t-1/3)*255),i]},h(u,function(e,r){var s=r.props,u=r.cache,a=r.to,f=r.from;o.fn[e]=function(e){a&&!this[u]&&(this[u]=a(this._rgba));if(e===n)return this[u].slice();var r,i=t.type(e),l=i==="array"||i==="object"?e:arguments,c=this[u].slice();return h(s,function(e,t){var n=l[i==="object"?e:t.idx];n==null&&(n=c[t.idx]),c[t.idx]=p(n,t)}),f?(r=o(f(c)),r[u]=c,r):o(c)},h(s,function(n,r){if(o.fn[n])return;o.fn[n]=function(s){var o=t.type(s),u=n==="alpha"?this._hsla?"hsla":"rgba":e,a=this[u](),f=a[r.idx],l;return o==="undefined"?f:(o==="function"&&(s=s.call(this,f),o=t.type(s)),s==null&&r.empty?this:(o==="string"&&(l=i.exec(s),l&&(s=f+parseFloat(l[2])*(l[1]==="+"?1:-1))),a[r.idx]=s,this[u](a)))}})}),h(r,function(e,n){t.cssHooks[n]={set:function(e,r){var i,s,u="";if(t.type(r)!=="string"||(i=d(r))){r=o(i||r);if(!f.rgba&&r._rgba[3]!==1){s=n==="backgroundColor"?e.parentNode:e;while((u===""||u==="transparent")&&s&&s.style)try{u=t.css(s,"backgroundColor"),s=s.parentNode}catch(a){}r=r.blend(u&&u!=="transparent"?u:"_default")}r=r.toRgbaString()}try{e.style[n]=r}catch(l){}}},t.fx.step[n]=function(e){e.colorInit||(e.start=o(e.elem,n),e.end=o(e.end),e.colorInit=!0),t.cssHooks[n].set(e.elem,e.start.transition(e.end,e.pos))}}),t.cssHooks.borderColor={expand:function(e){var t={};return h(["Top","Right","Bottom","Left"],function(n,r){t["border"+r+"Color"]=e}),t}},c=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(jQuery),function(){function i(){var t=this.ownerDocument.defaultView?this.ownerDocument.defaultView.getComputedStyle(this,null):this.currentStyle,n={},r,i;if(t&&t.length&&t[0]&&t[t[0]]){i=t.length;while(i--)r=t[i],typeof t[r]=="string"&&(n[e.camelCase(r)]=t[r])}else for(r in t)typeof t[r]=="string"&&(n[r]=t[r]);return n}function s(t,n){var i={},s,o;for(s in n)o=n[s],t[s]!==o&&!r[s]&&(e.fx.step[s]||!isNaN(parseFloat(o)))&&(i[s]=o);return i}var n=["add","remove","toggle"],r={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};e.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(t,n){e.fx.step[n]=function(e){if(e.end!=="none"&&!e.setAttr||e.pos===1&&!e.setAttr)jQuery.style(e.elem,n,e.end),e.setAttr=!0}}),e.effects.animateClass=function(t,r,o,u){var a=e.speed(r,o,u);return this.queue(function(){var r=e(this),o=r.attr("class")||"",u,f=a.children?r.find("*").andSelf():r;f=f.map(function(){var t=e(this);return{el:t,start:i.call(this)}}),u=function(){e.each(n,function(e,n){t[n]&&r[n+"Class"](t[n])})},u(),f=f.map(function(){return this.end=i.call(this.el[0]),this.diff=s(this.start,this.end),this}),r.attr("class",o),f=f.map(function(){var t=this,n=e.Deferred(),r=jQuery.extend({},a,{queue:!1,complete:function(){n.resolve(t)}});return this.el.animate(this.diff,r),n.promise()}),e.when.apply(e,f.get()).done(function(){u(),e.each(arguments,function(){var t=this.el;e.each(this.diff,function(e){t.css(e,"")})}),a.complete.call(r[0])})})},e.fn.extend({_addClass:e.fn.addClass,addClass:function(t,n,r,i){return n?e.effects.animateClass.call(this,{add:t},n,r,i):this._addClass(t)},_removeClass:e.fn.removeClass,removeClass:function(t,n,r,i){return n?e.effects.animateClass.call(this,{remove:t},n,r,i):this._removeClass(t)},_toggleClass:e.fn.toggleClass,toggleClass:function(n,r,i,s,o){return typeof r=="boolean"||r===t?i?e.effects.animateClass.call(this,r?{add:n}:{remove:n},i,s,o):this._toggleClass(n,r):e.effects.animateClass.call(this,{toggle:n},r,i,s)},switchClass:function(t,n,r,i,s){return e.effects.animateClass.call(this,{add:n,remove:t},r,i,s)}})}(),function(){function i(t,n,r,i){e.isPlainObject(t)&&(n=t,t=t.effect),t={effect:t},n==null&&(n={}),e.isFunction(n)&&(i=n,r=null,n={});if(typeof n=="number"||e.fx.speeds[n])i=r,r=n,n={};return e.isFunction(r)&&(i=r,r=null),n&&e.extend(t,n),r=r||n.duration,t.duration=e.fx.off?0:typeof r=="number"?r:r in e.fx.speeds?e.fx.speeds[r]:e.fx.speeds._default,t.complete=i||n.complete,t}function s(t){return!t||typeof t=="number"||e.fx.speeds[t]?!0:typeof t=="string"&&!e.effects.effect[t]?n&&e.effects[t]?!1:!0:!1}e.extend(e.effects,{version:"1.9.2",save:function(e,t){for(var n=0;n<t.length;n++)t[n]!==null&&e.data(r+t[n],e[0].style[t[n]])},restore:function(e,n){var i,s;for(s=0;s<n.length;s++)n[s]!==null&&(i=e.data(r+n[s]),i===t&&(i=""),e.css(n[s],i))},setMode:function(e,t){return t==="toggle"&&(t=e.is(":hidden")?"show":"hide"),t},getBaseline:function(e,t){var n,r;switch(e[0]){case"top":n=0;break;case"middle":n=.5;break;case"bottom":n=1;break;default:n=e[0]/t.height}switch(e[1]){case"left":r=0;break;case"center":r=.5;break;case"right":r=1;break;default:r=e[1]/t.width}return{x:r,y:n}},createWrapper:function(t){if(t.parent().is(".ui-effects-wrapper"))return t.parent();var n={width:t.outerWidth(!0),height:t.outerHeight(!0),"float":t.css("float")},r=e("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),i={width:t.width(),height:t.height()},s=document.activeElement;try{s.id}catch(o){s=document.body}return t.wrap(r),(t[0]===s||e.contains(t[0],s))&&e(s).focus(),r=t.parent(),t.css("position")==="static"?(r.css({position:"relative"}),t.css({position:"relative"})):(e.extend(n,{position:t.css("position"),zIndex:t.css("z-index")}),e.each(["top","left","bottom","right"],function(e,r){n[r]=t.css(r),isNaN(parseInt(n[r],10))&&(n[r]="auto")}),t.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),t.css(i),r.css(n).show()},removeWrapper:function(t){var n=document.activeElement;return t.parent().is(".ui-effects-wrapper")&&(t.parent().replaceWith(t),(t[0]===n||e.contains(t[0],n))&&e(n).focus()),t},setTransition:function(t,n,r,i){return i=i||{},e.each(n,function(e,n){var s=t.cssUnit(n);s[0]>0&&(i[n]=s[0]*r+s[1])}),i}}),e.fn.extend({effect:function(){function a(n){function u(){e.isFunction(i)&&i.call(r[0]),e.isFunction(n)&&n()}var r=e(this),i=t.complete,s=t.mode;(r.is(":hidden")?s==="hide":s==="show")?u():o.call(r[0],t,u)}var t=i.apply(this,arguments),r=t.mode,s=t.queue,o=e.effects.effect[t.effect],u=!o&&n&&e.effects[t.effect];return e.fx.off||!o&&!u?r?this[r](t.duration,t.complete):this.each(function(){t.complete&&t.complete.call(this)}):o?s===!1?this.each(a):this.queue(s||"fx",a):u.call(this,{options:t,duration:t.duration,callback:t.complete,mode:t.mode})},_show:e.fn.show,show:function(e){if(s(e))return this._show.apply(this,arguments);var t=i.apply(this,arguments);return t.mode="show",this.effect.call(this,t)},_hide:e.fn.hide,hide:function(e){if(s(e))return this._hide.apply(this,arguments);var t=i.apply(this,arguments);return t.mode="hide",this.effect.call(this,t)},__toggle:e.fn.toggle,toggle:function(t){if(s(t)||typeof t=="boolean"||e.isFunction(t))return this.__toggle.apply(this,arguments);var n=i.apply(this,arguments);return n.mode="toggle",this.effect.call(this,n)},cssUnit:function(t){var n=this.css(t),r=[];return e.each(["em","px","%","pt"],function(e,t){n.indexOf(t)>0&&(r=[parseFloat(n),t])}),r}})}(),function(){var t={};e.each(["Quad","Cubic","Quart","Quint","Expo"],function(e,n){t[n]=function(t){return Math.pow(t,e+2)}}),e.extend(t,{Sine:function(e){return 1-Math.cos(e*Math.PI/2)},Circ:function(e){return 1-Math.sqrt(1-e*e)},Elastic:function(e){return e===0||e===1?e:-Math.pow(2,8*(e-1))*Math.sin(((e-1)*80-7.5)*Math.PI/15)},Back:function(e){return e*e*(3*e-2)},Bounce:function(e){var t,n=4;while(e<((t=Math.pow(2,--n))-1)/11);return 1/Math.pow(4,3-n)-7.5625*Math.pow((t*3-2)/22-e,2)}}),e.each(t,function(t,n){e.easing["easeIn"+t]=n,e.easing["easeOut"+t]=function(e){return 1-n(1-e)},e.easing["easeInOut"+t]=function(e){return e<.5?n(e*2)/2:1-n(e*-2+2)/2}})}()}(jQuery);(function(e,t){var n=/up|down|vertical/,r=/up|left|vertical|horizontal/;e.effects.effect.blind=function(t,i){var s=e(this),o=["position","top","bottom","left","right","height","width"],u=e.effects.setMode(s,t.mode||"hide"),a=t.direction||"up",f=n.test(a),l=f?"height":"width",c=f?"top":"left",h=r.test(a),p={},d=u==="show",v,m,g;s.parent().is(".ui-effects-wrapper")?e.effects.save(s.parent(),o):e.effects.save(s,o),s.show(),v=e.effects.createWrapper(s).css({overflow:"hidden"}),m=v[l](),g=parseFloat(v.css(c))||0,p[l]=d?m:0,h||(s.css(f?"bottom":"right",0).css(f?"top":"left","auto").css({position:"absolute"}),p[c]=d?g:m+g),d&&(v.css(l,0),h||v.css(c,g+m)),v.animate(p,{duration:t.duration,easing:t.easing,queue:!1,complete:function(){u==="hide"&&s.hide(),e.effects.restore(s,o),e.effects.removeWrapper(s),i()}})}})(jQuery);(function(e,t){e.effects.effect.bounce=function(t,n){var r=e(this),i=["position","top","bottom","left","right","height","width"],s=e.effects.setMode(r,t.mode||"effect"),o=s==="hide",u=s==="show",a=t.direction||"up",f=t.distance,l=t.times||5,c=l*2+(u||o?1:0),h=t.duration/c,p=t.easing,d=a==="up"||a==="down"?"top":"left",v=a==="up"||a==="left",m,g,y,b=r.queue(),w=b.length;(u||o)&&i.push("opacity"),e.effects.save(r,i),r.show(),e.effects.createWrapper(r),f||(f=r[d==="top"?"outerHeight":"outerWidth"]()/3),u&&(y={opacity:1},y[d]=0,r.css("opacity",0).css(d,v?-f*2:f*2).animate(y,h,p)),o&&(f/=Math.pow(2,l-1)),y={},y[d]=0;for(m=0;m<l;m++)g={},g[d]=(v?"-=":"+=")+f,r.animate(g,h,p).animate(y,h,p),f=o?f*2:f/2;o&&(g={opacity:0},g[d]=(v?"-=":"+=")+f,r.animate(g,h,p)),r.queue(function(){o&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}),w>1&&b.splice.apply(b,[1,0].concat(b.splice(w,c+1))),r.dequeue()}})(jQuery);(function(e,t){e.effects.effect.clip=function(t,n){var r=e(this),i=["position","top","bottom","left","right","height","width"],s=e.effects.setMode(r,t.mode||"hide"),o=s==="show",u=t.direction||"vertical",a=u==="vertical",f=a?"height":"width",l=a?"top":"left",c={},h,p,d;e.effects.save(r,i),r.show(),h=e.effects.createWrapper(r).css({overflow:"hidden"}),p=r[0].tagName==="IMG"?h:r,d=p[f](),o&&(p.css(f,0),p.css(l,d/2)),c[f]=o?d:0,c[l]=o?0:d/2,p.animate(c,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){o||r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.drop=function(t,n){var r=e(this),i=["position","top","bottom","left","right","opacity","height","width"],s=e.effects.setMode(r,t.mode||"hide"),o=s==="show",u=t.direction||"left",a=u==="up"||u==="down"?"top":"left",f=u==="up"||u==="left"?"pos":"neg",l={opacity:o?1:0},c;e.effects.save(r,i),r.show(),e.effects.createWrapper(r),c=t.distance||r[a==="top"?"outerHeight":"outerWidth"](!0)/2,o&&r.css("opacity",0).css(a,f==="pos"?-c:c),l[a]=(o?f==="pos"?"+=":"-=":f==="pos"?"-=":"+=")+c,r.animate(l,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s==="hide"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.explode=function(t,n){function y(){c.push(this),c.length===r*i&&b()}function b(){s.css({visibility:"visible"}),e(c).remove(),u||s.hide(),n()}var r=t.pieces?Math.round(Math.sqrt(t.pieces)):3,i=r,s=e(this),o=e.effects.setMode(s,t.mode||"hide"),u=o==="show",a=s.show().css("visibility","hidden").offset(),f=Math.ceil(s.outerWidth()/i),l=Math.ceil(s.outerHeight()/r),c=[],h,p,d,v,m,g;for(h=0;h<r;h++){v=a.top+h*l,g=h-(r-1)/2;for(p=0;p<i;p++)d=a.left+p*f,m=p-(i-1)/2,s.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-p*f,top:-h*l}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:f,height:l,left:d+(u?m*f:0),top:v+(u?g*l:0),opacity:u?0:1}).animate({left:d+(u?0:m*f),top:v+(u?0:g*l),opacity:u?1:0},t.duration||500,t.easing,y)}}})(jQuery);(function(e,t){e.effects.effect.fade=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||"toggle");r.animate({opacity:i},{queue:!1,duration:t.duration,easing:t.easing,complete:n})}})(jQuery);(function(e,t){e.effects.effect.fold=function(t,n){var r=e(this),i=["position","top","bottom","left","right","height","width"],s=e.effects.setMode(r,t.mode||"hide"),o=s==="show",u=s==="hide",a=t.size||15,f=/([0-9]+)%/.exec(a),l=!!t.horizFirst,c=o!==l,h=c?["width","height"]:["height","width"],p=t.duration/2,d,v,m={},g={};e.effects.save(r,i),r.show(),d=e.effects.createWrapper(r).css({overflow:"hidden"}),v=c?[d.width(),d.height()]:[d.height(),d.width()],f&&(a=parseInt(f[1],10)/100*v[u?0:1]),o&&d.css(l?{height:0,width:a}:{height:a,width:0}),m[h[0]]=o?v[0]:a,g[h[1]]=o?v[1]:0,d.animate(m,p,t.easing).animate(g,p,t.easing,function(){u&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()})}})(jQuery);(function(e,t){e.effects.effect.highlight=function(t,n){var r=e(this),i=["backgroundImage","backgroundColor","opacity"],s=e.effects.setMode(r,t.mode||"show"),o={backgroundColor:r.css("backgroundColor")};s==="hide"&&(o.opacity=0),e.effects.save(r,i),r.show().css({backgroundImage:"none",backgroundColor:t.color||"#ffff99"}).animate(o,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s==="hide"&&r.hide(),e.effects.restore(r,i),n()}})}})(jQuery);(function(e,t){e.effects.effect.pulsate=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||"show"),s=i==="show",o=i==="hide",u=s||i==="hide",a=(t.times||5)*2+(u?1:0),f=t.duration/a,l=0,c=r.queue(),h=c.length,p;if(s||!r.is(":visible"))r.css("opacity",0).show(),l=1;for(p=1;p<a;p++)r.animate({opacity:l},f,t.easing),l=1-l;r.animate({opacity:l},f,t.easing),r.queue(function(){o&&r.hide(),n()}),h>1&&c.splice.apply(c,[1,0].concat(c.splice(h,a+1))),r.dequeue()}})(jQuery);(function(e,t){e.effects.effect.puff=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||"hide"),s=i==="hide",o=parseInt(t.percent,10)||150,u=o/100,a={height:r.height(),width:r.width(),outerHeight:r.outerHeight(),outerWidth:r.outerWidth()};e.extend(t,{effect:"scale",queue:!1,fade:!0,mode:i,complete:n,percent:s?o:100,from:s?a:{height:a.height*u,width:a.width*u,outerHeight:a.outerHeight*u,outerWidth:a.outerWidth*u}}),r.effect(t)},e.effects.effect.scale=function(t,n){var r=e(this),i=e.extend(!0,{},t),s=e.effects.setMode(r,t.mode||"effect"),o=parseInt(t.percent,10)||(parseInt(t.percent,10)===0?0:s==="hide"?0:100),u=t.direction||"both",a=t.origin,f={height:r.height(),width:r.width(),outerHeight:r.outerHeight(),outerWidth:r.outerWidth()},l={y:u!=="horizontal"?o/100:1,x:u!=="vertical"?o/100:1};i.effect="size",i.queue=!1,i.complete=n,s!=="effect"&&(i.origin=a||["middle","center"],i.restore=!0),i.from=t.from||(s==="show"?{height:0,width:0,outerHeight:0,outerWidth:0}:f),i.to={height:f.height*l.y,width:f.width*l.x,outerHeight:f.outerHeight*l.y,outerWidth:f.outerWidth*l.x},i.fade&&(s==="show"&&(i.from.opacity=0,i.to.opacity=1),s==="hide"&&(i.from.opacity=1,i.to.opacity=0)),r.effect(i)},e.effects.effect.size=function(t,n){var r,i,s,o=e(this),u=["position","top","bottom","left","right","width","height","overflow","opacity"],a=["position","top","bottom","left","right","overflow","opacity"],f=["width","height","overflow"],l=["fontSize"],c=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],h=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],p=e.effects.setMode(o,t.mode||"effect"),d=t.restore||p!=="effect",v=t.scale||"both",m=t.origin||["middle","center"],g=o.css("position"),y=d?u:a,b={height:0,width:0,outerHeight:0,outerWidth:0};p==="show"&&o.show(),r={height:o.height(),width:o.width(),outerHeight:o.outerHeight(),outerWidth:o.outerWidth()},t.mode==="toggle"&&p==="show"?(o.from=t.to||b,o.to=t.from||r):(o.from=t.from||(p==="show"?b:r),o.to=t.to||(p==="hide"?b:r)),s={from:{y:o.from.height/r.height,x:o.from.width/r.width},to:{y:o.to.height/r.height,x:o.to.width/r.width}};if(v==="box"||v==="both")s.from.y!==s.to.y&&(y=y.concat(c),o.from=e.effects.setTransition(o,c,s.from.y,o.from),o.to=e.effects.setTransition(o,c,s.to.y,o.to)),s.from.x!==s.to.x&&(y=y.concat(h),o.from=e.effects.setTransition(o,h,s.from.x,o.from),o.to=e.effects.setTransition(o,h,s.to.x,o.to));(v==="content"||v==="both")&&s.from.y!==s.to.y&&(y=y.concat(l).concat(f),o.from=e.effects.setTransition(o,l,s.from.y,o.from),o.to=e.effects.setTransition(o,l,s.to.y,o.to)),e.effects.save(o,y),o.show(),e.effects.createWrapper(o),o.css("overflow","hidden").css(o.from),m&&(i=e.effects.getBaseline(m,r),o.from.top=(r.outerHeight-o.outerHeight())*i.y,o.from.left=(r.outerWidth-o.outerWidth())*i.x,o.to.top=(r.outerHeight-o.to.outerHeight)*i.y,o.to.left=(r.outerWidth-o.to.outerWidth)*i.x),o.css(o.from);if(v==="content"||v==="both")c=c.concat(["marginTop","marginBottom"]).concat(l),h=h.concat(["marginLeft","marginRight"]),f=u.concat(c).concat(h),o.find("*[width]").each(function(){var n=e(this),r={height:n.height(),width:n.width(),outerHeight:n.outerHeight(),outerWidth:n.outerWidth()};d&&e.effects.save(n,f),n.from={height:r.height*s.from.y,width:r.width*s.from.x,outerHeight:r.outerHeight*s.from.y,outerWidth:r.outerWidth*s.from.x},n.to={height:r.height*s.to.y,width:r.width*s.to.x,outerHeight:r.height*s.to.y,outerWidth:r.width*s.to.x},s.from.y!==s.to.y&&(n.from=e.effects.setTransition(n,c,s.from.y,n.from),n.to=e.effects.setTransition(n,c,s.to.y,n.to)),s.from.x!==s.to.x&&(n.from=e.effects.setTransition(n,h,s.from.x,n.from),n.to=e.effects.setTransition(n,h,s.to.x,n.to)),n.css(n.from),n.animate(n.to,t.duration,t.easing,function(){d&&e.effects.restore(n,f)})});o.animate(o.to,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){o.to.opacity===0&&o.css("opacity",o.from.opacity),p==="hide"&&o.hide(),e.effects.restore(o,y),d||(g==="static"?o.css({position:"relative",top:o.to.top,left:o.to.left}):e.each(["top","left"],function(e,t){o.css(t,function(t,n){var r=parseInt(n,10),i=e?o.to.left:o.to.top;return n==="auto"?i+"px":r+i+"px"})})),e.effects.removeWrapper(o),n()}})}})(jQuery);(function(e,t){e.effects.effect.shake=function(t,n){var r=e(this),i=["position","top","bottom","left","right","height","width"],s=e.effects.setMode(r,t.mode||"effect"),o=t.direction||"left",u=t.distance||20,a=t.times||3,f=a*2+1,l=Math.round(t.duration/f),c=o==="up"||o==="down"?"top":"left",h=o==="up"||o==="left",p={},d={},v={},m,g=r.queue(),y=g.length;e.effects.save(r,i),r.show(),e.effects.createWrapper(r),p[c]=(h?"-=":"+=")+u,d[c]=(h?"+=":"-=")+u*2,v[c]=(h?"-=":"+=")+u*2,r.animate(p,l,t.easing);for(m=1;m<a;m++)r.animate(d,l,t.easing).animate(v,l,t.easing);r.animate(d,l,t.easing).animate(p,l/2,t.easing).queue(function(){s==="hide"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}),y>1&&g.splice.apply(g,[1,0].concat(g.splice(y,f+1))),r.dequeue()}})(jQuery);(function(e,t){e.effects.effect.slide=function(t,n){var r=e(this),i=["position","top","bottom","left","right","width","height"],s=e.effects.setMode(r,t.mode||"show"),o=s==="show",u=t.direction||"left",a=u==="up"||u==="down"?"top":"left",f=u==="up"||u==="left",l,c={};e.effects.save(r,i),r.show(),l=t.distance||r[a==="top"?"outerHeight":"outerWidth"](!0),e.effects.createWrapper(r).css({overflow:"hidden"}),o&&r.css(a,f?isNaN(l)?"-"+l:-l:l),c[a]=(o?f?"+=":"-=":f?"-=":"+=")+l,r.animate(c,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s==="hide"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.transfer=function(t,n){var r=e(this),i=e(t.to),s=i.css("position")==="fixed",o=e("body"),u=s?o.scrollTop():0,a=s?o.scrollLeft():0,f=i.offset(),l={top:f.top-u,left:f.left-a,height:i.innerHeight(),width:i.innerWidth()},c=r.offset(),h=e('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(t.className).css({top:c.top-u,left:c.left-a,height:r.innerHeight(),width:r.innerWidth(),position:s?"fixed":"absolute"}).animate(l,t.duration,t.easing,function(){h.remove(),n()})}})(jQuery);;

/** Polyfill **/
/* jshint proto: true, unused: true */

if (!('console' in window)) { window.console = {}; }
if (!('log' in window.console) || (typeof window.console.log !== 'function')) {
	window.console = {log: function() {}};
}

if (typeof Object.create !== 'function') {
	Object.create = (function () {
		var Temp = function () {};
		return function (prototype) {
			if (arguments.length > 1) {
				throw Error('Second argument not supported');
			}
			if (typeof prototype !== 'object') {
				throw TypeError('Argument must be an object');
			}
			Temp.prototype = prototype;
			var result = new Temp();
			Temp.prototype = null;
			return result;
		};
	})();
}

if (typeof Object.getPrototypeOf !== 'function') {
	if (({}).__proto__ === Object.prototype && ([]).__proto__ === Array.prototype) {
		Object.getPrototypeOf = function getPrototypeOf(object) {
			return object.__proto__;
		};
	} else {
		Object.getPrototypeOf = function getPrototypeOf(object) {
			return object.constructor ? object.constructor.prototype : void 0;
		};
	}
}

if (!Array.prototype.indexOf) {
	Array.prototype.indexOf = function (searchElement, fromIndex) {
		var k;
		if (this === null) { throw new TypeError('"this" is null or not defined'); }
		var O = Object(this);
		var len = O.length >>> 0;
		if (len === 0) { return -1; }
		var n = +fromIndex || 0;
		if (Math.abs(n) === Infinity) { n = 0; }
		if (n >= len) { return -1; }
		k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);
		while (k < len) {
			if (k in O && O[k] === searchElement) { return k; }
			k++;
		}
		return -1;
	};
}

if (!('define' in window) || (typeof window.define !== 'function')) {
	(function() {
		'use strict';
		var modules = {}, lazyModules = {};
		var requireToModules = function(deps, lvl) {
			if (lvl > 1000) throw 'Recursion in define dependencies?';
			//var pref = '', prefLvl = lvl + 1;  while (prefLvl-- > 0) pref += '  ';
			var mods = [], mod, lmod, i;
			for (i = 0; i < deps.length; i++) {
				//console.log(pref + 'Require: ' + deps[i]);
				mod = null;
				if (deps[i] in modules) {
					mod = modules[deps[i]];
				} else if (deps[i] in lazyModules) {
					lmod = lazyModules[deps[i]];
					mod = (typeof lmod.module === 'function') ? lmod.module.apply(this, requireToModules(lmod.deps, lvl + 1)) : lmod.module;
					modules[lmod.name] = mod;
				}
				mods.push(mod);
			}
			return mods;
		};
		window.define = function(name, deps, module) {
			//console.log('Define: ' + name);
			lazyModules[name] = {name: name, deps: deps, module: module};
		};
		window.require = function(deps, func) {
			//console.log('Require Root');
			if (typeof func === 'function') func.apply(this, requireToModules(deps, 0));
		};
	})();
}
;

/** HasherUtil **/

window.HasherUtil = (function() {
	var _crcTable = null,
		makeCRCTable = function() {
			var c, n, k, crcTable = [];
			for (n = 0; n < 256; n++) {
				c = n;
				for (k = 0; k < 8; k++) { c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1)); }
				crcTable[n] = c;
			}
			return crcTable;
		},
		/**
		 * Get crc32
		 * @param {String} str value to hash
		 * @return {Number}
		 */
		crc32 = function(str) {
			var i, crc = (0 ^ (-1)), crcTable = _crcTable || (_crcTable = makeCRCTable());
			for (i = 0; i < str.length; i++) { crc = (crc >>> 8) ^ crcTable[(crc ^ str.charCodeAt(i)) & 0xFF]; }
			return (crc ^ (-1)) >>> 0;
		};

	return {
		crc32: crc32,
		/**
		 * Get crc32 hex version
		 * @param {String} str value to hash
		 * @return {String}
		 */
		crc32Hex: function(str) {
			var hexval = crc32(str).toString(16);
			while (hexval.length < 8) { hexval = '0' + hexval; }
			return hexval;
		}
	};
})();
;

/** Rectangle **/

define('Rectangle', [], function() {
	
	/**
	 * Create rectangle
	 * @param {Number} x
	 * @param {Number} y
	 * @param {Number} width
	 * @param {Number} height
	 * @class Rectangle
	 */
	var self = function(x, y, width, height) {
		if (x !== '%inherit%') {
			if (x) this.x = x;
			if (y) this.y = y;
			if (width) this.width = width;
			if (height) this.height = height;
		}
	};
	
	/** @type Number */
	self.prototype.x = 0;
	/** @type Number */
	self.prototype.y = 0;
	/** @type Number */
	self.prototype.width = 0;
	/** @type Number */
	self.prototype.height = 0;
	
	/**
	 * Create rectangle from object
	 * @param {Object} obj
	 * @return {Rectangle}
	 */
	self.fromObject = function(obj) {
		var r = new self();
		if (typeof obj === 'object') {
			if (obj.x) r.x = obj.x;
			if (obj.y) r.y = obj.y;
			if (obj.width) r.width = obj.width;
			if (obj.height) r.height = obj.height;
			if (obj.position && !obj.x && !obj.y) {
				if (obj.position.x) r.x = obj.position.x;
				if (obj.position.y) r.y = obj.position.y;
			}
			if (obj.size && !obj.width && !obj.height) {
				if (obj.size.width) r.width = obj.size.width;
				if (obj.size.height) r.height = obj.size.height;
			}
		}
		
		return r;
	};
	
	/** @return {Object} */
	self.prototype.serialize = function() {
		return {x: this.x, y: this.y, width: this.width, height: this.height};
	};
	
	/**
	 * Set rectangle position
	 * @param {Number} x
	 * @param {Number} y
	 */
	self.prototype.setPosition = function(x, y) {
		if (x) this.x = x;
		if (y) this.y = y;
	};
	
	/**
	 * Set rectangle size
	 * @param {Number} width
	 * @param {Number} height
	 */
	self.prototype.setSize = function(width, height) {
		if (width) this.width = width;
		if (height) this.height = height;
	};
	
	return self;
});
;

/** IdIndexedList **/

define('IdIndexedList', [], function() {
	
	var self = function() { this.__construct.apply(this, arguments); };
	$.extend(self.prototype, {
		
		_items: null,
		_itemsIndex: null,
		
		/**
		 * Create list
		 * @param {Array|Object=} data
		 * @param {Boolean=} clone
		 * @param {Boolean=} serialize
		 */
		__construct: function(data, clone, serialize) {
			this._items = [];
			this._itemsIndex = {};
			if (typeof data === 'object') this.addItems(data, clone, serialize);
		},
		
		toArray: function() {
			var arr = [];
			for (var i = 0; i < this._item.length; i++) { arr.push(this._item[i]); }
			return arr;
		},
		
		toIdObject: function() {
			var obj = {};
			for (var i = 0; i < this._item.length; i++) { obj['#' + this._item[i].id] = this._item[i]; }
			return obj;
		},
		
		getItemCount: function() {
			return this._items.length;
		},
		
		getItem: function(index) {
			return ((index >= 0 && index < this._items.length) ? this._items[index] : null);
		},
		
		getItemById: function(id) {
			var idIdx = '#' + id;
			return ((idIdx in this._itemsIndex) ? this._itemsIndex[idIdx] : null);
		},
		
		addItems: function(data, clone, serialize) {
			if (data instanceof self) {
				for (var n = 0, c = data.getItemCount(); n < c; n++) {
					this.addItem(data.getItem(n));
				}
			} else {
				if ('length' in data) {
					for (var i = 0; i < data.length; i++) { this.addItem(clone ? $.extend({}, data[i]) : (serialize ? data[i].serialize() : data[i])); }
				} else {
					for (var k in data) { this.addItem(clone ? $.extend({}, data[k]) : (serialize ? data[k].serialize() : data[k])); }
				}
			}
		},
		
		addItem: function(item) {
			var idx = this._items.indexOf(item);
			if (idx < 0) {
				this._items.push(item);
				this._itemsIndex['#' + item.id] = item;
			}
		},
		
		removeItem: function(item) {
			var idx = this._items.indexOf(item);
			if (idx >= 0) {
				this._items.splice(idx, 1);
				this._itemsIndex['#' + item.id] = null;
				delete this._itemsIndex['#' + item.id];
			}
		},
		
		removeAllItems: function() {
			this._items.splice(0, this._items.length);
			this._itemsIndex = {};
		},
		
		/**
		 * Add new item to list
		 * @param {Object} baseItem item to base new item on
		 * @param {Boolean} noClone
		 * @returns {Object}
		 */
		newItem: function(baseItem, noClone) {
			var item = (baseItem ? (noClone ? baseItem : $.extend(true, {}, baseItem)) : {});
			item.id = this._findFreeId();
			this.addItem(item);
			return item;
		},
		
		_findFreeId: function() {
			for (var i = 1; i < 5000; i++) {
				if (!this._itemsIndex['#' + i]) {
					return i;
				}
			}
			return 1;
		}
		
	});
	
	return self;
});
;

/** WidgetToolbar **/

define('WidgetToolbar', [], function() {
	'use strict';
	
	var collapsableGroups = [];
	
	var self = {
		
		/** @type jQuery */
		elem: null,
		/** @type Array */
		items: null,
		/** @type ToolbarItem[] */
		tbItems: null,
		/** @type ToolbarItemGroup[] */
		collapsableGroups: null,
		/** @type Boolean */
		enabled: true,
		/** @type Number */
		lastOrder: 0,
		/** @type Boolean */
		_resizeFuncApplied: false,
		
		/**
		 * @param {Array} data table descriptor
		 * @param {String} styleClass
		 * @return WidgetToolbar
		 */
		init: function(data, styleClass) {
			this.elem = $('<div>').addClass('wb_toolbar');
			if (styleClass) this.elem.addClass(styleClass);
			this.items = [];
			this.tbItems = [];
			this.collapsableGroups = [];
			this.parseData(data, this);
			return this;
		},

		/** @param {Boolean} enabled */
		setEnabled: function(enabled) {
			if (this.enabled === enabled) return;
			this.enabled = enabled;
			var i, li;
			if (enabled) {
				for (i = 0; i < this.tbItems.length; i++) {
					li = this.tbItems[i];
					if (li.oriEnabled && !li.enabled) li.setEnabled(true);
				}
			} else {
				for (i = 0; i < this.tbItems.length; i++) {
					li = this.tbItems[i];
					li.oriEnabled = li.enabled;
					if (li.oriEnabled) li.setEnabled(false);
				}
			}
		},
		
		/** Call after adding to DOM to update size */
		ajustSize: function() {
			var thisSelf = this;
			//this.elem.css({width: 1024});
			var initialCalcDone = false;
			var initialCalc = function() {
				var i, li;
				for (i = 0; i < thisSelf.items.length; i++) {
					li = thisSelf.items[i];
					if (Object.getPrototypeOf(li) === thisSelf.ToolbarItemGroup) {
						li.ajustSize();
					}
				}
			};
			/*if (this.collapsableGroups.length > 0) {
				this.collapsableGroups[0].setCollapsed(false);
			}*/
			if (!thisSelf._resizeFuncApplied) {
				thisSelf._resizeFuncApplied = true;
				var resizeFunc = function() {
					if (!initialCalcDone && thisSelf.elem.width() > 0) {
						initialCalcDone = true;
						initialCalc();
					}
					var i, w, uw = 0, tw = thisSelf.elem.width();
					for (i = 0; i < thisSelf.items.length; i++) {
						uw += (('blockWidth' in thisSelf.items[i]) && thisSelf.items[i].blockWidth) ? thisSelf.items[i].blockWidth : thisSelf.items[i].elem.outerWidth(true);
					}
					for (i = (thisSelf.items.length - 1); i >= 0; i--) {
						w = (('blockWidth' in thisSelf.items[i]) && thisSelf.items[i].blockWidth) ? thisSelf.items[i].blockWidth : thisSelf.items[i].elem.outerWidth(true);
						if (uw > tw && ('expanderWidth' in thisSelf.items[i])) {
							uw -= w - thisSelf.items[i].expanderWidth;
							thisSelf.items[i].setCollapsed(true, true);
						} else if (('expanderWidth' in thisSelf.items[i])) {
							thisSelf.items[i].setCollapsed(false, true);
						}
					}
				};
				$(window).on('resize', resizeFunc);
			}
			$(window).trigger('resize');
		},

		/**
		 * @param {Number} index
		 * @returns ToolbarItem
		 */
		getToolbarItem: function(index) {
			return (this.tbItems.length > index && index >= 0) ? this.tbItems[index] : null;
		},

		/**
		 * @param {Array} data table descriptor
		 * @param {WidgetToolbar|ToolbarItemGroup} parent
		 */
		parseData: function(data, parent) {
			var i, o, li, btn, thisSelf = this;
			for (i = 0; i < data.length; i++) {
				o = data[i];
				if (!('type' in o) || !o.type || o.type === 'item' || o.type === 'widget') {
					li = Object.create(this.ToolbarItem).init(o.icon, o.name, (o.iconImage ? true : false));
					if ('id' in o) li.setId((o.type === 'widget') ? ('wb__' + o.id) : o.id);
					if (('borderless' in o) && o.borderless) li.setBorderless(true);
					if ('active' in o) {
						li.setEnabled((typeof o.active === 'function') ? o.active(o.id) : (o.active ? true : false));
					}
					if (o.type === 'widget') {
						if (window.wb_builder.isTouchDevice) {
							li.setTitle(__('Tap to add'));
						} else {
							li.setTitle(__('Drag and drop to add'));
						}
						if (li.enabled) li.setDraggable(true, function() {
							for (var i = 0; i < thisSelf.collapsableGroups.length; i++) {
								thisSelf.collapsableGroups[i].setOpen(false);
							}
						});
					} else {
						if (('title' in o) && o.title) li.setTitle(o.title); else if (!('submenu' in o)) li.setTitle(o.name);
						if ('submenu' in o) li.setSubmenu(o.submenu);
						if (('click' in o) && (typeof o.click === 'function')) li.elem.on('click touchend', o.click);
					}
					parent.addItem(li, this.getNextOrder());
					this.tbItems.push(li);
				} else if (o.type === 'group') {
					li = Object.create(this.ToolbarItemGroup).init();
					if ('id' in o) li.setId(o.id);
					if (('collapsable' in o) && o.collapsable) {
						btn = Object.create(this.ToolbarItem).init(o.icon, o.name);
						if ('borderless' in o) btn.setBorderless(o.borderless ? true : false); else btn.setBorderless(true);
						this.registerCollapsableGroup(li, btn);
						if (('collapseCallback' in o) && o.collapseCallback) {
							li.collapseCallback = o.collapseCallback;
						}
						
					} else {
						btn = null;
					}
					this.parseData(o.items, li);
					parent.addItem(li);
				} else if (o.type === '-') {
					li = Object.create(this.ToolbarItemSeparator).init();
					if (o.styleClass) li.elem.addClass(o.styleClass);
					parent.addItem(li, this.getNextOrder());
				}
			}
		},
		
		/**
		 * Setup group as collapsable
		 * @param {ToolbarItemGroup} group
		 * @param {ToolbarItem} expander
		 */
		registerCollapsableGroup: function(group, expander) {
			if (expander) {
				expander.setExpander(true);
				group.addItem(expander);
			}
			(function(li, expander) {
				(expander ? expander.elem : li.elem).on('mouseover', function() {
					if (!li.isOpen) {
						for (var i = 0; i < collapsableGroups.length; i++) {
							if (collapsableGroups[i] === li) continue;
							collapsableGroups[i].setOpen(false);
						}
					}
					li.setOpen(true);
					if (li.isOutTimeout) { clearTimeout(li.isOutTimeout); li.isOutTimeout = null; }
				}).on('touchstart', function() {
					if (!li.isOpen) {
						for (var i = 0; i < collapsableGroups.length; i++) {
							if (collapsableGroups[i] === li) continue;
							collapsableGroups[i].setOpen(false);
						}
						li.setOpen(true);
					} else {
						li.setOpen(false);
					}
				}).on('mouseout', function() {
					if (!li.isOutTimeout) {
						li.isOutTimeout = setTimeout(function() { li.isOutTimeout = null; li.setOpen(false); }, 40);
					}
				});
				(expander ? li.container : li.elem).on('mouseover', function() {
					if (li.isOutTimeout) { clearTimeout(li.isOutTimeout); li.isOutTimeout = null; }
				}).on('mouseout', function() {
					if (!li.isOutTimeout) {
						li.isOutTimeout = setTimeout(function() { li.isOutTimeout = null; li.setOpen(false); }, 40);
					}
				});
			})(group, expander);
			this.collapsableGroups.push(group);
			collapsableGroups.push(group);
		},

		/**
		 * @param {ToolbarItemGroup|ToolbarItem|ToolbarItemSeparator} item
		 * @param {Number} order
		 */
		addItem: function(item, order) {
			var appended = false;
			if (order && this.items.length > 0) {
				order = ((order = parseInt(order)) && !isNaN(order)) ? order : 0;
				item.order = order;
				for (var i in this.items) {
					if (this.items[i].order && item.order < this.items[i].order) {
						item.elem.insertBefore(this.items[i].elem);
						appended = true;
						break;
					}
				}
			}
			if (!appended) {
				this.elem.append(item.elem);
			}
			this.items.push(item);
		},
		
		getNextOrder: function() {
			this.lastOrder += 20;
			return this.lastOrder;
		},

		/**
		 * Set toolbar ID
		 * @param {String} id
		 */
		setId: function(id) {
			this.elem.attr('id', id);
		},

		/**
		 * Get toolbar ID
		 * @returns {String}
		 */
		getId: function() {
			return this.elem.attr('id');
		},
		
		/**
		 * Get toolbar item by ID
		 * @param {string} id
		 * @returns {ToolbarItemGroup|ToolbarItem}
		 */
		getItemById: function(id) {
			if (!id) return null;
			var i, item;
			for (i = 0; i < this.items.length; i++) {
				item = this.items[i];
				if (id === item.getId()) {
					return item;
				}
			}
			return null;
		}
		
	};
	
	
	self.ToolbarItemGroup = {
		
		/** @type {jQuery} */
		elem: null,
		/** @type {jQuery} */
		container: null,
		/** @type {ToolbarItem} */
		expander: null,
		/** @type {Array} */
		items: null,
		/** @type {Number} */
		expanderWidth: 0,
		/** @type {Number} */
		blockWidth: 0,
		/** @type {Number} */
		blockDWidth: 0,
		/** @type {Number} */
		blockHeight: 0,
		/** @type {Boolean} */
		isOpen: false,
		/** @type {Boolean} */
		isCollapsed: false,
		/** @type {String} */
		_id: null,
		
		collapseCallback: null,
		
		/** @return {ToolbarItemGroup} */
		init: function() {
			this.container = $('<div>').addClass('wb_item_group_container');
			this.elem = $('<div>').addClass('wb_item_group').append(this.container);
			$('<div>').addClass('arrow').appendTo(this.container);
			this.items = [];
			return this;
		},
		
		/** @param {ToolbarItem|ToolbarItemSeparator} item */
		addItem: function(item) {
			if (item.expander) {
				this.expander = item;
				this.elem.prepend(item.elem);
			} else {
				this.items.push(item);
				this.container.append(item.elem);
			}
		},
		
		ajustSize: function() {
			this.expanderWidth = (this.expander) ? this.expander.getWidth() : 0;
			this.blockWidth = this.getWidth(true);
			this.blockDWidth = this.getWidth(true, 3);
			this.blockHeight = this.getHeight();
			this.elem.width(this.blockWidth);
			this.container.width(this.blockWidth + 100);
			this.setCollapsed(true);
		},
		
		/**
		 * @param {Boolean} collapse
		 * @param {Boolean} instant
		 */
		setCollapsed: function(collapse, instant) {
			var thisSelf = this;
			if (!this.expander) return;
			if (collapse) {
				this.expander.setVisible(true);
				this.elem.css({overflow: 'hidden'});
				if (instant) {
					this.elem.stop(true, false).css({ width: this.expanderWidth });
					if (typeof this.collapseCallback === 'function') this.collapseCallback(true, this.elem);
				} else {
					this.elem.stop(true, false).animate({ width: this.expanderWidth }, 200, function() {
						if (typeof thisSelf.collapseCallback === 'function') thisSelf.collapseCallback(true, thisSelf.elem);
					});
				}
				this.isCollapsed = true;
			} else {
				if (this.isOpen) this.setOpen(false);
				if (typeof this.collapseCallback === 'function') this.collapseCallback(false, thisSelf.elem);
				this.expander.setVisible(false);
				if (instant) {
					this.elem.stop(true, false).css({ width: thisSelf.blockWidth });
					this.elem.css({overflow: 'visible'});
				} else {
					this.elem.stop(true, false).animate({ width: thisSelf.blockWidth }, 200, function() {
						thisSelf.elem.css({overflow: 'visible'});
					});
				}
				this.isCollapsed = false;
			}
		},
		
		setOpen: function(open) {
			if (!this.expander || !this.isCollapsed) return;
			if (open) {
				this.elem.stop(true, false).css({width: '', height: '', overflow: 'visible'});
				this.elem.addClass('vertical');
				this.container.css({width: (this.blockDWidth + 21)});
				if ($(window).width() < (this.container.offset().left + this.container.outerWidth(true))) this.elem.addClass('vertical-right');
				this.isOpen = true;
			} else {
				this.elem.stop(true, false).css({width: this.expanderWidth, height: this.blockHeight, overflow: 'hidden'});
				this.elem.removeClass('vertical').removeClass('vertical-right');
				this.container.width(this.blockWidth + 100);
				this.isOpen = false;
			}
		},
		
		/**
		 * Get width
		 * @param {Boolean} deep calc width from sub-elements
		 * @param {Number} num number of deep icons to count
		 * @returns {Number}
		 */
		getWidth: function(deep, num) {
			if (deep) {
				var i, w = 0, ii = 0, iw = 0;
				if (num) {
					for (i = 0; i < this.items.length; i++) {
						if (this.items[i].expander) continue;
						w += this.items[i].elem.outerWidth(true);
						ii++;
						if (ii >= num || i === (this.items.length - 1)) {
							if (w > iw) iw = w;
							ii = 0; w = 0;
						}
					}
					return iw;
				} else {
					for (i = 0; i < this.items.length; i++) {
						if (this.items[i].expander) continue;
						w += this.items[i].elem.outerWidth(true);
						if (num && (i >= (num - 1))) break;
					}
				}
				return w;
			} else {
				return this.elem.outerWidth(true);
			}
		},
		
		/**
		 * Get height
		 * @param {Boolean} vertical calc height from sub-elements
		 * @returns {Number}
		 */
		getHeight: function(vertical) {
			if (vertical) {
				var i, h = 0;
				for (i = 0; i < this.items.length; i++) {
					h += this.items[i].elem.outerHeight(true) + 6;
				}
				return h;
			} else {
				return this.elem.outerHeight(true);
			}
		},
		
		/**
		 * Set item group ID
		 * @param {String} id
		 */
		setId: function(id) {
			this._id = id;
		},
		
		/**
		 * Get item group ID
		 * @returns {String}
		 */
		getId: function() {
			return this._id;
		},
		
		/**
		 * Get toolbar group item by ID
		 * @param {string} id
		 * @returns {ToolbarItem|ToolbarItemSeparator}
		 */
		getItemById: function(id) {
			if (!id) return null;
			var i, item;
			for (i = 0; i < this.items.length; i++) {
				item = this.items[i];
				if (id === item.getId()) {
					return item;
				}
			}
			return null;
		}
	};
	
	self.ToolbarItem = {
		
		/** @type jQuery */
		elem: null,
		/** @type jQuery */
		cover: null,
		/** @type jQuery */
		button: null,
		/** @type jQuery */
		icon: null,
		/** @type jQuery */
		_caretElem: null,
		/** @type jQuery */
		_nameElem: null,
		/** @type jQuery */
		_submenuElem: null,
		_submenuFunc: null,
		/** @type ToolbarItemSubmenuItem[] */
		submenuItems: null,
		/** @type Boolean */
		expander: false,
		/** @type Boolean */
		draggable: false,
		/** @type Boolean */
		enabled: true,
		/** @type String */
		oriTitle: null,
		/** @type Boolean */
		oriEnabled: true,
		/** @type Boolean */
		external: false,
		
		/**
		 * @param {String} icon
		 * @param {String} name
		 * @param {Boolean} external
		 * @return {ToolbarItem}
		 */
		init: function(icon, name, external) {
			this.elem = $('<div>').addClass('wb_item');
			this.cover = $('<div>').addClass('wb_cover');
			this.elem.append(this.cover);
			this.button = $('<button>').addClass('btn btn-wb-item');
			this.button.attr('type', 'button');
			this.external = external ? true : false;
			if (!this.external) {
				this.icon = $('<i>').addClass(icon);
			} else {
				this.icon = $('<i>').addClass('ico-tb ico-tb-no-bg');
				if (icon) {
					var iconParts = ('' + icon).split(' #');
					if (iconParts.length > 1 && iconParts[1]) {
						this.icon.addClass(iconParts[1]);
					}
					this.icon.append('<img src="' + iconParts[0] + '" alt="' + name + '" />');
				}
			}
			this.button.append(this.icon);
			this._nameElem = $('<span>').text(name);
			this.elem.append(this.button).append(this._nameElem);
			this.submenuItems = [];
			return this;
		},
		
		setLink: function(link) {
			this.cover.append('<a href="' + link + '" target="_blank"></a>');
			return this;
		},
		
		/** @param {Object[]} data */
		setSubmenu: function(data) {
			var i, li, d = ((typeof data === 'object') && ('length' in data) && data.length > 0) ? data : null;
			if (d) {
				this.elem.addClass('wb-dropdown');
				this.button.attr('data-toggle', 'dropdown');
				if (!this._caretElem) this._caretElem = $('<span>').addClass('caret');
				this.button.append(this._caretElem);
				if (!this._submenuElem) this._submenuElem = $('<ul>').addClass('dropdown-menu');
				this.elem.append(this._submenuElem);
				if (!this._submenuFunc) {
					var thisSelf = this;
					this._submenuFunc = {
						over: function() {
							if (thisSelf.submenuItems.length > 0) thisSelf.elem.addClass('open');
						},
						out: function() {
							if (thisSelf.submenuItems.length > 0) thisSelf.elem.removeClass('open');
						}
					};
					if (window.wb_builder.isTouchDevice) {
						this.elem.on('click touchend', function(e) {
							e.stopPropagation();
							thisSelf._submenuFunc.over();
						});
					} else {
						this.elem.hover(this._submenuFunc.over, this._submenuFunc.out);
					}
				}
				for (i = 0; i < d.length; i++) {
					li = Object.create(self.ToolbarItemSubmenuItem).init(d[i].name, (('help' in d[i]) ? d[i].help : null));
					if (('id' in d[i]) && d[i].id) li.setId(d[i].id);
					if (('active' in d[i]) && !d[i].active) {
						li.setInactive();
					} else {
						if (('click' in d[i]) && (typeof d[i].click === 'function')) li._aElem.on('click touchend', d[i].click);
					}
					this.addSubmenuItem(li);
				}
			} else {
				this.elem.removeClass('wb-dropdown');
				this.elem.removeClass('open');
				this.button.removeAttr('data-toggle');
				if (this._caretElem) this._caretElem.detach();
				if (this._submenuElem) {
					this._submenuElem.empty();
					this._submenuElem.detach();
				}
				this.submenuItems.splice(0, this.submenuItems.length);
			}
		},
		
		/** @param {ToolbarItemSubmenuItem} item */
		addSubmenuItem: function(item) {
			this.submenuItems.push(item);
			if (this._submenuElem) this._submenuElem.append(item.elem);
		},
		
		/** @param {String} title */
		setTitle: function(title) {
			this.oriTitle = title;
			if (title) {
				this.elem.attr('title', title);
			} else {
				this.elem.removeAttr('title');
			}
		},
		
		/** @param {Boolean} borderless */
		setBorderless: function(borderless) {
			if (borderless) {
				this.button.addClass('btn-wb-noborder');
			} else {
				this.button.removeClass('btn-wb-noborder');
			}
		},
		
		/** @param {Boolean} expander */
		setExpander: function(expander) {
			this.expander = expander;
			if (expander) {
				this.elem.addClass('wb_item_grouper');
				if (!this._caretElem) this._caretElem = $('<span>').addClass('caret');
				this.button.append(this._caretElem);
			} else {
				this.elem.removeClass('wb_item_grouper');
				if (this._caretElem && this.submenuItems.length === 0) {
					this._caretElem.remove();
					this._caretElem = null;
				}
			}
		},
		
		/**
		 * @param {Boolean} draggable
		 * @param {Function} startEventHandler
		 */
		setDraggable: function(draggable, startEventHandler) {
			this.draggable = draggable;
			if (draggable) {
				this.elem.draggable({
					revert: 'invalid',
					revertDuration: 300,
					helper: 'clone',
					appendTo: $(document.body),
					start: (typeof startEventHandler === 'function') ? startEventHandler : (function(event, ui) {}),
					drag: function(event, ui) {}
				});
				this.elem.css('cursor', 'move');
				this.elem.tooltip({placement: 'bottom'});
				(function(elem, thisSelf, func) {
					elem.on('touchend', function() {
						var cls = this.id ? thisSelf.getClassByName(this.id.split('__')[1]) : null;
						if (!cls) return;

						var id, bounds, container = null,
							cx = ($(window).width() / 2) + $(window).scrollLeft(),
							cy = ($(window).height() / 2) + $(window).scrollTop();

						for (id in thisSelf.bodyInstance.blocks) {
							bounds = thisSelf.bodyInstance.blocks[id].getBounds();
							if (bounds.left <= cx && (bounds.left + bounds.width) >= cx && bounds.top <= cy && (bounds.top + bounds.height) >= cy) {
								container = thisSelf.bodyInstance.blocks[id];
								break;
							}
						}
						if (container) {
							WB_Element.unselectAll();
							var item = new cls({content: {}});
							item.setLocation(cx - bounds.left - item.getWidth() / 2, cy - bounds.top - item.getHeight() / 2);
							container.addElement(item);
							item.setSelected(true);
							item.setControlsVisible(true);
							thisSelf.pageModified = true;
						}
						if (typeof func === 'function') func.call(this);
						return false;
					});
				})(this.elem, wb_builder, startEventHandler);
			} else {
				this.elem.draggable('destroy');
				this.elem.css('cursor', 'pointer');
				this.elem.tooltip('destroy');
			}
		},
		
		/** @param {Boolean} enabled */
		setEnabled: function(enabled) {
			this.enabled = enabled;
			if (enabled) {
				this.elem.removeClass('wb_inactive');
				this.elem.css({ opacity: 1, cursor: (this.draggable ? 'move' : 'pointer') });
				this.elem.attr('title', this.oriTitle);
				if (this.draggable) {
					this.elem.tooltip({placement: 'bottom'});
					this.elem.draggable('enable');
				}
			} else {
				this.elem.addClass('wb_inactive');
				this.elem.css({ opacity: 0.3, cursor: 'default' });
				if (this.draggable) {
					this.elem.tooltip('destroy');
					this.elem.draggable('disable');
				}
				this.elem.attr('title', '');
			}
		},
		
		/** @param {Boolean} visible */
		setVisible: function(visible) {
			if (visible) {
				this.elem.show();
			} else {
				this.elem.hide();
			}
		},
		
		/** @returns {Number} */
		getWidth: function() {
			return this.elem.outerWidth(true);
		},
		
		/**
		 * Set item ID
		 * @param {String} id
		 */
		setId: function(id) {
			this.elem.attr('id', id);
		},
		
		/**
		 * Get item ID
		 * @returns {String}
		 */
		getId: function() {
			return this.elem.attr('id');
		}
	};
	
	self.ToolbarItemSeparator = {
		
		/** @type jQuery */
		elem: null,
		
		/** @return {ToolbarItemSeparator} */
		init: function() {
			this.elem = $('<div>').addClass('wb_item_sep');
			return this;
		}
	};
	
	self.ToolbarItemSubmenuItem = {
		
		/** @type jQuery */
		elem: null,
		/** @type jQuery */
		_aElem: null,
		/** @type jQuery */
		_helpElem: null,
		
		/**
		 * @param {String} name
		 * @param {String} help
		 * @return {ToolbarItemSubmenuItem}
		 */
		init: function(name, help) {
			this.elem = $('<li>');
			this._aElem = $('<a>').attr('href', 'javascript:void(0)').appendTo(this.elem);
			this._aElem.text(name);
			if (help) {
				this._helpElem = $('<span>').addClass('badge wb_badge_help').attr('title', help).text('?').appendTo(this._aElem);
				this._helpElem.tooltip({placement: 'top'});
			}
			return this;
		},
		
		/**
		 * Set item ID
		 * @param {String} id
		 */
		setId: function(id) {
			this._aElem.attr('id', id);
		},
		
		/**
		 * Get item ID
		 * @returns {String}
		 */
		getId: function() {
			return this._aElem.attr('id');
		},
		
		setInactive: function() {
			var inaColor = 'rgba(51, 51, 51, 0.3)';
			this._aElem.css({ cursor: 'default', color: inaColor });
			this._helpElem.css({ color: inaColor, borderColor: inaColor });
		}
		
	};
	
	return self;
});
;

/** MobileToolbar **/

define('MobileToolbar', ['UIComponent'], function(UIComponent) {
	'use strict';
	
	/**
	 * Toolbar component.
	 * @param {Object} definition
	 * @constructor
	 * @extends {UIComponent}
	 */
	var Toolbar = function(definition) {
		if (definition !== '%inherit%') {
			UIComponent.prototype.constructor.call(this);
			this.addClass('mobile-toolbar');
			this._items = [];
			if (typeof definition === 'object') this.buildFromDefinition(definition);
		}
	};
	
	/**
	 * Build toolbar item from definition object.
	 * @param {Object} definition
	 * @return {ToolbarItem}
	 */
	Toolbar.buildItem = function(definition) {
		var drawer,
			item = new ToolbarItem(definition.name, definition.icon);
		if ('drawer' in definition && definition.drawer) {
			drawer = Toolbar.buildDrawer(definition.drawer);
			$(document.body).append(drawer.getElem());
			(function(drawer) {
				item.on('click touchstart', function(e) {
					e.stopPropagation();
					e.preventDefault();
					Drawer.open(drawer);
					return false;
				});
			})(drawer);
		} else if ('click' in definition && (typeof definition.click === 'function')) {
			(function(item, clickFunc) {
				item.on('click', function() { clickFunc.call(item); return false; });
			})(item, definition.click);
		}
		return item;
	};
	/**
	 * Build drawer from definition object.
	 * @param {Object} definition
	 * @return {Drawer}
	 */
	Toolbar.buildDrawer = function(definition) {
		var i, item, element = new Drawer(definition.type);
		if ('id' in definition && definition.id) element.id = definition.id;
		if ('items' in definition) {
			for (i = 0; i < definition.items.length; i++) {
				item = Toolbar.buildDrawerItem(definition.items[i], element);
				if (!item) continue;
				element.addItem(item);
			}
		}
		return element;
	};
	/**
	 * Build drawer item from definition object.
	 * @param {Object} definition
	 * @param {Drawer} parentDrawer
	 * @return {DrawerItem}
	 */
	Toolbar.buildDrawerItem = function(definition, parentDrawer) {
		var item, iconDef, iconImageDef, drawer, drawerDef, itemType;
		if (typeof definition !== 'object' || definition === null) return null;
		itemType = ('type' in definition) ? definition.type : null;
		if (itemType && itemType !== 'group' && itemType !== 'widget') return null;
		iconDef = definition.iconImage ? ('ico-pl-' + definition.id) : definition.icon;
		iconImageDef = definition.iconImage ? definition.icon : null;
		drawerDef = ('drawer' in definition && definition.drawer) ? definition.drawer : null;
		if (!drawerDef && ('items' in definition)) drawerDef = {type: 'grid', items: definition.items};
		item = new DrawerItem(definition.name, iconDef, iconImageDef, (drawerDef ? true : false));
		item.id = ('id' in definition && definition.id) ? definition.id : null;
		if ('checked' in definition) item.setChecked(definition.checked ? true : false);
		if ('click' in definition && (typeof definition.click === 'function')) {
			(function(item, clickFunc) {
				item.on('click', function(e) {
					clickFunc.call(item, e);
					Drawer.open(null, null, true);
					return false;
				});
			})(item, definition.click);
		}
		if (drawerDef) {
			drawer = Toolbar.buildDrawer(drawerDef);
			$(document.body).append(drawer.getElem());
			(function(drawer, parentDrawer) {
				item.on('click touchstart', function(e) {
					e.stopPropagation();
					e.preventDefault();
					Drawer.open(drawer, parentDrawer);
					return false;
				});
			})(drawer, parentDrawer);
		}
		return item;
	};
	
	Toolbar.prototype = new UIComponent('%inherit%');
	Toolbar.prototype.constructor = Toolbar;
	/**
	 * Toolbar item list.
	 * @type {ToolbarItem[]}
	 * @private
	 */
	Toolbar.prototype._items = null;
	
	/**
	 * Add item to this toolbar.
	 * @param {ToolbarItem} item
	 * @param {number} index index to add at (if not specified added at the end)
	 * @param {ToolbarItem}
	 */
	Toolbar.prototype.addItem = function(item, index) {
		if (!(item instanceof ToolbarItem)) return;
		if (index === null || index === undefined || index < 0 || index >= this._items.length || isNaN(index)) {
			this._elem.append(item.getElem());
			this._items.push(item);
		} else {
			this._elem.children().eq(index).before(item.getElem());
			this._items.splice(index, 0, item);
		}
		return item;
	};
	
	/**
	 * Build toolbar item structure from definition object.
	 * @param {Object} definition
	 */
	Toolbar.prototype.buildFromDefinition = function(definition) {
		var i;
		if ('items' in definition) {
			for (i = 0; i < definition.items.length; i++) {
				this.addItem(Toolbar.buildItem(definition.items[i]));
			}
		}
	};
	
	/**
	 * @param {string} title
	 * @param {string} icon
	 * @constructor
	 */
	var ToolbarItem = function(title, icon) {
		if (title !== '%inherit%') {
			if (title) this._title = title;
			if (icon) this._icon = icon;
		}
	};
	/**
	 * @type {jQuery}
	 * @private
	 */
	ToolbarItem.prototype._elem = null;
	/**
	 * @type {jQuery}
	 * @private
	 */
	ToolbarItem.prototype._iconElem = null;
	/**
	 * @type {string}
	 * @private
	 */
	ToolbarItem.prototype._title = '';
	/**
	 * @type {string}
	 * @private
	 */
	ToolbarItem.prototype._icon = '';
	/**
	 * @type {boolean}
	 * @private
	 */
	ToolbarItem.prototype._enabled = true;
	
	/** @returns {jQuery} */
	ToolbarItem.prototype.getElem = function() {
		if (!this._elem) {
			this._elem = $('<div>');
			this._iconElem = $('<span>').appendTo(this._elem);
			if (this._title) this._elem.attr({title: this._title});
			if (this._icon) this._iconElem.addClass(this._icon);
		}
		return this._elem;
	};
	
	/**
	 * Attach event to this element.
	 * @param {string} event
	 * @param {function} func
	 * @returns {MobileToolbar}
	 */
	ToolbarItem.prototype.on = function(event, func) {
		var thisSelf = this;
		var thisFunc = func;
		func._wrapCallback = function(e) { if (thisSelf._enabled) thisFunc(e); };
		if (!this._elem) this.getElem();
		if (this._elem) this._elem.on(event, func._wrapCallback);
		return this;
	};
	/**
	 * Detach event from this element.
	 * @param {string} event
	 * @param {function} func
	 * @returns {ToolbarItem}
	 */
	ToolbarItem.prototype.off = function(event, func) {
		if (this._elem) this._elem.off(event, (func._wrapCallback ? func._wrapCallback : func));
		return this;
	};
	/**
	 * Trigger event attached to this element.
	 * @param {string} event
	 * @param {any} extraParameters
	 * @returns {ToolbarItem}
	 */
	ToolbarItem.prototype.trigger = function(event, extraParameters) {
		if (this._elem) this._elem.trigger(event, extraParameters);
		return this;
	};
	
	/**
	 * Drawer that opens at the bottom of the screen.
	 * @param {string} type
	 * @constructor
	 * @extends {UIComponent}
	 */
	var Drawer = function(type) {
		if (type !== '%inherit%') {
			UIComponent.prototype.constructor.call(this);
			this.addClass('mobile-drawer');
			if (type) this.addClass('type-' + type);
			var closeBackFunc = function(e) {
				e.stopPropagation();
				e.preventDefault();
				Drawer.open(null);
				return false;
			};
			this._navElem = $('<div>').addClass('drawer-nav')
				.append($('<div>').addClass('back')
					.append($('<span>').addClass('chevron icon-wb-chevron-left'))
					.append($('<span>').addClass('title').text(__('Back')))
					.on('click touchstart', closeBackFunc))
				/*.append($('<span>').addClass('close').html('&times;')
					.on('click touchstart', closeBackFunc))*/
				.appendTo(this._elem);
			this._bodyElem = $('<div>').addClass('drawer-body').appendTo(this._elem);
			this._items = [];
			this.setVisible(false);
			Drawer.list.push(this);
		}
	};
	/**
	 * Open drawer stack.
	 * @type {ToolbarDrawer[]}
	 */
	Drawer.stack = [];
	/**
	 * List of all created drawers.
	 * @type {ToolbarDrawer[]}
	 */
	Drawer.list = [];
	Drawer._lastOpen = null;
	/**
	 * Open specified drawer. Closes other open drawers.
	 * @param {Drawer} drawer drawer to open (can be null)
	 * @param {Drawer=} parent drawer to open when this drawer is closed
	 * @param {boolean=} clearStack clear open drawer stack
	 */
	Drawer.open = function(drawer, parent, clearStack) {
		if (clearStack) Drawer.stack.splice(0, Drawer.stack.length);
		if (!drawer && Drawer.stack.length > 0) drawer = Drawer.stack.pop();
		
		for (var i = 0; i < Drawer.list.length; i++) {
			if (drawer !== Drawer.list[i]) {
				(function(item) {
					item.removeClass('open');
					Drawer._lastOpen = null;
					setTimeout(function() { if (Drawer._lastOpen !== item) item.setVisible(false); }, 100);
				})(Drawer.list[i]);
			}
		}
		
		if (drawer) {
			if (parent) Drawer.stack.push(parent);
			drawer.setVisible(true);
			drawer.addClass('open');
			Drawer._lastOpen = drawer;
		}
	};
	/**
	 * Get drawer by id
	 * @param {string} id
	 * @returns {Drawer}
	 */
	Drawer.get = function(id) {
		for (var i = 0; i < Drawer.list.length; i++) {
			if (Drawer.list[i].id === id) return Drawer.list[i];
		}
		return null;
	};
	Drawer.prototype = new UIComponent('%inherit%');
	Drawer.prototype.constructor = Drawer;
	
	/**
	 * Item identifier
	 * @type {string}
	 */
	Drawer.prototype.id = null;
	
	/** @type {jQuery} */
	Drawer.prototype._navElem = null;
	/** @type {jQuery} */
	Drawer.prototype._bodyElem = null;
	
	/**
	 * Drawer item list.
	 * @type {ToolbarDrawerItem[]}
	 * @private
	 */
	Drawer.prototype._items = null;
	
	/**
	 * Add item to this drawer.
	 * @param {DrawerItem} item
	 * @return {DrawerItem}
	 */
	Drawer.prototype.addItem = function(item) {
		if (!(item instanceof DrawerItem)) return;
		this._bodyElem.append(item.getElem());
		this._items.push(item);
		return item;
	};
	
	/**
	 * Remove all items
	 */
	Drawer.prototype.removeAllItems = function() {
		this._bodyElem.empty();
		this._items.splice(0, this._items.length);
	};
	
	/**
	 * Drawer item.
	 * @param {string} title
	 * @param {string} icon
	 * @param {string} iconImage
	 * @param {boolean} isGroup
	 * @constructor
	 */
	var DrawerItem = function(title, icon, iconImage, isGroup) {
		if (title !== '%inherit%') {
			if (title) this._title = title;
			if (icon) this._icon = icon;
			if (iconImage) this._iconImage = iconImage;
			this._isGroup = isGroup ? true : false;
		}
	};
	/**
	 * @type {jQuery}
	 * @private
	 */
	DrawerItem.prototype._elem = null;
	/**
	 * @type {jQuery}
	 * @private
	 */
	DrawerItem.prototype._iconElem = null;
	/**
	 * @type {jQuery}
	 * @private
	 */
	DrawerItem.prototype._titleElem = null;
	/**
	 * @type {jQuery}
	 * @private
	 */
	DrawerItem.prototype._chevronElem = null;
	/**
	 * @type {string}
	 * @private
	 */
	DrawerItem.prototype._title = '';
	/**
	 * @type {string}
	 * @private
	 */
	DrawerItem.prototype._icon = '';
	/**
	 * @type {string}
	 * @private
	 */
	DrawerItem.prototype._iconImage = null;
	/**
	 * @type {string}
	 * @private
	 */
	DrawerItem.prototype._isGroup = '';
	/**
	 * @type {boolean}
	 * @private
	 */
	DrawerItem.prototype._enabled = true;
	/**
	 * @type {boolean}
	 * @private
	 */
	DrawerItem.prototype._isChecked = false;
	
	/**
	 * Get if item is checked
	 * @returns {boolean}
	 */
	DrawerItem.prototype.isChecked = function() {
		return this._isChecked;
	};
	
	/**
	 * Set if item is checked
	 * @param {boolean} checked
	 */
	DrawerItem.prototype.setChecked = function(checked) {
		this._isChecked = checked ? true : false;
		if (this._elem) {
			if (this._isChecked) {
				this._elem.addClass('checked');
			} else {
				this._elem.removeClass('checked');
			}
		}
	};
	
	/** @return {jQuery} */
	DrawerItem.prototype.getElem = function() {
		if (!this._elem) {
			this._elem = $('<div>').addClass('item');
			this._iconElem = $('<span>').addClass('icon').appendTo(this._elem);
			if (this._iconImage) $('<img>').attr({src: this._iconImage}).appendTo(this._iconElem);
			this._titleElem = $('<span>').addClass('title').appendTo(this._elem);
			if (this._isGroup) this._chevronElem = $('<span>').addClass('chevron icon-wb-chevron-right').appendTo(this._elem);
			if (this._title) this._titleElem.text(this._title);
			if (this._icon) this._iconElem.addClass(this._icon);
			if (this._isChecked) this._elem.addClass('checked');
		}
		return this._elem;
	};
	/**
	 * Attach event to this element.
	 * @param {string} event
	 * @param {function} func
	 * @returns {DrawerItem}
	 */
	DrawerItem.prototype.on = function(event, func) {
		var thisSelf = this;
		var thisFunc = func;
		func._wrapCallback = function(e) { if (thisSelf._enabled) thisFunc(e); };
		if (!this._elem) this.getElem();
		if (this._elem) this._elem.on(event, func._wrapCallback);
		return this;
	};
	/**
	 * Detach event from this element.
	 * @param {string} event
	 * @param {function} func
	 * @returns {DrawerItem}
	 */
	DrawerItem.prototype.off = function(event, func) {
		if (this._elem) this._elem.off(event, (func._wrapCallback ? func._wrapCallback : func));
		return this;
	};
	/**
	 * Trigger event attached to this element.
	 * @param {string} event
	 * @param {any} extraParameters
	 * @returns {DrawerItem}
	 */
	DrawerItem.prototype.trigger = function(event, extraParameters) {
		if (this._elem) this._elem.trigger(event, extraParameters);
		return this;
	};
	
	return {
		Toolbar: Toolbar,
		ToolbarItem: ToolbarItem,
		Drawer: Drawer,
		DrawerItem: DrawerItem
	};
});
;

/** LayoutManager **/

define('LayoutManager', ['Content', 'Service'], function(Content, Service) {
	'use strict';
	
	var _visible = false, _builder = null, elem = {
		top: null, right: null, bottom: null, left: null, leftGuide: null, rightGuide: null
	}, showGuides = function(show) {
		if (show) {
			elem.leftGuide.elem.removeClass('hide');
			elem.rightGuide.elem.removeClass('hide');
		} else {
			elem.leftGuide.elem.addClass('hide');
			elem.rightGuide.elem.addClass('hide');
		}
	}, docMoveEvent = null, docUpEvent = null, dragTarget = null, noWidthResize = true,
	Line = {
		elem: null,
		type: null,
		refBlock: null,
		reflector: null,
		tPos: null,
		init: function(type) {
			this.type = type;
			var style = '', hasEvent = true;
			if (type === 'top' || type === 'bottom') {
				style = 'layout_border_h';
				if (type === 'top') this.refBlock = 'wb_header';
				if (type === 'bottom') this.refBlock = 'wb_footer';
			} else if (type === 'left' || type === 'right') {
				style = 'layout_border_v';
				if (type === 'left') this.reflector = 'right';
				if (type === 'right') this.reflector = 'left';
				if (noWidthResize) hasEvent = false;
			} else if (type === 'leftGuide' || type === 'rightGuide') {
				style = 'layout_border_v2 hide';
				hasEvent = false;
			}
			this.elem = $('<div>').addClass('layout_border').addClass(style);
			var thisSelf = this;
			if (hasEvent) {
				this.elem.on('mousedown', function(e) {
					var pos2 = (thisSelf.reflector && (thisSelf.reflector in elem)) ? elem[thisSelf.reflector].elem.position() : null;
					if (thisSelf.refBlock) {
						var refBlock = _builder.bodyInstance.getContentBlock(thisSelf.refBlock);
						thisSelf.logPos({height: (refBlock ? refBlock.elem.height() : 0)}, e, pos2);
					} else {
						thisSelf.logPos({width: parseInt(_builder.bodyInstance.siteWidth, 10)}, e, pos2);
						showGuides(true);
					}
					dragTarget = thisSelf;
					e.stopPropagation();
					e.preventDefault();
					return false;
				});
			} else {
				if (type === 'left' || type === 'right') {
					this.elem.on('mousedown', function(e) {
						e.stopPropagation();
						e.preventDefault();
						return false;
					});
				}
				this.elem.css('cursor', 'default');
			}
			
			return this;
		},
		logPos: function(size, e, pos2) {
			this.tPos = {
				size: size,
				offset: this.elem.offset(),
				position: this.elem.position(),
				position2: pos2
			};
			var val = Math.round((('height' in size) ? size.height : (('width' in size) ? size.width : 0)));
			if (isNaN(val)) val = 0;
			Content.locTip.html(val);
			Content.locTip.css({
				display: 'block',
				left: (e.pageX - 90) + 'px',
				top: e.pageY + 'px'
			});
		}
	};
	
	return {
		/** @param {Builder} builder */
		init: function(builder) {
			_builder = builder;
			
			for (var k in elem) { elem[k] = Object.create(Line).init(k); }
			
			docMoveEvent = function(e) {
				if (dragTarget) {
					var refBlock = dragTarget.refBlock ? _builder.bodyInstance.getContentBlock(dragTarget.refBlock) : null;
					var d = 0, dr = 0;
					if (dragTarget.type === 'top' || dragTarget.type === 'bottom') {
						d = Math.round(e.pageY - dragTarget.tPos.offset.top);
					} else if (dragTarget.type === 'left' || dragTarget.type === 'right') {
						d = Math.round(e.pageX - dragTarget.tPos.offset.left);
					}
					if (dragTarget.type === 'bottom' || dragTarget.type === 'left') dr = -d; else dr = d;
					if (dragTarget.type === 'top' || dragTarget.type === 'bottom') {
						dragTarget.elem.css('top', dragTarget.tPos.position.top + d);
					} else if (dragTarget.type === 'left' || dragTarget.type === 'right') {
						dragTarget.elem.css('left', dragTarget.tPos.position.left + d);
					}
					if (dragTarget.reflector && (dragTarget.reflector in elem)) {
						elem[dragTarget.reflector].elem.css('left', dragTarget.tPos.position2.left - d);
					}
					if (refBlock) refBlock.setSize(null, dragTarget.tPos.size.height + dr);
					if (dragTarget.type === 'left' || dragTarget.type === 'right') _builder.bodyInstance.setWidth(dragTarget.tPos.size.width + dr*2);
					//if (dragTarget.type === 'top' && refBlock) refBlock.updateSize();
					var val = ('height' in dragTarget.tPos.size) ? Math.round(dragTarget.tPos.size.height + dr) : Math.round(dragTarget.tPos.size.width + dr*2);
					Content.locTip.html(val);
					Content.locTip.css({ left: (e.pageX - 90), top: e.pageY });
					_builder.pageModified = true;
					e.stopPropagation();
					e.preventDefault();
					return false;
				}
				return true;
			};
			
			docUpEvent = function(e) {
				if (dragTarget) {
					Content.locTip.css({ display: 'none', left: 0, top: 0 });
					var refBlock = dragTarget.refBlock ? _builder.bodyInstance.getContentBlock(dragTarget.refBlock) : null;
					if (refBlock) {
						refBlock.fitElements();
						refBlock.updateSize();
					} else {
						showGuides(false);
						_builder.bodyInstance.fitElements();
					}
					if (dragTarget.type === 'bottom') $('html, body').scrollTop($(document).height()); //move down
					dragTarget.tPos = null;
					dragTarget = null;
					e.stopPropagation();
					e.preventDefault();
					return false;
				}
				return true;
			};
			
		},
		
		setPageSwitchesEnabled: function(enabled) {
			var landingMenu = Service.menu.getLandingMenu();
			var prevItem, nextItem;
			if (landingMenu && enabled) {
				var i, menuItems = [];
				for (i in landingMenu.items) {
					var item = landingMenu.items[i];
					if (item.type === 'page' || item.type === 'internal') {
						menuItems.push(item);
					}
				}
				for (i = 0; i < menuItems.length; i++) {
					var menuItem = menuItems[i];
					if (menuItem.targetId == _builder.pageId) {
						prevItem = (i-1 >= 0) ? menuItems[i-1] : null;
						nextItem = (i+1 < menuItems.length) ? menuItems[i+1] : null;
						break;
					}
				}
			}
			var items = { bottom: nextItem, top: prevItem };
			for (var k in elem) {
				var line = elem[k];
				if (line.pageSwitch) {
					line.pageSwitch.detach();
					line.pageSwitch.remove();
					line.pageSwitch = null;
				}
				if ((line.type === 'top' || line.type === 'bottom') && items[line.type] && items[line.type].targetId) {
					line.pageSwitch = $('<div class="layout_border_page_switch"></div>');
					if (line.type === 'top')
						line.pageSwitch.addClass('page_switch_top');
					else if (line.type === 'bottom')
						line.pageSwitch.addClass('page_switch_bottom');
					line.pageSwitch.on('mousedown', function(e) { e.stopPropagation(); });
					(function(item) {
						line.pageSwitch.on('click', function() {
							_builder.goToPage(item.targetId*1);
						});
					})(items[line.type]);
					
					line.elem.append(line.pageSwitch);
				}
			}
		},
		
		setVisible: function(visible) {
			_visible = visible ? true : false;
			var k,
				container = _builder.bodyInstance.elem,
				mainBlock = _builder.bodyInstance.getContentBlock('wb_main'),
				docBody = $(document.body);
			if (_visible) {
				if (mainBlock) {
					var mainPos = mainBlock.elem.position(),
						mainWidth = mainBlock.elem.width(),
						siteWidth = _builder.bodyInstance.siteWidth + 4,
						siteHeight = _builder.bodyInstance.site.outerHeight(true),
						obw = (_builder.oriSiteWidth ? _builder.oriSiteWidth : mainWidth),
						obl = Math.round(mainPos.left + (mainWidth / 2) - (obw / 2));

					elem.top.elem.css({ top: (mainPos.top - 1), minWidth: siteWidth });
					elem.right.elem.css({ left: (mainPos.left + mainWidth - 1), height: siteHeight });
					elem.bottom.elem.css({ top: (mainPos.top + mainBlock.elem.outerHeight(true) - 1), minWidth: siteWidth});
					elem.left.elem.css({ left: (mainPos.left - 3), height: siteHeight });
					elem.leftGuide.elem.css({ left: (obl - 3), height: siteHeight });
					elem.rightGuide.elem.css({ left: (obl + obw - 1), height: siteHeight });

					docBody.on('mousemove', docMoveEvent).on('mouseup', docUpEvent);
					for (k in elem) { elem[k].elem.appendTo(container); }
				}
			} else {
				docBody.off('mousemove', docMoveEvent).off('mouseup', docUpEvent);
				for (k in elem) { elem[k].elem.detach(); }
			}
		}
		
	};
});
;

/** ModeManager **/

define('ModeManager', ['Dialog', 'WidgetToolbar', 'MobileToolbar', 'ToolTipControl', 'Service'], function(Dialog, WidgetToolbar, MobileToolbar, ToolTipControl, Service) {
	'use strict';
	
	var self = {}, currMode = null, buttons = {}, modeListeners = [], modesEnabled = {}, switchDlg;
	/** @type {Builder} */
	var builder;
	
	self.MODE_TV = 'tv';
	self.MODE_DESKTOP = 'desktop';
	self.MODE_TABLET = 'tablet';
	self.MODE_PHONE = 'phone';
	
	/** @return {Array} */
	self.getModes = function() {
		return [
			self.MODE_TV,
			self.MODE_DESKTOP,
			self.MODE_TABLET,
			self.MODE_PHONE
		];
	};
	
	/**
	 * @param {String} mode one of MODE_* constants
	 * @returns {String}
	 */
	self.getModeName = function(mode, title, version) {
		if (mode === self.MODE_TV) return (version ? __('Wide version') : (title ? __('Wide') : __('Wide')));
		if (mode === self.MODE_DESKTOP) return (version ? __('Desktop version') : (title ? __('Desktop') : __('Desktop')));
		if (mode === self.MODE_TABLET) return (version ? __('Tablet version') : (title ? __('Tablet') : __('Tablet')));
		if (mode === self.MODE_PHONE) return (version ? __('Phone version') : (title ? __('Phone') : __('Phone')));
		return null;
	};
	
	/**
	 * @param {String} mode one of MODE_* constants
	 * @returns {Number}
	 */
	self.getModeWidth = function(mode) {
		if (mode === self.MODE_TV) return 1200;
		if (mode === self.MODE_DESKTOP) return 992;
		if (mode === self.MODE_TABLET) return 768;
		if (mode === self.MODE_PHONE) return 320;
		return null;
	};
	
	self.ToolbarItem = $.extend(Object.create(WidgetToolbar.ToolbarItem), {
		_markerElem: null,
		mobileItem: null,
		
		init: function(icon, name) {
			WidgetToolbar.ToolbarItem.init.call(this, icon, name);
			this.elem.css({position: 'relative'});
			this._markerElem = $('<span>').addClass('checked-marker').appendTo(this.elem).hide();
			return this;
		},
		
		setMarked: function(marked) {
			if (marked) {
				this._markerElem.show();
			} else {
				this._markerElem.hide();
			}
			if (this.mobileItem) this.mobileItem.setChecked(marked);
		}
	});
	
	var SwitchDialog = $.extend(new Dialog('%inherit%'), {
		_onElem: null,
		_onInpElem: null,
		_onNameElem: null,
		_onTextElem: null,
		_offElem: null,
		_offInpElem: null,
		_offNameElem: null,
		_offTextElem: null,
		
		init: function() {
			Dialog.prototype.__construct.call(this, '', true);
			this.setTitleVisible(false);
			this.setFooterVisible(false);
			this.setSize(400, null);
			
			var thisSelf = this, dlgCont = $('<div>').addClass('mode-switcher-dlg');
			this._onElem = $('<div>').addClass('mode-switcher-dlg-on').appendTo(dlgCont)
					.append(this._onInpElem = $('<input>').attr('type', 'radio').attr('name', 'mode_switcher_value_inp'))
					.append($('<div>').addClass('mode-switcher-dlg-label')
						.append(this._onNameElem = $('<span>').text(__('version')))
						.append($('<span>').addClass('mode-switcher-dlg-value').text(__('ON')))
						.append($('<span>').addClass('mode-switcher-dlg-marker'))
						.append(this._onTextElem = $('<div>').addClass('mode-switcher-dlg-text'))
					).on('click', function() {
						ModeEnableToggle.setValue(true);
						buttons[currMode].setMarked(true);
						modesEnabled[currMode] = true;
						thisSelf.setVisible(false);
					}),
			this._offElem = $('<div>').addClass('mode-switcher-dlg-off').appendTo(dlgCont)
					.append(this._offInpElem = $('<input>').attr('type', 'radio').attr('name', 'mode_switcher_value_inp'))
					.append($('<div>').addClass('mode-switcher-dlg-label')
						.append(this._offNameElem = $('<span>').text(__('version')))
						.append($('<span>').addClass('mode-switcher-dlg-value').text(__('OFF')))
						.append($('<span>').addClass('mode-switcher-dlg-marker'))
						.append(this._offTextElem = $('<div>').addClass('mode-switcher-dlg-text'))
					).on('click', function() {
						ModeEnableToggle.setValue(false);
						buttons[currMode].setMarked(false);
						modesEnabled[currMode] = false;
						thisSelf.setVisible(false);
					});
		
			this.setContent(dlgCont);
			
			return this;
		},
		
		setVisible: function(visible, mode) {
			Dialog.prototype.setVisible.call(this, visible);
			if (visible) {
				if ((mode in modesEnabled) && modesEnabled[mode]) {
					this._onInpElem.get(0).checked = true;
					this._offInpElem.get(0).checked = false;
				} else {
					this._onInpElem.get(0).checked = false;
					this._offInpElem.get(0).checked = true;
				}
				this._onNameElem.text(self.getModeName(mode, false, true));
				this._offNameElem.text(self.getModeName(mode, false, true));
				this._onTextElem.text(__('I will modify my website for %s version').replace('%s', self.getModeName(mode, true)));
				this._offTextElem.text(__('Publish my desktop version of website'));
			}
		}
		
	});
	
	var AutoAlignButton = {
		elem: null,
		_isVisible: false,
		init: function() {
			this.elem = $('<div>').addClass('mode-enable-toggle');
			$('<i>').addClass('glyphicon glyphicon-align-center').appendTo(this.elem);
			this.elem.on('click', function() {
				sortAndAutoAlignElements(currMode, builder.bodyInstance.getContentElements());
			}).attr('title', __('Auto align elements'));
			$(document.body).append(this.elem);
			this._isVisible = true;
			return this;
		},
		isVisible: function() {
			return this._isVisible;
		},
		setVisible: function(visible) {
			this._isVisible = visible ? true : false;
			if (visible) {
				this.elem.show();
			} else {
				this.elem.hide();
			}
		},
		setMode: function(mode) {
			if (mode === self.MODE_PHONE) {
				this.setVisible(true);
			} else {
				this.setVisible(false);
			}
		}
	};
	
	var ModeEnableToggle = {
		elem: null,
		labelElem: null,
		valueElem: null,
		markerElem: null,
		tipElem: null,
		init: function() {
			this.elem = $('<div>').addClass('mode-enable-toggle');
			this.labelElem = $('<span>').text(__('version')).appendTo(this.elem);
			this.valueElem = $('<span>').addClass('mode-enable-value-on').text(__('ON')).appendTo(this.elem);
			this.markerElem = $('<span>').addClass('mode-enable-marker-on').appendTo(this.elem);
			this.tipElem = {
				on: new ToolTipControl('?', __('I will modify my website for %s version'), 'bottom'),
				off: new ToolTipControl('?', __('Publish my desktop version of website'), 'bottom')
			};
			var thisSelf = this;
			this.elem.on('click', function() {
				if (currMode !== self.MODE_DESKTOP) {
					modesEnabled[currMode] = !((currMode in modesEnabled) ? (modesEnabled[currMode] ? true : false) : false);
					buttons[currMode].setMarked(modesEnabled[currMode]);
					thisSelf.setValue(modesEnabled[currMode]);
				}
			});
			$(document.body).append(this.elem);
		},
		/** @param {String} mode */
		setMode: function(mode) {
			this.labelElem.text(self.getModeName(mode, false, true));
			this.setValue((mode in modesEnabled) ? (modesEnabled[mode] ? true : false) : false, mode);
			if (mode === self.MODE_DESKTOP) {
				// this.elem.css({cursor: 'default'});
				this.elem.hide();
			} else {
				// this.elem.css({cursor: 'pointer'});
				this.elem.show();
			}
			var ww = $(window).width(), sw = self.getModeWidth(mode),
				w = this.elem.outerWidth(true) + (AutoAlignButton.isVisible() ? (AutoAlignButton.elem.outerWidth(true) + 10) : 0),
				right = Math.round(((ww - sw) / 2) - w - 2),
				finalRight = ((right < 20) ? 20 : right);
			this.elem.css({right: finalRight});
			if (AutoAlignButton.isVisible()) AutoAlignButton.elem.css({right: finalRight + this.elem.outerWidth(true) + 10});
			if (!(mode in modesEnabled) && mode !== self.MODE_DESKTOP) {
				// modesEnabled[mode] = false;
				SwitchDialog.setVisible(true, mode);
			}
		},
		/**
		 * @param {Boolean} value
		 * @param {String} mode
		 */
		setValue: function(value, mode) {
			if (value) {
				this.valueElem.text(__('ON')).removeClass('mode-enable-value-off').addClass('mode-enable-value-on');
				this.markerElem.removeClass('mode-enable-marker-off').addClass('mode-enable-marker-on');
				this.tipElem.on.elem.attr('data-original-title', __('I will modify my website for %s version').replace('%s', self.getModeName(mode ? mode : (currMode ? currMode : self.MODE_DESKTOP), true)));
				this.tipElem.on.elem.appendTo(this.elem);
				this.tipElem.off.elem.detach();
			} else {
				this.valueElem.text(__('OFF')).removeClass('mode-enable-value-on').addClass('mode-enable-value-off');
				this.markerElem.removeClass('mode-enable-marker-on').addClass('mode-enable-marker-off');
				this.tipElem.on.elem.detach();
				this.tipElem.off.elem.appendTo(this.elem);
			}
		}
	};
	
	var sortAndAutoAlignElements = function(mode, elementList) {
		var i, strHash = {}, hashIdx = 0, strVal = function(str) { if (str in strHash) return strHash[str]; else { hashIdx++; strHash[str] = hashIdx; return hashIdx; } };
		elementList.sort(function(a, b) {
			if (strVal(a.getParent().id) === strVal(b.getParent().id)) {
				if (a.getLocation().top === b.getLocation().top) return 0;
				return (a.getLocation().top - b.getLocation().top);
			}
			return (strVal(a.getParent().id) - strVal(b.getParent().id));
		});
		var parentId = null, parent = null, lastTop = 0, left, mw = self.getModeWidth(mode);
		for (i = 0; i < elementList.length; i++) {
			if (parentId !== elementList[i].getParent().id) {
				if (parent && parentId === 'wb_main') parent.updateSize();
				parentId = elementList[i].getParent().id;
				parent = elementList[i].getParent();
				lastTop = 0;
			}
			if (mw > elementList[i].getSize().width) {
				left = Math.round((mw - elementList[i].getSize().width) / 2);
			} else {
				left = 0;
				if (parentId === 'wb_main') {
					elementList[i].setSize(mw, null);
					elementList[i].onResize();
				}
			}
			if (parentId === 'wb_main') elementList[i].setLocation(left, lastTop);
			lastTop += elementList[i].getSize().height + 20;
		}
		if (parent && parentId === 'wb_main') parent.updateSize();
	};
	
	/**
	 * Initialise mode manager/chooser
	 * @param {Builder} builderInstance
	 */
	self.init = function(builderInstance) {
		builder = builderInstance;
		
		builder.controllToolbar.addItem(Object.create(WidgetToolbar.ToolbarItemSeparator).init());
		var group = Object.create(WidgetToolbar.ToolbarItemGroup).init();
		group.container.css({ zIndex: 200 }); // prevent "Upgrade to Premium" label cover this element
		var groupExpander = Object.create(this.ToolbarItem).init('ico-tb ico-tb-mode-desktop', __('Responsive'));
		groupExpander.setBorderless(false);
		builder.controllToolbar.registerCollapsableGroup(group, groupExpander);
		
		var mobileItem = MobileToolbar.Toolbar.buildItem({name: __('Responsive'), icon: 'ico-tb-mode-desktop', drawer: {
			id: 'mobile-modes-selector', type: 'list', items: []
		}});
		var mobileItemDrawer = MobileToolbar.Drawer.get('mobile-modes-selector');
		
		var modes = this.getModes(), mode;
		for (var i = 0; i < modes.length; i++) {
			mode = modes[i];
			buttons[mode] = Object.create(self.ToolbarItem).init('ico-tb ico-tb-mode-' + mode, self.getModeName(mode, true));
			buttons[mode].setTitle(self.getModeName(mode, true));
			(function(item, mode) {
				item.elem.on('click touchend', function() { self.setMode(mode); });
				item.mobileItem = mobileItemDrawer.addItem(MobileToolbar.Toolbar.buildDrawerItem({
					name: self.getModeName(mode, true),
					icon: 'ico-tb-mode-' + mode,
					click: function() { self.setMode(mode); }
				}));
			})(buttons[mode], mode);
			group.addItem(buttons[mode], builder.controllToolbar.getNextOrder());
			modesEnabled[mode] = (mode in builder.site.modesEnabled) ? (builder.site.modesEnabled[mode] ? true : false) : (builder.template.isResponsive && mode === self.MODE_DESKTOP ? true : false);
			if (mode === self.MODE_DESKTOP) modesEnabled[mode] = true;
			if (modesEnabled[mode]) buttons[mode].setMarked(true);
		}
		
		builder.controllToolbar.addItem(group, builder.controllToolbar.getNextOrder());
		if (builder.mobileToolbar) builder.mobileToolbar.addItem(mobileItem, 1);
		
		AutoAlignButton.init();
		ModeEnableToggle.init();
		SwitchDialog.init();
		
		self.setMode(self.MODE_DESKTOP);
	};
	
	/**
	 * Set mode (one of MODE_* constants)
	 * @param {String} mode
	 * @param {Boolean} force
	 */
	self.setMode = function(mode, force, initial) {
		if (currMode !== mode || force) {
			AutoAlignButton.setMode(mode);
			ModeEnableToggle.setMode(mode);
			currMode = mode;
			var i, k, btn;
			for (k in buttons) {
				btn = buttons[k].elem;
				if (k === currMode) {
					btn.addClass('active');
				} else {
					btn.removeClass('active');
				}
			}
			if (builder.bodyInstance) {
				var elementList = builder.bodyInstance.getContentElements();
				for (i = 0; i < elementList.length; i++) {
					elementList[i].switchMode(mode, initial);
				}
				
				var first = !(mode in builder.bodyInstance.modes);
				
				builder.bodyInstance.switchMode(mode, initial);
				builder.site.switchMode(mode, initial);
				
				builder.bodyInstance.siteWidth = this.getModeWidth(mode);
				if (mode === this.MODE_DESKTOP) {
					builder.widgetToolbar.setEnabled(true);
				} else {
					builder.widgetToolbar.setEnabled(false);
				}
				
				if (first && mode === self.MODE_TV) {
					for (i = 0; i < elementList.length; i++) {
						elementList[i].setLocation(elementList[i].getLocation().left + 104, null);
					}
				} else if (first && mode === self.MODE_PHONE) {
					sortAndAutoAlignElements(mode, elementList);
				}
				
				builder.bodyInstance.updateStyle();
				builder.bodyInstance.fitElements((mode === self.MODE_TABLET || mode === self.MODE_PHONE));
				
				for (var n = 0; n < modeListeners.length; n++) { modeListeners[n].call(this, mode); }
				
				for (i = 0; i < elementList.length; i++) {
					if (('updateStyle' in elementList[i]) && typeof elementList[i].updateStyle === 'function') elementList[i].updateStyle();
					elementList[i].onResize(false);
				}
				
				if (builder.showLayout) builder.highlightLayout(builder.showLayout);
				Service.contextMenu.hideAll();
			}
		}
	};
	
	/**
	 * Get mode (onr of MODE_* constants)
	 * @returns {String}
	 */
	self.getMode = function() {
		return currMode;
	};
	
	/** @return {Object} */
	self.serialize = function() {
		return $.extend({}, modesEnabled);
	};
	
	/** @param {Function} l */
	self.addModeListener = function(l) {
		var idx = modeListeners.indexOf(l);
		if (idx < 0) modeListeners.push(l);
	};
	
	/** @param {Function} l */
	self.removeModeListener = function(l) {
		var idx = modeListeners.indexOf(l);
		if (idx >= 0) modeListeners.splice(idx, 1);
	};
	
	return self;
});
;

/** ElementBox **/

define('ElementBox', [], function() {
	'use strict';
	
	var tplLi = $('<div>').addClass('wb-element-box-li');
	
	return {
		/** @type Element[] */
		_elements: null,
		/** @type Builder */
		_builder: null,
		/** @type jQuery */
		elem: null,
		/** @type jQuery */
		_container: null,
		
		/**
		 * @param {Builder} builder
		 * @return ElementBox
		 */
		init: function(builder) {
			this._elements = [];
			this._builder = builder;
			this.elem = $('<div>').addClass('wb-element-box');
			var header = $('<div>').addClass('wb-element-box-header').text(__('Bin')).prepend($('<i>').addClass('glyphicon glyphicon-trash')).appendTo(this.elem);
			this._container = $('<div>').addClass('wb-element-box-list').appendTo(this.elem);
			this.elem.hide();
			this.elem.appendTo(document.body);
			var thisSelf = this;
			this._container.droppable({
				tolerance: 'pointer',
				hoverClass: 'wb-state-highlight',
				accept: '.wb_element',
				greedy: true,
				drop: function(e, ui) {
					var itm = ui.draggable.wbGetClassInstance();
					if (itm.dropAccepted) return false;
					itm.dropAccepted = true;
					itm.hide(true, true);
					thisSelf.addElement(itm, function() {
						thisSelf.removeElement(itm);
						itm.show(true, true);
					}, itm.boxItemOptions());
					itm.setLocation(itm.dragStartPos.left, itm.dragStartPos.top);
					e.stopPropagation();
					e.preventDefault();
					return false;
				}
			});
			
			this.elem.draggable({handle: header, distance: 3});
			
			return this;
		},
		/**
		 * @param {Element} elem
		 * @param {Function} callback
		 * @param {Object} options
		 * @return {Element}
		 */
		addElement: function(elem, callback, options) {
			var idx = this._elements.indexOf(elem), li, opts;
			if (idx < 0) {
				opts = $.extend({title: elem.getClassType(), text: ('#' + elem.id), thumb: null}, ((options && (typeof options === 'object') && !('length' in options)) ? options : {}));
				this._elements.push(elem);
				li = tplLi.clone();
				li.html('<span>' + opts.title + '</span>' + opts.text);
				if (opts.thumb) {
					if (typeof opts.thumb === 'string') {
						$('<img>').attr('src', opts.thumb).attr('alt', '').appendTo(li);
					} else {
						$('<span>').addClass('wb-element-box-thumb').append(opts.thumb).appendTo(li);
					}
				}
				li.on('click', callback);
				this._container.append(li);
			}
		},
		/**
		 * @param {Element} elem
		 * @return {Element}
		 */
		removeElement: function(elem) {
			var idx = this._elements.indexOf(elem);
			if (idx >= 0) {
				this._container.children().eq(idx).remove();
				return this._elements.splice(idx, 1)[0];
			}
			return null;
		},
		removeAllElements: function() {
			this._elements.splice(0, this._elements.length);
			this._container.empty();
		},
		/**
		 * @param {Element} elem
		 * @return {Boolean}
		 */
		hasElement: function(elem) {
			var idx = this._elements.indexOf(elem);
			return (idx >= 0);
		},
		/** @param {Boolean} visible */
		setVisible: function(visible) {
			if (visible) { this.elem.show(); } else { this.elem.hide(); }
		}
	};
});
;

/** RemoteLoginDialog **/

define('RemoteLoginDialog', [
		'Dialog',
		'Service',
		'UIButton',
		'AlertBox',
		'NotificationRibbon',
		'CongratsDialog'
	], function(Dialog, Service, UIButton, AlertBox, NotificationRibbon, CongratsDialog) {
	
	var RemoteLoginDialog = new Dialog('%inherit%');
	
	RemoteLoginDialog.init = function() {
		Dialog.prototype.__construct.call(this, '', false);
		this.content.css({padding: '20px'});
		this.setTitleVisible(false);
		this.setFooterVisible(false);
		this.setSize(600, null);
		this.setTitle('Login Stuff');

		var thisSelf = this, showLoginMode;

		this.setContent(new Service.UIBuilder({
			type: 'HorizontalLayout', id: 'hl',
			children: [
				{type: 'VerticalLayout', id: 'registerForm', spacing: 15, children: [
					{type: 'Label', text: __('Sign Up'), css: {fontWeight: 'bold'}},
					{type: 'AlertBox', id: 'registerAlert', style: AlertBox.STYLE_DANGER, visible: false, css: {marginBottom: 10}},
					{type: 'TextField', id: 'rEmail', placeholder: __('E-mail')},
					{type: 'TextField', id: 'rName', placeholder: __('Name')},
					{type: 'TextField', id: 'rPassword', placeholder: __('Password'), password: true},
					{type: 'TextField', id: 'rPassword2', placeholder: __('Confirm password'), password: true},
					{type: 'Button', id: 'registerBtn', text: __('Register'), buttonStyle: UIButton.STYLE_SUCCESS,
						click: function(e, fields) {
							fields.registerForm.setEnabled(false);
							fields.registerAlert.setText('').setVisible(false);
							$.post(wb_builder.baseUrl + 'create-website/', {
								register: 1,
								email: fields.rEmail.getText(),
								name: fields.rName.getText(),
								password: fields.rPassword.getText(),
								password2: fields.rPassword2.getText()
							}, null, 'json').success(function(data) {
								if (data.error) {
									fields.registerAlert.setText(data.error.message ? data.error.message : data.error).setVisible(true);
								} else {
									wb_builder.testMode = false;
									if (data.reloadData && data.reloadData.sessUniqKey) {
										wb_builder.sessUniqKey = data.reloadData.sessUniqKey;
										wb_builder.siteDomain = data.reloadData.domain;
										wb_builder.upgradeUrl = data.reloadData.upgradeUrl;
									}
									NotificationRibbon.setVisible(false);
									thisSelf.hide();
									wb_builder.publish(function() { CongratsDialog.setVisible(true); });
								}
								fields.registerForm.setEnabled(true);
							}).error(function() {
								fields.registerAlert.setText(__('Action failed')).setVisible(true);
								fields.registerForm.setEnabled(true);
							});
						}
					}
				]},
				{type: 'VerticalLayout', id: 'loginForm', spacing: 15, children: [
					{type: 'Label', text: __('Login'), css: {fontWeight: 'bold'}},
					{type: 'AlertBox', id: 'loginAlert', style: AlertBox.STYLE_DANGER, visible: false, css: {marginBottom: 10}},
					{type: 'AlertBox', id: 'remindAlert', style: AlertBox.STYLE_INFO, visible: false, css: {marginBottom: 10},
						text: __('A new password will be sent to the specified e-mail address.')
					},
					{type: 'TextField', id: 'lEmail', placeholder: __('E-mail')},
					{type: 'TextField', id: 'lPassword', placeholder: __('Password'), password: true},
					{type: 'Button', id: 'lRemind', text: __('Remind password'), buttonStyle: UIButton.STYLE_LINK,
						css: {padding: 0},
						click: function(e, fields) {
							fields.loginAlert.setVisible(false);
							fields.remindAlert.setVisible(true);
							fields.lPassword.setVisible(false);
							fields.lRemind.setVisible(false);
							fields.lLogin.setVisible(true);
							fields.loginBtn.setVisible(false);
							fields.remindBtn.setVisible(true);
						}
					},
					{type: 'Button', id: 'lLogin', text: __('Return to login form'), buttonStyle: UIButton.STYLE_LINK,
						css: {padding: 0},
						visible: false,
						click: (showLoginMode = function(e, fields) {
							fields.loginAlert.setVisible(false);
							fields.remindAlert.setVisible(false);
							fields.lPassword.setVisible(true);
							fields.lRemind.setVisible(true);
							fields.lLogin.setVisible(false);
							fields.loginBtn.setVisible(true);
							fields.remindBtn.setVisible(false);
						})
					},
					{type: 'Button', id: 'loginBtn', text: __('Login'), buttonStyle: UIButton.STYLE_SUCCESS,
						click: function(e, fields) {
							fields.loginForm.setEnabled(false);
							fields.loginAlert.setText("").setVisible(false);
							$.post(wb_builder.baseUrl + 'create-website/', {
								login: 1,
								email: fields.lEmail.getText(),
								password: fields.lPassword.getText()
							}, null, 'json').success(function(data) {
								if (data.error) {
									fields.loginAlert.setText(data.error.message ? data.error.message : data.error).setBoxStyle(AlertBox.STYLE_DANGER).setVisible(true);
								} else {
									wb_builder.testMode = false;
									if (data.reloadData && data.reloadData.sessUniqKey) {
										wb_builder.sessUniqKey = data.reloadData.sessUniqKey;
										wb_builder.siteDomain = data.reloadData.domain;
										wb_builder.upgradeUrl = data.reloadData.upgradeUrl;
									}
									NotificationRibbon.setVisible(false);
									thisSelf.hide();
									wb_builder.publish(function() { CongratsDialog.setVisible(true); });
								}
								fields.loginForm.setEnabled(true);
							}).error(function() {
								fields.loginAlert.setText(__('Action failed')).setVisible(true);
								fields.loginForm.setEnabled(true);
							});
						}
					},
					{type: 'Button', id: 'remindBtn', text: __('Send Password'), buttonStyle: UIButton.STYLE_SUCCESS,
						visible: false,
						click: function(e, fields) {
							fields.loginForm.setEnabled(false);
							fields.loginAlert.setText("").setVisible(false);
							$.post(wb_builder.baseUrl + 'create-website/', {
								remind: 1,
								email: fields.lEmail.getText()
							}, null, 'json').success(function(data) {
								if (data.error) {
									fields.loginAlert.setText(data.error.message ? data.error.message : data.error).setBoxStyle(AlertBox.STYLE_DANGER).setVisible(true);
								} else {
									showLoginMode(e, fields);
									fields.lPassword.focus();
									fields.loginAlert.setText(__('Password sent')).setBoxStyle(AlertBox.STYLE_SUCCESS).setVisible(true);
								}
								fields.loginForm.setEnabled(true);
							}).error(function() {
								fields.loginAlert.setText(__('Action failed')).setVisible(true);
								fields.loginForm.setEnabled(true);
							});
						}
					}
				]}
			]
		}, this.fields), true);

		this.fields.hl.applyLayoutCellCss(0, {borderRight: '1px solid #d5d5d5'});
		this.fields.hl.applyLayoutCellCss(1, {borderLeft: '1px solid #d5d5d5', marginLeft: -1});
		$('<button>').addClass('close').attr({type: 'button'}).html('&times;')
			.css({position: 'absolute', top: '12px', right: '20px', zIndex: 99})
			.on('click', function() { thisSelf.hide(); })
			.prependTo(this.content);
		CongratsDialog.init();
	};
	
	return RemoteLoginDialog;
});
;

/** TemplateChooser **/

define('TemplateChooser', ['Dialog', 'Service', 'Confirm', 'DropdownBox'], function(Dialog, Service, Confirm, DropdownBox) {
	'use strict';
	
	var changeListeners = [];
	
	var TemplateChooser = function() {
		Dialog.prototype.constructor.call(this, __('Select template'), true, null, true);
		var thisSelf = this;
		this.setContent(new Service.UIBuilder([
			{type: 'PreloaderOverlay', id: 'loader', value: 100, visible: false},
			{type: 'HorizontalLayout',
				columnWeights: [2, 10],
				columnWeightsSmall: [3, 9],
				debug: true,
				children: [
					{type: 'VerticalLayout', rowStyleClass: ['visible-xs-block'], children: [
						{type: 'DropdownBox', id: 'categoryListCombo',
							css: {margin: '15px 15px 0 15px'},
							init: function() {
								this.addAllItems = function(items) {
									for (var i = 0; i < items.length; i++) {
										this.addItem(new DropdownBox.Item(
											items[i].name + ' (' + items[i].templateCount + ')',
											items[i].id,
											items[i]
										));
									}
								};
							},
							change: function(fields) {
								thisSelf.loadTemplates(this.getSelectedItem().getId());
								fields.categoryList.selectItem(this.getSelectedItem().getId());
							}
						},
						{type: 'CustomContainer', id: 'categoryList',
							styleClass: 'wb-tpl-cats hidden-xs',
							css: {height: 300},
							init: function(def, fields) {
								var elem = this.getElem(), items = [];
								this.removeAllItems = function() {
									elem.empty();
								};
								this.addAllItems = function(items) {
									for (var i = 0; i < items.length; i++) {
										this.addItem(items[i]);
									}
								};
								this.addItem = function(item) {
									items.push(item);
									var thisItem = item, thisElem = this;
									thisItem.elem = $('<div>').addClass('wb-tpl-cats-item')
										.append(
											$('<a>')
												.attr({href: 'javascript:void(0)'})
												.text(item.name)
												.append($('<span>').text('(' + item.templateCount + ')'))
												.on('click', function() {
													thisElem.selectItem(thisItem.id);
													thisSelf.loadTemplates(thisItem.id);
													fields.categoryListCombo.selectItem(fields.categoryListCombo.getItemById(thisItem.id));
													return false;
												})
										)
										.appendTo(elem);
								};
								this.selectItem = function(id) {
									for (var i = 0; i < items.length; i++) {
										if (id === items[i].id) {
											items[i].elem.addClass('active');
										} else {
											items[i].elem.removeClass('active');
										}
									}
								};
							}
						}
					]},
					{type: 'CustomContainer', id: 'list',
						styleClass: 'wb-tpl-list',
						css: {height: 300},
						init: function() {
							var elem = this.getElem(),
								cont = $('<div>').addClass('wb-tpl-list-body').appendTo(elem);
							this.removeAllItems = function() {
								cont.empty();
							};
							this.addAllItems = function(items) {
								for (var i = 0; i < items.length; i++) {
									this.addItem(items[i]);
								}
							};
							this.addItem = function(item) {
								var thisItem = item, cImage, img,
									text, selectBtn, upgradeUrl,
									itemElem = $('<div>').addClass('wb-tpl-list-item')
									.attr({'aria-haspopup': 'true'})
									.on('touchend', function() {
										$(this).parent().children().removeClass('active');
										$(this).toggleClass('active');
										return false;
									});
									itemElem.append($('<div>')
										.append($('<div>').addClass('wb-tpl-list-overlay')
											.append($('<div>'))
											.append($('<div>')
												.append($('<a>').addClass('btn btn-default btn-lg')
													.attr({target: '_blank', href: item.previewUrl})
													.text(__('Preview')))
												.append((selectBtn = $('<button>').addClass('btn btn-success btn-lg')
													.attr({type: 'button'})
													.text(__('Select')))))
										)
										.append((cImage = $('<div>')).addClass('cimg').append(img = $('<img>').attr({src: item.thumb})))
										.append((text = $('<span>').text(item.name)))
									)
									.appendTo(cont);
									img.removeAttr('width').removeAttr('height'); // IE bug (it adds them automatically and breaks things)
								if (item.current) {
									text.append($('<span>').text(__('(current template)')));
									itemElem.addClass('current');
								}
								if (item.available) {
									selectBtn.on('click touchend', function() {
										if (parseInt(wb_builder.pageId, 10) > 0) {
											Confirm.showDialog(__('Change template'),
												$('<div class="wb_change_template_dlg">' +
													'<div class="qq">' + __('Are you sure you want to change current template?') + '</div>' +
													'<div class="red">' + __('Once changed your information will be lost.') + '</div>' + 
												'</div>'), [
												{
													title: __('No, keep current template')
												},
												{
													title: __('Yes, change template'),
													cssClass: 'btn-danger',
													func: function() {
														thisSelf.applyTemplate(thisItem.id);
													}
												}
											], 480);
											Confirm.dialog.setCenterButtons(true);
										} else {
											thisSelf.applyTemplate(thisItem.id);
										}
										return false;
									});
								} else {
									selectBtn.hide();
									if (wb_builder.isZyro) {
										upgradeUrl = 'http://cpanel.zyro.com/accounts/upgrade';
									} else {
										upgradeUrl = (wb_builder.upgradeUrl ? wb_builder.upgradeUrl : null);
									}
									itemElem.find('.wb-tpl-list-overlay').show();
									itemElem.children('div').prepend($('<div>').addClass('wb-tpl-list-onlypro')
										.html('<div>' + __('Available in %sPremium version%s')
											.replace('%s', '<span class="glyphicon glyphicon-star"></span>' +
												(upgradeUrl ? ('<a href="' + upgradeUrl + '" target="_blank">') : '<a href="javascript:void(0)">')
											)
											.replace('%s', '</a>') + '</div>'));
								}
							};
						}
					}
				]
			}
		], this.fields), true);
		
		this.closeButton = this.addButton(__('Close'));
		this.categories = [];
		this.templates = [];
		this.baseElem.addClass('wb-tpl-dialog');
		var logo = $('<div>').addClass('wb-tpl-logo');
		if (wb_builder.whiteLabel.logo) logo.css({backgroundImage: "url('" + wb_builder.baseUrl + "builder-logo')"});
		this.title.before(logo);
	};
	
	TemplateChooser.prototype = new Dialog('%inherit%');
	TemplateChooser.prototype.construnctor = TemplateChooser;
	
	TemplateChooser.prototype.closeButton = null;
	TemplateChooser.prototype.contentLoaded = false;
	TemplateChooser.prototype.templates = null;
	TemplateChooser.prototype.categories = null;
	TemplateChooser.prototype.onResizeCalback = null;
	
	/**
	 * Get API URL for specified action
	 * @param {string} action
	 * @return {string}
	 */
	TemplateChooser.prototype.getApiUrl = function(action) {
		return wb_builder.baseUrl + (wb_builder.locale ? (wb_builder.locale.replace('_', '-') + '/') : '') + action;
	};
	
	/**
	 * Apply template by id
	 * @param {string} templateId template id to apply
	 */
	TemplateChooser.prototype.applyTemplate = function(templateId) {
		var thisSelf = this;
		this.fields.loader.setVisible(true);
		$.getJSON(this.getApiUrl('template/select/' + templateId)).success(function(data) {
			thisSelf.fields.loader.setVisible(false);
			if (typeof data === 'object') {
				if (data.ok) {
					wb_builder.pageId = data.pageId;
					wb_builder.template = data.template;
					wb_builder.meta = data.meta;
					wb_builder.oriSiteWidth = data.oriSiteWidth;
					Service.Store.Module.needToTranslateItems = (data.template.categoryId == 'E-commerce');
					thisSelf.setVisible(false);
					setTimeout(function() { wb_builder.loadPage(data.pageId, true); }, 500);
					for (var i = 0; i < changeListeners.length; i++) {
						changeListeners[i].call(thisSelf);
					}
				} else {
					console.error('Template apply failed');
				}
			} else {
				console.error('Template apply format error');
			}
		}).error(function() {
			thisSelf.fields.loader.setVisible(false);
			console.error('Template apply error');
		});
	};
	
	/**
	 * Load template category and item list
	 */
	TemplateChooser.prototype.reloadContents = function() {
		var thisSelf = this;
		this.fields.loader.setVisible(true);
		$.getJSON(this.getApiUrl('template/categories')).success(function(data) {
			thisSelf.fields.loader.setVisible(false);
			if (typeof data === 'object') {
				thisSelf.categories = data;
				thisSelf.fields.categoryList.removeAllItems();
				thisSelf.fields.categoryListCombo.removeAllItems();
				thisSelf.fields.categoryList.addAllItems(thisSelf.categories);
				thisSelf.fields.categoryListCombo.addAllItems(thisSelf.categories);
				if (thisSelf.categories.length > 0) {
					thisSelf.fields.categoryList.selectItem(thisSelf.categories[0].id);
					thisSelf.fields.categoryListCombo.selectItem(thisSelf.fields.categoryListCombo.getItemById(thisSelf.categories[0].id));
					thisSelf.loadTemplates(thisSelf.categories[0].id);
				}
			} else {
				console.error('Template category loading format error');
			}
		}).error(function() {
			thisSelf.fields.loader.setVisible(false);
			console.error('Template category loading error');
		});
	};
	
	/**
	 * Load template list by category id
	 * @param {string} categoryId id of the category to load templates for
	 */
	TemplateChooser.prototype.loadTemplates = function(categoryId) {
		var thisSelf = this;
		this.fields.loader.setVisible(true);
		$.getJSON(this.getApiUrl('template/list/' + categoryId)).success(function(data) {
			thisSelf.fields.loader.setVisible(false);
			if (typeof data === 'object') {
				thisSelf.templates = data;
				thisSelf.fields.list.removeAllItems();
				thisSelf.fields.list.addAllItems(thisSelf.templates);
			} else {
				console.error('Template loading format error');
			}
		}).error(function() {
			thisSelf.fields.loader.setVisible(false);
			console.error('Template loading error');
		});
	};
	
	TemplateChooser.prototype.setVisible = function(visible, noAction, ignoreEvent) {
		Dialog.prototype.setVisible.call(this, visible, noAction, ignoreEvent);
		if (visible) {
			this.fields.loader.setVisible(false);
			if (parseInt(wb_builder.pageId, 10) <= 0) {
				this.closeButton.hide();
				this.xButton.hide();
			} else {
				this.closeButton.show();
				this.xButton.show();
			}
			var thisSelf = this;
			if (!this.contentLoaded) {
				this.contentLoaded = true;
				this.reloadContents();
			}
			if (!this.onResizeCalback) {
				this.onResizeCalback = function() {
					thisSelf.setMaximised(true);
					var h = thisSelf.content.css({
						padding: 0,
						overflowX: 'hidden',
						overflowY: 'auto'
					}).height();
					thisSelf.fields.categoryList.css({height: h});
					thisSelf.fields.list.css({height: h});
				};
			}
			thisSelf.setMaximised(true);
			setTimeout(function() { thisSelf.onResizeCalback(); }, 500);
			$(window).on('resize', this.onResizeCalback);
		} else {
			if (this.onResizeCalback) $(window).off('resize', this.onResizeCalback);
		}
	};
	
	Service.templates = {
		addChangeListener: function(func) {
			if (typeof func === 'function') changeListeners.push(func);
		},
		removeChangeListener: function(func) {
			var idx = (typeof func === 'function') ? changeListeners.indexOf(func) : -1;
			if (idx >= 0) changeListeners.splice(idx, 1);
		}
	};
	
	return TemplateChooser;	
});
;

/** UIComponent **/

define('UIComponent', [], function() {
	
	var UIComponent = function(inh) {
		if (inh !== '%inherit%') {
			if (inh) this.tagType = inh;
			this._elem = this._createElem();
		}
	};
	
	UIComponent.prototype.tagType = null;
	/** @type jQuery */
	UIComponent.prototype._elem = null;
	UIComponent.prototype._createElem = function() { return $('<' + (this.tagType ? this.tagType : 'div') + '>'); };
	UIComponent.prototype._enabled = true;
	UIComponent.prototype.getElem = function() {
		return this._elem;
	};
	UIComponent.prototype.css = function(css) {
		if (this._elem) this._elem.css(css);
		return this;
	},
	UIComponent.prototype.addClass = function(cls) {
		if (this._elem) this._elem.addClass(cls);
		return this;
	};
	UIComponent.prototype.removeClass = function(cls) {
		if (this._elem) this._elem.removeClass(cls);
		return this;
	};
	UIComponent.prototype.setVisible = function(visible) {
		if (this._elem) {
			if (visible) {
				this._elem.show();
			} else {
				this._elem.hide();
			}
		}
		return this;
	};
	UIComponent.prototype.setEnabled = function(enabled) {
		this._enabled = enabled ? true : false;
	};
	UIComponent.prototype.setTitle = function(title) {
		if (title) {
			this._elem.attr('title', title);
		} else {
			this._elem.removeAttr('title');
		}
		return this;
	};
	UIComponent.prototype.on = function(event, func) {
		var thisSelf = this;
		var thisFunc = func;
		func._wrapCallback = function(e) { if (thisSelf._enabled) thisFunc(e); };
		if (this._elem) this._elem.on(event, func._wrapCallback);
		return this;
	};
	UIComponent.prototype.off = function(event, func) {
		if (this._elem) this._elem.off(event, (func._wrapCallback ? func._wrapCallback : func));
		return this;
	};
	UIComponent.prototype.trigger = function(event, extraParameters) {
		if (this._elem) this._elem.trigger(event, extraParameters);
		return this;
	};
	
	/**
	 * Wrap control instance in UIComponent
	 * @param {Object} control instance
	 * @return {UIComponent}
	 */
	UIComponent.wrapControl = function(control) {
		var el = new UIComponent();
		el._control = control;
		el._elem = control.elem;
		el.getValue = function() { return this._control.getValue(); };
		el.setValue = function(value) { this._control.setValue(value); };
		return el;
	};
	
	return UIComponent;
});
;

/** UIContainer **/

define('UIContainer', ['UIComponent'], function(UIComponent) {
	
	/**
	 * UI Container control
	 * @param {string} tagType tag name to use for this element
	 * @class
	 */
	var UIContainer = function(tagType) {
		if (tagType !== '%inherit%') {
			UIComponent.prototype.constructor.call(this, tagType);
			this._children = [];
		}
	};
	UIContainer.prototype = new UIComponent('%inherit%');
	UIContainer.prototype.constructor = UIContainer;
	
	UIContainer.prototype._children = null;
	UIContainer.prototype._container = null;
	UIContainer.prototype._appendChild = function(child) {
		this._elem.append(child._elem);
	};
	UIContainer.prototype._detachChild = function(child) {
		child._elem.detach();
	};
	UIContainer.prototype.addChild = function(child) {
		var idx = this._children.indexOf(child);
		if (idx < 0) {
			this._children.push(child);
			this._appendChild(child);
		}
		return this;
	};
	UIContainer.prototype.removeChild = function(child) {
		var idx = this._children.indexOf(child);
		if (idx >= 0) {
			this._children.splice(idx, 1);
			this._detachChild(child);
		}
		return this;
	};
	UIContainer.prototype.setEnabled = function(enabled) {
		UIComponent.prototype.setEnabled.call(this, enabled);
		for (var i = 0; i < this._children.length; i++) {
			this._children[i].setEnabled(enabled);
		}
	};
	
	return UIContainer;
});
;

/** UIBuilder **/

define('UIBuilder', [
	'Service',
	'UIComponent',
	'UIContainer',
	'VerticalLayout',
	'HorizontalLayout',
	'FlowLayout',
	'UIButton',
	'Label',
	'TextField',
	'MultilangTextField',
	'RadioBox',
	'CheckBox',
	'URLControl',
	'StyleControl',
	'TextControl',
	'IFrameControl',
	'ToolTipControl',
	'BackgroundControl',
	'BorderControl',
	'SpacingControl',
	'RoundCornersControl',
	'FontControl',
	'FontTransformControl',
	'MenuListControl',
	'ContactFormControl',
	'SizeSelector',
	'TabbedPane',
	'AlertBox',
	'DropdownBox',
	'PreloaderOverlay'
], function(
	Service,
	UIComponent,
	UIContainer,
	VerticalLayout,
	HorizontalLayout,
	FlowLayout,
	UIButton,
	Label,
	TextField,
	MultilangTextField,
	RadioBox,
	CheckBox,
	URLControl,
	StyleControl,
	TextControl,
	IFrameControl,
	ToolTipControl,
	BackgroundControl,
	BorderControl,
	SpacingControl,
	RoundCornersControl,
	FontControl,
	FontTransformControl,
	MenuListControl,
	ContactFormControl,
	SizeSelector,
	TabbedPane,
	AlertBox,
	DropdownBox,
	PreloaderOverlay) {
	'use strict';
	
	/**
	 * Build UI layout from UI definition object
	 * @param {Object} data UI definition object
	 * @param {Object=} exFields external fields object
	 * @constructor
	 */
	var UIBuilder = function(data, exFields) {
		if (data !== '%inherit%') {
			UIContainer.prototype.constructor.call(this);
			this.fields = ((exFields && typeof exFields === 'object') ? exFields : {});
			UIBuilder.buildLayout(data, this, this.fields);
		}
	};
	UIBuilder.prototype = new UIContainer('%inherit%');
	UIBuilder.prototype.constructor = UIBuilder;
	
	/**
	 * Object to reference fields by id to
	 * @type {Object}
	 */
	UIBuilder.prototype.fields = null;
	
	/**
	 * Extend base UI definition with UI definition extension
	 * @param {Object} baseUiDef
	 * @param {Object} uiDef
	 * @returns {Object}
	 */
	UIBuilder.extendDefinition = function(baseUiDef, uiDef) {
		var i, k, k1, ex;
		if (typeof uiDef === 'object' && uiDef) {
			for (k in uiDef) {
				ex = (k in baseUiDef);
				if (ex && typeof baseUiDef[k] === 'object' && 'length' in baseUiDef[k] && typeof baseUiDef[k].length === 'number') {
					for (i = 0; i < uiDef[k].length; i++) {
						baseUiDef[k].push(uiDef[k][i]);
					}
				} else if (ex && typeof baseUiDef[k] === 'object') {
					for (k1 in uiDef[k]) {
						baseUiDef[k][k1] = uiDef[k][k1];
					}
				} else {
					baseUiDef[k] = uiDef[k];
				}
			}
		}
		return baseUiDef;
	};
	
	/**
	 * Build UI layout from UI definition object
	 * @param {Object} data UI definition object
	 * @param {UIComponent|jQuery} parent element to attach UI elements to
	 * @param {Object} fields object to reference fields by id to
	 */
	UIBuilder.buildLayout = function(data, parent, fields) {
		if (typeof data !== 'object' || !parent) return;
		var i, n, type, el, elItem, elItemDef, children = (typeof data.length === 'number') ? data : [data];
		for (i = 0; i < children.length; i++) {
			type = children[i].type ? children[i].type : null;
			if (type && children[i].ignore) continue;
			el = null;
			if (type === 'CustomContainer') {
				el = new UIComponent((children[i].tag ? children[i].tag : null));
				if (children[i].content) el.getElem().append(children[i].content);
			} else if (type === 'Form') {
				el = new UIContainer('form');
				elItem = el.getElem();
				if ('action' in children[i]) elItem.attr({action: children[i].action});
				if ('method' in children[i]) elItem.attr({method: children[i].method});
				if ('enctype' in children[i]) elItem.attr({enctype: children[i].enctype});
				if (('submit' in children[i]) && (typeof children[i].submit === 'function')) {
					(function(el, func) { el.getElem().on('submit', function() { func.call(el, fields); }); })(el, children[i].submit);
				}
			} else if (type === 'VerticalLayout') {
				el = new VerticalLayout(
						(children[i].fluid ? true: false),
						(children[i].rowStyleClass ? children[i].rowStyleClass: null)
					);
				if ('spacing' in children[i]) el.setSpacing(children[i].spacing);
			} else if (type === 'HorizontalLayout') {
				el = new HorizontalLayout();
				if (children[i].columnWeights && typeof children[i].columnWeights === 'object' && children[i].columnWeights.length) {
					if (wb_builder.rtl) children[i].columnWeights.reverse();
					for (n = 0; n < children[i].columnWeights.length; n++) {
						el.setColWeight(n, children[i].columnWeights[n]);
					}
				}
				if (children[i].columnWeightsSmall && typeof children[i].columnWeightsSmall === 'object' && children[i].columnWeightsSmall.length) {
					if (wb_builder.rtl) children[i].columnWeightsSmall.reverse();
					for (n = 0; n < children[i].columnWeightsSmall.length; n++) {
						el.setColWeight(n, children[i].columnWeightsSmall[n], 1);
					}
				}
				if (('noPadding' in children[i]) && children[i].noPadding) {
					el.setNoPadding(true);
				}
				if (wb_builder.rtl && children[i].children && (typeof children[i].children.length === 'number')) {
					children[i].children.reverse();
				}
			} else if (type === 'FlowLayout') {
				el = new FlowLayout();
				if ('spacing' in children[i]) {
					el.setSpacing(children[i].spacing);
				} else {
					el.setSpacing(10);
				}
				if (children[i].align) {
					el.setHorizontalAlign(children[i].align);
				}
				if (children[i].verticalAlign) {
					el.setVerticalAlign(children[i].verticalAlign);
				} else {
					el.setVerticalAlign('top');
				}
			} else if (type === 'Tooltip') {
				el = UIComponent.wrapControl(new ToolTipControl(
						(children[i].label ? children[i].label : '?'),
						children[i].text,
						(children[i].placement ? children[i].placement : 'right')
					));
			} else if (type === 'Image') {
				el = UIComponent.wrapControl((function() {
					return {
						elem: $(new Image()),
						getValue: function() { return this.elem.get(0).src; },
						setValue: function(src) { this.elem.get(0).src = src; }
					};
				})());
				if (children[i].value) el.setValue(children[i].value);
				if (children[i].src) el.setValue(children[i].src);
			} else if (type === 'Button') {
				el = new UIButton();
				if (children[i].value) el.setText(children[i].value);
				else if (children[i].text) el.setText(children[i].text);
				if (children[i].icon) el.setIcon(children[i].icon);
				if (children[i].buttonStyle) el.setButtonStyle(children[i].buttonStyle);
				if (children[i].buttonType) el.setType(children[i].buttonType);
			} else if (type === 'Label') {
				el = new Label();
				if (children[i].value) el.setText(children[i].value);
				else if (children[i].text) el.setText(children[i].text);
				else if (children[i].html) el.setHtml(children[i].html);
				if (children[i].helpText) {
					el.getElem().append((new ToolTipControl(
							'?',
							children[i].helpText,
							(children[i].helpPlacement ? children[i].helpPlacement : 'right')
						)).elem);
				}
			} else if (type === 'TextField') {
				el = new TextField(
						null,
						(children[i].placeholder ? children[i].placeholder : null),
						(children[i].textArea ? true : false),
						(children[i].resizable ? children[i].resizable : false)
					);
				if (children[i].value) el.setText(children[i].value);
				else if (children[i].text) el.setText(children[i].text);
				if (children[i].password) el.setAsPassword(children[i].password ? true : false);
				if (children[i].title) el.setTitle(children[i].title);
				if (('change' in children[i]) && (typeof children[i].change === 'function')) {
					(function(el, func) { el.on('change', function() { func.call(el, fields); }); })(el, children[i].change);
				}
			} else if (type === 'MultilangTextField') {
				el = new MultilangTextField(
						null,
						(children[i].textArea ? true : false),
						(children[i].resizable ? children[i].resizable : false)
					);
				if (children[i].value) el.setText(children[i].value);
				if (children[i].onChange) el.setOnChange(children[i].onChange);
				else if (children[i].text) el.setText(children[i].text);
			} else if (type === 'FileField') {
				el = UIComponent.wrapControl(new WB_UploadFieldControl((children[i].name ? children[i].name : 'fileupload')));
			} else if (type === 'RadioBox') {
				var label = 'Radio Box';
				if (children[i].label && typeof children[i].label === 'object') {
					label = new UIBuilder(children[i].label, fields);
				} else {
					label = children[i].label;
				}
				el = new RadioBox(label, null,
						(children[i].group ? children[i].group : null),
						(children[i].inline ? true : false),
						(children[i].inputValue ? children[i].inputValue : null)
					);
				if (children[i].value) el.setValue(children[i].value);
				if (children[i].title) el.setTitle(children[i].title);
				if (children[i].helpText) {
					el.getElem().append((new ToolTipControl('?', children[i].helpText, 'right')).elem);
				}
				if (('change' in children[i]) && (typeof children[i].change === 'function')) {
					(function(el, func) { el.on('change', function() { func.call(el, fields); }); })(el, children[i].change);
				}
			} else if (type === 'CheckBox') {
				var cbLabel = 'Check Box';
				if (children[i].label && typeof children[i].label === 'object') {
					cbLabel = new UIBuilder(children[i].label, fields);
				} else {
					cbLabel = children[i].label;
				}
				el = new CheckBox(cbLabel, null, (children[i].inline ? true : false));
				if (children[i].value) el.setValue(children[i].value);
				if (children[i].helpText) {
					el.getElem().append((new ToolTipControl('?', children[i].helpText, 'right')).elem);
				}
				if (('change' in children[i]) && (typeof children[i].change === 'function')) {
					(function(el, func) { el.on('change', function() { func.call(el, fields); }); })(el, children[i].change);
				}
			} else if (type === 'DropdownBox') {
				el = new DropdownBox();
				if (children[i].css && typeof children[i].css === 'object' && children[i].css.width) {
					el._input.css({width: (children[i].css.width - 26)});
				}
				if (children[i].options && typeof children[i].options === 'object' && children[i].options.length > 0) {
					for (n = 0; n < children[i].options.length; n++) {
						if (typeof children[i].options[n] === 'object' && children[i].options[n]) {
							elItem = new DropdownBox.Item(children[i].options[n].name, children[i].options[n].id, children[i].options[n], children[i].options[n].html);
							el.addItem(elItem);
						}
					}
				}
				if (('change' in children[i]) && (typeof children[i].change === 'function')) {
					(function(el, func) { el.on('change', function() { func.call(el, fields); }); })(el, children[i].change);
				}
				el.getValue = function(multiSelect) {
					if (multiSelect) {
						var i, list = [], items = this.getSelectedItems();
						for (i = 0; i < items.length; i++) {
							list.push(items[i].getId());
						}
						return list;
					} else {
						var item = this.getSelectedItem();
						return item ? item.getId() : null;
					}
				};
				el.setValue = function(value, multiSelect) {
					var i, item;
					if (multiSelect) {
						this.selectItem(null, false); // unselect all
						for (i = 0; i < value.length; i++) {
							item = this.getItemById(value[i]);
							if (item) this.selectItem(item, true);
						}
					} else {
						item = this.getItemById(value);
						if (!item) item = this.getItem(0);
						this.selectItem(item);
					}
				};
				if (children[i].value) el.setValue(children[i].value);
			} else if (type === 'MenuItemSelector') {
				el = UIComponent.wrapControl(new MenuListControl(true, (children[i].anchorMode ? true : false)));
				if (children[i].value) el.setValue(children[i].value);
				el.reloadMenuList = function() { this._control.reloadMenuList(); };
				el.getExtendedValue = function() { return this._control.getExtendedValue(); };
				el.setExtendedValue = function(value) { this._control.setExtendedValue(value); };
			} else if (type === 'LinkEditSelector') {
				el = UIComponent.wrapControl(new WB_LinkEditControl(null, (children[i].emptyMsg ? children[i].emptyMsg : null)));
				if (children[i].value) el.setValue(children[i].value);
				el.clearValue = function() { this._control.clearValue(); };
			} else if (type === 'ColorSelector') {
				el = UIComponent.wrapControl(new WB_ColorPicker(
						(children[i].noTransparent ? true : false),
						(children[i].big ? true : false),
						(children[i].noFidexWidth ? true : false)
					));
				if (children[i].value) el.setValue(children[i].value);
				if (('change' in children[i]) && (typeof children[i].change === 'function')) {
					(function(el, func) { el._control.onChange = function() { func.call(el, fields); }; })(el, children[i].change);
				}
			} else if (type === 'SizeSelector') {
				el = UIComponent.wrapControl(new SizeSelector(
						(children[i].units ? false : true),
						(('min' in children[i]) ? children[i].min : null),
						(('max' in children[i]) ? children[i].max : null),
						(('step' in children[i]) ? children[i].step : null),
						(children[i].repeat ? false : true),
						(children[i].noFixedWidth ? true : false)
					));
				if (children[i].value) el.setValue(children[i].value);
				if (children[i].units) el._control.setUnit(children[i].units);
				if (('change' in children[i]) && (typeof children[i].change === 'function')) {
					(function(el, func) { el._control.bind('change', function() { func.call(el, fields); }); })(el, children[i].change);
				}
				el.getEnabled = function() { return this._control.getEnabled(); };
				el.setEnabled = function(enabled) { this._control.setEnabled(enabled); };
				el.setMaxValue = function(maxValue) { this._control.setMaxValue(maxValue); };
			} else if (type === 'ImageSelector') {
				el = UIComponent.wrapControl(new WB_ImagePicker(
						(children[i].mode ? children[i].mode : null),
						(children[i].thumbSize ? children[i].thumbSize : 60),
						(children[i].multiselect ? true : false),
						(('mediatabs' in children[i]) ? (children[i].mediatabs ? true : false) : true)
					));
				if (children[i].value) el.setValue(children[i].value);
				el.getValues = function(asObject) { return this._control.getValues(asObject); };
				el.setValues = function(list) { this._control.setValues(list); };
				if (('select' in children[i]) && (typeof children[i].select === 'function')) {
					(function(el, func) { el._control.callback = function() { func.call(el, fields); }; })(el, children[i].select);
				}
			} else if (type === 'LinkSelector') {
				el = UIComponent.wrapControl(new URLControl((children[i].multilang ? true : false)));
				if (children[i].value) el.setValue(children[i].value);
			} else if (type === 'StyleSelector') {
				el = UIComponent.wrapControl(new StyleControl((children[i].emptyChoice ? true : false)));
				if (children[i].value) el.setValue(children[i].value);
			} else if (type === 'FontSelector') {
				el = UIComponent.wrapControl(new TextControl(
						(children[i].needLineHeight ? true : false),
						(children[i].ttPlacement ? children[i].ttPlacement : 'left'),
						(children[i].needPreview ? true : false),
						(children[i].noStyle ? true : false),
						(children[i].noAlign ? true : false),
						(children[i].horizontal ? true : false)
					));
				if (children[i].value) el.setValue(children[i].value);
				el.setPreviewTag = function(tag) { this._control.setPreviewTag(tag); };
			} else if (type === 'FontFamilySelector') {
				el = UIComponent.wrapControl(new FontControl((children[i].noFixedWidth ? true : false)));
				if (children[i].value) el.setValue(children[i].value);
				if (('change' in children[i]) && (typeof children[i].change === 'function')) {
					(function(el, func) { el._control._elem.onChange = function() { func.call(el, fields); }; })(el, children[i].change);
				}
			} else if (type === 'FontStyleSelector') {
				el = UIComponent.wrapControl(new WB_FontStyleControl());
				if (children[i].value) el.setValue(children[i].value);
				if (('change' in children[i]) && (typeof children[i].change === 'function')) {
					(function(el, func) { el._control.elem.find('.btn').on('click', function() { func.call(el, fields); }); })(el, children[i].change);
				}
			} else if (type === 'FontTransformSelector') {
				el = UIComponent.wrapControl(new FontTransformControl());
				if (children[i].value) el.setValue(children[i].value);
			} else if (type === 'SpacingSelector') {
				el = UIComponent.wrapControl(new SpacingControl());
				if (children[i].value) el.setValue(children[i].value);
			} else if (type === 'HAlignSelector') {
				el = UIComponent.wrapControl(new WB_HAlignSelector());
				if (children[i].value) el.setValue(children[i].value);
				if (('change' in children[i]) && (typeof children[i].change === 'function')) {
					(function(el, func) { el._control.elem.find('.btn').on('click', function() { func.call(el, fields); }); })(el, children[i].change);
				}
			} else if (type === 'BorderSelector') {
				el = UIComponent.wrapControl(new BorderControl(
						(children[i].placement ? children[i].placement : 'bottom'),
						(children[i].showRadius ? true : false),
						(('noTransparent' in children[i]) ? (children[i].noTransparent ? true : false) : true)
					));
				if (children[i].value) el.setValue(children[i].value);
			} else if (type === 'AlignSelector') {
				el = UIComponent.wrapControl(new WB_AlignSelector());
				if (children[i].value) el.setValue(children[i].value);
				if (('change' in children[i]) && (typeof children[i].change === 'function')) {
					(function(el, func) { el._control.callback = function() { func.call(el, fields); }; })(el, children[i].change);
				}
			} else if (type === 'BackgroundSelector') {
				el = UIComponent.wrapControl(new BackgroundControl((children[i].useAttachment ? true : false)));
				if (children[i].value) el.setValue(children[i].value);
				if (('change' in children[i]) && (typeof children[i].change === 'function')) {
					(function(el, func) { el._control.onChange = function() { func.call(el, fields); }; })(el, children[i].change);
				}
				el.isSet = function() { return this._control.isSet(); };
				el.setUseAttachment = function(use) { this._control.setUseAttachment(use); };
			} else if (type === 'RoundCornersSelector') {
				el = UIComponent.wrapControl(new RoundCornersControl());
				if (children[i].value) el.setValue(children[i].value);
			} else if (type === 'LayoutBlocksControl') {
				el = UIComponent.wrapControl(new WB_LayoutblocksControl());
				if (children[i].value) el.setValue(children[i].value);
				if (typeof children[i].change === 'function') {
					(function(el, func) {
						el._control.onChange = function() { return func.call(el, fields); };
					})(el, children[i].change);
				}
				el.getBlocks = function() { return this._control.getBlocks(); };
				el.setIsSet = function(isSet, block) { this._control.setIsSet(isSet, block); };
				el.setActive = function(active) { this._control.setActive(active); };
				el.onChange = function() { this._control.onChange(); };
			} else if (type === 'List') {
				el = UIComponent.wrapControl(new WB_ListControl({
						type: (children[i].itemType ? children[i].itemType : null),
						editable: (children[i].editable ? true : false)
					}));
				if (children[i].listHeight) el._control.setHeight(children[i].listHeight);
				if (typeof children[i].select === 'function') {
					(function(el, func) {
						el._control.options.onSelect = function(obj) { return func.call(el, fields, obj, this); };
					})(el, children[i].select);
				}
				if (typeof children[i].add === 'function') {
					(function(el, func) {
						el._control.options.onAdd = function(obj) { return func.call(el, fields, obj, this.get(0)); };
					})(el, children[i].add);
				}
				el.setItemIcon = function(li, icon) { this._control.setItemIcon(li, icon); };
				el.addItem = function(item, noStyleUpdate, icon) { return this._control.addItem(item, noStyleUpdate, icon); };
				el.removeAllItems = function() { this._control.removeAllItems(); };
				el.selectFirst = function() { this._control.selectFirst(); };
				el.selectItemLi = function(li) { this._control.selectItemLi(li); };
				el.getLastSelected = function() { return this._control.lastSelected; };
				el.getLastSelectedLi = function() { return this._control.lastSelectedLi; };
			} else if (type === 'IFrame') {
				el = UIComponent.wrapControl(new IFrameControl(
						(children[i].url ? children[i].url : 'about:blank'),
						(children[i].params ? children[i].params : {})
					));
				el.setParam = function(name, value) { this._control.setParam(name, value); };
			} else if (type === 'AlertBox') {
				el = new AlertBox();
				if (children[i].text) el.setText(children[i].text);
				if (children[i].style) el.setBoxStyle(children[i].style);
			} else if (type === 'PreloaderOverlay') {
				el = new PreloaderOverlay();
				if (children[i].value) el.setValue(children[i].value);
			} else if (type === 'ContactForm') {
				el = new ContactFormControl();
			} else if (type === 'TabbedPane') {
				el = new TabbedPane();
				if (children[i].fixedHeight) el.setFixedHeight(children[i].fixedHeight);
				if (children[i].noScroll) el.setNoScroll();
				if (typeof children[i].tabs === 'object' && children[i].tabs && children[i].tabs.length > 0) {
					children[i].tabs.sort(function(a, b) {
						return (('priority' in a) ? a.priority : 0) - (('priority' in b) ? b.priority : 0);
					});
					var hasTabs = false;
					for (n = 0; n < children[i].tabs.length; n++) {
						if (children[i].tabs[n].ignore) continue;
						elItemDef = children[i].tabs[n];
						elItem = el.addTab(elItemDef.name ? elItemDef.name : __('General'), n);
						hasTabs = true;
						if (elItemDef.children) UIBuilder.buildLayout(elItemDef.children, elItem, fields);
						if (elItemDef.init && typeof elItemDef.init === 'function') {
							elItemDef.init.call(elItem, elItemDef, fields);
						}
					}
					if (hasTabs) el.selectTab(0);
				}
				if (('change' in children[i]) && (typeof children[i].change === 'function')) {
					(function(el, func) { el.onChange = function(tab, prevTab) { func.call(el, fields, tab, prevTab); }; })(el, children[i].change);
				}
			} else {
				console.error("TypeError: unknown UI Builder type '" + type + "'");
			}
			if (el) {
				if (children[i].fixedWidth) {
					var fw = Math.max(Math.min(children[i].fixedWidth, 12), 1);
					el.addClass('span' + fw);
					if (fw === 12) el.css({float: 'none'});
				}
				if (children[i].styleClass) el.addClass(children[i].styleClass);
				if ('visible' in children[i]) el.setVisible(children[i].visible ? true : false);
				if ('enabled' in children[i]) el.setEnabled(children[i].enabled ? true : false);
				if (children[i].click && (typeof children[i].click === 'function')) {
					(function(el, func) { el.on('click touchstart', function(e) { func.call(el, e, fields); }); })(el, children[i].click);
				}
				if (children[i].css && typeof children[i].css === 'object') el.css(children[i].css);
				if (children[i].attr && typeof children[i].attr === 'object') el.getElem().attr(children[i].attr);
				if (children[i].init && typeof children[i].init === 'function') {
					children[i].init.call(el, children[i], fields);
				}
				if (el instanceof UIContainer && children[i].children) UIBuilder.buildLayout(children[i].children, el, fields);
				if (children[i].id && typeof children[i].id === 'string') fields[children[i].id] = el;
				if (parent instanceof UIContainer) {
					parent.addChild(el);
				} else {
					parent.append(el.getElem());
				}
			}
		}
	};
	
	Service.UIBuilder = UIBuilder;
	
	return UIBuilder;
});
;

/** VerticalLayout **/

define('VerticalLayout', ['UIContainer'], function(UIContainer) {
	
	/**
	 * @param {boolean} fluid add fluid style class
	 * @param {string[]=} rowStyleClass
	 */
	var self = function(fluid, rowStyleClass) {
		if (fluid !== '%inherit%') {
			UIContainer.prototype.constructor.call(this);
			this.addClass('wb-vertical-layout');
			if (fluid) this.addClass('row-fluid');
			this._rowStyleClass = (rowStyleClass && (typeof rowStyleClass === 'object') && ('length' in rowStyleClass)) ? rowStyleClass : [];
		}
	};
	self.prototype = new UIContainer('%inherit%');
	self.prototype.constructor = self;
	
	self.prototype._spacing = 0;
	self.prototype._childCount = 0;
	self.prototype._rowStyleClass = null;
	
	self.prototype._appendChild = function(child) {
		var div = $('<div>').append(child._elem);
		if (this._childCount > 0) div.css({marginTop: this._spacing + 'px'});
		this._elem.append(div);
		if (this._childCount >= 0 && this._childCount < this._rowStyleClass.length && this._rowStyleClass[this._childCount]) {
			div.addClass(this._rowStyleClass[this._childCount]);
		}
		this._childCount++;
	};
	self.prototype._detachChild = function(child) {
		var div = child._elem.parent();
		child._elem.detach();
		div.remove();
		this._childCount--;
	};
	self.prototype.applyLayoutCellCss = function(idx, css) {
		this._elem.children().eq(idx).css(css);
		return this;
	};
	/**
	 * Set vertical spacing
	 * @param {number} spacing
	 * @returns {VerticalLayout}
	 */
	self.prototype.setSpacing = function(spacing) {
		this._spacing = spacing;
		return this;
	};
	
	return self;
});
;

/** HorizontalLayout **/

define('HorizontalLayout', ['UIContainer'], function(UIContainer) {
	
	var self = function(inh) {
		if (inh !== '%inherit%') {
			UIContainer.prototype.constructor.call(this);
			this._elem.addClass('row');
			this.columnWeights = {};
			this.columnWeightsSmall = {};
		}
	};
	self.prototype = new UIContainer('%inherit%');
	self.prototype.constructor = self;
	self.prototype.columnWeights = null;
	self.prototype.columnWeightsSmall = null;
	
	self.prototype._appendChild = function(child) {
		var div = $('<div>').append(child._elem);
		this._elem.append(div);
		var c =  Math.floor(12 / this._elem.children().length);
		if (c < 1) c = 1;
		var idx = (this._elem.children().length - 1);
		if (('#' + idx) in this.columnWeights) {
			this._elem.children().eq(idx).attr('class', 'wb-horiz-lay-item col-md-' + this.columnWeights['#' + idx]);
		} else {
			this._elem.children().attr('class', 'wb-horiz-lay-item col-md-' + c);
		}
		if (('#' + idx) in this.columnWeightsSmall) {
			this._elem.children().eq(idx).addClass('col-sm-' + this.columnWeightsSmall['#' + idx]);
		}
	};
	self.prototype._detachChild = function(child) {
		var div = child._elem.parent();
		child._elem.detach();
		div.remove();
		var c =  Math.floor(12 / this._elem.children().length);
		if (c < 1) c = 1;
		this._elem.children().attr('class', 'wb-horiz-lay-item col-md-' + c);
	};
	self.prototype.applyLayoutCellCss = function(idx, css) {
		this._elem.children().eq(idx).css(css);
		return this;
	};
	/**
	 * 
	 * @param {Number} idx
	 * @param {Number} weight collumn weight (1-12)
	 * @param {Number} size
	 * @returns {undefined}
	 */
	self.prototype.setColWeight = function(idx, weight, size) {
		var oldWeight = Math.floor(12 / this._elem.children().length);
		if (size === 1) {
			if (('#' + idx) in this.columnWeightsSmall) {
				oldWeight = this.columnWeightsSmall['#' + idx];
			}
			this.columnWeightsSmall['#' + idx] = weight;
			this._elem.children().eq(idx).removeClass('col-sm-' + oldWeight).addClass('col-sm-' + weight);
		} else {
			if (('#' + idx) in this.columnWeights) {
				oldWeight = this.columnWeights['#' + idx];
			}
			this.columnWeights['#' + idx] = weight;
			this._elem.children().eq(idx).removeClass('col-md-' + oldWeight).addClass('col-md-' + weight);
		}
		return this;
	};
	
	self.prototype.setNoPadding = function(noPadding) {
		if (noPadding) {
			this._elem.addClass('wb-horiz-lay-no-padding');
		} else {
			this._elem.removeClass('wb-horiz-lay-no-padding');
		}
	};
	
	return self;
});
;

/** FlowLayout **/

define('FlowLayout', ['UIContainer'], function(UIContainer) {
	
	var self = function(inh) {
		if (inh !== '%inherit%') {
			UIContainer.prototype.constructor.call(this);
		}
	};
	self.prototype = new UIContainer('%inherit%');
	self.prototype.constructor = self;
	
	self.prototype.spacing = 0;
	self.prototype.horizontalAlign = 'left';
	self.prototype.verticalAlign = 'bottom';
	
	self.prototype._appendChild = function(child) {
		var div = $('<div>').css({display: 'inline-block', verticalAlign: this.verticalAlign}).append(child._elem);
		if (this.spacing) {
			if (wb_builder.rtl) {
				div.css({marginLeft: (this.spacing + 'px')});
			} else {
				div.css({marginRight: (this.spacing + 'px')});
			}
		}
		div.addClass('wb-horiz-lay-item');
		this._elem.append(div);
	};
	self.prototype._detachChild = function(child) {
		var div = child._elem.parent();
		child._elem.detach();
		div.remove();
	};
	self.prototype.applyLayoutCellCss = function(idx, css) {
		this._elem.children().eq(idx).css(css);
		return this;
	};
	/**
	 * Set spacing between elements
	 * @param {number} spacing
	 */
	self.prototype.setSpacing = function(spacing) {
		this.spacing = spacing;
		var css = {};
		if (wb_builder.rtl) {
			css.marginLeft = (spacing + 'px');
		} else {
			css.marginRight = (spacing + 'px');
		}
		this._elem.children().css(css);
	};
	/**
	 * Set horizontal alignment for elements
	 * @param {string} horizontalAlign one of 'left', 'center' or 'right'
	 */
	self.prototype.setHorizontalAlign = function(horizontalAlign) {
		this.horizontalAlign = horizontalAlign;
		this._elem.css({textAlign: horizontalAlign});
	};
	/**
	 * Set vertical alignment for elements
	 * @param {string} verticalAlign one of 'top', 'middle' or 'bottom'
	 */
	self.prototype.setVerticalAlign = function(verticalAlign) {
		this.verticalAlign = verticalAlign;
		this._elem.children().css({verticalAlign: verticalAlign});
	};
	
	return self;
});
;

/** TextField **/

define('TextField', ['UIComponent'], function(UIComponent) {
	
	var self = function(text, placeholder, textArea, resizable) {
		if (text !== '%inherit%') {
			this.textArea = textArea ? true : false;
			UIComponent.prototype.constructor.call(this);
			if (text) this.setText(text);
			if (placeholder) this.setPlaceholder(placeholder);
			if (this.textArea) {
				if (!resizable) {
					this._elem.css({resize: 'none'});
				} else if (resizable === 'vertical' || resizable === 'horizontal' || resizable === 'both') {
					this._elem.css({resize: resizable});
				} else if (resizable === true) {
					this._elem.css({resize: 'both'});
				}
			}
		}
	};
	self.prototype = new UIComponent('%inherit%');
	self.prototype.constructor = self;
	
	self.prototype.textArea = false;
	
	self.prototype._createElem = function() {
		return this.textArea ? $('<textarea>').addClass('form-control') : $('<input>').addClass('form-control').attr('type', 'text');
	};
	self.prototype.setText = function(text) {
		this._elem.val(text);
		return this;
	};
	self.prototype.setValue = self.prototype.setText;
	self.prototype.getText = function() {
		return this._elem.val();
	};
	self.prototype.getValue = self.prototype.getText;
	self.prototype.setPlaceholder = function(text) {
		this._elem.attr('placeholder', text);
		return this;
	};
	self.prototype.getPlaceholder = function() {
		return this._elem.attr('placeholder');
	};
	self.prototype.setAsPassword = function(asPassword) {
		if (!this.textArea) {
			this._elem.attr('type', (asPassword ? 'password' : 'text'));
		}
		return this;
	};
	self.prototype.setEnabled = function(enabled) {
		UIComponent.prototype.setEnabled.call(this, enabled);
		if (enabled) {
			this._elem.removeClass('disabled');
			this._elem.removeAttr('disabled');
		} else {
			this._elem.addClass('disabled');
			this._elem.attr('disabled', 'disabled');
		}
	};
	self.prototype.focus = function() {
		this._elem.focus();
	};
	self.prototype.insertAtCursor = function(text) {
		var el = this._elem.get(0), val = el.value;
		el.focus();
		if (el.selectionStart !== undefined) {
			el.value = val.substring(0, el.selectionStart) + text + val.substring(el.selectionEnd);
		} else if (typeof el.createTextRange) {
			var rng = el.createTextRange();
			if (rng) rng.text = text;
		} else {
			el.value = val + text;
		}
	};
	
	return self;
});
;

/** MultilangTextField **/

define('MultilangTextField', ['UIComponent'], function(UIComponent) {
	
	var self = function() { if (arguments.length !== 1 || arguments[0] !== '%inherit%') this.__construct.apply(this, arguments); };
	self.prototype = new UIComponent('%inherit%');
	self.prototype.constructor = self;
	$.extend(self.prototype, {
		
		_wbField: null,
		
		__construct: function(value, isTextarea, resizable) {
			this._wbField = new WB_LangInputControl(null, value, isTextarea, resizable);
			UIComponent.prototype.constructor.call(this);
		},
		
		_createElem: function() { return this._wbField.elem; },
		
		setText: function(text, langCode) {
			var noReset = false;
			if (langCode) noReset = true;
			this._wbField.setValue(text, langCode, noReset);
		},
		
		setValue: function(text) {
			this._wbField.setValue(text);
		},
		
		getText: function() {
			return this._wbField.getValue();
		},
		
		getValue: function() {
			return this._wbField.getValue();
		},
		
		focus: function() {
			this._wbField.focus();
		},
		
		setEnabled: function(enabled) {
			UIComponent.prototype.setEnabled.call(this, enabled);
			this._wbField.setDisabled(!enabled);
		},
		
		setModified: function(modified) {
			this._wbField.modified = modified ? true : false;
		},
		
		addClass: function(cls) {
			UIComponent.prototype.addClass.call(this, cls);
			if (('' + cls).match(/^span[0-9]+$/)) {
				this._wbField._inputElem.addClass(cls);
			}
			return this;
		},
		
		removeClass: function(cls) {
			UIComponent.prototype.removeClass.call(this, cls);
			if (('' + cls).match(/^span[0-9]+$/)) {
				this._wbField._inputElem.removeClass(cls);
			}
			return this;
		},

		setOnChange: function(callback) {
			this._wbField.onChange = callback;
		}
		
	});
	
	return self;
});
;

/** UIButton **/

define('UIButton', ['UIComponent'], function(UIComponent) {
	
	var UIButton = function(text, style, icon, type) {
		if (text !== '%inherit%') {
			UIComponent.prototype.constructor.call(this);
			this._iconElem = $('<i>').css((wb_builder.rtl ? {marginLeft: '4px'} : {marginRight: '4px'}));
			this.setText(text);
			if (style) this.setButtonStyle(style);
			if (icon) this.setIcon(icon);
			if (type) this.setType(type);
		}
	};
	UIButton.STYLE_SUCCESS = 'success';
	UIButton.STYLE_INFO = 'info';
	UIButton.STYLE_DANGER = 'danger';
	UIButton.STYLE_WARNING = 'warning';
	UIButton.STYLE_PRIMARY = 'primary';
	UIButton.STYLE_DEFAULT = 'default';
	UIButton.STYLE_LINK = 'link';
	UIButton.TYPE_BUTTON = 'button';
	UIButton.TYPE_SUBMIT = 'submit';
	UIButton.prototype = new UIComponent('%inherit%');
	UIButton.prototype.constructor = UIButton;
	
	UIButton.prototype._icon = null;
	UIButton.prototype._iconElem = null;
	
	UIButton.prototype.setType = function(type) {
		if (type) this._elem.attr({type: type});
	};
	
	UIButton.prototype.setIcon = function(icon) {
		this._icon = icon ? icon : null;
		this._iconElem.removeClass();
		if (this._icon) {
			this._iconElem.addClass(this._icon).prependTo(this._elem);
		} else {
			this._iconElem.detach();
		}
	};
	
	UIButton.prototype._createElem = function() { return $('<button>').attr('type', 'button').addClass('btn btn-default'); };
	UIButton.prototype.setText = function(text) {
		this._elem.text((text === null) ? '' : text);
		return this;
	};
	UIButton.prototype.getText = function() {
		return this._elem.text();
	};
	UIButton.prototype.setButtonStyle = function(style) {
		this._elem.removeClass('btn-success btn-danger btn-info btn-warning btn-primary btn-link btn-default');
		if (style === UIButton.STYLE_DANGER) {
			this._elem.addClass('btn-danger');
		} else if (style === UIButton.STYLE_SUCCESS) {
			this._elem.addClass('btn-success');
		} else if (style === UIButton.STYLE_INFO) {
			this._elem.addClass('btn-info');
		} else if (style === UIButton.STYLE_WARNING) {
			this._elem.addClass('btn-warning');
		} else if (style === UIButton.STYLE_PRIMARY) {
			this._elem.addClass('btn-primary');
		} else if (style === UIButton.STYLE_LINK) {
			this._elem.addClass('btn-link');
		} else if (style === UIButton.STYLE_DEFAULT) {
			this._elem.addClass('btn-default');
		}
		return this;
	};
	UIButton.prototype.setEnabled = function(enabled) {
		UIComponent.prototype.setEnabled.call(this, enabled);
		if (enabled) {
			this._elem.removeClass('disabled');
		} else {
			this._elem.addClass('disabled');
		}
	};
	
	return UIButton;
});
;

/** Label **/

define('Label', ['UIComponent'], function(UIComponent) {
	
	var self = function(text) {
		if (text !== '%inherit%') {
			UIComponent.prototype.constructor.call(this);
			this.setText(text);
		}
	};
	self.prototype = new UIComponent('%inherit%');
	self.prototype.constructor = self;
	
	self.prototype._createElem = function() { return $('<label>'); };
	self.prototype.setText = function(text) {
		this._elem.text(text);
		return this;
	};
	self.prototype.getText = function() {
		return this._elem.text();
	};
	self.prototype.setHtml = function(html) {
		this._elem.html(html);
		return this;
	};
	self.prototype.getHtml = function() {
		return this._elem.html();
	};
	
	return self;
});
;

/** CheckBox **/

define('CheckBox', ['UIComponent'], function(UIComponent) {
	
	var self = function() { this.__construct.apply(this, arguments); };
	self.prototype = new UIComponent('%inherit%');
	self.prototype.constructor = self;
	$.extend(self, {
		_elemIndex: 0
	});
	$.extend(self.prototype, {
		
		_label: null,
		_labelText: null,
		_labelComp: null,
		_input: null,
		_inline: null,
		
		/**
		 * Construct Checkbox
		 * @param {string|UIComponent} label
		 * @param {boolean} value
		 * @param {boolean} inline
		 */
		__construct: function(label, value, inline) {
			this._inline = (inline && !(label instanceof UIComponent)) ? true : false;
			UIComponent.prototype.constructor.call(this);
			var id = 'ui_checkbox_id' + self._elemIndex;
			self._elemIndex++;
			this._elem.attr({'for': id});
			this._input = $('<input>').attr({type: 'checkbox', id: id});
			if (label instanceof UIComponent) {
				this._elem.addClass('wb-compo-cbr');
				this._elem.append($('<label>').append(this._input));
				this._labelComp = label;
				this._labelComp.addClass('wb-compo-cbr-label');
				this._labelComp.getElem().appendTo(this._elem);
			} else {
				this._labelText = $('<span>');
				if (this._inline) {
					this._elem.append(this._input).append(this._labelText);
				} else {
					this._elem.append($('<label>').append(this._input).append(this._labelText));
				}
				this.setLabel(label);
			}
			this.setValue(value);
		},
		
		_createElem: function() { return (this._inline ? $('<label>').addClass('checkbox-inline') : $('<div>').addClass('checkbox')); },
		
		setLabel: function(label) {
			this._label = label;
			if (this._labelText) this._labelText.text(label);
		},
		
		getLabel: function() {
			return this._label;
		},
		
		setValue: function(value) {
			this._input.get(0).checked = (value ? true : false);
		},
		
		getValue: function() {
			return (this._input.get(0).checked ? true : false);
		},
		
		setEnabled: function(enabled) {
			UIComponent.prototype.setEnabled.call(this, enabled);
			if (enabled) {
				this._input.removeClass('disabled');
				this._input.removeAttr('disabled');
			} else {
				this._input.addClass('disabled');
				this._input.attr('disabled', 'disabled');
			}
		},
		
		on: function(event, func) {
			if (event === 'change') {
				this._input.on(event, func);
			} else {
				UIComponent.prototype.on.call(this, event, func);
			}
			return this;
		},
		
		off: function(event, func) {
			if (event === 'change') {
				this._input.off(event, func);
			} else {
				UIComponent.prototype.off.call(this, event, func);
			}
			return this;
		},
		
		trigger: function(event, extraParameters) {
			if (event === 'change') {
				this._input.trigger(event, extraParameters);
			} else {
				UIComponent.prototype.trigger.call(this, event, extraParameters);
			}
			return this;
		}
		
	});
	
	
	return self;
});
;

/** RadioBox **/

define('RadioBox', ['UIComponent'], function(UIComponent) {
	
	var self = function() { this.__construct.apply(this, arguments); };
	self.prototype = new UIComponent('%inherit%');
	self.prototype.constructor = self;
	$.extend(self, {
		_elemIndex: 0
	});
	$.extend(self.prototype, {
		
		_label: null,
		_group: null,
		_labelText: null,
		_labelComp: null,
		_input: null,
		_inline: null,
		
		/**
		 * Construct Radiobox
		 * @param {string|UIComponent} label
		 * @param {boolean} value
		 * @param {string} group
		 * @param {boolean} inline
		 * @param {string} inputValue
		 */
		__construct: function(label, value, group, inline, inputValue) {
			this._inline = (inline && !(label instanceof UIComponent)) ? true : false;
			UIComponent.prototype.constructor.call(this);
			var id = 'ui_radiobox_id' + self._elemIndex;
			self._elemIndex++;
			this._elem.attr({'for': id});
			this._input = $('<input>').attr({type: 'radio', id: id});
			if (label instanceof UIComponent) {
				this._elem.addClass('wb-compo-cbr');
				this._elem.append($('<label>').append(this._input));
				this._labelComp = label;
				this._labelComp.addClass('wb-compo-cbr-label');
				this._labelComp.getElem().appendTo(this._elem);
			} else {
				this._labelText = $('<span>');
				if (this._inline) {
					this._elem.append(this._input).append(this._labelText);
				} else {
					this._elem.append($('<label>').append(this._input).append(this._labelText));
				}
				this.setLabel(label);
			}
			this.setValue(value);
			if (group) this.setGroup(group);
			if (inputValue) this._input.attr({value: inputValue});
		},
		
		_createElem: function() { return (this._inline ? $('<label>').addClass('radio-inline') : $('<div>').addClass('radio')); },
		
		setGroup: function(group) {
			this._group = group;
			if (this._group) {
				this._input.attr({name: this._group});
			} else {
				this._input.removeAttr('name');
			}
		},
		
		getGroup: function() {
			return this._group;
		},
		
		setLabel: function(label) {
			this._label = label;
			if (this._labelText) this._labelText.text(label);
		},
		
		getLabel: function() {
			return this._label;
		},
		
		setValue: function(value) {
			this._input.get(0).checked = (value ? true : false);
		},
		
		getValue: function() {
			return (this._input.get(0).checked ? true : false);
		},
		
		setEnabled: function(enabled) {
			UIComponent.prototype.setEnabled.call(this, enabled);
			if (enabled) {
				this._input.removeClass('disabled');
				this._input.removeAttr('disabled');
			} else {
				this._input.addClass('disabled');
				this._input.attr('disabled', 'disabled');
			}
		},
		
		on: function(event, func) {
			if (event === 'change') {
				this._input.on(event, func);
			} else {
				UIComponent.prototype.on.call(this, event, func);
			}
			return this;
		},
		
		off: function(event, func) {
			if (event === 'change') {
				this._input.off(event, func);
			} else {
				UIComponent.prototype.off.call(this, event, func);
			}
			return this;
		},
		
		trigger: function(event, extraParameters) {
			if (event === 'change') {
				this._input.trigger(event, extraParameters);
			} else {
				UIComponent.prototype.trigger.call(this, event, extraParameters);
			}
			return this;
		}
		
	});
	
	
	return self;
});
;

/** DropdownBox **/

define('DropdownBox', ['UIComponent'], function(UIComponent) {
	'use strict';
	
	var currentlyOpen = null, docCallback = null, searchIdx = -1;
	var self = function() { this.__construct.apply(this, arguments); };
	self.prototype = new UIComponent('%inherit%');
	self.prototype.constructor = self;
	$.extend(self.prototype, {
		
		_input: null,
		_btn: null,
		_group: null,
		_menu: null,
		_open: false,
		_items: null,
		_itemsIndex: null,
		_selectedItem: null,
		_itemMouseEnterFunc: null,
		_itemMouseLeaveFunc: null,
		
		__construct: function(options) {
			UIComponent.prototype.constructor.call(this);
			var thisSelf = this;
			this._elem
				.addClass('input-group wb-combobox-controll')
				.on('keydown', function(e) {
					if (!thisSelf._open) return;
					var nItem, itemTop, itemHeight,
						menuScrollTop = thisSelf._menu.scrollTop(),
						menuHeight = thisSelf._menu.outerHeight(),
						item = self.Item.fromElem(thisSelf._menu.children('li.hover').eq(0));
					if (!item && thisSelf._selectedItem) {
						item = thisSelf._selectedItem;
					} else if (!item && thisSelf._items.length > 0) {
						item = thisSelf._items[0];
					} else if (!item) {
						return;
					}
					if (e.which === 13) {
						thisSelf.setOpen(false);
						thisSelf.selectItem(item);
						e.preventDefault();
						e.stopPropagation();
						return false;
					} else if (e.which === 27) {
						thisSelf.setOpen(false);
						e.preventDefault();
						e.stopPropagation();
						return false;
					} else if (e.which === 38) {
						nItem = self.Item.fromElem(item._elem.prev('li'));
						if (nItem) {
							item._elem.removeClass('hover');
							nItem._elem.addClass('hover');
							itemTop = nItem._elem.get(0).offsetTop;
							if (itemTop <= menuScrollTop) {
								thisSelf._menu.scrollTop(itemTop);
							}
						}
						e.preventDefault();
						e.stopPropagation();
						return false;
					} else if (e.which === 40) {	
						nItem = self.Item.fromElem(item._elem.next('li'));
						if (nItem) {
							item._elem.removeClass('hover');
							nItem._elem.addClass('hover');
							itemTop = nItem._elem.get(0).offsetTop;
							itemHeight = nItem._elem.outerHeight();
							if ((itemTop + itemHeight) >= (menuScrollTop + menuHeight)) {
								thisSelf._menu.scrollTop(itemTop - menuHeight + itemHeight);
							}
						}
						e.preventDefault();
						e.stopPropagation();
						return false;
					}
				}).on('keypress', function(e) {
					if (!thisSelf._open) return;
					var n, i = ((searchIdx >= 0) ? searchIdx : 0), ch = String.fromCharCode(e.which).toLowerCase(),
						itemTop, itemHeight,
						menuScrollTop = thisSelf._menu.scrollTop(),
						menuHeight = thisSelf._menu.outerHeight();
					for (n = 0; n < thisSelf._items.length; n++) {
						var title = thisSelf._items[i].getTitle();
						if (title && title.toLowerCase().charAt(0) === ch && searchIdx !== i) {
							thisSelf._items[i]._elem.parent().children('li').removeClass('hover');
							thisSelf._items[i]._elem.addClass('hover');
							itemTop = thisSelf._items[i]._elem.get(0).offsetTop;
							itemHeight = thisSelf._items[i]._elem.outerHeight();
							if (itemTop <= menuScrollTop) {
								thisSelf._menu.scrollTop(itemTop);
							} else if ((itemTop + itemHeight) >= (menuScrollTop + menuHeight)) {
								thisSelf._menu.scrollTop(itemTop - menuHeight + itemHeight);
							}
							searchIdx = i;
							break;
						}
						i++;
						if (i >= thisSelf._items.length) i = 0;
					}
					e.preventDefault();
					e.stopPropagation();
					return false;
				});
			this._input = $('<input>')
				.addClass('form-control')
				.attr({type: 'text', readonly: 'readonly'})
				.appendTo(this._elem)
				.on('click', function(e) { thisSelf.setOpen(!thisSelf._open); e.stopPropagation(); return false; });
			this._group = $('<div>').addClass('input-group-btn').appendTo(this._elem);
			this._btn = $('<button>')
				.addClass('btn btn-default dropdown-toggle')
				.attr({type: 'button'})
				.append($('<span>').addClass('caret'))
				.appendTo(this._group)
				.on('click', function(e) { thisSelf.setOpen(!thisSelf._open); e.stopPropagation(); return false; });
			this._menu = $('<ul>').addClass('dropdown-menu').appendTo(this._group);
			this._items = [];
			this._itemsIndex = {};
			this._itemMouseEnterFunc = function() {
				var li = $(this);
				li.parent().children('li').removeClass('hover');
				li.addClass('hover');
			};
			this._itemMouseLeaveFunc = function() {
				var li = $(this);
				li.removeClass('hover');
			};
			if (!docCallback) {
				$(document.body).on('click', docCallback = function() {
					if (currentlyOpen) currentlyOpen.setOpen(false);
				});
			}
			if (options && options.length) {
				for (var i = 0; i < options.length; i++) {
					this.addItem(options[i]);
				}
			}
		},
		
		getItemById: function(id) {
			var k = '#' + id;
			return (k in this._itemsIndex) ? this._itemsIndex[k] : null;
		},
		
		getItem: function(index) {
			return (index >= 0 && index < this._items.length) ? this._items[index] : null;
		},
		
		/**
		 * Select item.
		 * If item is null and select is false, then will unselect
		 * all items in multi-select mode.
		 * @param {DropdownBox.Item} item item to be selected
		 * @param {boolean} select item selection state (only valid on multi-select items)
		 */
		selectItem: function(item, select) {
			var i, idx, value = '';
			if (!item) {
				this._selectedItem = null;
				this._input.val('');
				if (select === false) {
					for (i = 0; i < this._items.length; i++) {
						if (this._items[i].multiSelect) this._items[i].setChecked(false);
					}
				}
			} else if (!item.nonSelectable) {
				if (item.multiSelect) {
					this._selectedItem = null;
					if (this._items.indexOf(item) >= 0) {
						item.setChecked((select || select === null || typeof select === 'undefined'));
					}
					for (i = 0; i < this._items.length; i++) {
						if (this._items[i].getChecked()) {
							value += (value ? '; ' : '') + this._items[i].getTitle();
						}
					}
					this._input.val(value ? value : '');
				} else {
					idx = this._items.indexOf(item);
					if (idx >= 0) {
						this._selectedItem = item;
						this._input.val(item.getTitle());
					}
				}
			}
		},
		
		/**
		 * Get selected item in single-select mode
		 * @returns {DropdownBox.Item}
		 */
		getSelectedItem: function() {
			return this._selectedItem;
		},
		
		/**
		 * Get selected item list in multi-select mode
		 * @returns {DropdownBox.Item[]}
		 */
		getSelectedItems: function() {
			var i, list = [];
			for (i = 0; i < this._items.length; i++) {
				if (this._items[i].getChecked()) list.push(this._items[i]);
			}
			return list;
		},
		
		addItem: function(item) {
			var thisSelf = this, idx = this._items.indexOf(item);
			if (idx < 0) {
				this._items.push(item);
				if (item._id) this._itemsIndex['#' + item._id] = item;
				this._menu.append(item._elem);
				item._selectFunc = function() {
					if (item.multiSelect) {
						thisSelf.selectItem(item, !item.getChecked());
					} else {
						thisSelf.selectItem(item);
					}
					if (!item.multiSelect) thisSelf.setOpen(false);
					thisSelf.trigger('change');
					if (item.multiSelect) return false;
				};
				item.on('click', item._selectFunc);
				item.on('mouseenter', this._itemMouseEnterFunc);
				item.on('mouseleave', this._itemMouseLeaveFunc);
				if (this._items.length === 1) {
					this.selectItem(item);
				}
			}
		},
		
		removeItem: function(item) {
			var idx = this._items.indexOf(item);
			if (idx >= 0) {
				this._items.splice(idx, 1);
				if (item._id) {
					this._itemsIndex['#' + item._id] = null;
					delete this._itemsIndex['#' + item._id];
				}
				item._elem.detach();
				if (item._selectFunc) {
					item.off('click', item._selectFunc);
					item.off('mouseenter', this._itemMouseEnterFunc);
					item.off('mouseleave', this._itemMouseLeaveFunc);
				}
			}
		},
		
		removeAllItem: function() {
			this.removeAllItems();
		},
		
		removeAllItems: function() {
			for (var i = 0; i < this._items.length; i++) {
				this._items[i]._elem.detach();
				if (this._items[i]._selectFunc) {
					this._items[i].off('click', this._items[i]._selectFunc);
					this._items[i].off('mouseenter', this._itemMouseEnterFunc);
					this._items[i].off('mouseleave', this._itemMouseLeaveFunc);
				}
			}
			this._items.splice(0, this._items.length);
			this._itemsIndex = {};
			this.selectItem(null);
		},
		
		setOpen: function(open) {
			this._open = open ? true : false;
			if (this._open) {
				if (currentlyOpen && currentlyOpen !== this) currentlyOpen.setOpen(false);
				currentlyOpen = this;
				var w = this._input.outerWidth(false),
					css = {width: (this._input.outerWidth(false) + this._group.outerWidth(false)) + 'px'};
				if (wb_builder.rtl) {
					css.right = ('-' + w + 'px');
				} else {
					css.left = ('-' + w + 'px');
				}
				this._menu.css(css);
				this._group.addClass('open');
				if (this._selectedItem) {
					this._selectedItem._elem.addClass('hover');
					this._selectedItem._elem.get(0).scrollIntoView(false);
					searchIdx = this._items.indexOf(this._selectedItem);
				} else {
					searchIdx = -1;
				}
			} else {
				this._group.removeClass('open');
				if (currentlyOpen === this) currentlyOpen = null;
			}
		},
		
		getOpen: function() {
			return this._open;
		},
		
		on: function(event, func) {
			if (event === 'change') {
				this._input.on(event, func);
			} else {
				UIComponent.prototype.on.call(this, event, func);
			}
			return this;
		},
		
		off: function(event, func) {
			if (event === 'change') {
				this._input.off(event, func);
			} else {
				UIComponent.prototype.off.call(this, event, func);
			}
			return this;
		},
		
		trigger: function(event, extraParameters) {
			if (event === 'change') {
				this._input.trigger(event, extraParameters);
			} else {
				UIComponent.prototype.trigger.call(this, event, extraParameters);
			}
			return this;
		}
		
	});
	
	self.Item = function() { this.__construct.apply(this, arguments); };
	$.extend(self.Item, {
		fromElem: function(elem) {
			return elem.data('__META_INST__');
		}
	});
	$.extend(self.Item.prototype, {
		
		_title: null,
		_id: null,
		_original: null,
		_elem: null,
		_aElem: null,
		_cbwElem: null,
		_cbElem: null,
		_iconElem: null,
		_selectFunc: null,
		_selected: false,
		_checked: false,
		multiSelect: false,
		nonSelectable: false,
		
		/**
		 * Create item
		 * @param {string} title item title
		 * @param {string} id item identificator
		 * @param {Object} original descriptor object
		 * @param {string} htmlTitle title as html
		 * @param {string} icon icon definition style class
		 * @param {boolean} multiSelect if true will add checkbox to item
		 * @param {boolean} nonSelectable if true item will not be selectable
		 */
		__construct: function(title, id, original, htmlTitle, icon, multiSelect, nonSelectable) {
			this._id = id;
			this._elem = $('<li>');
			this._elem.data('__META_INST__', this);
			if (multiSelect) {
				this.multiSelect = true;
				this._cbElem = $('<input>').attr({type: 'checkbox'});
				this._cbwElem = $('<div>').addClass('wb-combobox-controll-cb').append(this._cbElem).appendTo(this._elem);
			}
			if (icon) {
				this._iconElem = $('<span>').addClass('wb-combobox-controll-icon').addClass(icon);
			}
			this.nonSelectable = nonSelectable ? true : false;
			this._aElem = $('<a>').attr({href: 'javascript:void(0)'}).appendTo(this._elem);
			this.setTitle(title);
			if (htmlTitle) this.setHtmlTitle(htmlTitle);
			this._original = original;
		},
		
		getId: function() {
			return this._id;
		},
		
		getOriginal: function() {
			return this._original;
		},
		
		setSelected: function(selected) {
			this._selected = selected ? true : false;
			if (this._selected) {
				this._elem.addClass('active');
			} else {
				this._elem.removeClass('active');
			}
		},
		
		getSelected: function() {
			return this._selected;
		},
		
		setChecked: function(checked) {
			this._checked = checked ? true : false;
			if (this._cbElem) this._cbElem.get(0).checked = this._checked;
		},
		
		getChecked: function() {
			return this._checked;
		},
		
		setTitle: function(title) {
			this._title = title;
			if (this._iconElem) this._iconElem.detach();
			this._aElem.text(this._title ? this._title : ('[' + __('no name') + ']'));
			if (this._iconElem) this._aElem.prepend(this._iconElem);
		},
		
		setHtmlTitle: function(title) {
			if (this._iconElem) this._iconElem.detach();
			this._aElem.html(title ? title : '');
			if (this._iconElem) this._aElem.prepend(this._iconElem);
		},
		
		getTitle: function() {
			return this._title;
		},
		
		on: function(event, func) {
			if (event === 'click') {
				this._aElem.on(event, func);
				if (this._cbwElem) this._cbwElem.on(event, func);
			} else {
				this._elem.on(event, func);
			}
			return this;
		},
		
		off: function(event, func) {
			if (event === 'click') {
				this._aElem.off(event, func);
			} else {
				this._elem.off(event, func);
			}
			return this;
		}
		
	});
	
	return self;
});
;

/** AlertBox **/

define('AlertBox', ['UIComponent'], function(UIComponent) {
	
	var self = function(text) {
		if (text !== '%inherit%') {
			UIComponent.prototype.constructor.call(this);
			this.setText(text);
		}
	};
	self.STYLE_SUCCESS = 'success';
	self.STYLE_INFO = 'info';
	self.STYLE_DANGER = 'danger';
	self.STYLE_WARNING = 'warning';
	self.STYLE_PRIMARY = 'primary';
	self.STYLE_DEFAULT = 'default';
	self.prototype = new UIComponent('%inherit%');
	self.prototype.constructor = self;
	
	self.prototype._createElem = function() { return $('<div>').addClass('alert alert-default'); };
	self.prototype.setText = function(text) {
		this._elem.text(text);
		return this;
	};
	self.prototype.getText = function() {
		return this._elem.text();
	};
	self.prototype.setBoxStyle = function(style) {
		this._elem.removeClass('alert-success alert-danger alert-info alert-warning alert-primary alert-default');
		if (style === self.STYLE_DANGER) {
			this._elem.addClass('alert-danger');
		} else if (style === self.STYLE_SUCCESS) {
			this._elem.addClass('alert-success');
		} else if (style === self.STYLE_INFO) {
			this._elem.addClass('alert-info');
		} else if (style === self.STYLE_WARNING) {
			this._elem.addClass('alert-warning');
		} else if (style === self.STYLE_PRIMARY) {
			this._elem.addClass('alert-primary');
		} else if (style === self.STYLE_DEFAULT) {
			this._elem.addClass('alert-default');
		}
		return this;
	};
	
	return self;
});
;

/** PreloaderOverlay **/

define('PreloaderOverlay', ['UIComponent'], function(UIComponent) {
	'use strict';
	
	var PreloaderOverlay = function(ing) {
		if (ing !== '%inherit%') {
			UIComponent.prototype.constructor.call(this);
			this._elem.addClass('wb-preloader-overlay');
			this._progressElem = $('<div>')
				.addClass('progress-bar progress-bar-striped active')
				.css({width: '100%'});
			$('<div>').addClass('progress')
				.append(this._progressElem)
				.appendTo(this._elem);
		}
	};
	PreloaderOverlay.prototype = new UIComponent('%inherit%');
	PreloaderOverlay.prototype.constructor = PreloaderOverlay;
	
	PreloaderOverlay.prototype._progressElem = null;
	PreloaderOverlay.prototype._value = 100;
	
	PreloaderOverlay.prototype._createElem = function() { return $('<div>'); };
	
	PreloaderOverlay.prototype.setValue = function(value) {
		this._value = Math.max(Math.min(value, 100), 0);
		this._progressElem.css({width: (this._value + '%')});
	};
	
	PreloaderOverlay.prototype.getValue = function() {
		return this._value;
	};
	
	return PreloaderOverlay;
});
;

/** NotificationRibbon **/

define('NotificationRibbon', ['UIComponent'], function(UIComponent) {
	
	var self = new UIComponent('%inherit%');
	
	self._xElem = null;
	self._text = "";
	self.init = function() {
		UIComponent.prototype.constructor.call(this);
		this._elem.addClass('weeemsg alert alert-warning').appendTo($('#head'));
		this._xElem = $('<button>').addClass('close').attr({type: 'button', dataDismiss: 'alert'}).html('&times;').appendTo(this._elem);
		var thisSelf = this;
		this._xElem.on('click', function() { thisSelf.setVisible(false); });
		if (wb_builder.testMode) {
			this.setText(__('This is Demo version. Everything created with it will be reset after 24 hours.'));
			//this.setVisible(false);
		} else {
			this.setVisible(false);
		}
	};
	self.setText = function(text) {
		this._xElem.detach();
		this._elem.empty();
		this._text = text;
		this._elem.text(text);
		this._elem.prepend(this._xElem);
	};
	self.getText = function() {
		return this._text;
	};
	
	return self;
});
;

/** CongratsDialog **/

define('CongratsDialog', [
		'Dialog',
		'VerticalLayout',
		'Label',
		'UIButton'
	], function(Dialog, VerticalLayout, Label, UIButton) {
	
	return $.extend(new Dialog('%inherit%'), {
		msgLabel: null,
		
		init: function() {
			Dialog.prototype.__construct.call(this, '', false);
			this.content.css({padding: '20px'});
			this.setTitleVisible(false);
			this.setFooterVisible(false);
			this.setSize(500, null);
			this.setTitle("Congrats Stuff");
						
			var thisSelf = this;
			
			var titleCss = {fontSize: '25px', margin: '20px 0px 30px 0px', textAlign: 'center', cursor: 'default'},
				msgCss = {textAlign: 'center', marginBottom: '30px', color: '#666666', cursor: 'default'};
			
			var layout = new VerticalLayout(),
				title = new Label(__('Congratulations, your website is live!')),
				msg = new Label(''),
				btn = new UIButton(__('View Site'));
			layout.css({textAlign: 'center', marginBottom: '10px'})
				.addChild(title.css(titleCss))
				.addChild(msg.css(msgCss))
				.addChild(btn.setButtonStyle(UIButton.STYLE_SUCCESS).on('click', function() {
					window.open('http://' + wb_builder.siteDomain, 'wb_builder_prewiew_published');
				}));
			
			this.msgLabel = msg;
			
			this.setContent(layout.getElem());
			this.content.prepend($('<button>').attr('type', 'button').css({
				position: 'absolute',
				top: '12px',
				right: '20px'
			}).addClass('close').html('&times;').on('click', function() {
				thisSelf.hide();
			}));
		},
		
		setVisible: function(visible) {
			if (visible) {
				var url = 'http://' + wb_builder.siteDomain,
					link = '<a href="' + url + '" target="_blank">' + url + '</a>';
				this.msgLabel.setHtml(String(__('Here is your website address: %s')).replace('%s', link));
			}
			Dialog.prototype.setVisible.call(this, visible);
		}
		
	});
	
});
;

/** SettingsBox **/

define('SettingsBox', ['MobileToolbar'] , function(MobileToolbar) {
	
	var self = {
		
		_elem: null,
		_btn: null,
		_btnDrop: null,
		_submenu: null,
		_items: null,
		_isOpen: false,
		
		init: function(builder) {
			var thisSelf = this;
			var openFunc = function(e) {
				thisSelf.setOpen(!thisSelf.isOpen());
				e.stopPropagation();
				e.preventDefault();
				return true;
			};
			$(document.body).on('click', function() { thisSelf.setOpen(false); });
			this._elem = $('<div>').addClass('btn-group li wb-config').attr({id: 'wb_config_btn'});
			this._btn = $('<button>')
					.attr({type: 'button'})
					.addClass('btn')
					.append($('<i>').addClass('icon-cog-big'))
					.appendTo(this._elem)
					.on('click', openFunc);
			this._btnDrop = $('<button>')
					.attr({type: 'button'})
					.addClass('btn dropdown-toggle')
					.append($('<span>').addClass('caret'))
					.appendTo(this._elem)
					.on('click', openFunc);
			this._submenu = $('<ul>').addClass('dropdown-menu').appendTo(this._elem);
			this._items = [];
			
			this.addDefaultItems(builder);
			
			this._elem.insertAfter($('#settings-toolbar-cont').children().eq(0));
			
			return this;
		},
		
		setOpen: function(open) {
			if (open) {
				if (!this._elem.hasClass('open')) this._elem.addClass('open');
			} else {
				if (this._elem.hasClass('open')) this._elem.removeClass('open');
			}
			this._isOpen = open ? true : false;
		},
		
		isOpen: function() {
			return this._isOpen;
		},
		
		getElem: function() {
			return this._elem;
		},
		
		addItem: function(title, icon, callback, id) {
			var item = Object.create(Item).init(title, icon, callback, id);
			item._parent = this;
			this._submenu.append(item._elem);
			this._items.push(item);
			return item;
		},
		
		getItem: function(id) {
			for (var i in this._items) {
				if (this._items[i].id == id) {
					return this._items[i];
				}
			}
			return null;
		},
		
		addDefaultItems: function(builder) {
			var def = {
				items: [
					{name: __('SEO'), icon: 'ico-tb-seo', click: function() { builder.site.changeSiteSEO(); }},
					{name: __('Background'), icon: 'ico-tb-background', click: function() { builder.site.changeSiteBackground(); }},
					{name: __('Styles'), icon: 'ico-tb-styles', click: function() { builder.site.changeStyles(); }},
					{name: __('Favicon'), icon: 'ico-tb-favicon', click: function() { builder.site.changeFavicon(); }},
					(function() {
						// if (!builder.isZyro) return null;
						// if (builder.isB2C) return null;
						return {name: __('Settings'), icon: 'ico-tb-settings', click: function() { builder.site.changeProperties(); }};
					})(),
					// {name: __('Width'), icon: 'ico-tb-width', click: function() { builder.site.changeSiteWidth($('#wb_config_btn')); }},
					// {name: __('Site/Page<br />settings'), icon: 'ico-tb-template'},
					// {name: __('Upgrade'), icon: 'ico-tb-upgrade'},
					'-',
					{
						name: __('Landing'),
						icon: 'ico-tb-landing',
						click: function() {
							if (this.isChecked()) {
								this.setChecked(false);
								builder.site.setLanding(false);
							} else {
								this.setChecked(true);
								builder.site.setLanding(true);
							}
						},
						id: 'wb_Landing',
						checked: (builder.site.landing ? true : false)
					},
					{
						name: __('Grid'),
						icon: 'ico-tb-grid',
						click: function() {
							if (this.isChecked()) {
								this.setChecked(false);
								builder.gridSetVisible(false);
								builder.setCookie('wb_showgrid', 'N');
							} else {
								this.setChecked(true);
								builder.gridSetVisible(true);
								builder.setCookie('wb_showgrid', 'Y');
							}
						},
						id: 'wb_ShowGrid',
						checked: (builder.showGrid ? true : false)
					},
					{
						name: __('Snap'),
						icon: 'ico-tb-snap',
						click: function() {
							if (this.isChecked()) {
								this.setChecked(false);
								builder.setCookie('wb_snapgrid', 'N');
								builder.gridSetSnap(false);
							} else {
								this.setChecked(true);
								builder.setCookie('wb_snapgrid', 'Y');
								builder.gridSetSnap(true);
							}
						},
						checked: (builder.isSnapping() ? true : false)
					},
					{
						name: __('Layout'),
						icon: 'ico-tb-layout',
						click: function() {
							if (this.isChecked()) {
								this.setChecked(false);
								builder.highlightLayout(false);
								builder.setCookie('wb_showlayout', 'N');
							} else {
								this.setChecked(true);
								builder.highlightLayout(true);
								builder.setCookie('wb_showlayout', 'Y');
							}
						},
						checked: (builder.showLayout ? true : false)
					}
				]
			};
			
			if (builder.goFullScreen(true)) {
				def.items.push('-');
				def.items.push({name: __('Full Screen'), icon: 'ico-tb-fullscreen', click: function() { builder.goFullScreen(); }});
			}
			this.buildFromDefinition(def);
			
			if (builder.mobileToolbar) {
				builder.mobileToolbar.addItem(MobileToolbar.Toolbar.buildItem({name: __('Settings'), icon: 'icon-cog-big', drawer: {
					type: 'list',
					items: def.items
				}}), 2);
			}
		},
		
		/**
		 * Build item list from definition object
		 * @param {Object} definition
		 */
		buildFromDefinition: function(definition) {
			var i, item, itemDef;
			if ('items' in definition && definition.items.length > 0) {
				for (i = 0; i < definition.items.length; i++) {
					itemDef = definition.items[i];
					if (typeof itemDef === 'string' && itemDef === '-') {
						this.addItem('-');
						continue;
					}
					if (typeof itemDef !== 'object' || itemDef === null) continue;
					item = this.addItem(
						itemDef.name,
						itemDef.icon,
						((typeof itemDef.click === 'function') ? itemDef.click : null),
						(itemDef.id ? itemDef.id : null)
					);
					if ('checked' in itemDef) {
						item.setChecked(itemDef.checked);
					}
				}
			}
		}
	};
	
	var Item = {
		
		id: null,
		_elem: null,
		_aElem: null,
		_checked: false,
		_parent: null,
		
		init: function(title, icon, callback, id) {
			this.id = id;
			this._elem = $('<li>');
			if (title === '-') {
				this._elem.addClass('divider');
			} else {
				this._aElem = $('<a>').attr({href: 'javascript:void(0)', title: title}).appendTo(this._elem);
				if (icon instanceof Object) {
					this._aElem.append($('<i>').addClass('ico-tb ico-tb-empty').append('<div></div><img src="' + icon.href + '" alt="" />'));
				} else if (icon) {
					this._aElem.append($('<i>').addClass('ico-tb ' + icon));
				}
				if (title) this._aElem.append('&nbsp;' + title);
				if (typeof callback === 'function') {
					(function(callback, thisSelf) {
						thisSelf._aElem.on('click', function(e) {
							if (thisSelf._parent && (typeof thisSelf._parent.setOpen === 'function')) {
								thisSelf._parent.setOpen(false);
							}
							callback.call(thisSelf, e);
						});
					})(callback, this);
				}
				if (id) this._aElem.attr({id: id});
			}
			return this;
		},
		
		setChecked: function(checked) {
			if (checked) {
				if (!this._aElem.hasClass('checked')) this._aElem.addClass('checked');
			} else {
				if (this._aElem.hasClass('checked')) this._aElem.removeClass('checked');
			}
			this._checked = checked ? true : false;
		},
		
		isChecked: function() {
			return this._checked;
		}
		
	};
	
	return self;
});
;

/** TreeListControl **/

define('TreeListControl', ['UIComponent'], function(UIComponent) {
	
	var self = function() { this.__construct.apply(this, arguments); };
	self.prototype = new UIComponent('%inherit%');
	self.prototype.constructor = self;
	$.extend(self.prototype, {
		
		_elem: null,
		_tree: null,
		_btnRemove: null,
		_eventMouseEnter: null,
		_eventMouseLeave: null,
		_treeLoaded: false,
		_selectedItem: null,
		_selectWhenReady: null,
		items: null,
		moveValidateFunc: null,
		selectFunc: null,
		
		/**
		 * @class TreeListControl
		 */
		__construct: function() {
			UIComponent.prototype.constructor.call(this);
			var thisSelf = this;
			this.items = new self.Item('root');
			this.items._tree = this;
			this.items._isRoot = true;
			this._tree = this._elem;
			this._tree.addClass('wb_menu_list');
			this._tree.jstree({
				plugins: [ 'core', 'themes', 'json_data', 'ui', 'crrm', 'dnd' ],
				ui: { select_limit: 1 },
				core: { 'load_open': true, rtl: wb_builder.rtl },
				crrm: {
					move: {
						check_move: function(m) { return thisSelf._validateMove(m); }
					}
				},
				json_data: {
					data: function (n, callback) { callback(thisSelf._loadData(n)); }
				}
			}).bind('create.jstree', function(e, data) { thisSelf._createItem(data); })
				.bind('remove.jstree', function(e, data) { thisSelf._removeItem(data);	})
				.bind('rename.jstree', function(e, data) { thisSelf._renameItem(data); })
				.bind('move_node.jstree', function(e, data) { thisSelf._moveItem(data); })
				.bind('select_node.jstree', function(e, data) { thisSelf._selectItem(data); })
				.bind('loaded.jstree', function (e, data) { thisSelf._treeReady(data); });
			
			this._btnRemove = $('<button>')
				.addClass('btn btn-xs btn-link jstree-x-btn')
				.append($('<i>').addClass('glyphicon glyphicon-remove'))
				.on('click', function() { thisSelf._tree.jstree('remove', $(this).parent()); });
		
			this._eventMouseEnter = function(e) {
				e.stopPropagation();
				$(this).parent().append(thisSelf._btnRemove);
				thisSelf._btnRemove.show();
			};
			this._eventMouseLeave = function(e) {
				e.stopPropagation();
				if (thisSelf._selectedItem) {
					thisSelf._tree.find('li > a.jstree-clicked').eq(0).parent().append(thisSelf._btnRemove);
				} else {
					thisSelf._btnRemove.hide();
				}
			};
		},
		
		newItem: function() {
			var item = new self.Item(__('New Item'));
			this._tree.jstree('create', -1, 'last', item, null, true);
		},
		
		/**
		 * @param {TreeListControl~Item} item
		 */
		selectItem: function(item) {
			if (!this._treeLoaded) {
				this._selectWhenReady = item;
				return;
			}
			var thisSelf = this;
			this._tree.find('li').each(function() {
				var eLi = $(this), li = self.Item.fromElem(eLi);
				if (li && li === item) {
					thisSelf._tree.jstree('select_node', eLi);
					eLi.children('a').trigger('mouseleave');
					return false;
				}
			});
		},
		
		updateTree: function() {
			if (this._treeLoaded) {
				this._btnRemove.detach();
				this._tree.jstree('refresh', -1);
			}
			this._tree.find('li > a')
				.off('mouseenter', this._eventMouseEnter)
				.on('mouseenter', this._eventMouseEnter);
			this._tree.find('li')
				.off('mouseleave', this._eventMouseLeave)
				.on('mouseleave', this._eventMouseLeave)
				.each(function() {
					var li = $(this),
						item = self.Item.fromElem(li);
					item._elem = li;
				});
		},
		
		_validateMove: function(m) {
			if (typeof this.moveValidateFunc === 'function') {
				var fromIndex = m.cop,
					toIndex = m.cp,
					item = self.Item.fromElem(m.o),
					target = self.Item.fromElem(m.np);
				if (!target) target = this.items;
				return this.moveValidateFunc(item, target, fromIndex, toIndex);
			}
			return true;
		},
		
		_treeReady: function() {
			this._treeLoaded = false;
			this.updateTree();
			this._treeLoaded = true;
			if (this._selectWhenReady) {
				this.selectItem(this._selectWhenReady);
				this._selectWhenReady = null;
			}
		},
		
		_loadData: function(n) {
			if (n === -1) {
				if (this.items._items.length <= 0) {
					this.items.addItem(new self.Item('Dummy'));
				}
				return this.items._items;					
			} else {
				var parent = self.Item.fromElem(n);
				if (parent) return parent._items;
			}
			return [];
		},
		
		_selectItem: function(data) {
			var item = self.Item.fromElem(data.rslt.obj);
			this._selectedItem = item ? item : null;
			if (typeof this.selectFunc === 'function') {
				this.selectFunc.call(this, this._selectedItem);
			}
		},
		
		_moveItem: function(data) {
			var parent = self.Item.fromElem(data.rslt.np);
			if (!parent) parent = this.items;
			var item = self.Item.fromElem(data.rslt.o.eq(0));
			if (item) {
				var idx = data.rslt.cp;
				if (parent === item.getParent() && idx > data.rslt.cop) {
					idx--;
				}
				parent.addItem(item, idx);
			}
		},
		
		_createItem: function(data) {
			var item = new self.Item(data.rslt.name),
				target = ((data.rslt.parent && data.rslt.parent !== -1) ? self.Item.fromElem(data.rslt.parent) : null);
			if (!target) target = this.items;
			target.addItem(item);
		},
		
		_removeItem: function(data) {
			var item = self.Item.fromElem(data.rslt.obj.eq(0));
			if (item && item.getParent()) item.getParent().removeItem(item);
			if (item && this._selectedItem === item) this._selectedItem = null;
		},
		
		_renameItem: function(data) {
			var item = self.Item.fromElem(data.rslt.obj);
			if (item) item.setTitle(data.rslt.new_name);
		}
		
	});
	
	self.Item = function() { this.__construct.apply(this, arguments); };
	$.extend(self.Item, {
		fromElem: function(elem) {
			return elem.data('__META_INST__');
		}
	});
	$.extend(self.Item.prototype, {
		
		_isHome: false,
		_icon: null,
		_iconHome: 'glyphicon glyphicon-home',
		_iconItem: 'glyphicon glyphicon-folder-open',
		_original: null,
		_parent: null,
		_items: null,
		_title: null,
		_isRoot: false,
		_elem: null,
		_tree: null,
		data: null,
		metadata: null,
		state: null,
		
		/**
		 * Create new item
		 * @param {String} title
		 * @param {String=} icon
		 * @param {Object=} original
		 * @param {Number=} truncateTitle
		 * @class TreeListControl~Item
		 */
		__construct: function(title, icon, original, truncateTitle) {
			this.data = {
				title: null,
				icon: null,
				attr: {}
			};
			this.metadata = { __META_INST__: this };
			this.setTitle(title, truncateTitle);
			this.setIcon(icon);
			this._original = original;
			this._items = [];
		},
		
		/** @return {Boolean} */
		isRoot: function() {
			return this._isRoot;
		},
		
		getItemCount: function() {
			return this._items.length;
		},
		
		getItem: function(index) {
			return ((index >= 0 && index < this._items.length) ? this._items[index] : null);
		},
		
		/**
		 * @param {TreeListControl~Item} item
		 * @param {Number=} atIndex
		 */
		addItem: function(item, atIndex) {
			var idx = this._items.indexOf(item);
			if (idx < 0 || (typeof atIndex === 'number')) {
				if (item._parent) { item._parent.removeItem(item); }
				if (typeof atIndex === 'number') {
					this._items.splice(atIndex, 0, item);
				} else {
					this._items.push(item);
				}
				item._parent = this;
				item._tree = this._tree;
				this.state = 'open';
			}
		},
		
		/**
		 * @param {TreeListControl~Item} item
		 */
		removeItem: function(item) {
			var idx = this._items.indexOf(item);
			if (idx >= 0) {
				this._items.splice(idx, 1);
				item._parent = null;
				item._tree = null;
				item._elem = null;
				if (this._items.length <= 0) this.state = null;
			}
		},
		
		removeAllItems: function() {
			for (var i = 0; i < this._items.length; i++) {
				this._items[i]._parent = null;
				this._items[i]._tree = null;
				this._items[i]._elem = null;
			}
			this._items.splice(0, this._items.length);
			this.state = null;
		},
		
		getParent: function() {
			return this._parent;
		},
		
		getTitle: function() {
			return this._title;
		},
		
		setTitle: function(title, truncateTitle) {
			var ltitle = this._title;
			this._title = title;
			this.data.title = this._title;
			if (truncateTitle && truncateTitle > 0 && this.data.title && this.data.title.length > truncateTitle) {
				this.data.title = this.data.title.substring(0, truncateTitle) + '...';
			}
			if (this._tree && this._elem && ltitle !== this._title) {
				this._tree._tree.jstree('set_text', this._elem, this.data.title);
			}
		},
		
		setIcon: function(icon) {
			var licon = this.data.icon;
			this._icon = icon ? icon : null;
			this.data.icon = this._isHome ? this._iconHome : (this._icon ? this._icon : this._iconItem);
			if (this._tree && this._elem && licon !== this.data.icon) {
				if (licon) this._elem.children('a').find('ins').removeClass(licon);
				if (this._icon) this._elem.children('a').find('ins').removeClass(this._icon);
				if (this._iconItem) this._elem.children('a').find('ins').removeClass(this._iconItem);
				if (this.data.icon) this._elem.children('a').find('ins').addClass(this.data.icon);
			}
		},
		
		setHome: function(isHome) {
			this._isHome = isHome ? true : false;
			this.setIcon(this._icon);
		},
		
		isHome: function() {
			return this._isHome;
		},
		
		getOriginal: function() {
			return this._original;
		}
		
	});
	
	return self;
});
;

/** EditMenuItemsDialog **/

define('EditMenuItemsDialog', [
	'Dialog',
	'UIComponent',
	'VerticalLayout',
	'HorizontalLayout',
	'TreeListControl',
	'Label',
	'TextField',
	'MultilangTextField',
	'RadioBox',
	'CheckBox',
	'DropdownBox',
	'UIButton',
	'IdIndexedList'
], function(Dialog, UIComponent, VerticalLayout, HorizontalLayout, TreeListControl, Label, TextField, MultilangTextField, RadioBox, CheckBox, DropdownBox, UIButton, IdIndexedList) {
	'use strict';
	
	var greyBoxStyle = {background: '#F5F5F5', border: '1px solid #E3E3E3', padding: '8px 2px'}, win = window;
	
	var self = function() { this.__construct.apply(this, arguments); };
	self.prototype = new Dialog('%inherit%');
	self.prototype.constructor = self;
	$.extend(self, {
		MODE_EDIT: 'edit',
		MODE_NEW: 'new'
	});
	$.extend(self.prototype, {
		
		_base: null,
		_tree: null,
		_leftPane: null,
		_panel: null,
		_currMenu: null,
		_mode: null,
		_newDialog: null,
		applyFunc: null,
		_newApplyFunc: null,
		_waitingToReturn: false,
		_visible: false,
		_pages: null,
		_menuItems: null,
		_liteVersionMessage: null,
		_liteVersionPopup: null,
		
		__construct: function(mode) {
			this._mode = mode ? mode : self.MODE_EDIT;
			Dialog.prototype.__construct.call(this, ((this._mode === self.MODE_NEW) ? __('Add Menu Item') : __('Edit Menu Items')), false);
			this.setNoScroll();
			var thisSelf = this;
			
			this._base = new HorizontalLayout();
			
			if (this._mode === self.MODE_EDIT) {
				this._leftPane = new VerticalLayout();
				this._leftPane.css(greyBoxStyle);

				this._tree = new TreeListControl();
				this._tree.moveValidateFunc = function(item, target) {
					if (target && target.getParent() && !target.getParent().isRoot()) {
						return false;
					}
					return true;
				};
				this._tree.selectFunc = function(selItem) {
					thisSelf._panel.selectItem(selItem, !thisSelf._visible);
					var i, c, item, page;
					for (i = 0, c = thisSelf._tree.items.getItemCount(); i < c; i++) {
						item = thisSelf._tree.items.getItem(i);
						page = (item.getOriginal().targetId && (item.getOriginal().type === 'page' || item.getOriginal().type === 'internal')) ? thisSelf._pages.getItemById(item.getOriginal().targetId) : null;
						item.setHome(page && page.isFront);
					}
				};
				window.testVal = this._tree.items;
				this._leftPane.addChild(this._tree);
				this._leftPane.applyLayoutCellCss(0, {height: 306, overflowY: 'auto'});

				var newItemButton = new UIButton(__('New Item'), UIButton.STYLE_LINK, 'glyphicon glyphicon-plus');
				newItemButton.css({marginTop: '10px'});
				newItemButton.on('click', function() {
					var canAdd = (win.wb_builder.maxMenuItems <= 0 || thisSelf._tree.items.getItemCount() + win.WB_Menu.getTotalPages(thisSelf._currMenu) < win.wb_builder.maxMenuItems);
					thisSelf.setDisabled(!canAdd);
					if (!canAdd) return;
					thisSelf.getNewDialog().setMenu(thisSelf._currMenu, thisSelf._pages);
					thisSelf.getNewDialog().applyFunc = thisSelf._newApplyFunc;
					thisSelf._waitingToReturn = true;
					thisSelf.getNewDialog().setDisabled(!canAdd);
					thisSelf.getNewDialog().setVisible(true);
				});
				this._newApplyFunc = function(item) {
					thisSelf._menuItems.newItem(item.getOriginal(), true);
					item.getOriginal()._ignoreId = true;
					thisSelf._handleItemCopying(item);
					thisSelf._tree.items.addItem(item);
					thisSelf._tree.updateTree();
					thisSelf._tree.selectItem(item);
				};
				this._leftPane.addChild(newItemButton);

				var note = new self.Note(__('Use Drag and Drop to sort and categorize items'));
				this._leftPane.addChild(note);

				if (!wb_builder.rtl) this._base.addChild(this._leftPane);
				this._menuItems = new IdIndexedList();
			}
			this._pages = new IdIndexedList();
			
			this._panel = new self.EditPanel();
			this._base.addChild(this._panel);
			if (this._mode === self.MODE_EDIT) {
				if (wb_builder.rtl) {
					this._base.addChild(this._leftPane);
					this._base.setColWeight(0, 7);
					this._base.setColWeight(1, 5);
					this._panel.css({marginRight: '10px'});
				} else {
					this._base.setColWeight(0, 5);
					this._base.setColWeight(1, 7);
					this._panel.css({marginLeft: '10px'});
				}
			}
			
			if (this._mode === self.MODE_NEW) {
				this.setSize(360, null);
				this._panel.css({marginLeft: '10px', marginRight: '10px'});
			}
			
			this.setContent(this._base.getElem());
			
			this.addButton(__('Cancel'), function() { thisSelf.setVisible(false); });
			this.addButton(__('Apply'), function() { thisSelf._applyAction(); }, true);
		},
		
		setLiteVersionMessage: function(message) {
			this._liteVersionMessage = message;
		},
		
		setDisabled: function(disabled) {
			if (this._mode === self.MODE_NEW) {
				if (disabled) {
					this.buttons.find('.btn-success').attr('disabled', 'disabled');
					this._panel.setMessage(this._liteVersionMessage);
				} else {
					this.buttons.find('.btn-success').removeAttr('disabled');
					this._panel.setMessage(null);
				}
			} else if (this._mode === self.MODE_EDIT) {
				if (disabled) {
					if (!this._liteVersionPopup) {
						this._liteVersionPopup = new self.Popup(this._liteVersionMessage);
						this._leftPane.addChild(this._liteVersionPopup);
					}
					this._liteVersionPopup.appear();
				} else {
					if (this._liteVersionPopup) {
						this._leftPane.removeChild(this._liteVersionPopup);
						this._liteVersionPopup = null;
					}
				}
			}
		},
		
		getNewDialog: function() {
			if (this._mode === self.MODE_NEW) {
				return null;
			}
			if (!this._newDialog) {
				this._newDialog = new self(self.MODE_NEW);
				this._newDialog.setLiteVersionMessage(this._liteVersionMessage);
			}
			return this._newDialog;
		},
		
		setMenu: function(menu, pages) {
			this._currMenu = menu;
			this._pages.removeAllItems();
			this._pages.addItems(pages, false, true);
		},
		
		_handleItemCopying: function(item) {
			var itemO = item.getOriginal();
			if ('copyFromTargetId' in itemO) {
				var p = this._pages.getItemById(itemO.copyFromTargetId);
				if (p) {
					p = this._pages.newItem(p);
					p.title = item.getTitle();
					p.alias = '';
					p.keywords = '';
					p.description = '';
					p.isFront = false;
					p.isSingle = false;
					p.copyFrom = itemO.copyFromTargetId;
					itemO.targetId = p.id;
				}
				itemO.copyFromTargetId = null;
				delete itemO.copyFromTargetId;
				this._panel.loadData(this._pages);
			}
		},
		
		_applyAction: function() {
			var item = this._panel._item;
			this._panel.selectItem(null, !this._visible);
			if (typeof this.applyFunc === 'function') {
				this.applyFunc.call(this, item);
			} else {
				win.wb_builder.pageModified = true;
				if (this._currMenu) {
					var items;
					if (this._mode === self.MODE_EDIT) {
						this._currMenu.removeAllItems();
						items = this._tree.items;
					} else if (this._mode === self.MODE_NEW) {
						this._handleItemCopying(item);
						items = new TreeListControl.Item('root');
						items.addItem(item);
					}
					
					win.wb_builder.site.updatePageList(this._pages);
					
					if (items) this._currMenu.addAllItems(items);
					this._currMenu.updateStyle();
					this._currMenu.resizeMenuBox();
					win.wb_builder.reloadLeftMenu();
					win.wb_builder.site.setLanding(win.wb_builder.site.landing);
				}
			}
			this.setVisible(false);
		},
		
		_loadItems: function(target, source) {
			var k, k2, item, page, name;
			for (k in source) {
				name = __tr(source[k].name, null, __tr(source[k].name, win.wb_builder.site.getLastDefLang(), ('[' + __('no name') + ']')));
				target.addItem(item = new TreeListControl.Item(name, null, source[k].serialize(), 15));
				page = (source[k].targetId && (source[k].type === 'page' || source[k].type === 'internal')) ? win.wb_builder.site.getPage(source[k].targetId) : null;
				this._menuItems.addItem(source[k].serialize());
				item.setHome((page ? page.isFront : false));
				for (k2 in source[k].items) {
					this._loadItems(item, source[k].items);
					break;
				}
			}
		},
		
		setVisible: function(visible, noAction, ignoreEvent) {
			if (visible) {
				if (!this._waitingToReturn) {
					if (this._mode === self.MODE_EDIT) {
						this._tree.items.removeAllItems();
						this._menuItems.removeAllItems();
						if (this._currMenu) this._loadItems(this._tree.items, this._currMenu.items);
						this._tree.updateTree();
						if (this._tree.items.getItemCount() > 0) {
							this._tree.selectItem(this._tree.items.getItem(0));
						}
					} else if (this._mode === self.MODE_NEW) {
						var item = new TreeListControl.Item(__('New Page'), null, {type: 'page', name: __('New Page')});
						this._panel.selectItem(item, true);
					}
					this._panel.loadData(this._pages);
				} else {
					this._waitingToReturn = false;
				}
			} else {
				this.applyFunc = null;
			}
			Dialog.prototype.setVisible.call(this, visible, noAction, ignoreEvent);
			this._visible = (visible ? true : false);
		}
		
	});
	
	self.EditPanel = function() { this.__construct.apply(this, arguments); };
	self.EditPanel.prototype = new VerticalLayout('%inherit%');
	self.EditPanel.prototype.constructor = self;
	$.extend(self.EditPanel, {
		_elemIndex: 0
	});
	$.extend(self.EditPanel.prototype, {
		
		_item: null,
		
		_copyOptions: null,
		_fldCopyPage:null,
		
		_linkOptions: null,
		_fldName: null,
		_fldTypePage: null,
		_fldTypeLink: null,
		
		_itemOptions: null,
		_fldNewWindow: null,
		_fldHideInMenu: null,
		_fldIsDefault: null,
		
		_fldPageLink: null,
		_fldExternalLink: null,
		_fldAnchor: null,
		_pages: null,
		_message: null,
		
		__construct: function() {
			VerticalLayout.prototype.constructor.call(this);
			var thisSelf = this, idx = self._elemIndex, types, linkOptionsTypes, copyOptionsBox;
			self._elemIndex++;
			
			this.addChild(new Label(__('Item Name')));
			this.addChild(this._fldName = new MultilangTextField());
			this._fldName.css({marginBottom: 0});
			
			types = new HorizontalLayout();
			types.css({marginTop: 15});
			types.addChild(this._fldTypePage = new RadioBox(__('Content'), true, 'type' + idx));
			this._fldTypePage.on('change', function() {
				if (thisSelf._fldTypePage.getValue()) {
					thisSelf._linkOptions.setVisible(false);
					thisSelf._copyOptions.setVisible(!thisSelf._item.getOriginal().id);
				}
			});
			types.addChild(this._fldTypeLink = new RadioBox(__('Link'), false, 'type' + idx));
			this._fldTypeLink.on('change', function() {
				if (thisSelf._fldTypeLink.getValue()) {
					thisSelf._linkOptions.setVisible(true);
					thisSelf._copyOptions.setVisible(false);
				}
			});
			this.addChild(types);
			
			this._copyOptions = new VerticalLayout();
			this._copyOptions.css({marginTop: 15});
			this._copyOptions.css({position: 'absolute', width: '100%'});
			this._copyOptions.addChild(new Label(__('Copy layout from')));
			copyOptionsBox = new VerticalLayout();
			copyOptionsBox.css({marginBottom: '20px'});
			copyOptionsBox.addChild(this._fldCopyPage = new DropdownBox());
			this._copyOptions.addChild(copyOptionsBox);
			this._copyOptions.setVisible(false);
			this.addChild(this._copyOptions);
			this.css({position: 'relative'});
			
			this._linkOptions = new VerticalLayout();
			this._linkOptions.css({marginTop: 15});
			this._linkOptions.setVisible = function(visible) {
				if (visible) {
					this.css({visibility: 'visible'});
				} else {
					this.css({visibility: 'hidden'});
				}
			};
			this._linkOptions.addChild(new Label(__('Choose link type')));
			linkOptionsTypes = new VerticalLayout();
			linkOptionsTypes.css(greyBoxStyle).css({padding: '6px 8px', marginBottom: '20px'});
			linkOptionsTypes.addChild(this._fldPageLink = new RadioBox(__('Internal link to'), true, 'linkType' + idx));
			this._fldPageLink.css({marginTop: 0});
			this._fldPageLink._input.css({marginTop: '33px'});
			linkOptionsTypes.addChild(this._fldPageLinkBox = new DropdownBox());
			this._fldPageLinkBox.on('click', function() {
				thisSelf._fldPageLink.setValue(true);
			});
			this._fldPageLinkBox.css((wb_builder.rtl ? {paddingRight: '20px', marginTop: 2} : {paddingLeft: '20px', marginTop: 2}));
			linkOptionsTypes.addChild(this._fldExternalLink = new RadioBox(__('External link to'), false, 'linkType' + idx));
			this._fldExternalLink.css({marginTop: 5});
			this._fldExternalLink._input.css({marginTop: '33px'});
			linkOptionsTypes.addChild(this._fldExternalLinkBox = new TextField('', 'http://external.com/link'));
			this._fldExternalLinkBox.on('focus', function() {
				thisSelf._fldExternalLink.setValue(true);
			});
			this._fldExternalLinkBox.css({display: 'block', marginTop: 2});
			this._fldExternalLinkBox.getElem().parent().css((wb_builder.rtl ? {marginRight: 20} : {marginLeft: 20}));
			linkOptionsTypes.addChild(this._fldAnchor = new RadioBox(__('Anchor to'), false, 'linkType' + idx));
			this._fldAnchor.css({marginTop: 5});
			this._fldAnchor._input.css({marginTop: '33px'});
			linkOptionsTypes.addChild(this._fldAnchorBox = new DropdownBox());
			this._fldAnchorBox.on('click', function() {
				thisSelf._fldAnchor.setValue(true);
			});
			this._fldAnchorBox.css((wb_builder.rtl ? {paddingRight: '20px', marginTop: 2} : {paddingLeft: '20px', marginTop: 2}));
			this._linkOptions.addChild(linkOptionsTypes);
			this._linkOptions.setVisible(false);
			this.addChild(this._linkOptions);
			
			this._itemOptions = new VerticalLayout();
			this._itemOptions.addChild(this._fldNewWindow = new CheckBox(__('Open in New Window')));
			this._itemOptions.addChild(this._fldHideInMenu = new CheckBox(__('Do not show this item in menu')));
			this._itemOptions.addChild(this._fldIsDefault = new CheckBox(__('Default menu item')));
			this.addChild(this._itemOptions);
		},
		
		setMessage: function(message) {
			if (!this._message) {
				this._message = new Label();
				this._message._elem.css({
					width: '100%',
					fontWeight: 'normal'
				});
				this._copyOptions.addChild(this._message);
			}
			this._message.setHtml(message ? message : '');
		},
		
		/**
		 * @param {IdIndexedList} pages
		 */
		loadData: function(pages) {
			var i, n, c, data, tmpItem = null, name;
			if (this._item) {
				tmpItem = this._item;
				this.selectItem(null);
			}
			this._fldPageLinkBox.removeAllItem();
			this._fldCopyPage.removeAllItem();
			this._fldAnchorBox.removeAllItem();
			if (pages) {
				this._pages = pages;
				for (i = 0, c = pages.getItemCount(); i < c; i++) {
					data = pages.getItem(i);
					name = __tr(data.title, null, __tr(data.title, win.wb_builder.site.getLastDefLang(), ('[' + __('no name') + ']')));
					this._fldPageLinkBox.addItem(new DropdownBox.Item(name, data.id, data));
					this._fldCopyPage.addItem(new DropdownBox.Item(name, data.id, data));
					if (data.anchors) {
						for (n = 0; n < data.anchors.length; n++) {
							this._fldAnchorBox.addItem(new DropdownBox.Item(name + ': ' + data.anchors[n], data.anchors[n], data));
						}
					}
				}
			} else {
				this._pages = null;
			}
			if (tmpItem) {
				this.selectItem(tmpItem);
			}
		},
		
		selectItem: function(item, notVisible) {
			var thisSelf = this, p, i, c, data, page, val;
			if (this._item) {
				this._item.getOriginal().name = this._fldName.getText();
				this._item.setTitle(__tr(this._fldName.getText()), 15);
				
				this._item.getOriginal().targetId = ((val = this._fldPageLinkBox.getSelectedItem()) ? val.getId() : null);
				
				if (this._fldTypeLink.getValue()) {
					if (this._fldExternalLink.getValue()) {
						this._item.getOriginal().type = 'external';
					} else if (this._fldAnchor.getValue()) {
						this._item.getOriginal().type = 'anchor';
					} else {
						this._item.getOriginal().type = 'internal';
					}
					this._item.setHome(false);
					this._item.getOriginal().copyFromTargetId = null;
					delete this._item.getOriginal().copyFromTargetId;
				} else {
					this._item.getOriginal().type = 'page';
					if (this._item.getOriginal().id) {
						page = this._item.getOriginal().targetId ? this._pages.getItemById(this._item.getOriginal().targetId) : null;
						if (page) {
							this._item.setHome(this._fldIsDefault.getValue());
							page.isFront = (this._fldIsDefault.getValue() ? true : false);
							if (page.isFront) {
								for (i = 0, c = this._pages.getItemCount(); i < c; i++) {
									data = this._pages.getItem(i);
									if (page !== data) { data.isFront = false; }
								}
							}
						}
						this._item.getOriginal().copyFromTargetId = null;
						delete this._item.getOriginal().copyFromTargetId;
					} else {
						this._item.getOriginal().targetId = null;
						this._item.getOriginal().copyFromTargetId = ((val = this._fldCopyPage.getSelectedItem()) ? val.getId() : null);
						this._item.setHome(false);
					}
				}
				
				this._item.getOriginal().url = this._fldExternalLinkBox.getText();
				val = this._fldAnchorBox.getSelectedItem();
				this._item.getOriginal().anchor = ((val = this._fldAnchorBox.getSelectedItem()) ? {name: val.getId(), pageId: val.getOriginal().id} : null);
				this._item.getOriginal().target = (this._fldNewWindow.getValue() ? '_blank' : '_self');
				this._item.getOriginal().noMenu = this._fldHideInMenu.getValue();
			}
			this._item = item;
			if (!this._item) return;
			
			if ((!this._item.getOriginal().type || this._item.getOriginal().type === 'internal') && this._item.getOriginal().targetId && this._pages) {
				p = this._pages.getItemById(this._item.getOriginal().targetId);
				if (p && p.title && __tr(p.title) && __tr(p.title) === __tr(this._item.getOriginal().name)) {
					this._item.getOriginal().type = 'page';
				}
			}
			
			this._fldName.setText(this._item.getOriginal().name);
			setTimeout(function() { thisSelf._fldName.focus(); }, (notVisible ? 1000 : 40));
			
			if (this._item.getOriginal().type === 'page') {
				this._fldTypePage.setValue(true);
				this._fldTypeLink.setValue(false);
				this._linkOptions.setVisible(false);
				this._copyOptions.setVisible(!this._item.getOriginal().id);
				
				if (this._item.getOriginal().id) {
					page = this._item.getOriginal().targetId ? this._pages.getItemById(this._item.getOriginal().targetId) : null;
					this._fldIsDefault.setValue((page && page.isFront));
					this._fldIsDefault.setVisible(true);
				} else {
					this._fldIsDefault.setValue(false);
					this._fldIsDefault.setVisible(false);
				}
			} else {
				this._fldTypePage.setValue(false);
				this._fldTypeLink.setValue(true);
				this._linkOptions.setVisible(true);
				this._copyOptions.setVisible(false);
				
				this._fldIsDefault.setValue(false);
				this._fldIsDefault.setVisible(false);
				
				if (this._item.getOriginal().type === 'external') {
					this._fldPageLink.setValue(false);
					this._fldExternalLink.setValue(true);
					this._fldAnchor.setValue(false);
				} else if (this._item.getOriginal().type === 'anchor') {
					this._fldPageLink.setValue(false);
					this._fldExternalLink.setValue(false);
					this._fldAnchor.setValue(true);
				} else {
					this._fldPageLink.setValue(true);
					this._fldExternalLink.setValue(false);
					this._fldAnchor.setValue(false);
				}
			}
			
			if (this._item.getOriginal().targetId) {
				this._fldPageLinkBox.selectItem(this._fldPageLinkBox.getItemById(this._item.getOriginal().targetId));
			} else {
				this._fldPageLinkBox.selectItem(this._fldPageLinkBox.getItem(0));
			}
			
			this._fldExternalLinkBox.setText(this._item.getOriginal().url ? this._item.getOriginal().url : '');
			
			if (this._item.getOriginal().anchor && (typeof this._item.getOriginal().anchor === 'object')) {
				this._fldAnchorBox.selectItem(this._fldAnchorBox.getItemById(this._item.getOriginal().anchor.name));
			} else {
				this._fldAnchorBox.selectItem(this._fldAnchorBox.getItem(0));
			}
			
			if (this._item.getOriginal().id) {
				this._itemOptions.setVisible(true);
			} else {
				this._itemOptions.setVisible(false);
			}
			this._fldNewWindow.setValue((this._item.getOriginal().target === '_blank'));
			this._fldHideInMenu.setValue(this._item.getOriginal().noMenu);
		}
		
	});
	
	self.Note = function() { this.__construct.apply(this, arguments); };
	self.Note.prototype = new UIComponent('%inherit%');
	self.Note.prototype.constructor = self;
	$.extend(self.Note.prototype, {
		
		_icon: 'glyphicon glyphicon-exclamation-sign',
		_text: null,
		
		_iconElem: null,
		_textElem: null,
		
		__construct: function(text, icon) {
			UIComponent.prototype.constructor.call(this);
			this._elem.addClass('wb-page-tree-notice');
			var css = {marginTop: 8, width: 172};
			if (wb_builder.rtl) {
				css.marginRight = 10;
			} else {
				css.marginLeft = 10;
			}
			this._elem.css(css);
			var sml = $('<small>').appendTo(this._elem);
			this._iconElem = $('<i>').appendTo(sml);
			this._textElem = $('<span>').addClass('txt').appendTo(sml);
			this.setText(text);
			this.setIcon(icon ? icon : this._icon);
		},
		
		setText: function(text) {
			this._text = text;
			this._textElem.text(this._text);
		},
		
		setIcon: function(icon) {
			this._icon = icon;
			this._iconElem.removeClass().addClass(this._icon);
		}
		
	});
	
	self.Popup = function() { this.__construct.apply(this, arguments); };
	self.Popup.prototype = new UIComponent('%inherit%');
	self.Popup.prototype.constructor = self;
	$.extend(self.Popup.prototype, {
		
		_html: null,
		_htmlElem: null,
		_appearTimeout: null,
		
		__construct: function(html) {
			UIComponent.prototype.constructor.call(this);
			this._elem.css({
				position: 'absolute',
				display: 'none',
				bottom: '82px',
				zIndex: 10
			});
			this._htmlElem = $('<div>').css({ padding: '0 10px' })
				.appendTo(this._elem);
			
			this.setHtml(html);
		},
		
		setHtml: function(html) {
			this._html = html;
			this._htmlElem.html(html);
		},
		
		appear: function() {
			var thisSelf = this;
			this._elem.css({ display: 'block', opacity: 1 });
			clearTimeout(this._appearTimeout);
			this._appearTimeout = setTimeout(function() {
				thisSelf._elem.animate({ opacity: 0 }, 400, function() {
					thisSelf._elem.css({ display: 'none' });
				});
			}, 2000);
		}
		
	});
	
	return self;
});
;

/** Gettext **/
/*
Pure Javascript implementation of Uniforum message translation.
Copyright (C) 2008 Joshua I. Miller <unrtst@cpan.org>, all rights reserved

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU Library General Public License as published
by the Free Software Foundation; either version 2, or (at your option)
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Library General Public License for more details.

You should have received a copy of the GNU Library General Public
License along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
USA.

=head1 NAME

Javascript Gettext - Javascript implemenation of GNU Gettext API.

=head1 SYNOPSIS

 // //////////////////////////////////////////////////////////
 // Optimum caching way
 <script language="javascript" src="/path/LC_MESSAGES/myDomain.json"></script>
 <script language="javascript" src="/path/Gettext.js'></script>

 // assuming myDomain.json defines variable json_locale_data
 var params = {  "domain" : "myDomain",
                 "locale_data" : json_locale_data
              };
 var gt = new Gettext(params);
 // create a shortcut if you'd like
 function _ (msgid) { return gt.gettext(msgid); }
 alert(_("some string"));
 // or use fully named method
 alert(gt.gettext("some string"));
 // change to use a different "domain"
 gt.textdomain("anotherDomain");
 alert(gt.gettext("some string"));


 // //////////////////////////////////////////////////////////
 // The other way to load the language lookup is a "link" tag
 // Downside is that not all browsers cache XMLHttpRequests the
 // same way, so caching of the language data isn't guarenteed
 // across page loads.
 // Upside is that it's easy to specify multiple files
 <link rel="gettext" href="/path/LC_MESSAGES/myDomain.json" />
 <script language="javascript" src="/path/Gettext.js'></script>

 var gt = new Gettext({ "domain" : "myDomain" });
 // rest is the same


 // //////////////////////////////////////////////////////////
 // The reson the shortcuts aren't exported by default is because they'd be
 // glued to the single domain you created. So, if you're adding i18n support
 // to some js library, you should use it as so:

 if (typeof(MyNamespace) == 'undefined') MyNamespace = {};
 MyNamespace.MyClass = function () {
     var gtParms = { "domain" : 'MyNamespace_MyClass' };
     this.gt = new Gettext(gtParams);
     return this;
 };
 MyNamespace.MyClass.prototype._ = function (msgid) {
     return this.gt.gettext(msgid);
 };
 MyNamespace.MyClass.prototype.something = function () {
     var myString = this._("this will get translated");
 };

 // //////////////////////////////////////////////////////////
 // Adding the shortcuts to a global scope is easier. If that's
 // ok in your app, this is certainly easier.
 var myGettext = new Gettext({ 'domain' : 'myDomain' });
 function _ (msgid) {
     return myGettext.gettext(msgid);
 }
 alert( _("text") );

 // //////////////////////////////////////////////////////////
 // Data structure of the json data
 // NOTE: if you're loading via the <script> tag, you can only
 // load one file, but it can contain multiple domains.
 var json_locale_data = {
     "MyDomain" : {
         "" : {
             "header_key" : "header value",
             "header_key" : "header value",
         "msgid" : [ "msgid_plural", "msgstr", "msgstr_plural", "msgstr_pluralN" ],
         "msgctxt\004msgid" : [ null, "msgstr" ],
         },
     "AnotherDomain" : {
         },
     }

=head1 DESCRIPTION

This is a javascript implementation of GNU Gettext, providing internationalization support for javascript. It differs from existing javascript implementations in that it will support all current Gettext features (ex. plural and context support), and will also support loading language catalogs from .mo, .po, or preprocessed json files (converter included).

The locale initialization differs from that of GNU Gettext / POSIX. Rather than setting the category, domain, and paths, and letting the libs find the right file, you must explicitly load the file at some point. The "domain" will still be honored. Future versions may be expanded to include support for set_locale like features.


=head1 INSTALL

To install this module, simply copy the file lib/Gettext.js to a web accessable location, and reference it from your application.


=head1 CONFIGURATION

Configure in one of two ways:

=over

=item 1. Optimal. Load language definition from statically defined json data.

    <script language="javascript" src="/path/locale/domain.json"></script>

    // in domain.json
    json_locale_data = {
        "mydomain" : {
            // po header fields
            "" : {
                "plural-forms" : "...",
                "lang" : "en",
                },
            // all the msgid strings and translations
            "msgid" : [ "msgid_plural", "translation", "plural_translation" ],
        },
    };
    // please see the included bin/po2json script for the details on this format

This method also allows you to use unsupported file formats, so long as you can parse them into the above format.

=item 2. Use AJAX to load language file.

Use XMLHttpRequest (actually, SJAX - syncronous) to load an external resource.

Supported external formats are:

=over

=item * Javascript Object Notation (.json)

(see bin/po2json)

    type=application/json

=item * Uniforum Portable Object (.po)

(see GNU Gettext's xgettext)

    type=application/x-po

=item * Machine Object (compiled .po) (.mo)

NOTE: .mo format isn't actually supported just yet, but support is planned.

(see GNU Gettext's msgfmt)

    type=application/x-mo

=back

=back

=head1 METHODS

The following methods are implemented:

  new Gettext(args)
  textdomain  (domain)
  gettext     (msgid)
  dgettext    (domainname, msgid)
  dcgettext   (domainname, msgid, LC_MESSAGES)
  ngettext    (msgid, msgid_plural, count)
  dngettext   (domainname, msgid, msgid_plural, count)
  dcngettext  (domainname, msgid, msgid_plural, count, LC_MESSAGES)
  pgettext    (msgctxt, msgid)
  dpgettext   (domainname, msgctxt, msgid)
  dcpgettext  (domainname, msgctxt, msgid, LC_MESSAGES)
  npgettext   (msgctxt, msgid, msgid_plural, count)
  dnpgettext  (domainname, msgctxt, msgid, msgid_plural, count)
  dcnpgettext (domainname, msgctxt, msgid, msgid_plural, count, LC_MESSAGES)
  strargs     (string, args_array)


=head2 new Gettext (args)

Several methods of loading locale data are included. You may specify a plugin or alternative method of loading data by passing the data in as the "locale_data" option. For example:

    var get_locale_data = function () {
        // plugin does whatever to populate locale_data
        return locale_data;
    };
    var gt = new Gettext( 'domain' : 'messages',
                          'locale_data' : get_locale_data() );

The above can also be used if locale data is specified in a statically included <SCRIPT> tag. Just specify the variable name in the call to new. Ex:

    var gt = new Gettext( 'domain' : 'messages',
                          'locale_data' : json_locale_data_variable );

Finally, you may load the locale data by referencing it in a <LINK> tag. Simply exclude the 'locale_data' option, and all <LINK rel="gettext" ...> items will be tried. The <LINK> should be specified as:

    <link rel="gettext" type="application/json" href="/path/to/file.json">
    <link rel="gettext" type="text/javascript"  href="/path/to/file.json">
    <link rel="gettext" type="application/x-po" href="/path/to/file.po">
    <link rel="gettext" type="application/x-mo" href="/path/to/file.mo">

args:

=over

=item domain

The Gettext domain, not www.whatev.com. It's usually your applications basename. If the .po file was "myapp.po", this would be "myapp".

=item locale_data

Raw locale data (in json structure). If specified, from_link data will be ignored.

=back

=cut

*/

Gettext = function (args) {
    this.domain         = 'messages';
    // locale_data will be populated from <link...> if not specified in args
    this.locale_data    = undefined;

    // set options
    var options = [ "domain", "locale_data" ];
    if (this.isValidObject(args)) {
        for (var i in args) {
            for (var j=0; j<options.length; j++) {
                if (i == options[j]) {
                    // don't set it if it's null or undefined
                    if (this.isValidObject(args[i]))
                        this[i] = args[i];
                }
            }
        }
    }


    // try to load the lang file from somewhere
    this.try_load_lang();

    return this;
}

Gettext.context_glue = "\004";
Gettext._locale_data = {};

Gettext.prototype.try_load_lang = function() {
    // check to see if language is statically included
    if (typeof(this.locale_data) != 'undefined') {
        // we're going to reformat it, and overwrite the variable
        var locale_copy = this.locale_data;
        this.locale_data = undefined;
        this.parse_locale_data(locale_copy);

        if (typeof(Gettext._locale_data[this.domain]) == 'undefined') {
            throw new Error("Error: Gettext 'locale_data' does not contain the domain '"+this.domain+"'");
        }
    }


    // try loading from JSON
    // get lang links
    var lang_link = this.get_lang_refs();

    if (typeof(lang_link) == 'object' && lang_link.length > 0) {
        // NOTE: there will be a delay here, as this is async.
        // So, any i18n calls made right after page load may not
        // get translated.
        // XXX: we may want to see if we can "fix" this behavior
        for (var i=0; i<lang_link.length; i++) {
            var link = lang_link[i];
            if (link.type == 'application/json') {
                if (! this.try_load_lang_json(link.href) ) {
                    throw new Error("Error: Gettext 'try_load_lang_json' failed. Unable to exec xmlhttprequest for link ["+link.href+"]");
                }
            } else if (link.type == 'application/x-po') {
                if (! this.try_load_lang_po(link.href) ) {
                    throw new Error("Error: Gettext 'try_load_lang_po' failed. Unable to exec xmlhttprequest for link ["+link.href+"]");
                }
            } else {
                // TODO: implement the other types (.mo)
                throw new Error("TODO: link type ["+link.type+"] found, and support is planned, but not implemented at this time.");
            }
        }
    }
};

// This takes the bin/po2json'd data, and moves it into an internal form
// for use in our lib, and puts it in our object as:
//  Gettext._locale_data = {
//      domain : {
//          head : { headfield : headvalue },
//          msgs : {
//              msgid : [ msgid_plural, msgstr, msgstr_plural ],
//          },
Gettext.prototype.parse_locale_data = function(locale_data) {
    if (typeof(Gettext._locale_data) == 'undefined') {
        Gettext._locale_data = { };
    }

    // suck in every domain defined in the supplied data
    for (var domain in locale_data) {
        // skip empty specs (flexibly)
        if ((! locale_data.hasOwnProperty(domain)) || (! this.isValidObject(locale_data[domain])))
            continue;
        // skip if it has no msgid's
        var has_msgids = false;
        for (var msgid in locale_data[domain]) {
            has_msgids = true;
            break;
        }
        if (! has_msgids) continue;

        // grab shortcut to data
        var data = locale_data[domain];

        // if they specifcy a blank domain, default to "messages"
        if (domain == "") domain = "messages";
        // init the data structure
        if (! this.isValidObject(Gettext._locale_data[domain]) )
            Gettext._locale_data[domain] = { };
        if (! this.isValidObject(Gettext._locale_data[domain].head) )
            Gettext._locale_data[domain].head = { };
        if (! this.isValidObject(Gettext._locale_data[domain].msgs) )
            Gettext._locale_data[domain].msgs = { };

        for (var key in data) {
            if (key == "") {
                var header = data[key];
                for (var head in header) {
                    var h = head.toLowerCase();
                    Gettext._locale_data[domain].head[h] = header[head];
                }
            } else {
                Gettext._locale_data[domain].msgs[key] = data[key];
            }
        }
    }

    // build the plural forms function
    for (var domain in Gettext._locale_data) {
        if (this.isValidObject(Gettext._locale_data[domain].head['plural-forms']) &&
            typeof(Gettext._locale_data[domain].head.plural_func) == 'undefined') {
            // untaint data
            var plural_forms = Gettext._locale_data[domain].head['plural-forms'];
            var pf_re = new RegExp('^(\\s*nplurals\\s*=\\s*[0-9]+\\s*;\\s*plural\\s*=\\s*(?:\\s|[-\\?\\|&=!<>+*/%:;a-zA-Z0-9_\(\)])+)', 'm');
            if (pf_re.test(plural_forms)) {
                //ex english: "Plural-Forms: nplurals=2; plural=(n != 1);\n"
                //pf = "nplurals=2; plural=(n != 1);";
                //ex russian: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10< =4 && (n%100<10 or n%100>=20) ? 1 : 2)
                //pf = "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)";

                var pf = Gettext._locale_data[domain].head['plural-forms'];
                if (! /;\s*$/.test(pf)) pf = pf.concat(';');
                /* We used to use eval, but it seems IE has issues with it.
                 * We now use "new Function", though it carries a slightly
                 * bigger performance hit.
                var code = 'function (n) { var plural; var nplurals; '+pf+' return { "nplural" : nplurals, "plural" : (plural === true ? 1 : plural ? plural : 0) }; };';
                Gettext._locale_data[domain].head.plural_func = eval("("+code+")");
                */
                var code = 'var plural; var nplurals; '+pf+' return { "nplural" : nplurals, "plural" : (plural === true ? 1 : plural ? plural : 0) };';
                Gettext._locale_data[domain].head.plural_func = new Function("n", code);
            } else {
                throw new Error("Syntax error in language file. Plural-Forms header is invalid ["+plural_forms+"]");
            }   

        // default to english plural form
        } else if (typeof(Gettext._locale_data[domain].head.plural_func) == 'undefined') {
            Gettext._locale_data[domain].head.plural_func = function (n) {
                var p = (n != 1) ? 1 : 0;
                return { 'nplural' : 2, 'plural' : p };
                };
        } // else, plural_func already created
    }

    return;
};


// try_load_lang_po : do an ajaxy call to load in the .po lang defs
Gettext.prototype.try_load_lang_po = function(uri) {
    var data = this.sjax(uri);
    if (! data) return;

    var domain = this.uri_basename(uri);
    var parsed = this.parse_po(data);

    var rv = {};
    // munge domain into/outof header
    if (parsed) {
        if (! parsed[""]) parsed[""] = {};
        if (! parsed[""]["domain"]) parsed[""]["domain"] = domain;
        domain = parsed[""]["domain"];
        rv[domain] = parsed;

        this.parse_locale_data(rv);
    }

    return 1;
};

Gettext.prototype.uri_basename = function(uri) {
    var rv;
    if (rv = uri.match(/^(.*\/)?(.*)/)) {
        var ext_strip;
        if (ext_strip = rv[2].match(/^(.*)\..+$/))
            return ext_strip[1];
        else
            return rv[2];
    } else {
        return "";
    }
};

Gettext.prototype.parse_po = function(data) {
    var rv = {};
    var buffer = {};
    var lastbuffer = "";
    var errors = [];
    var lines = data.split("\n");
    for (var i=0; i<lines.length; i++) {
        // chomp
        lines[i] = lines[i].replace(/(\n|\r)+$/, '');

        var match;

        // Empty line / End of an entry.
        if (/^$/.test(lines[i])) {
            if (typeof(buffer['msgid']) != 'undefined') {
                var msg_ctxt_id = (typeof(buffer['msgctxt']) != 'undefined' &&
                                   buffer['msgctxt'].length) ?
                                  buffer['msgctxt']+Gettext.context_glue+buffer['msgid'] :
                                  buffer['msgid'];
                var msgid_plural = (typeof(buffer['msgid_plural']) != 'undefined' &&
                                    buffer['msgid_plural'].length) ?
                                   buffer['msgid_plural'] :
                                   null;

                // find msgstr_* translations and push them on
                var trans = [];
                for (var str in buffer) {
                    var match;
                    if (match = str.match(/^msgstr_(\d+)/))
                        trans[parseInt(match[1])] = buffer[str];
                }
                trans.unshift(msgid_plural);

                // only add it if we've got a translation
                // NOTE: this doesn't conform to msgfmt specs
                if (trans.length > 1) rv[msg_ctxt_id] = trans;

                buffer = {};
                lastbuffer = "";
            }

        // comments
        } else if (/^#/.test(lines[i])) {
            continue;

        // msgctxt
        } else if (match = lines[i].match(/^msgctxt\s+(.*)/)) {
            lastbuffer = 'msgctxt';
            buffer[lastbuffer] = this.parse_po_dequote(match[1]);

        // msgid
        } else if (match = lines[i].match(/^msgid\s+(.*)/)) {
            lastbuffer = 'msgid';
            buffer[lastbuffer] = this.parse_po_dequote(match[1]);

        // msgid_plural
        } else if (match = lines[i].match(/^msgid_plural\s+(.*)/)) {
            lastbuffer = 'msgid_plural';
            buffer[lastbuffer] = this.parse_po_dequote(match[1]);

        // msgstr
        } else if (match = lines[i].match(/^msgstr\s+(.*)/)) {
            lastbuffer = 'msgstr_0';
            buffer[lastbuffer] = this.parse_po_dequote(match[1]);

        // msgstr[0] (treak like msgstr)
        } else if (match = lines[i].match(/^msgstr\[0\]\s+(.*)/)) {
            lastbuffer = 'msgstr_0';
            buffer[lastbuffer] = this.parse_po_dequote(match[1]);

        // msgstr[n]
        } else if (match = lines[i].match(/^msgstr\[(\d+)\]\s+(.*)/)) {
            lastbuffer = 'msgstr_'+match[1];
            buffer[lastbuffer] = this.parse_po_dequote(match[2]);

        // continued string
        } else if (/^"/.test(lines[i])) {
            buffer[lastbuffer] += this.parse_po_dequote(lines[i]);

        // something strange
        } else {
            errors.push("Strange line ["+i+"] : "+lines[i]);
        }
    }


    // handle the final entry
    if (typeof(buffer['msgid']) != 'undefined') {
        var msg_ctxt_id = (typeof(buffer['msgctxt']) != 'undefined' &&
                           buffer['msgctxt'].length) ?
                          buffer['msgctxt']+Gettext.context_glue+buffer['msgid'] :
                          buffer['msgid'];
        var msgid_plural = (typeof(buffer['msgid_plural']) != 'undefined' &&
                            buffer['msgid_plural'].length) ?
                           buffer['msgid_plural'] :
                           null;

        // find msgstr_* translations and push them on
        var trans = [];
        for (var str in buffer) {
            var match;
            if (match = str.match(/^msgstr_(\d+)/))
                trans[parseInt(match[1])] = buffer[str];
        }
        trans.unshift(msgid_plural);

        // only add it if we've got a translation
        // NOTE: this doesn't conform to msgfmt specs
        if (trans.length > 1) rv[msg_ctxt_id] = trans;

        buffer = {};
        lastbuffer = "";
    }


    // parse out the header
    if (rv[""] && rv[""][1]) {
        var cur = {};
        var hlines = rv[""][1].split(/\\n/);
        for (var i=0; i<hlines.length; i++) {
            if (! hlines.length) continue;

            var pos = hlines[i].indexOf(':', 0);
            if (pos != -1) {
                var key = hlines[i].substring(0, pos);
                var val = hlines[i].substring(pos +1);
                var keylow = key.toLowerCase();

                if (cur[keylow] && cur[keylow].length) {
                    errors.push("SKIPPING DUPLICATE HEADER LINE: "+hlines[i]);
                } else if (/#-#-#-#-#/.test(keylow)) {
                    errors.push("SKIPPING ERROR MARKER IN HEADER: "+hlines[i]);
                } else {
                    // remove begining spaces if any
                    val = val.replace(/^\s+/, '');
                    cur[keylow] = val;
                }

            } else {
                errors.push("PROBLEM LINE IN HEADER: "+hlines[i]);
                cur[hlines[i]] = '';
            }
        }

        // replace header string with assoc array
        rv[""] = cur;
    } else {
        rv[""] = {};
    }

    // TODO: XXX: if there are errors parsing, what do we want to do?
    // GNU Gettext silently ignores errors. So will we.
    // alert( "Errors parsing po file:\n" + errors.join("\n") );

    return rv;
};


Gettext.prototype.parse_po_dequote = function(str) {
    var match;
    if (match = str.match(/^"(.*)"/)) {
        str = match[1];
    }
    // unescale all embedded quotes (fixes bug #17504)
    str = str.replace(/\\"/g, "\"");
    return str;
};


// try_load_lang_json : do an ajaxy call to load in the lang defs
Gettext.prototype.try_load_lang_json = function(uri) {
    var data = this.sjax(uri);
    if (! data) return;

    var rv = this.JSON(data);
    this.parse_locale_data(rv);

    return 1;
};

// this finds all <link> tags, filters out ones that match our
// specs, and returns a list of hashes of those
Gettext.prototype.get_lang_refs = function() {
    var langs = new Array();
    var links = document.getElementsByTagName("link");
    // find all <link> tags in dom; filter ours
    for (var i=0; i<links.length; i++) {
        if (links[i].rel == 'gettext' && links[i].href) {
            if (typeof(links[i].type) == 'undefined' ||
                links[i].type == '') {
                if (/\.json$/i.test(links[i].href)) {
                    links[i].type = 'application/json';
                } else if (/\.js$/i.test(links[i].href)) {
                    links[i].type = 'application/json';
                } else if (/\.po$/i.test(links[i].href)) {
                    links[i].type = 'application/x-po';
                } else if (/\.mo$/i.test(links[i].href)) {
                    links[i].type = 'application/x-mo';
                } else {
                    throw new Error("LINK tag with rel=gettext found, but the type and extension are unrecognized.");
                }
            }

            links[i].type = links[i].type.toLowerCase();
            if (links[i].type == 'application/json') {
                links[i].type = 'application/json';
            } else if (links[i].type == 'text/javascript') {
                links[i].type = 'application/json';
            } else if (links[i].type == 'application/x-po') {
                links[i].type = 'application/x-po';
            } else if (links[i].type == 'application/x-mo') {
                links[i].type = 'application/x-mo';
            } else {
                throw new Error("LINK tag with rel=gettext found, but the type attribute ["+links[i].type+"] is unrecognized.");
            }

            langs.push(links[i]);
        }
    }
    return langs;
};


/*

=head2 textdomain( domain )

Set domain for future gettext() calls

A  message  domain  is  a  set of translatable msgid messages. Usually,
every software package has its own message domain. The domain  name  is
used to determine the message catalog where a translation is looked up;
it must be a non-empty string.

The current message domain is used by the gettext, ngettext, pgettext,
npgettext functions, and by the dgettext, dcgettext, dngettext, dcngettext,
dpgettext, dcpgettext, dnpgettext and dcnpgettext functions when called
with a NULL domainname argument.

If domainname is not NULL, the current message domain is set to
domainname.

If domainname is undefined, null, or empty string, the function returns
the current message domain.

If  successful,  the  textdomain  function  returns the current message
domain, after possibly changing it. (ie. if you set a new domain, the 
value returned will NOT be the previous domain).

=cut

*/
Gettext.prototype.textdomain = function (domain) {
    if (domain && domain.length) this.domain = domain;
    return this.domain;
}

/*

=head2 gettext( MSGID )

Returns the translation for B<MSGID>.  Example:

    alert( gt.gettext("Hello World!\n") );

If no translation can be found, the unmodified B<MSGID> is returned,
i. e. the function can I<never> fail, and will I<never> mess up your
original message.

One common mistake is to interpolate a variable into the string like this:

  var translated = gt.gettext("Hello " + full_name);

The interpolation will happen before it's passed to gettext, and it's 
unlikely you'll have a translation for every "Hello Tom" and "Hello Dick"
and "Hellow Harry" that may arise.

Use C<strargs()> (see below) to solve this problem:

  var translated = Gettext.strargs( gt.gettext("Hello %1"), [full_name] );

This is espeically useful when multiple replacements are needed, as they 
may not appear in the same order within the translation. As an English to
French example:

  Expected result: "This is the red ball"
  English: "This is the %1 %2"
  French:  "C'est le %2 %1"
  Code: Gettext.strargs( gt.gettext("This is the %1 %2"), ["red", "ball"] );

(The example is stupid because neither color nor thing will get
translated here ...).

=head2 dgettext( TEXTDOMAIN, MSGID )

Like gettext(), but retrieves the message for the specified 
B<TEXTDOMAIN> instead of the default domain.  In case you wonder what
a textdomain is, see above section on the textdomain() call.

=head2 dcgettext( TEXTDOMAIN, MSGID, CATEGORY )

Like dgettext() but retrieves the message from the specified B<CATEGORY>
instead of the default category C<LC_MESSAGES>.

NOTE: the categories are really useless in javascript context. This is
here for GNU Gettext API compatability. In practice, you'll never need
to use this. This applies to all the calls including the B<CATEGORY>.


=head2 ngettext( MSGID, MSGID_PLURAL, COUNT )

Retrieves the correct translation for B<COUNT> items.  In legacy software
you will often find something like:

    alert( count + " file(s) deleted.\n" );

or

    printf(count + " file%s deleted.\n", $count == 1 ? '' : 's');

I<NOTE: javascript lacks a builtin printf, so the above isn't a working example>

The first example looks awkward, the second will only work in English
and languages with similar plural rules.  Before ngettext() was introduced,
the best practice for internationalized programs was:

    if (count == 1) {
        alert( gettext("One file deleted.\n") );
    } else {
        printf( gettext("%d files deleted.\n"), count );
    }

This is a nuisance for the programmer and often still not sufficient
for an adequate translation.  Many languages have completely different
ideas on numerals.  Some (French, Italian, ...) treat 0 and 1 alike,
others make no distinction at all (Japanese, Korean, Chinese, ...),
others have two or more plural forms (Russian, Latvian, Czech,
Polish, ...).  The solution is:

    printf( ngettext("One file deleted.\n",
                     "%d files deleted.\n",
                     count), // argument to ngettext!
            count);          // argument to printf!

In English, or if no translation can be found, the first argument
(B<MSGID>) is picked if C<count> is one, the second one otherwise.
For other languages, the correct plural form (of 1, 2, 3, 4, ...)
is automatically picked, too.  You don't have to know anything about
the plural rules in the target language, ngettext() will take care
of that.

This is most of the time sufficient but you will have to prove your
creativity in cases like

    "%d file(s) deleted, and %d file(s) created.\n"

That said, javascript lacks C<printf()> support. Supplied with Gettext.js
is the C<strargs()> method, which can be used for these cases:

    Gettext.strargs( gt.ngettext( "One file deleted.\n",
                                  "%d files deleted.\n",
                                  count), // argument to ngettext!
                     count); // argument to strargs!

NOTE: the variable replacement isn't done for you, so you must
do it yourself as in the above.

=head2 dngettext( TEXTDOMAIN, MSGID, MSGID_PLURAL, COUNT )

Like ngettext() but retrieves the translation from the specified
textdomain instead of the default domain.

=head2 dcngettext( TEXTDOMAIN, MSGID, MSGID_PLURAL, COUNT, CATEGORY )

Like dngettext() but retrieves the translation from the specified
category, instead of the default category C<LC_MESSAGES>.


=head2 pgettext( MSGCTXT, MSGID )

Returns the translation of MSGID, given the context of MSGCTXT.

Both items are used as a unique key into the message catalog.

This allows the translator to have two entries for words that may
translate to different foreign words based on their context. For
example, the word "View" may be a noun or a verb, which may be
used in a menu as File->View or View->Source.

    alert( pgettext( "Verb: To View", "View" ) );
    alert( pgettext( "Noun: A View", "View"  ) );

The above will both lookup different entries in the message catalog.

In English, or if no translation can be found, the second argument
(B<MSGID>) is returned.

=head2 dpgettext( TEXTDOMAIN, MSGCTXT, MSGID )

Like pgettext(), but retrieves the message for the specified 
B<TEXTDOMAIN> instead of the default domain.

=head2 dcpgettext( TEXTDOMAIN, MSGCTXT, MSGID, CATEGORY )

Like dpgettext() but retrieves the message from the specified B<CATEGORY>
instead of the default category C<LC_MESSAGES>.


=head2 npgettext( MSGCTXT, MSGID, MSGID_PLURAL, COUNT )

Like ngettext() with the addition of context as in pgettext().

In English, or if no translation can be found, the second argument
(MSGID) is picked if B<COUNT> is one, the third one otherwise.

=head2 dnpgettext( TEXTDOMAIN, MSGCTXT, MSGID, MSGID_PLURAL, COUNT )

Like npgettext() but retrieves the translation from the specified
textdomain instead of the default domain.

=head2 dcnpgettext( TEXTDOMAIN, MSGCTXT, MSGID, MSGID_PLURAL, COUNT, CATEGORY )

Like dnpgettext() but retrieves the translation from the specified
category, instead of the default category C<LC_MESSAGES>.

=cut

*/

// gettext
Gettext.prototype.gettext = function (msgid) {
    var msgctxt;
    var msgid_plural;
    var n;
    var category;
    return this.dcnpgettext(null, msgctxt, msgid, msgid_plural, n, category);
};

Gettext.prototype.dgettext = function (domain, msgid) {
    var msgctxt;
    var msgid_plural;
    var n;
    var category;
    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category);
};

Gettext.prototype.dcgettext = function (domain, msgid, category) {
    var msgctxt;
    var msgid_plural;
    var n;
    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category);
};

// ngettext
Gettext.prototype.ngettext = function (msgid, msgid_plural, n) {
    var msgctxt;
    var category;
    return this.dcnpgettext(null, msgctxt, msgid, msgid_plural, n, category);
};

Gettext.prototype.dngettext = function (domain, msgid, msgid_plural, n) {
    var msgctxt;
    var category;
    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category);
};

Gettext.prototype.dcngettext = function (domain, msgid, msgid_plural, n, category) {
    var msgctxt;
    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category, category);
};

// pgettext
Gettext.prototype.pgettext = function (msgctxt, msgid) {
    var msgid_plural;
    var n;
    var category;
    return this.dcnpgettext(null, msgctxt, msgid, msgid_plural, n, category);
};

Gettext.prototype.dpgettext = function (domain, msgctxt, msgid) {
    var msgid_plural;
    var n;
    var category;
    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category);
};

Gettext.prototype.dcpgettext = function (domain, msgctxt, msgid, category) {
    var msgid_plural;
    var n;
    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category);
};

// npgettext
Gettext.prototype.npgettext = function (msgctxt, msgid, msgid_plural, n) {
    var category;
    return this.dcnpgettext(null, msgctxt, msgid, msgid_plural, n, category);
};

Gettext.prototype.dnpgettext = function (domain, msgctxt, msgid, msgid_plural, n) {
    var category;
    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category);
};

// this has all the options, so we use it for all of them.
Gettext.prototype.dcnpgettext = function (domain, msgctxt, msgid, msgid_plural, n, category) {
    if (! this.isValidObject(msgid)) return '';

    var plural = this.isValidObject(msgid_plural);
    var msg_ctxt_id = this.isValidObject(msgctxt) ? msgctxt+Gettext.context_glue+msgid : msgid;

    var domainname = this.isValidObject(domain)      ? domain :
                     this.isValidObject(this.domain) ? this.domain :
                                                       'messages';

	// category is always LC_MESSAGES. We ignore all else
    var category_name = 'LC_MESSAGES';
    var category = 5;
	
	
	
    var locale_data = new Array();
    if (typeof(Gettext._locale_data) != 'undefined' &&
        this.isValidObject(Gettext._locale_data[domainname])) {
        locale_data.push( Gettext._locale_data[domainname] );

    } else if (typeof(Gettext._locale_data) != 'undefined') {
        // didn't find domain we're looking for. Search all of them.
        for (var dom in Gettext._locale_data) {
            locale_data.push( Gettext._locale_data[dom] );
        }
    }
	
	
    var trans = [];
    var found = false;
    var domain_used; // so we can find plural-forms if needed
    if (locale_data.length) {
        for (var i=0; i<locale_data.length; i++) {
            var locale = locale_data[i];
            if (this.isValidObject(locale.msgs[msg_ctxt_id])) {
                // make copy of that array (cause we'll be destructive)
                for (var j=0; j<locale.msgs[msg_ctxt_id].length; j++) {
                    trans[j] = locale.msgs[msg_ctxt_id][j];
                }
                trans.shift(); // throw away the msgid_plural
                domain_used = locale;
                found = true;
                // only break if found translation actually has a translation.
                if ( trans.length > 0 && trans[0].length != 0 )
                    break;
            }
        }
    }

    // default to english if we lack a match, or match has zero length
    if ( trans.length == 0 || trans[0].length == 0 ) {
        trans = [ msgid, msgid_plural ];
    }

    var translation = trans[0];
    if (plural) {
        var p;
        if (found && this.isValidObject(domain_used.head.plural_func) ) {
            var rv = domain_used.head.plural_func(n);
            if (! rv.plural) rv.plural = 0;
            if (! rv.nplural) rv.nplural = 0;
            // if plurals returned is out of bound for total plural forms
            if (rv.nplural <= rv.plural) rv.plural = 0;
            p = rv.plural;
        } else {
            p = (n != 1) ? 1 : 0;
        }
        if (this.isValidObject(trans[p]))
            translation = trans[p];
    }

    return translation;
};


/*

=head2 strargs (string, argument_array)

  string : a string that potentially contains formatting characters.
  argument_array : an array of positional replacement values

This is a utility method to provide some way to support positional parameters within a string, as javascript lacks a printf() method.

The format is similar to printf(), but greatly simplified (ie. fewer features).

Any percent signs followed by numbers are replaced with the corrosponding item from the B<argument_array>.

Example:

    var string = "%2 roses are red, %1 violets are blue";
    var args   = new Array("10", "15");
    var result = Gettext.strargs(string, args);
    // result is "15 roses are red, 10 violets are blue"

The format numbers are 1 based, so the first itme is %1.

A lone percent sign may be escaped by preceeding it with another percent sign.

A percent sign followed by anything other than a number or another percent sign will be passed through as is.

Some more examples should clear up any abmiguity. The following were called with the orig string, and the array as Array("[one]", "[two]") :

  orig string "blah" becomes "blah"
  orig string "" becomes ""
  orig string "%%" becomes "%"
  orig string "%%%" becomes "%%"
  orig string "%%%%" becomes "%%"
  orig string "%%%%%" becomes "%%%"
  orig string "tom%%dick" becomes "tom%dick"
  orig string "thing%1bob" becomes "thing[one]bob"
  orig string "thing%1%2bob" becomes "thing[one][two]bob"
  orig string "thing%1asdf%2asdf" becomes "thing[one]asdf[two]asdf"
  orig string "%1%2%3" becomes "[one][two]"
  orig string "tom%1%%2%aDick" becomes "tom[one]%2%aDick"

This is especially useful when using plurals, as the string will nearly always contain the number.

It's also useful in translated strings where the translator may have needed to move the position of the parameters.

For example:

  var count = 14;
  Gettext.strargs( gt.ngettext('one banana', '%1 bananas', count), [count] );

NOTE: this may be called as an instance method, or as a class method.

  // instance method:
  var gt = new Gettext(params);
  gt.strargs(string, args);

  // class method:
  Gettext.strargs(string, args);

=cut

*/
/* utility method, since javascript lacks a printf */
Gettext.strargs = function (str, args) {
    // make sure args is an array
    if ( null == args ||
         'undefined' == typeof(args) ) {
        args = [];
    } else if (args.constructor != Array) {
        args = [args];
    }

    // NOTE: javascript lacks support for zero length negative look-behind
    // in regex, so we must step through w/ index.
    // The perl equiv would simply be:
    //    $string =~ s/(?<!\%)\%([0-9]+)/$args[$1]/g;
    //    $string =~ s/\%\%/\%/g; # restore escaped percent signs

    var newstr = "";
    while (true) {
        var i = str.indexOf('%');
        var match_n;

        // no more found. Append whatever remains
        if (i == -1) {
            newstr += str;
            break;
        }

        // we found it, append everything up to that
        newstr += str.substr(0, i);

        // check for escpaed %%
        if (str.substr(i, 2) == '%%') {
            newstr += '%';
            str = str.substr((i+2));

        // % followed by number
        } else if ( match_n = str.substr(i).match(/^%(\d+)/) ) {
            var arg_n = parseInt(match_n[1]);
            var length_n = match_n[1].length;
            if ( arg_n > 0 && args[arg_n -1] != null && typeof(args[arg_n -1]) != 'undefined' )
                newstr += args[arg_n -1];
            str = str.substr( (i + 1 + length_n) );

        // % followed by some other garbage - just remove the %
        } else {
            newstr += '%';
            str = str.substr((i+1));
        }
    }

    return newstr;
}

/* instance method wrapper of strargs */
Gettext.prototype.strargs = function (str, args) {
    return Gettext.strargs(str, args);
}

/* verify that something is an array */
Gettext.prototype.isArray = function (thisObject) {
    return this.isValidObject(thisObject) && thisObject.constructor == Array;
};

/* verify that an object exists and is valid */
Gettext.prototype.isValidObject = function (thisObject) {
    if (null == thisObject) {
        return false;
    } else if ('undefined' == typeof(thisObject) ) {
        return false;
    } else {
        return true;
    }
};

Gettext.prototype.sjax = function (uri) {
    var xmlhttp;
    if (window.XMLHttpRequest) {
        xmlhttp = new XMLHttpRequest();
    } else if (navigator.userAgent.toLowerCase().indexOf('msie 5') != -1) {
        xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
    } else {
        xmlhttp = new ActiveXObject("Msxml2.XMLHTTP");
    }

    if (! xmlhttp)
        throw new Error("Your browser doesn't do Ajax. Unable to support external language files.");

    xmlhttp.open('GET', uri, false);
    try { xmlhttp.send(null); }
    catch (e) { return; }

    // we consider status 200 and 0 as ok.
    // 0 happens when we request local file, allowing this to run on local files
    var sjax_status = xmlhttp.status;
    if (sjax_status == 200 || sjax_status == 0) {
        return xmlhttp.responseText;
    } else {
        var error = xmlhttp.statusText + " (Error " + xmlhttp.status + ")";
        if (xmlhttp.responseText.length) {
            error += "\n" + xmlhttp.responseText;
        }
        alert(error);
        return;
    }
}

Gettext.prototype.JSON = function (data) {
    return eval('(' + data + ')');
}


/*

=head1 NOTES

These are some notes on the internals

=over

=item LOCALE CACHING

Loaded locale data is currently cached class-wide. This means that if two scripts are both using Gettext.js, and both share the same gettext domain, that domain will only be loaded once. This will allow you to grab a new object many times from different places, utilize the same domain, and share a single translation file. The downside is that a domain won't be RE-loaded if a new object is instantiated on a domain that had already been instantiated.

=back

=head1 BUGS / TODO

=over

=item error handling

Currently, there are several places that throw errors. In GNU Gettext, there are no fatal errors, which allows text to still be displayed regardless of how broken the environment becomes. We should evaluate and determine where we want to stand on that issue.

=item syncronous only support (no ajax support)

Currently, fetching language data is done purely syncronous, which means the page will halt while those files are fetched/loaded.

This is often what you want, as then following translation requests will actually be translated. However, if all your calls are done dynamically (ie. error handling only or something), loading in the background may be more adventagous.

It's still recommended to use the statically defined <script ...> method, which should have the same delay, but it will cache the result.

=item domain support

domain support while using shortcut methods like C<_('string')> or C<i18n('string')>.

Under normal apps, the domain is usually set globally to the app, and a single language file is used. Under javascript, you may have multiple libraries or applications needing translation support, but the namespace is essentially global.

It's recommended that your app initialize it's own shortcut with it's own domain.  (See examples/wrapper/i18n.js for an example.)

Basically, you'll want to accomplish something like this:

    // in some other .js file that needs i18n
    this.i18nObj = new i18n;
    this.i18n = this.i18nObj.init('domain');
    // do translation
    alert( this.i18n("string") );

If you use this raw Gettext object, then this is all handled for you, as you have your own object then, and will be calling C<myGettextObject.gettext('string')> and such.


=item encoding

May want to add encoding/reencoding stuff. See GNU iconv, or the perl module Locale::Recode from libintl-perl.

=back


=head1 COMPATABILITY

This has been tested on the following browsers. It may work on others, but these are all those to which I have access.

    FF1.5, FF2, FF3, IE6, IE7, Opera9, Opera10, Safari3.1, Chrome

    *FF = Firefox
    *IE = Internet Explorer


=head1 REQUIRES

bin/po2json requires perl, and the perl modules Locale::PO and JSON.

=head1 SEE ALSO

bin/po2json (included),
examples/normal/index.html,
examples/wrapper/i18n.html, examples/wrapper/i18n.js,
Locale::gettext_pp(3pm), POSIX(3pm), gettext(1), gettext(3)

=head1 AUTHOR

Copyright (C) 2008, Joshua I. Miller E<lt>unrtst@cpan.orgE<gt>, all rights reserved. See the source code for details.

=cut

*/

;

/** WB Builder **/

define('Builder', [
	'Service',
	'Site',
	'Body',
	'Preloader',
	'Dialog',
	'MsgDialog',
	'Confirm',
	'UIButton',
	'Admin',
	'MenuListControl',
	'ComboBox',
	'HelpSystem',
	'WidgetToolbar',
	'MobileToolbar',
	'ModeManager',
	'LayoutManager',
	'ElementBox',
	'RemoteLoginDialog',
	'NotificationRibbon',
	'SettingsBox',
	'TemplateChooser'
], function(Service, Site, Body, Preloader, Dialog, MsgDialog, Confirm, UIButton, Admin,
			MenuListControl, ComboBox, HelpSystem, WidgetToolbar, MobileToolbar, ModeManager, LayoutManager,
			ElementBox, RemoteLoginDialog, NotificationRibbon, SettingsBox, TemplateChooser) {
	'use strict';
	
	/**
	 * Website builder main class
	 * @class
	 */
	var Builder = function() { this.__construct(); };

	Builder.isset = function(v) {
		return !(typeof(v) === "undefined" || v === null);
	};
	Builder.arrayUnique = function(arr) {
		var u = {}, a = [];
		for (var i = 0, l = arr.length; i < l; ++i) {
			if (u.hasOwnProperty(arr[i])) {
				continue;
			}
			a.push(arr[i]);
			u[arr[i]] = 1;
		}
		return a;
	};
	Builder.urlEncode = function(url, quotes) {
		var url_ = encodeURI(url).replace(/\(/g, "%28").replace(/\)/g, "%29");
		if (quotes) {
			url_ = url_.replace(/\'/g, "%27");
		}
		return url_;
	};
	
	Builder.prototype.dataInstanceKey = "__WB_CLASS__";
	Builder.prototype.site = null;
	Builder.prototype.head = null;
	Builder.prototype.body = null;
	Builder.prototype.styleSheet = null;
	Builder.prototype.footer = null;
	Builder.prototype.container = null;
	Builder.prototype.siteCover = null;
	Builder.prototype.snapSize = 10;
	Builder.prototype.showLayout = 1;
	Builder.prototype.showGrid = 0;
	Builder.prototype.clipboard = null;
	Builder.prototype.hotKeysMap = null;
	Builder.prototype.hotKeysMapRev = null;
	Builder.prototype.hotKeysMod = null;
	Builder.prototype.hotKeysListeners = null;
	Builder.prototype.historyStack = null;
	Builder.prototype.historyPointer = 0;
	Builder.prototype.historyOnChange = null;

	/** @type Body */
	Builder.prototype.bodyInstance = null;
	Builder.prototype.classList = null;
	Builder.prototype.elementList = null;
	Builder.prototype.pageModified = false;
	Builder.prototype.elemntQueue = null;
	Builder.prototype.preloader = null;
	Builder.prototype.msgDlg = null;
	Builder.prototype.staticMsgDlg = null;
	Builder.prototype.prmDlg = null;
	Builder.prototype.previewWindow = null;
	Builder.prototype.reportWindow = null;

	Builder.prototype.isModRewrite = true;
	Builder.prototype.routeGetKey = "route";
	Builder.prototype.baseUrl = "";
	Builder.prototype.lnBaseUrl = "";
	Builder.prototype.loadPageUrl = "";
	Builder.prototype.publishUrl = "";
	Builder.prototype.previewUrl = "";
	Builder.prototype.resetUrl = "";
	Builder.prototype.buyProUrl = "";
	Builder.prototype.reportUrl = "";
	Builder.prototype.tplBaseUrl = "";
	Builder.prototype.modBaseUrl = "";
	Builder.prototype.userBaseUrl = "";
	Builder.prototype.userGalleyUrl = "";
	Builder.prototype.helpUrl = null;
	Builder.prototype.menuId = null;
	Builder.prototype.favicon = null;
	/**
	 * Currently opened page id
	 * @type Number
	 */
	Builder.prototype.pageId = null;
	Builder.prototype.template = null;
	/**
	 * Builder locale code (ex. en_US)
	 * @type String
	 */
	Builder.prototype.locale = null;
	Builder.prototype.meta = null;
	Builder.prototype.excludedElements = null;
	Builder.prototype.pageSelector = null;
	Builder.prototype.isTouchDevice = null;
	Builder.prototype.touchHandler = null;
	Builder.prototype.backupDialog = null;
	Builder.prototype.reloadScrollStyles = null;
	/**
	 * Additional page data to be passed when saving
	 */
	Builder.prototype.pageBlocksData = {};
	Builder.prototype.availableElements = {};
	Builder.prototype.testMode = false;
	Builder.prototype.tinyMode = false;
	Builder.prototype.testSignUpBtn = null;
	Builder.prototype.signUpBtn = null;
	Builder.prototype.isReseller = false;
	Builder.prototype.showPremiumBtn = false;
	Builder.prototype.upgradeUrl = null;
	Builder.prototype.commonErrorMessage = null;
	Builder.prototype.isZyro = false;
	/** @type String */
	Builder.prototype.siteDomain = null;
	/** @type WidgetToolbar */
	Builder.prototype.controllToolbar = null;
	/** @type WidgetToolbar */
	Builder.prototype.widgetToolbar = null;
	/** @type {MobileToolbar.Toolbar} */
	Builder.prototype.mobileToolbar = null;
	Builder.prototype.pluginGroups = null;
	Builder.prototype.pluginRegistry = null;
	Builder.prototype.pluginToolbar = null;
	Builder.prototype.whiteLabel = null;
	Builder.prototype.enableForcedHttpsPort = false;
	Builder.prototype.mapsConfig = null;
	Builder.prototype.maxMenuItems = 0;
	Builder.prototype.templateChooser = null;
	Builder.prototype.saveDataProviders = [];
	Builder.prototype.panelUrl = null;
	/**
	 * Call to verify session (if multiple builders are open)
	 * @type {Function}
	 */
	Builder.prototype.verifySession = null;
	/**
	 * Payment Gateways
	 * @type {Object[]}
	 */
	Builder.prototype.paymentGateways = null;
	/**
	 * If true then builder UI needs to be rendered in right to left reading direction.
	 * @type {Boolean}
	 */
	Builder.prototype.rtl = false;

	/**
	 * Construct website builder
	 */
	Builder.prototype.__construct = function() {
		var thisClass = this;

		/*
		window.onerror = function(message, url, lineNumber) {  
			console.error(message);
			return true;
		};*/

		/**
		 * Set class instance for jQuery selector
		 * @param {Object} instance
		 */
		$.fn.wbSetClassInstance = function(instance) {
			$(this).each(function() {
				$(this).data(thisClass.dataInstanceKey, instance);
			});
		};

		this.isTouchDevice = ('ontouchstart' in document.documentElement) && (
			navigator.userAgent.match(/Android/i)
			|| navigator.userAgent.match(/webOS/i)
			|| navigator.userAgent.match(/iPhone/i)
			|| navigator.userAgent.match(/iPad/i)
			|| navigator.userAgent.match(/iPod/i)
			|| navigator.userAgent.match(/BlackBerry/i)
			|| navigator.userAgent.match(/Windows Phone/i)
			|| navigator.userAgent.match(/Opera Mini/i)
			|| navigator.userAgent.match(/IEMobile/i)
		);

		var val = this.getCookie("wb_showlayout");
		this.showLayout = Builder.isset(val) ? ((val === "Y") ? 1 : 0) : 1;

		val = this.getCookie("wb_showgrid");
		this.showGrid = Builder.isset(val) ? ((val === "Y") ? 1 : 0) : 0;

		val = this.getCookie("wb_snapgrid");
		this.gridSetSnap(Builder.isset(val) ? ((val === "Y") ? 1 : 0) : 1);

		/**
		 * Get class instance from jQuery selector
		 */
		$.fn.wbGetClassInstance = function() {
			return $(this).data(thisClass.dataInstanceKey);
		};

		/**
		 * Get class name from jQuery selector
		 */
		$.fn.wbGetClassName = function() {
			var instance = $(this).data(thisClass.dataInstanceKey);
			return instance ? instance.constructor.name : null;
		};

		$.ui.plugin.add("resizable", "fixresize", {
			isCorner: false,

			start: function(event, ui) {
				this.isCorner = $(event.target).hasClass("ui-resizable-se");
			},
			resize: function(event, ui) {
				if (!this.isCorner) return;
				var that = $(this).data("resizable");
				that.size.height = that.originalSize.height * that.size.width / that.originalSize.width;
			},
			stop: function(event, ui){
			}
		});

		String.prototype.repeat = function(num) {
			return new Array(num + 1).join(this);
		};

		if (!Object.keys) {
			Object.keys = function(object) {
				if (typeof object !== 'object')
					throw new TypeError('Object.keys called on non-object');
				var keys = [];
				for (var i in object) {
					keys.push(i);
				}
				return keys;
			};
		}
		
		Object.wbCompare = function(obj1, obj2) {
			if (Object.keys(obj1).length == Object.keys(obj2).length) {
				for (var i in obj1) {
					if (obj1[i] != obj2[i]) {
						return false;
					}
				}
				return true;
			}
			return false;
		};

		this.classList = {};
		this.elementList = {};
		this.elemntQueue = [];
		this.excludedElements = [];
		this.hotKeysMap = {
			27: 'esc', 9: 'tab', 32:'space', 13: 'return', 8:'backspace', 145: 'scroll', 
			20: 'capslock', 144: 'numlock', 19: 'pause', 45: 'insert', 36: 'home', 46: 'del',
			35: 'end', 33: 'pageup', 34: 'pagedown', 37: 'left', 38: 'up', 39: 'right', 40: 'down', 
			109: '-', 
			112: 'f1',113: 'f2', 114: 'f3', 115: 'f4', 116: 'f5', 117: 'f6', 118: 'f7', 119: 'f8', 
			120: 'f9', 121: 'f10', 122: 'f11', 123: 'f12', 191: '/'
		};
		var i = 0;
		for (i = 65; i <= 90; i++) { this.hotKeysMap[i] = String.fromCharCode(i).toLowerCase(); }
		for (i = 96; i <= 105; i++) { this.hotKeysMap[i] = String.fromCharCode(i - 48).toLowerCase(); }
		this.hotKeysMapRev = {};
		for (var k in this.hotKeysMap) { this.hotKeysMapRev[this.hotKeysMap[k]] = k*1; }
		this.hotKeysMod = {shift: false, ctrl: false, alt: false, win: false};
		this.hotKeysListeners = [];
		this.historyStack = [];

		this.addHotKey("Ctrl+Z", function() { thisClass.historyUndo(); });
		this.addHotKey("Ctrl+Y", function() { thisClass.historyRedo(); });
		
		this.pluginGroups = {};
		this.pluginRegistry = {};
		this.pluginToolbar = [];
		this.paymentGateways = [];
	};

	/**
	 * Called on document ready
	 */
	Builder.prototype.init = function() {
		var thisClass = this;

		// disable on IE, couse it calls this dialog on every a tags click event, even if it is not changing location
		if (!$.browser.msie) {
			window.onbeforeunload = function() {
				if (thisClass.pageModified)
					return __("Are you sure you want to leave");
			};
		}
		
		$(document).bind("keydown", function(e) {
			// if (e.which === 8 && ($(e.target).is('body') || $.browser.msie && $(e.target).is(':not(input, textarea)'))) { // backspace
			if ($(e.target).is('body') && e.which === 8) { // backspace
				e.preventDefault();
				return false;
			}
			if (e.keyCode === 16) {
				thisClass.hotKeysMod.shift = true;
			} else if (e.keyCode === 17) {
				thisClass.hotKeysMod.ctrl = true;
			} else if (e.keyCode === 18) {
				thisClass.hotKeysMod.alt = true;
			}
			//console.log("KeyCode: " + e.keyCode);
			var l = null, key = thisClass.hotKeysMap[e.keyCode], _key;
			_key = key;
			l = thisClass.hotKeysListeners[_key];
			if (l) {
				if (!e.data) e.data = {};
				e.data.hotKey = _key;
				l(e);
			}
			if (thisClass.hotKeysMod.shift && key !== "shift") {
				_key = "shift+" + key;
				l = thisClass.hotKeysListeners[_key];
				if (l) {
					if (!e.data) e.data = {};
					e.data.hotKey = _key;
					l(e);
				}
			}
			if (thisClass.hotKeysMod.ctrl && key !== "ctrl") {
				_key = "ctrl+" + key;
				l = thisClass.hotKeysListeners[_key];
				if (l) {
					if (!e.data) e.data = {};
					e.data.hotKey = _key;
					l(e);
				}
			}
			if (thisClass.hotKeysMod.alt && key !== "alt") {
				_key = "alt+" + key;
				l = thisClass.hotKeysListeners[_key];
				if (l) {
					if (!e.data) e.data = {};
					e.data.hotKey = _key;
					l(e);
				}
			}
		}).bind("keyup", function(e) {
			if (e.keyCode === 16) {
				thisClass.hotKeysMod.shift = false;
			} else if (e.keyCode === 17) {
				thisClass.hotKeysMod.ctrl = false;
			} else if (e.keyCode === 18) {
				thisClass.hotKeysMod.alt = false;
			}
		}).bind("click", function(e) {
			thisClass.clearSelections();
			var t = $(e.target);
			if (!t.is('#page_selector *') && thisClass.pageSelector) {
				thisClass.pageSelector.close();
			}
			ComboBox.onDocumentClick(e);
			WB_LangInputControl.onDocumentClick(e);

			e.stopPropagation();
		});
		$('.dropdown-toggle').bind('click', function() {
			thisClass.pageSelector.close();
		});
		
		this.rtl = ($('html').eq(0).attr('dir') === 'rtl');
		this.templateChooser = new TemplateChooser();
		this.head = $("#head");
		this.body = $("#body");
		this.siteCover = $(".site_cover", this.body);
		//this.footer = $("#footer");
		this.container = $(document.body);
		
		// hack for iPhone to fix scaling/viewport size issues
		if (this.isTouchDevice) this.body.css({maxWidth: '100%', overflowX: 'scroll'});

		var styleSheet = $('<style type="text/css" id="wb_style_sheet"></style>');
		$("head").append(styleSheet);
		if (!window.createPopup) { /* For Safari */
		   styleSheet.append(document.createTextNode(''));
		}
		for (var si = 1; si < document.styleSheets.length; si++) {
			var sheet = document.styleSheets[si];
			var sid = sheet.id ? sheet.id : (sheet.ownerNode ? sheet.ownerNode.id : null);
			if (sid === "wb_style_sheet") {
				this.styleSheet = sheet;
				break;
			}
		}

		$(window).resize(function() {
			if (thisClass.bodyInstance) {
				thisClass.highlightLayout(thisClass.showLayout);
			}
		});

		$("#lang_selector").find("a").on("click", function() {
			$("#lang_selector").removeClass("open");
			thisClass.goToPage(null, $(this).attr("href"));
			return false;
		});
		$("#lang_selector").find('button').on('click touchend', function(e) {
			var p = $(this).parent();
			p.toggleClass('open');
			e.stopPropagation();
			e.preventDefault();
			return false;
		});
		
		$("#wb_toolbar_ext .btn-buy-pro").bind("click", function() {
			location.href = thisClass.buyProUrl;
			return false;
		});

		var proTb = "";
		if ($("#wb_pro_version").size() > 0) {
			$("#wb_pro_version").bind("click", function() {
				location.href = thisClass.buyProUrl;
				return false;
			});
			$(".wb_toolbar_pro").find(".wb_item[id^=wb__]").each(function() {
				$(this).css({ opacity: 0.3 });
				$(this).attr("title", __("Available only with PRO account"));
			}).css("cursor", "default");
		} else {
			proTb = ",.wb_toolbar_pro";
		}
		
		var reset_func = function() {
			Confirm.showDialog(__("Reset"), $(
				'<div class="wb_change_template_dlg">' +
					'<div class="qq">' + __("Are you sure you want to reset current template?") + '</div>' +
					'<div class="red">' + __("Once reset your information will be lost.") + '</div>' + 
				'</div>'), [
				{
					title: __("No, keep current template")
				},
				{
					title: __("Yes, reset template"),
					cssClass: "btn-danger",
					func: function() {
						// prevent page leave confirmation dialog, couse this was confirmed by this dialog
						thisClass.pageModified = false;
						location.href = thisClass.resetUrl;
					}
				}
			], 480/*, $(this), null*/);
			Confirm.dialog.setCenterButtons(true);
		};
		$("#wb_fn_reset").on("click", reset_func);
		var publishFunc, saveFunc, previewFunc, backupRestoreFunc, newTplFunc, resetTplFunc;
		this.controllToolbar = Object.create(WidgetToolbar).init([
			{
				type: 'group',
				id: 'wb_save_group',
				collapsable: true,
				collapseCallback: collapseCallback,
				icon: 'ico-tb ico-tb-save',
				borderless: false,
				name: __('Save'),
				items: [
					{ id: 'wb_fn_save', icon: 'ico-tb ico-tb-save', name: __('Save and publish'), submenu: [
						{ id: 'wb_fn_save_publish', name: __('Save and publish'), active: (this.testMode ? false : true), help: (this.testMode ? __('Unavailable in test mode') : __('Save site and Publish it to the internet')), click: (publishFunc = function(e) {
							if (thisClass.testMode) {
								if (thisClass.isReseller) {
									RemoteLoginDialog.setVisible(true);
								} else if (thisClass.signUpBtn) {
									thisClass.signUpBtn.trigger('click');
								}
								return false;
							}
							thisClass.publish();
							e.stopPropagation();
							return false;
						}) },
						{ id: 'wb_fn_save_save', name: __('Save'), help: __('Save site without Publishing it'), click: (saveFunc = function(e) {
							thisClass.save(true);
							e.stopPropagation();
							return false;
						}) },
						{ id: 'wb_fn_save_backup', name: __('Backup/Restore'), click: (backupRestoreFunc = function(e) {
							thisClass.backupRestore();
							e.stopPropagation();
							return false;
						}) }
					], click: (this.isTouchDevice ? null : function(e) {
						if (thisClass.testMode) {
							if (thisClass.isReseller) {
								RemoteLoginDialog.setVisible(true);
							} else if (thisClass.signUpBtn) {
								thisClass.signUpBtn.trigger('click');
							}
							return false;
						}
						thisClass.publish();
						e.stopPropagation();
						return false;
					}) },
					{ id: 'wb_fn_preview', icon: 'ico-tb ico-tb-preview', name: __('Preview'), title: __('Preview site'),
						submenu: (this.panelUrl ? [
							{ id: 'wb_fn_preview_preview', name: __('Preview'),
								click: function(e) { thisClass.preview(); e.stopPropagation(); } },
							{ id: 'wb_fn_preview_website', name: __('Go to my website'),
								click: function(e) { window.open('http://' + thisClass.siteDomain); e.stopPropagation(); } }
						] : []),
						click: (previewFunc = function() { thisClass.preview(); })
					},
					{ type: '-' },
					{ id: 'wb_fn_undo', icon: 'ico-tb ico-tb-undo', name: __('Undo'), click: function() { thisClass.historyUndo(); return false; } },
					{ id: 'wb_fn_redo', icon: 'ico-tb ico-tb-redo', name: __('Redo'), click: function() { thisClass.historyRedo(); return false; } },
					{ type: '-' },
					{ id: 'wb_fn_change', icon: 'ico-tb ico-tb-reset', name: __('New/Reset'), submenu: [
						{ id: 'wb_fn_change_new', name: __('Change template'), click: (newTplFunc = function(e) {
							thisClass.templateChooser.setVisible(true);
							e.stopPropagation();
							return false;
						}) },
						{ id: 'wb_fn_change_reset', name: __('Reset'), click: (resetTplFunc = function(e) {
							reset_func.call(this);
							e.stopPropagation();
							return false;
						}) }
					], click: (this.isTouchDevice ? null : function(e) {
						thisClass.templateChooser.setVisible(true);
						e.stopPropagation();
						return false;
					})}
					//, { id: 'wb_fn_change', icon: 'ico-tb ico-tb-change', name: __('Change')}
				]
			}
		]);
		this.controllToolbar.setId('wb_toolbar_ext');
		this.controllToolbar.elem.css('margin-right', '6px');
		$('#control-toolbar-cont').eq(0).append(this.controllToolbar.elem);
		
		$.getJSON(thisClass.baseUrl + 'get_ui/', {prop: 'toolbars', ts: (new Date()).getTime()}, function(data) {
			if (!('control-toolbar-cont' in data) || !('items' in data['control-toolbar-cont'])) return;
			var items = data['control-toolbar-cont'].items;
			for (var i in items) {
				var item = items[i];
				if (item.name) {
					item = $.extend({ img: null, url: null, order: null }, item);
					var toolbarItem = Object.create(WidgetToolbar.ToolbarItem).init(item.img, __trr(item.name), true);
					if (item.url) {
						item.url = __trr(item.url).replace('{{siteDomain}}', thisClass.siteDomain);
						toolbarItem.setLink(item.url);
					}
					thisClass.controllToolbar.addItem(toolbarItem, item.order);
				}
			}
			thisClass.controllToolbar.ajustSize();
		});
		
		var collapseCallback = function(collapse, elem) {
			/* if (collapse) {
				elem.find('.wb-prm-btn').hide();
			} else {
				elem.find('.wb-prm-btn').show();
			} */
		};
		
		if (typeof this._loadPlugins === 'function') { this._loadPlugins(); }
		
		var widgetToolbarDef = this.constructPluginToolbar(collapseCallback);
		this.widgetToolbar = Object.create(WidgetToolbar).init(widgetToolbarDef, 'wb_toolbar_all');
		this.widgetToolbar.setId('wb_toolbar');
		$('#head-tools > div').eq(0).append(this.widgetToolbar.elem);
		this.widgetToolbar.ajustSize();
		var fItem = this.widgetToolbar.getToolbarItem(0);
		if (fItem) {
			fItem.elem.tooltip('show');
			fItem.elem.one('hover', function() { fItem.elem.tooltip('hide'); });
		}
		
		this.mobileToolbar = new MobileToolbar.Toolbar({
			items: [
				{name: __('Publish'), icon: 'ico-tb-save', drawer: {
					type: 'list',
					items: [
						{name: __('Publish'), icon: 'ico-tb-save', click: publishFunc},
						{name: __('Save'), icon: 'ico-tb-savedraft', click: saveFunc},
						{name: __('Preview'), icon: 'ico-tb-preview', click: previewFunc},
						{name: __('Backup'), icon: 'ico-tb-backup', click: backupRestoreFunc},
						{name: __('Change template'), icon: 'ico-tb-changetpl', click: newTplFunc},
						{name: __('Reset'), icon: 'ico-tb-resettpl', click: resetTplFunc}
					]
				}},
				{
					name: __('Language'),
					icon: (function() {
						var cc = thisClass.getLanguageByLocale(thisClass.locale).countryCode;
						return 'ico-lang-lang ico-lang-' + ((cc === 'us') ? 'uk' : cc);
					})(),
					drawer: {
						type: 'lang-grid',
						items: (function() {
							var i, list = [];
							for (i = 0; i < thisClass.availableLanguages.length; i++) {
								(function(lang) {
									if (!lang.active || lang.hidden) return;
									list.push({name: lang.name, icon: 'ico-lang-' + ((lang.countryCode === 'us') ? 'uk' : lang.countryCode), click: function(e) {
										e.stopPropagation();
										location.href = thisClass.baseUrl + lang.code;
									}});
								})(thisClass.availableLanguages[i]);
							}
							return list;
						})()
					}
				},
				{name: __('Add'), icon: 'icon-wb-add', drawer: {
					type: 'list',
					items: widgetToolbarDef
				}}
			]
		});
		this.head.append(this.mobileToolbar.getElem());		

		if (this.showPremiumBtn) {
			var prmBtn = $('<div>').addClass("wb-prm-btn").html('<div>' + __("Available in %sPremium version%s")
				.replace("%s", (thisClass.upgradeUrl
					? '<a href="' + thisClass.upgradeUrl + '" target="_blank">'
					: '<a href="javascript:void(0)">'))
				.replace("%s", '</a>') + '</div>');
					
			if (!thisClass.upgradeUrl) {
				if (!thisClass.prmDlg) {
					thisClass.prmDlg = new MsgDialog(__('Premium version'), __('Available in Premium version'), null, null, true);
				}
				prmBtn.find('a').on('click', function(e) {
					thisClass.prmDlg.setVisible(true);
				});
			}
			
			var groupsPro = $('<div></div>').addClass('wb_toolbar_groups_pro');
			$('.wb_toolbar_all').append(groupsPro);
			var sliceIndex = 0, i;
			for (i = 0; i < this.pluginToolbar.length; i++) {
				switch (this.pluginToolbar[i].id) {
					case 'wb-group-additional':
						if (this.tinyMode) sliceIndex++; break;
					case 'wb-group-social':
					case 'wb-group-advanced':
					case 'wb-group-commerce':
					case 'wb-group-maps':
						sliceIndex++; break;
				}
			}
			sliceIndex += (sliceIndex - 1);
			$(".wb_toolbar_all" + proTb).find(".wb_item_group, .wb_item_sep").slice(-sliceIndex).each(function() { // wrap last 7 items
				$(this).children('.wb_item_grouper').addClass('wb_inactive');
				groupsPro.append($(this));
			});
			groupsPro.append(prmBtn);
		}

		if (this.isSnapping()) {
			this.gridSetSnap(true);
		}

		if (!thisClass.isTouchDevice) {
			$("#wb_fn_save").hover(function() { HelpSystem.play(10); }, function() { });
		}
		if (thisClass.testMode) {
			$("#wb_fn_save_publish").tooltip({placement: "right"});
		}
		this.historyOnChange = function() {
			if (thisClass.historyHasUndo()) {
				$("#wb_fn_undo").css({ opacity: 1 });
			} else {
				$("#wb_fn_undo").css({ opacity: 0.3 });
			}
			if (thisClass.historyHasRedo()) {
				$("#wb_fn_redo").css({ opacity: 1 });
			} else {
				$("#wb_fn_redo").css({ opacity: 0.3 });
			}
		};
		this.historyOnChange();
		
		
		$("#wb_fn_report").bind("click", function() {
			thisClass.reportBug();
		});
		var reportPanel = $("#wb_fn_report").parent();
		reportPanel.children(".close").on("click", function() {
			reportPanel.detach();
			$.getJSON(thisClass.baseUrl + "feedback/", { hide: true, ts: (new Date()).getTime() });
		});


		$("#wb_fn_page_seo").bind("click", function() {
			thisClass.site.changeSiteSEO();
		});
		$("#wb_fn_page_background").bind("click", function() {
			thisClass.site.changePageBackground();
		});
		$("#wb_toolbar_pro").children(".rod").bind("click", function() {
			var state = $(this).data("__WB_STATE__");
			if (state) {
				$("#wb_toolbar_pro").stop(true, true).animate({width: "106px", height: "330px"}, 300);
				$(this).stop(true, true).animate({top: "136px", right: "10px"}, 300);
				$(this).data("__WB_STATE__", false);
				$(this).removeClass("rod-rev");
			} else {
				$("#wb_toolbar_pro").stop(true, true).animate({width: "326px", height: "430px"}, 300);
				$(this).stop(true, true).animate({top: "178px", right: "16px"}, 300);
				$(this).data("__WB_STATE__", true);
				$(this).addClass("rod-rev");
			}
		}).data("__WB_STATE__", false);

		if (thisClass.isTouchDevice) {
			$('*[data-toggle="dropdown"]').on("click", function(e) {
				e.stopPropagation();
			});
			//scrollbar o_0
			var scrollBar = $('<div class="wb-scroll-bar hide" id="WB_scrollBar"><div class="wb-scroll-thumb" id="WB_scrollThumb"><span><span></div></div>');
			var scrollThumb = scrollBar.find(".wb-scroll-thumb");

			thisClass.reloadScrollStyles = function() {
				var dh = $(document).height(),
					wh = $(window).height() - 130;


				if (dh <= wh) {
					scrollBar.addClass("hide");
				}
				else {
					scrollBar.css('top', 130);
					scrollBar.height(wh);
					scrollBar.removeClass("hide");
				}

			};
			var reloadScrollPos = function(e) {
				var dh = $(document).height(),
					wh = $(window).height();

				var m = dh - wh;
				var proc = $(window).scrollTop() / m;

				var max = wh - 130 - scrollThumb.height();
				scrollThumb.css('top', parseInt(max * proc, 10));
			};
			var touchStart = 0;
			var topStart = 0;
			scrollThumb.on('touchstart', function(e) {
				e.preventDefault();
				var touch = e.originalEvent.touches[0];
				touchStart = touch.clientY;
				topStart = parseInt(scrollThumb.css('top'), 10);
				//log('touch start y:' + touchStart);
			});
			scrollThumb.on('touchmove', function(e) {
				e.preventDefault();
				var touch = e.originalEvent.touches[0];
				var te = touch.clientY;
				var tt = te - touchStart;
				var dh = $(document).height(),
					wh = $(window).height();

				var tp = Math.max((topStart + tt), 0);
				var max = wh - 130 - scrollThumb.height();
				tp = Math.min(max, tp);
				var pr = tp / max;

				$(window).scrollTop(parseInt(pr * (dh - wh), 10));
			});

			$(document.body).append(scrollBar);
			$(window).on('resize', thisClass.reloadScrollStyles);
			$(window).on('scroll', reloadScrollPos);
		}

		var siteData = {
			"class": "Site",
			content: { pages: [] }
		};
		for (var i = 0; i < this.elemntQueue.length; i++) {
			var data = this.elemntQueue[i];
			if (data["class"] === "Site") {
				siteData = data;
			}
		}
		
		var btnAnchor, buildBtnAnchor = function() {
			if (!btnAnchor) {
				btnAnchor = $('<div>')
					.css({display: 'inline-block', width: 1, position: 'absolute', right: -1})
					.appendTo($('#head').find('.ctrl-right'));
			}
			return btnAnchor;
		};
		
		if (this.testSignUpBtn) {
			this.signUpBtn = $('<button type="button" class="btn btn-default"></button>');
			this.signUpBtn.css({position: 'absolute', right: -100, opacity: 0});
			this.signUpBtn.text(__trr(this.testSignUpBtn.title));
			this.signUpBtn.append('<span class="icon-wb-play-green" style="margin-left: 10px;"></span>');
			this.signUpBtn.on('click', function() { window.open(__trr(thisClass.testSignUpBtn.url).replace('{{siteDomain}}', thisClass.siteDomain)); });
			$('#head').find('.ctrl-right').append(this.signUpBtn);
			this.signUpBtn.css({right: -(this.signUpBtn.outerWidth(true) + 10), opacity: 1});
		}
		if (this.panelUrl) {
			$('<button>').addClass('btn btn-danger')
				.attr({type: 'button'})
				.text(__('Back to Cpanel'))
				.append('&nbsp;<span class="glyphicon glyphicon-chevron-right"></span>')
				.css({marginLeft: 10, fontSize: '11px', lineHeight: '20px'})
				.on('click', function() {
					var buttons = [];
					buttons.push({
						title: __('Save'),
						cssClass: 'btn-default',
						func: function() {
							thisClass.save(true, function() {
								setTimeout(function() {
									location.href = thisClass.panelUrl;
								}, 500);
							});
						}
					});
					buttons.push({
						title: __('Save and publish'),
						cssClass: 'btn-success',
						func: function() {
							thisClass.publish(function() {
								setTimeout(function() {
									location.href = thisClass.panelUrl;
								}, 500);
							});
						}
					});
					Confirm.showDialog(__("Confirm"), __("Page was modified.\nDo you want to save changes before exit?"), buttons, 360);
				})
				.appendTo(buildBtnAnchor());
		}
		
		this.site = new Site(siteData);
		
		if (parseInt(this.pageId, 10) > 0) {
			this.loadPage(this.pageId);
		} else {
			this.templateChooser.setVisible(true);
		}
		if (Admin) {
			new Admin();
		}

		$("#wb_toolbar_pro").on("mouseleave", function() {
			$(this).find(".btn-group").each(function(i, grp) {
				$(grp).find(".dropdown-menu").fadeOut(400, function() {
					$(grp).removeClass("open");
					$(grp).find(".dropdown-menu").fadeTo(0, 1).css("display", '');
				});
			});
		});

		$(".wb_badge_help").tooltip();
		
		// session keep alive
		var sessIntId = null;
		this.verifySession = function(func) {
			var d = new Date();
			$.get(thisClass.baseUrl + "session_keep_alive/?sess=" + thisClass.sessUniqKey + "&ts=" + d.getTime(), function(response) {
				var res = true;
				if (response.error && response.error === 'another builder') {
					clearInterval(sessIntId);
					thisClass.moreThanOneBuilder();
					res = false;
				}
				if (typeof func === 'function') func.call(thisClass, res, true);
			}, 'json').fail(function() {
				if (typeof func === 'function') func.call(thisClass, false, false);
			});
		};
		sessIntId = setInterval(function() { thisClass.verifySession(); }, 60000);

		// auto backups save
		if (thisClass.autoBackupsEnable && !thisClass.we) {
			setInterval(function() {
				var d = new Date();
				$.get(thisClass.baseUrl + "auto_save_project/?ts=" + d.getTime());
			}, thisClass.autoBackupsSavingInterval*1000);
		}
		
		LayoutManager.init(this);
		ModeManager.init(this);
		SettingsBox.init(this);
		ElementBox.init(this);
		NotificationRibbon.init();
		RemoteLoginDialog.init();
		HelpSystem.init(this);
		this.controllToolbar.ajustSize();
		Service.Store.Module.init(this);
	};
	
	Builder.prototype.constructPluginToolbar = function(collapseCallback) {
		var widgets = [], i, n, group, groupDef, item, itemDef, thisSelf = this;
		for (i = 0; i < this.pluginToolbar.length; i++) {
			if (i > 0) widgets.push({type: '-'});
			if (!(this.pluginToolbar[i].id in this.pluginGroups)) continue;
			groupDef = this.pluginGroups[this.pluginToolbar[i].id];
			group = {
				type: 'group',
				collapsable: true,
				collapseCallback: collapseCallback,
				icon: groupDef.icon,
				name: groupDef.name,
				items: []
			};
			if ('borderless' in groupDef) group.borderless = (groupDef.borderless ? true : false);
			for (n = 0; n < this.pluginToolbar[i].items.length; n++) {
				if (!(this.pluginToolbar[i].items[n] in this.pluginRegistry)) continue;
				itemDef = this.pluginRegistry[this.pluginToolbar[i].items[n]];
				item = {
					type: 'widget',
					id: itemDef.id,
					icon: itemDef.icon,
					iconImage: (itemDef.iconImage ? true : false),
					name: itemDef.name,
					active: ((typeof itemDef.active === 'function') ? itemDef.active : (itemDef.active ? true : false)),
					click: function() {
						var cls = this.id ? thisSelf.getClassByName(this.id) : null;
						if (!cls) return;
												
						var id, bounds, container = null,
							cx = ($(window).width() / 2) + $(window).scrollLeft(),
							cy = ($(window).height() / 2) + $(window).scrollTop();
						
						for (id in thisSelf.bodyInstance.blocks) {
							bounds = thisSelf.bodyInstance.blocks[id].getBounds();
							if (bounds.left <= cx && (bounds.left + bounds.width) >= cx && bounds.top <= cy && (bounds.top + bounds.height) >= cy) {
								container = thisSelf.bodyInstance.blocks[id];
								break;
							}
						}
						
						if (container) {
							Service.element.unselectAll();
							var item = new cls({content: {}});
							item.setLocation(cx - bounds.left - item.getWidth() / 2, cy - bounds.top - item.getHeight() / 2);
							container.addElement(item);
							item.setSelected(true);
							item.setControlsVisible(true);
							thisSelf.pageModified = true;
						}
						return false;
					}
				};
				if ('borderless' in itemDef) item.borderless = (itemDef.borderless ? true : false);
				group.items.push(item);
			}
			widgets.push(group);
		}
		return widgets;
	};
	
	/**
	 * Register payment gateway
	 * @param {Object} gateway
	 */
	Builder.prototype.registerPaymentGateway = function(gateway) {
		if (gateway && typeof gateway === 'object' && ('id' in gateway)) this.paymentGateways.push(gateway);
	};
	
	/**
	 * Get registered and active payment gateways.
	 * @return {Object[]}
	 */
	Builder.prototype.getPaymentGateways = function() {
		var i, gateway, list = [];
		for (i = 0; i < this.paymentGateways.length; i++) {
			gateway = this.paymentGateways[i];
			var id = (('className' in gateway) && gateway.className) ? gateway.className : gateway.id;
			if ((typeof this.pluginRegistry[id] === 'object') && this.pluginRegistry[id].active) {
				list.push(gateway);
			}
		}
		return list;
	};
	
	Builder.prototype.moreThanOneBuilder = function() {
		var thisClass = this;
		if (!thisClass.staticMsgDlg)
			thisClass.staticMsgDlg = new MsgDialog(null, null, null, null, true);
		thisClass.staticMsgDlg.setTitle(__("Warning"));
		thisClass.staticMsgDlg.setMessage(__('We have noticed that there is currently another builder opened in the same browser. Please use different browsers for editing several websites at the same time or edit one website after another.<br /><br />If you really need to save this website do the following:<ul><li>Leave this builder open and close other builders;</li><li>Open builder for the website you are currently on in the same browser;</li><li>Return to this builder;</il><li>Click on "Stay on this page" and click "Save".'), null, "block");
		thisClass.staticMsgDlg.removeAllButtons();
		thisClass.staticMsgDlg.addButton(__("Stay on this page"), function() {
			thisClass.staticMsgDlg.setVisible(false);
		}, false, "btn-danger");
		thisClass.staticMsgDlg.addButton(__("Close builder"), function() {
			thisClass.pageModified = false;
			var thisWnd = window.open('about:blank', '_self');
			thisWnd.close();
		}, false, "btn-success");
		thisClass.staticMsgDlg.setVisible(true);
	};

	/**
	 * Reload page selector dropdown
	 */
	Builder.prototype.reloadLeftMenu = function() {
		var thisClass = this;
		if (!this.pageSelector) {
			this.pageSelector = new MenuListControl();
			this.pageSelector.elem.css({ width: '140px' });
			this.pageSelector._elem.onChange = function(e, data) {
				var target, type, exData;
				if ((typeof data === 'object')) {
					target = data.menuItemTarget;
					type = data.menuItemType;
					exData = data;
				} else {
					target = $(this).attr('data-target');
					type = $(this).attr('data-type');
					exData = thisClass.pageSelector.getExtendedValue();
				}
				if (type === 'internal' || type === 'page') {
					thisClass.menuId = exData.menuItemId;
					thisClass.menuUID = exData.menuUID;
					thisClass.goToPage(target);
				} else {
					window.open(target, '_blank');
					window.focus();
					if (thisClass.menuUID) {
						thisClass.pageSelector.setExtendedValue({menuUID: thisClass.menuUID, menuItemId: parseInt(thisClass.menuId, 10)});
					} else {
						thisClass.pageSelector.setValue(thisClass.menuId);
					}
				}
			};
			$('#menu_sel').before(this.pageSelector.elem);
			$('#menu_sel').remove();
		}
		//$("#menu_sel").html(MenuListControl.getTree());
		this.pageSelector.reloadMenuList();
		if (this.pageId) {
			var m = WB_Menu.hasPage(this.pageId, null, true);
			if (m.length > 0) {
				this.menuId = m[0].menuItemId;
				this.menuUID = m[0].menuUID;
			}
		}
		if (this.menuUID) {
			this.pageSelector.setExtendedValue({menuUID: this.menuUID, menuItemId: parseInt(this.menuId, 10)});
		} else {
			this.pageSelector.setValue(this.menuId);
		}
		
		if (this.mobileToolbar) {
			if (!('mobileItem' in this.pageSelector) || !this.pageSelector.mobileItem) {
				this.mobileToolbar.addItem(MobileToolbar.Toolbar.buildItem({
					name: __('Menu'),
					icon: 'icon-wb-page-selector',
					drawer: {id: 'mobile-menu', type: 'list', items: []}
				}), 2);
				this.pageSelector.mobileItem = true;
			}
			var i, items = this.pageSelector.getItems(), drawer = MobileToolbar.Drawer.get('mobile-menu');
			drawer.removeAllItems();
			for (i = 0; i < items.length; i++) {
				if (!items[i].data || !('menuUID' in items[i].data)) continue;
				(function(item) {
					drawer.addItem(MobileToolbar.Toolbar.buildDrawerItem({name: item.name, icon: 'icon-wb-page-selector', click: function() {
						thisClass.pageSelector._elem.onChange(null, item.data);
					}}));
				})(items[i]);
			}
			drawer.addItem(MobileToolbar.Toolbar.buildDrawerItem({name: __('Edit Menu'), icon: 'icon-wb-edit', click: function(e) {
				ComboBox.closeAll();
				WB_Menu.editMenu();
				e.stopPropagation();
				return false;
			}}));
		}
	};

	/**
	 * Clears selected texts / blocks
	 */
	Builder.prototype.clearSelections = function() {
		
	};

	/**
	 * Register element class
	 * @param {String} className name of the class
	 * @param {Function} cls class
	 * @param {Boolean} plugin
	 * @param {Boolean} active if plugin should be active
	 */
	Builder.prototype.registerClass = function(className, cls, plugin, active) {
		cls.prototype.className = className;
		this.classList[className] = cls;
		//console.log('WB_' + className, cls);
		window['WB_' + className] = cls;
		//console.log(className);
		if (plugin) {
			var thisSelf = this;
			this.pluginRegistry[className] = {
				id: className,
				icon: (cls.prototype._icon ? cls.prototype._icon : 'icon-tb') + ' #ico-pl-' + className,
				iconImage: (cls.prototype._icon ? true : false),
				name: (cls.prototype._def.name ? cls.prototype._def.name : className),
				borderless: (cls.prototype._def.borderless ? true : false),
				active: (active ? true : false) // fwb-prm-btnunction(cls) { return ((cls in thisSelf.availableElements) && thisSelf.availableElements[cls]); }
			};
		}
	};

	/**
	 * Get registered element class
	 * @param {String} className name of the class to get
	 * @return {Function} Class
	 */
	Builder.prototype.getClassByName = function(className) {
		//if (!(className in this.classList)) console.log('Unknown Elemet Type: ' + className);
		return this.classList[className];
	};

	/**
	 * Register element for easier serialization
	 * @param {Element} elem element to register
	 */
	Builder.prototype.registerElement = function(elem) {
		if (!elem) return;
		this.elementList[elem.id] = elem;
	};

	/**
	 * Snap size to grid
	 * @param {Number} size grid size
	 * @param {Boolean} floor if true result will be floored
	 * @param {Boolean} ceil if true result will be ceiled
	 * @return {Number}
	 */
	Builder.prototype.gridSize = function(size, floor, ceil) {
		return (floor ? Math.floor(size / this.snapSize) : (ceil ? Math.ceil(size / this.snapSize) : Math.round(size / this.snapSize))) * this.snapSize;
	};

	/**
	 * Sets grid visibility
	 * @param {Boolean} visible
	 */
	Builder.prototype.gridSetVisible = function(visible) {
		this.showGrid = visible;
		for (var k in this.bodyInstance.blocks) {
			var block = this.bodyInstance.blocks[k];
			block.grid.css("display", (visible ? "block" : "none"));
		}
	};

	/**
	 * Sets grid snapping
	 * @param {Boolean} snap if true snapping to grid will be enabled else disabled
	 * @param {Element} element if set only for this element snaping will be set
	 */
	Builder.prototype.gridSetSnap = function(snap, element) {
		this.snapSize = snap ? 10 : 1;
		var list = element ? [element] : (this.bodyInstance ? this.bodyInstance.getContentElements() : []);
		for (var i = 0; i < list.length; i++) {
			list[i].elem.draggable("option", "grid", (snap ? [10, 10] : null));
			try {
				list[i].elem.resizable("option", "grid", (snap ? [10, 10] : null));
			} catch (e) {}
		}
	};

	/**
	 * Check if grid snapping is on
	 * @returns {Boolean}
	 */
	Builder.prototype.isSnapping = function() {
		return (this.snapSize > 1);
	};

	/**
	 * Shows / hides layout highlighting
	 * 
	 * @param {Boolean} visible
	 */
	Builder.prototype.highlightLayout = function(visible) {
		this.showLayout = visible;
		LayoutManager.setVisible(visible);
	};

	/**
	 * Browser to fullscreen mode
	 * 
	 * @param {Boolean} check Want to test only if browser supports it
	 */
	Builder.prototype.goFullScreen = function(check) {
		var pfx = ["webkit", "moz", "ms", "o", ""];
		var el = document.documentElement,
			rfs = false,
			pf = '',
			p = 0, t;

		var chechStr = 'FullScreen',
			callStr = 'RequestFullScreen',
			cancelStr = 'CancelFullScreen';


		//get prefix and calls
		while (p < pfx.length) {
			var m = callStr;
			pf = pfx[p];
			if (pf === "") {
				m = m.substr(0,1).toLowerCase() + m.substr(1);
			}
			m = pfx[p] + m;
			t = typeof el[m];
			if (t !== "undefined") {
				rfs = true;
				callStr = el[m];
				if (pf === 'webkit')
					chechStr = 'IsFullScreen';
				chechStr = pfx[p] === "" ? chechStr.substr(0,1).toLowerCase() + chechStr.substr(1) : pf + chechStr;
				chechStr = document[chechStr];
				cancelStr = pfx[p] === "" ? cancelStr.substr(0,1).toLowerCase() + cancelStr.substr(1) : pf + cancelStr;
				cancelStr = document[cancelStr];
				break;
			}
			p++;
		}

		if (rfs) {
			if (!check) {
				if (chechStr) {
					if (cancelStr)
						cancelStr.call(document);
				}
				else if (callStr)
					callStr.call(el);
			}
			return true;
		}
		//older id
		/*else if(typeof window.ActiveXObject!="undefined"){
			// for Internet Explorer
			var wscript = new ActiveXObject("WScript.Shell");
			if (wscript!=null) {
				if (check)
					return true;
				else
					wscript.SendKeys("{F11}");
			}
			else {
				return false;
			}
		}*/
		else {
			return false;
		}
	};

	/**
	 * Go to page
	 * @param {Number} pageId id of the page to go to
	 * @param {String} custUrl goto custom url instean of page
	 */
	Builder.prototype.goToPage = function(pageId, custUrl) {
		var thisPageId = pageId;
		var thisClass = this;
		var thisCustUrl = custUrl;
		if (thisClass.pageModified) {
			var tpage = this.site.getPage(pageId);
			var mustSave = (!thisCustUrl && pageId && tpage && tpage.copyFrom);
			var buttons = [];
			buttons.push({ title: __("Cancel") });
			if (!mustSave) buttons.push({
					title: __("Don't Save"),
					cssClass: "btn-danger",
					func: function() {
						if (thisCustUrl) {
							location.href = thisCustUrl;
						} else {
							thisClass.loadPage(thisPageId);
						}
					}
				});
			buttons.push({
					title: __("Save"),
					cssClass: "btn-success",
					func: function() {
						thisClass.save(true, function() {
							setTimeout(function() {
								if (thisCustUrl) {
									location.href = thisCustUrl;
								} else {
									thisClass.loadPage(thisPageId);
								}
							}, 1000);
						}, null, true);
					}
				});
			Confirm.showDialog(__("Confirm"),
				__("Page was modified.\nDo you want to save changes before exit?") +
				(mustSave ? ('<br /><br /><span>' + __("You must save before going to newly created page.") + '</span>') : ""),
				buttons, 360/*, $("#wb_toolbar_pro").find("#menu_sel"), "right"*/);
		} else {
			if (thisCustUrl) {
				location.href = thisCustUrl;
			} else {
				if (this.preloader) {
					while (this.preloader.numStacks() > 1) this.preloader.popStack();
				}
				thisClass.loadPage(thisPageId);
			}
		}

	};

	/**
	 * Load page to builder
	 * @param {number} pageId id of page to load
	 * @param {boolean=} reloadSite if true reload site object data
	 */
	Builder.prototype.loadPage = function(pageId, reloadSite) {
		if (!this.preloader)
			this.preloader = new Preloader(__("Loading page"));
		this.preloader.setTitle(__("Loading page"));
		this.preloader.reset();
		this.preloader.setVisible(true);
		this.preloader.setMessage("", __("Loading page") + '...');
		this.preloader.setProgress(10);
		if (this.bodyInstance) {
			this.bodyInstance.__destruct();
		}
		WB_Menu.elemList = {};
		this.bodyInstance = null;
		this.preloader.setProgress(20);
		var thisClass = this, thisReloadSite = reloadSite;
		setTimeout(function() {
			$.getJSON(thisClass.loadPageUrl, {id: pageId, ts: (new Date()).getTime()}, function(pageData) {
				var i = 0, data = null;
				thisClass.excludedElements = [];
				thisClass.pageId = parseInt(pageData.id, 10);
				thisClass.preloader.setProgress(52);
				$("#site").css("height", "auto");
				$("#site").append('<div class="root">' + pageData.layout + '</div>');

				var bodyContentData = { blocks: {} };
				var bodyData = {
					"class": "Body",
					content: bodyContentData
				};
				var siteData = {'class': 'Site', content: {pages: []}};
				thisClass.preloader.setProgress(60);

				var pp = 10 / pageData.elemntQueue.length;
				var pp_val = 60;

				for (i = 0; i < pageData.elemntQueue.length; i++) {
					data = pageData.elemntQueue[i];
					if (data['class'] === 'Site') siteData = data;
					if (data["class"] === "Body") {
						bodyData = data;
						if (!bodyData.content) bodyData.content = {};
						bodyData.content.blocks = bodyContentData.blocks;
					} else if (data["class"] === "Content") {
						if (data.id) {
							bodyContentData.blocks[data.id] = data;
						}
					}
					thisClass.preloader.setProgress(Math.floor(pp_val += pp));
				}
				if (thisReloadSite) thisClass.site.applyData(siteData);
				var _body = new Body(bodyData, thisClass.body);
				thisClass.bodyInstance = _body;
				pp = 30 / pageData.elemntQueue.length;
				thisClass.preloader.setProgress((pp_val = 70));
				//for checking if we have element inside wb_main
				var bodySet = false;
				for (i = 0; i < pageData.elemntQueue.length; i++) {
					data = pageData.elemntQueue[i];
					if (data.isCommon && data.includePages) {
						var hasPages = (Object.keys(data.includePages).length > 0);
						if (hasPages && !data.includePages[thisClass.pageId]) {
							thisClass.excludedElements.push(data);
							continue;
						}
					}
					var cls = thisClass.getClassByName(data["class"]);
					if (!cls) continue;
					var elm = new cls(data, true);
					var blockId = data.parentId;
					if (!blockId) blockId = data.block;
					if (!elm.dontAdd) // can be set in Element.exclude method
						_body.addElement(blockId, elm, true);
					else
						elm = null;
					thisClass.preloader.setProgress(Math.floor(pp_val += pp));
					if (blockId === 'wb_main')
						bodySet = true;
				}
				if (!bodySet && ('wb_main' in _body.blocks) && _body.blocks.wb_main) {
					_body.blocks.wb_main.updateSize();
				}
				_body.zReset();
				_body.updateStyle();
				thisClass.preloader.setProgress(100);
				setTimeout(function() {
					thisClass.preloader.setVisible(false);
					setTimeout(function() { thisClass.highlightLayout(thisClass.showLayout); }, 500);
				}, 500);
				thisClass.gridSetVisible(thisClass.showGrid);
				thisClass.highlightLayout(thisClass.showLayout);
				thisClass.pageModified = false;
				if (thisClass.isTouchDevice) {
					thisClass.reloadScrollStyles();
				}
				if (ModeManager.getMode() !== ModeManager.MODE_DESKTOP) ModeManager.setMode(ModeManager.getMode(), true, true);
				
				thisClass.site.setLanding(thisClass.site.landing, true);
			}).error(function() {
				thisClass.preloader.setMessage("", __("Error loading page"), "error");
				thisClass.preloader.setVisible(false);
				if (!thisClass.staticMsgDlg)
					thisClass.staticMsgDlg = new MsgDialog(null, null, null, null, true);
				thisClass.staticMsgDlg.setTitle(__("Error loading page. Try again later."));
				thisClass.staticMsgDlg.setMessage("", __("Error loading page. Try again later."), "error-big");
				thisClass.staticMsgDlg.removeAllButtons();
				thisClass.staticMsgDlg.addButton(__("Retry loading the page"), function() {
					thisClass.staticMsgDlg.setVisible(false);
					thisClass.loadPage(pageId);
				}, true, "btn-primary");
				thisClass.staticMsgDlg.setVisible(true);
			});
		}, 1000);
	};
	
	/**
	 * Register save data provider.
	 * When save is initiated, system will post data provided by provider
	 * that will be identified by id.
	 * @param {string} id
	 * @param {Function} func
	 */
	Builder.prototype.regSaveDataProvider = function(id, func) {
		this.saveDataProviders.push({id: id, func: func});
	};
	
	/**
	 * Save page info
	 * @param {Boolean} useDialog if true will use save dialog
	 * @param {Function} callback callback to be caled when save completes
	 * @param {String} altUrl alternative save url
	 * @param {Boolean} keepOpen if useDialog then keep open after complete
	 * @param {Boolean} reset add reset post parameter
	 * @param {Boolean} errorsChecked indicates that there is no need to check page for loading errors
	 * @param {String} dialogTitle
	 */
	Builder.prototype.save = function(useDialog, callback, altUrl, keepOpen, reset, errorsChecked, dialogTitle) {
		var i, sdp, thisClass = this;
		var saveAction = function() {
			Service.textArea.hideEditors();
			var thisUrl = altUrl ? altUrl : WB_SAVE_URL;
			thisUrl += '?sess=' + thisClass.sessUniqKey + '&ts=' + (new Date()).getTime();
			var elemsCommon = [];
			var elems = [];
			// ignore element registration :)
			thisClass.elementList = thisClass.bodyInstance.getContentElements();
			var siteData = thisClass.site.serialize();
			siteData.isCommon = true;
			elemsCommon[elemsCommon.length] = siteData;
			var bodyData = thisClass.bodyInstance.serialize();
			bodyData.isCommon = true;
			elemsCommon[elemsCommon.length] = bodyData;
			var id;
			for (id in thisClass.bodyInstance.blocks) {
				var blockData = thisClass.bodyInstance.blocks[id].serialize();
				if (blockData.isCommon) {
					elemsCommon[elemsCommon.length] = blockData;
				} else {
					elems[elems.length] = blockData;
				}
			}
			for (id in thisClass.elementList) {
				var elem = thisClass.elementList[id];
				var data = elem ? elem.serialize() : null;
				if (!data) continue;
				if (data.isCommon) {
					elemsCommon[elemsCommon.length] = data;
				} else {
					elems[elems.length] = data;
				}
			}
			for (var i = 0; i < thisClass.excludedElements.length; i++) {
				elemsCommon[elemsCommon.length] = thisClass.excludedElements[i];
			}

			var _useDialog = useDialog ? true : false;
			if (_useDialog) {
				if (!thisClass.preloader)
					thisClass.preloader = new Preloader((dialogTitle ? dialogTitle : __("Save")));
				thisClass.preloader.selectStack(0);
				if (keepOpen) {
					while (thisClass.preloader.numStacks() > 2) thisClass.preloader.popStack();
					thisClass.preloader.resetAll();
					if (thisClass.preloader.numStacks() < 2) thisClass.preloader.pushStack();
				} else {
					while (thisClass.preloader.numStacks() > 1) thisClass.preloader.popStack();
				}
				thisClass.preloader.setTitle((dialogTitle ? dialogTitle : __("Save")));
				var monitorOptions = {
					url: thisUrl,
					method: "post",
					opts: {
						reset: (reset ? 1 : null),
						id: thisClass.pageId,
						common_data: $.JSON.encode(elemsCommon),
						page_data: $.JSON.encode(elems),
						meta: $.JSON.encode(thisClass.meta),
						page_blocks_data: $.JSON.encode(thisClass.pageBlocksData)
					}
				};
				for (i = 0; i < thisClass.saveDataProviders.length; i++) {
					sdp = thisClass.saveDataProviders[i];
					if (sdp.id && typeof sdp.func === 'function') {
						monitorOptions.opts[sdp.id] = $.JSON.encode(sdp.func.call(thisClass));
					}
				}
				var monitorRecover = false;
				var monitorFunc = function(success, error) {
					if (success) {
						thisClass.pageModified = false;
					} else {
						var errMsg = error;
						if (error === 'saving error') {
							errMsg = __('An error occured while saving. Please try again in few seconds.');
						} else if (error === 'another builder') {
							thisClass.moreThanOneBuilder();
							return;
						}
						if (!thisClass.msgDlg)
							thisClass.msgDlg = new MsgDialog();
						thisClass.msgDlg.setTitle(__('Error'));
						thisClass.msgDlg.setMessage(errMsg, __("Error:"), "error");
						thisClass.msgDlg.setVisible(true);
					}
					if (thisClass.preloader.numStacks() > 1) {
						thisClass.preloader.selectStack(1);
					}
					
					if (typeof(callback) === 'function') {
						callback(success, error);
					}
				};
				thisClass.preloader.reset();
				thisClass.preloader.monitor(monitorOptions, monitorFunc, null, keepOpen, function(error) {
					if ((typeof error === 'object') && !monitorRecover && ('recover' in error) && error.recover === 'full-publish') {
						monitorRecover = true;
						setTimeout(function() {
							monitorOptions.opts.full = true;
							thisClass.preloader.monitor(monitorOptions, monitorFunc, null, keepOpen);
						}, 10);
						return true;
					}
					return false;
				});
				thisClass.preloader.setVisible(true);
			} else {
				var thisCallback = callback, opts = {
					reset: (reset ? 1 : null),
					id: thisClass.pageId,
					common_data: $.JSON.encode(elemsCommon),
					page_data: $.JSON.encode(elems),
					meta: $.JSON.encode(thisClass.meta),
					page_blocks_data: $.JSON.encode(thisClass.pageBlocksData)
				};
				
				for (i = 0; i < thisClass.saveDataProviders.length; i++) {
					sdp = thisClass.saveDataProviders[i];
					if (sdp.id && typeof sdp.func === 'function') {
						opts[sdp.id] = $.JSON.encode(sdp.func.call(thisClass));
					}
				}
				
				$.post(thisUrl, opts, function() {
					thisClass.pageBlocksData = {};
					thisClass.pageModified = false;
					if (thisCallback && typeof(thisCallback) === "function") {
						thisCallback(true);
					}
				}).error(function() {
					if (thisCallback && typeof(thisCallback) === "function") {
						thisCallback(false);
					}
				});
			}
		};
		if( errorsChecked )
			saveAction.apply(this, [useDialog, callback, altUrl, keepOpen, reset, errorsChecked]);
		else
			thisClass.checkPageErrors(__("Warning"), saveAction, [useDialog, callback, altUrl, keepOpen, reset, true]);
	};

	/**
	 * Publish page
	 * @param {Function} successCallback
	 */
	Builder.prototype.publish = function(successCallback) {
		var thisClass = this, thisSuccessCallback = successCallback;
		thisClass.checkPageErrors(__("Warning"), function() {
			var url = thisClass.publishUrl + thisClass.pageId + "/";

			thisClass.save(true, function(success, error) {
				if (success) {
					if (typeof thisSuccessCallback === 'function') thisSuccessCallback();
				} else {
					if (!thisClass.msgDlg)
						thisClass.msgDlg = new MsgDialog();
					var errMsg = error, errType = 'error-big';
					if (typeof error === 'object' && ('title' in error) && ('description' in error)) {
						errMsg = error.description;
						error = error.title;
					} else {
						errMsg = error;
					}
					if (error === 'ftp error') {
						error = __('FTP error');
						errMsg = __("You cannot publish website if access builder being logged in as admin in cPanel. You should log in to cPanel as a customer using customer's username and password.");
						errType = 'error';
					}
					thisClass.msgDlg.setTitle(error);
					thisClass.msgDlg.setMessage(errMsg, __("Error:"), errType);
					thisClass.msgDlg.setVisible(false, true); // remove this dialog from stack to prevent duplicate
					thisClass.msgDlg.setVisible(true);
				}
			}, url, null, true, true, __("Publish"));
            if (thisClass.preloader && thisClass.maxMenuItems) {
                thisClass.preloader.setNotification(__('There are only %s pages allowed to publish in your plan').replace('%s', thisClass.maxMenuItems), __('Note') + ':');
            }
            if (thisClass.preloader && !thisClass.formsAllowed) {
                thisClass.preloader.setNotification(__('Forms are only available in premium version'), __('Note') + ':');
            }
		});
	};

	/**
	 * Preview site
	 */
	Builder.prototype.preview = function() {
		var thisClass = this;
		thisClass.checkPageErrors(__("Warning"), function() {
			var url = thisClass.previewUrl + thisClass.pageId + "/";
			if (thisClass.site.currSelLang && thisClass.site.languages.length > 0) {
				url += '?lang=' + thisClass.site.currSelLang;
			}
			thisClass.previewWindow = window.open("about:blank");
			thisClass.previewWindow.document.open();
			var l, content = '<html>' +
					'<head>' +
						'<title>' + __("loading...") + '</title>' +
						'<base href="' + thisClass.baseUrl + '" />' +
						(thisClass.favicon ? ('<link rel="' + thisClass.favicon.rel + '" href="' + thisClass.favicon.href + '" type="' + thisClass.favicon.type + '" />') : '') +
						'<link rel="stylesheet" type="text/css" href="modules/builder/js/lib/bootstrap/css/bootstrap.min.css?v=3.3.6"/>' +
					'</head>' +
					'<body>' +
					'<div class="modal" style="top: 0; margin-top: ' + ((window.innerHeight - 106) / 2 + 'px') + '">' +
						'<div class="modal-header">' +
							'<h3>' + ((l = __('loading...'))[0].toUpperCase() + l.substr(1)) + '</h3>' +
						'</div>' +
						'<div class="modal-body">' +
							'<div class="progress progress-striped active" style="margin-bottom: 5px">' +
								'<div class="bar" style="width: 100%"></div>' +
							'</div>' +
						'</div>' +
					'</div>' +
					'</body>' +
					'</html>';
			thisClass.previewWindow.document.write(content);
			thisClass.previewWindow.document.close();

			thisClass.save(false, function(success, error) {
				if (success) {
					thisClass.previewWindow.location.target = "_self";
					thisClass.previewWindow.location.href = url;
					thisClass.previewWindow.focus();
				} else {
					thisClass.previewWindow.close();
					if (!thisClass.msgDlg)
						thisClass.msgDlg = new MsgDialog();
					thisClass.msgDlg.setTitle(error);
					thisClass.msgDlg.setMessage(error, __("Error:"), "error-big");
					thisClass.msgDlg.setVisible(true);
				}
			}, null, false, false, true);
		});
	};

	/**
	 * In case of a bad page load it warns the user about loading error and/or possible loss of template.
	 *
	 * @param {string} title Title of warning dialog (if it appears).
	 * @param {function} confirmCallback Function to call if there is no error or the user wants to save anyway.
	 * @param {object} args Array of arguments to pass to the callback function.
	 */
	Builder.prototype.checkPageErrors = function(title, confirmCallback, args) {
		if( typeof(args) !== "object" ) args = [];
		var thisClass = this;
		if( thisClass.bodyInstance.getContentElements().length === 0 ) {
			if (!thisClass.staticMsgDlg)
				thisClass.staticMsgDlg = new MsgDialog(null, null, null, null, true);
			thisClass.staticMsgDlg.setTitle(title);
			thisClass.staticMsgDlg.setMessage(__("Completing this action will make your website empty. Are you sure you want to continue?") + "<br/><br/>" + __("If the page you loaded, due to some errors, was empty from the beginning, then please don't save it and try reloading the page in a few minutes."), __("You are saving an empty page."), "block");
			thisClass.staticMsgDlg.removeAllButtons();
			thisClass.staticMsgDlg.addButton(__("Yes, this is intentional"), function() {
				thisClass.staticMsgDlg.setVisible(false);
				confirmCallback.apply(thisClass, args);
			}, false, "btn-danger");
			thisClass.staticMsgDlg.addButton(__("Reload the page"), function() {
				thisClass.staticMsgDlg.setVisible(false);
				thisClass.loadPage(thisClass.pageId);
			}, true, "btn-success");
			thisClass.staticMsgDlg.addButton(__("Cancel"), function() {
				thisClass.staticMsgDlg.setVisible(false);
			}, false, "");
			thisClass.staticMsgDlg.setVisible(true);
		}
		else {
			confirmCallback.apply(thisClass, args);
		}
	};

	/**
	 * Report bug dialog
	 */
	Builder.prototype.reportBug = function() {
		var thisClass = this;
		if (!this.reportWindow) {
			this.reportWindow = new Dialog(__("Report bug"));
			this.reportWindow.setSize(400);
			this.reportWindow.setMaxBodyHeight(520);
			this.reportWindow.setContent(
				$('<form action="' + this.reportUrl + '" method="post" style="margin: 0px;">' +
					'<div class="alert alert-danger" id="fld_report_aler" style="display: none;">' +
						'<button class="close" type="button">&times;</button>' +
						'<strong>Error:</strong> All fields is required.' +
					'</div>' +
					'<div class="alert alert-info">' + __("Please write in english language only.") + '</div>' +
					'<div class="form-group">' +
						'<label for="fld_report_name">' + __("Name") + '</label>' +
						'<input type="text" class="form-control" id="fld_report_name" name="name" value="" />' +
					'</div>' +
					'<div class="form-group">' +
						'<label for="fld_report_email">' + __("E-mail") + '</label>' +
						'<input type="text" class="form-control" id="fld_report_email" name="email" value="" />' +
					'</div>' +
					'<div class="form-group">' +
						'<label for="fld_report_text">' + __("Text") + '</label>' +
						'<textarea class="form-control" style="resize: none;" rows="5" id="fld_report_text" name="text"></textarea>' +
					'</div>' +
					'<p class="help-block">' + __("All fields are required.") + '</p>' +
				'</form>'));
			var captcha = $("#fld_report_captcha_img");
			var alerter = $("#fld_report_aler");
			var alerterX = alerter.children("button");
			alerterX.bind("click", function() {
				$(this).parent().css("display", "none");
			});
			var alerterAlert = function(msg, title) {
				if (msg) {
					alerterX.detach();
					alerter.empty().append(alerterX)
						.append((title ? ('<strong>' + title + '</strong> ') : "") + msg);
					alerter.css("display", "block");
				} else {
					alerter.css("display", "none");
				}
			};
			
			this.reportWindow.addButton(__("Cancel"));
			var sendBtn = null;
			var submitted = false;
			sendBtn = this.reportWindow.addButton(__("Send"), function() {
				if (!$("#fld_report_name").val() || !$("#fld_report_email").val() || !$("#fld_report_text").val()) {
					alerterAlert(__("All fields are required."), __("Error:"));
					return;
				}
				if (!submitted) {
					submitted = true;
					sendBtn.addClass("disabled");
					sendBtn.html(__("Sending..."));
					$.post(thisClass.reportUrl, {
						name: $("#fld_report_name").val(),
						email: $("#fld_report_email").val(),
						text: $("#fld_report_text").val(),
						hoster: true,
						captcha: $("#fld_report_captcha").val()
					}, function(data) {
						if (data && "error" in data) {
							alerterAlert(data.error, __("Error:"));
							sendBtn.removeClass("disabled");
							sendBtn.html(__("Send"));
							setTimeout(function() { submitted = false; }, 1000);
							captcha.attr("src", thisClass.reportUrl + '?hoster_captcha&ts=' + (new Date()).getTime());
						} else {
							thisClass.reportWindow.hide();
							sendBtn.removeClass("disabled");
							sendBtn.html(__("Send"));
							setTimeout(function() { submitted = false; }, 1000);

							if (!thisClass.msgDlg)
								thisClass.msgDlg = new MsgDialog();
							thisClass.msgDlg.setTitle(__("Report bug"));
							thisClass.msgDlg.setMessage("", __("Message sent successfully"), "success");
							thisClass.msgDlg.setVisible(true);
						}
					}, "json").error(function() {
						alerterAlert(__("Sending failed, try again later."), __("Error:"));
						sendBtn.removeClass("disabled");
						sendBtn.html(__("Send"));
						setTimeout(function() { submitted = false; }, 1000);
						captcha.attr("src", thisClass.reportUrl + '?hoster_captcha&ts=' + (new Date()).getTime());
					});
				}
			}, true);
		} else {
			$("#fld_report_captcha_img").attr("src", thisClass.reportUrl + '?hoster_captcha&ts=' + (new Date()).getTime());
		}
		$("#fld_report_text").val("");
		$("#fld_report_captcha").val("");
		this.reportWindow.show();
	};

	/**
	 * Show backup/restore dialog
	 */
	Builder.prototype.backupRestore = function() {
		var thisClass = this, fields,
			restoreUrl = this.baseUrl + this.getLanguageByLocale(this.locale).code + '/restore_project/';
		if (!this.backupDialog) {
			this.backupDialog = new Dialog(__('Backup/Restore'), null, new Service.UIBuilder({type: 'TabbedPane', tabs: [
				{name: __('Backup'), children: [
					{type: 'VerticalLayout', spacing: 15, css: {marginTop: 15, textAlign: 'center'}, children: [
						{type: 'Label', css: {fontWeight: 'normal'},
							text: __('Download Zyro Builder template to your computer to restore it later.')},
						{type: 'Button', text: __('Download Backup'), buttonStyle: UIButton.STYLE_SUCCESS, click: function() {
							var thisSelf = this;
							this.setIcon('icon-loading');
							this.setButtonStyle(UIButton.STYLE_DEFAULT);
							this.setEnabled(false);
							thisClass.save(false, function() {
								thisSelf.setIcon(null);
								thisSelf.setButtonStyle(UIButton.STYLE_SUCCESS);
								thisSelf.setEnabled(true);
								location.href = thisClass.baseUrl + 'save_project/';
							});
						}}
					]}
				]},
				{name: __('Restore'), children: [
					{type: 'VerticalLayout', spacing: 15, css: {marginTop: 15}, children: [
						{type: 'Label', css: {fontWeight: 'normal', textAlign: 'center'}, ignore: wb_builder.autoBackupsEnable,
							text: __('Choose Zyro Builder template file to restore from. Current template will be lost.')},
						{type: 'Form', action: restoreUrl, method: 'post', enctype: 'multipart/form-data', id: 'form',
							css: {marginBottom: 0},
							init: function() {
								this.getElem().prepend('<input type="hidden" name="backup_type" value="file" />');
							},
							submit: function(fields) {
								if (fields.backupList) {
									var backup = fields.backupList.getElem().find('li.active').data('file');
									if (backup) {
										this.getElem().append('<input type="hidden" name="backup" value="' + backup + '" />');
									}
								}
							},
							children: [
								{type: 'HorizontalLayout',
									columnWeights: (wb_builder.autoBackupsEnable ? [6, 2, 4] : [12]),
									columnWeightsSmall: (wb_builder.autoBackupsEnable ? [6, 2, 4] : [12]),
									children: [
										{type: 'VerticalLayout', spacing: 15, ignore: !wb_builder.autoBackupsEnable,
											styleClass: 'wb_backup_block left',
											children: [
												{type: 'RadioBox', id: 'typeAuto', group: 'backup_type', inputValue: 'auto',
													label: __('Choose auto backup version to restore')
												},
												{type: 'CustomContainer', id: 'backupList',
													css: {overflow: 'auto', maxHeight: 200},
													init: function(def, fields) {
														this.refreshAutoBackups = function() {
															var thisSelf = this,
																url = thisClass.baseUrl + thisClass.getLanguageByLocale(thisClass.locale).code + '/get_backups?ts=' + (new Date()).getTime();
															$.get(url, function(response) {
																var cnt = '', i, backup, date, mo, d, h, m, s, t, name;
																if (!response.error) {
																	if (response.backups && response.backups.length) {
																		cnt += '<ul class="nav nav-pills nav-stacked" style="font-size: 12px;">';
																		for (i = 0; i < response.backups.length; i++) {
																			backup = response.backups[i];
																			date = new Date(backup.ts * 1000);
																			t = {
																				year: date.getFullYear(),
																				mon: ((mo = date.getMonth() + 1) < 10) ? '0' + mo : mo,
																				day: ((d = date.getDate()) < 10) ? '0' + d : d,
																				hour: ((h = date.getHours()) < 10) ? '0' + h : h,
																				minute: ((m = date.getMinutes()) < 10) ? '0' + m : m,
																				second: ((s = date.getSeconds()) < 10) ? '0' + s : s
																			};
																			name = t.year + '-' + t.mon + '-' + t.day + ' ' + t.hour + ':' + t.minute;
																			if (backup.template) name += ' - ' + backup.template;
																			cnt += '<li' + ((i === 0) ? ' class="active"' : '') + ' data-file="' + backup.file +'">' +
																				'<a href="javascript:void(0);">' + name + '</a>' +
																			'</li>';
																		}
																		cnt += '</ul>';
																	} else {
																		cnt += '<p class="no-backups">' + __('There are no auto backups.') + '</p>';
																	}
																} else {
																	cnt += '<p class="no-backups">' + response.error;
																}
																thisSelf.getElem().html(cnt);
																var lis = thisSelf.getElem().find('li');
																lis.on('click', function() {
																	lis.removeClass('active');
																	$(this).addClass('active');
																	fields.typeAuto.setValue(true);
																});
															}, 'json');
														};
													}
												}
											]
										},
										{type: 'CustomContainer', ignore: !wb_builder.autoBackupsEnable,
											css: {textAlign: 'center'},
											content: ('<strong>-' + __('OR') + '-</strong>')
										},
										{type: 'VerticalLayout', spacing: 15,
											css: {textAlign: (wb_builder.autoBackupsEnable ? 'left' : 'center')},
											children: [
												{type: 'RadioBox', id: 'typeFile', group: 'backup_type', inputValue: 'file',
													ignore: !wb_builder.autoBackupsEnable,
													label: __('Restore from file')
												},
												{type: 'FlowLayout', children: [
													{type: 'FileField', id: 'upl', name: 'pro_upl', css: {marginRight: 20, maxWidth: 200},
														click: function(def, fields) { fields.typeFile.setValue(true); }
													},
													{type: 'Button', text: __('Restore'), ignore: wb_builder.autoBackupsEnable,
														buttonStyle: UIButton.STYLE_DANGER,
														buttonType: UIButton.TYPE_SUBMIT
													}
												]}
											]
										}
									]
								}
							]
						}
					]}
				]}
			]}));
			this.backupDialog.setSize((wb_builder.autoBackupsEnable ? 592 : 400));
			fields = this.backupDialog.fields;
			this.backupDialog.addButton(__('Close'));
			if (wb_builder.autoBackupsEnable) {
				this.backupDialog.addButton(__('Restore'), function() { fields.form.trigger('submit'); }, true);
			}
		}
		fields = this.backupDialog.fields;
		if (wb_builder.autoBackupsEnable) {
			fields.typeAuto.setValue(true);
			fields.backupList.refreshAutoBackups();
		}
		this.backupDialog.show();
	};

	/**
	 * Add elements to builder
	 * @param elems array of element objects
	 * @param isCommon if true this is a common element list
	 */
	Builder.prototype.addElements = function(elems, isCommon) {
		for (var i = 0; i < elems.length; i++) {
			elems[i].isCommon = isCommon ? true : false;
			this.elemntQueue[this.elemntQueue.length] = elems[i];
		}
	};

	/**
	 * Detect page doctype
	 * @return doctype
	 */
	Builder.prototype.detectDoctype = function() {
		var re = /\s+(X?HTML)\s+([\d\.]+)\s*([^\/]+)*\//gi;
		if (typeof document.namespaces !== "undefined") {
			if (document.all[0].nodeType === 8)
				re.exec(document.all[0].nodeValue);
			else
				return null;
		} else {
			if(document.doctype !== null)
				re.exec(document.doctype.publicId);
			else
				return null;
		}
		return ((RegExp.$1) + "").toLowerCase();
	};

	/**
	 * Make event object crossbrowser
	 * @param event browser specific event object
	 * @return crossbrowser event
	 */
	Builder.prototype.normalizeEvent = function(event) {
		var e = { left: 0, top: 0, returnValue: null };
		for (var key in event) {
			if (typeof(event[key]) !== "function" && key !== "returnValue") {
				e[key] = event[key];
			}
		}
		var thisEvent = event;
		e.stopPropagation = function() {
			if (thisEvent.stopPropagation) thisEvent.stopPropagation();
		};

		var docType = this.detectDoctype();

		var sl = window.pageXOffset ? window.pageXOffset
			: ((docType === "xhtml") ? document.body.parentNode.scrollLeft
				: document.body.scrollLeft);
		var st = window.pageYOffset ? window.pageYOffset
			: ((docType === "xhtml") ? document.body.parentNode.scrollTop 
				: document.body.scrollTop);
		if (!e.pageX) e.pageX = e.clientX + sl;
		if (!e.pageY) e.pageY = e.clientY + st;
		if (!e.which && e.button) e.which = e.button;
		if (!e.target && e.srcElement) e.target = e.srcElement;
		return e;
	};

	/**
	 * Add CSS rule to the current document
	 * @param {String} name CSS selector
	 * @param {String} rule CSS rules
	 * @param {Document} doc document object
	 * @param {Number} replaceIndex index of the rule to replace
	 * @return {Number} added CSS rule index
	 */
	Builder.prototype.addCSSRule = function(name, rule, doc, replaceIndex) {
		if (!Builder.isset(replaceIndex) || isNaN(replaceIndex)) {
			replaceIndex = -1;
		}
		var docIsSet = true;
		if (!doc || typeof(doc) !== "object") {
			doc = document;
			docIsSet = false;
		}
		var sheet = null;
		if (docIsSet || !this.styleSheet) {
			sheet = doc.styleSheets[doc.styleSheets.length - 1];
		} else {
			sheet = this.styleSheet;
		}
		var rule_ = rule;
		if (typeof(rule_) === "object") {
			rule__ = $.extend({}, rule_);
			rule_ = [];
			for (var k in rule__) {
				rule_.push(k + ": " + rule__[k] + ";");
			}
			rule_ = rule_.join(" ");
		}
		var ruleList = sheet.cssRules ? sheet.cssRules : sheet.rules;
		if (replaceIndex !== -1 && (!ruleList || ruleList.length < replaceIndex)) {
			try {
				sheet.deleteRule(replaceIndex);
			} catch (ex) {}
		}
		var idx = -1;
		if (sheet.insertRule) {
			if (ruleList && replaceIndex >= ruleList.length) {
				replaceIndex = -1;
			}
			idx = sheet.insertRule(name + " { " + rule_ + " }",
				((replaceIndex !== -1) ? replaceIndex : ruleList.length));
		} else {
			if (ruleList && replaceIndex >= ruleList.length) {
				replaceIndex = -1;
			}
			idx = sheet.addRule(name, rule_,
				((replaceIndex !== -1) ? replaceIndex : -1));
		}
		//console.log("[" + idx + " => " + replaceIndex + "] " + name + " { " + rule_ + " }");
		return idx;
	};

	/**
	 * Add keyboard hot key handler
	 * @param {String} comb key combination
	 * @param {Function} func callback function
	 */
	Builder.prototype.addHotKey = function(comb, func) {
		this.hotKeysListeners[comb.toLowerCase()] = func;
	};

	/**
	 * Add action to history
	 * @param {Object} data action descriptor as object
	 * @param {Function} func history callback (callback will be called func(data, redo))
	 */
	Builder.prototype.historyAdd = function(data, func) {
		if (this.historyStack.length > this.historyPointer) {
			this.historyStack.splice(this.historyPointer, this.historyStack.length - this.historyPointer);
		}
		this.historyStack.push({ data: data, callback: func });
		this.historyPointer = this.historyStack.length;
		if (typeof(this.historyOnChange) === "function") this.historyOnChange();
	};

	/**
	 * Check if there is undo stages
	 * @return {Boolean}
	 */
	Builder.prototype.historyHasUndo = function() {
		return (this.historyPointer > 0);
	};

	/**
	 * Check if there is redo stages
	 * @return {Boolean}
	 */
	Builder.prototype.historyHasRedo = function() {
		return (this.historyPointer < (this.historyStack.length - 1));
	};

	/**
	 * Undo action at history pointer
	 */
	Builder.prototype.historyUndo = function() {
		if (this.historyPointer <= 0) return;
		var isLast = (this.historyPointer === this.historyStack.length);
		var idx = this.historyPointer - 1;
		var a = this.historyStack[idx];
		a.callback(a.data, isLast);
		this.historyPointer = idx;
		if (typeof(this.historyOnChange) === "function") this.historyOnChange();
	};

	/**
	 * Redo next action from history pointer
	 */
	Builder.prototype.historyRedo = function() {
		if (this.historyPointer >= (this.historyStack.length - 1)) return;
		var idx = this.historyPointer + 1;
		var a = this.historyStack[idx];
		a.callback(a.data, false);
		this.historyPointer = idx;
		if (typeof(this.historyOnChange) === "function") this.historyOnChange();
	};

	/**
	 * Set cookie
	 * @param {String} c_name cookie name
	 * @param {String} value cookie value (value will always be converted to string)
	 * @param {Number} exdays (optional) expires after days
	 */
	Builder.prototype.setCookie = function(c_name, value, exdays, path) {
		var exdate = new Date();
		exdate.setDate(exdate.getDate() + exdays);
		var c_value = escape(value) + ((exdays === null) ? "" : "; expires=" + exdate.toUTCString()) + (path ? "; path=" + path : "");
		document.cookie = c_name + "=" + c_value;
	};

	/**
	 * Get cookie
	 * @param {String} c_name cookie name
	 * @return {String} cookie value (value will always be converted to string)
	 */
	Builder.prototype.getCookie = function(c_name) {
		var i, x, y, ARRcookies = document.cookie.split(";");
		for (i = 0; i < ARRcookies.length; i++) {
			x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
			y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
			x = x.replace(/^\s+|\s+$/g, "");
			if (x === c_name) return unescape(y);
		}
		return null;
	};

	/**
	 * Get url from route
	 * 
	 * @param {String} route route to add to base url
	 * @returns {String} url
	 */
	Builder.prototype.getUrl = function(route) {
		var url = this.baseUrl;
		if (this.isModRewrite) {
			url += (route ? (route + "/") : "");
		} else {
			url += "?" + this.routeGetKey + "=" + route;
		}
		return url;
	};

	/**
	 * Make local system URL
	 * 
	 * @param {String} url url to make into local URL
	 * @param {Boolean} escapeBaseName
	 * @return {String} local system URL
	 */
	Builder.prototype.makeLocalUrl = function(url, escapeBaseName) {
		var _url = null;
		if (url.substr(0, 4) === "http")
			_url = url;
		else
			_url = this.userBaseUrl + (escapeBaseName ? Builder.urlEncode(this.makeRelUrl(url)) : this.makeRelUrl(url));
		return _url;
	};

	/**
	 * Make relative URL
	 * 
	 * @param {String} url url to make into relative URL
	 * @return {String} relative url
	 */
	Builder.prototype.makeRelUrl = function(url) {
		var _url = (url + "").replace(this.userBaseUrl, "");
		return _url;
	};

	/**
	 * Quot string to use in regular expression
	 * @param {String} str string to quote
	 * @param delimiter
	 * @return {String} quoted string
	 */
	Builder.prototype.pregQuote = function(str, delimiter) {
		return (str+'').replace(new RegExp('[.\\\\+*?\\[\\^\\]$(){}=!<>|:\\'+(delimiter || '')+'-]', 'g'), '\\$&');
	};

	/**
	 * Save data to virtual clipboard
	 * @param {Array} obj data to be saved
	 */
	Builder.prototype.setClipboard = function(obj) {
		this.clipboard = [];
		for (var i = 0; i < obj.length; i++) {
			this.clipboard.push($.extend(true, {}, obj[i]));
		}
	};

	/**
	 * Get data from virtual clipboard
	 * @return {Array} data from clipboard
	 */
	Builder.prototype.getClipboard = function() {
		return this.clipboard;
	};
	
	/**
	 * Get language by locale code
	 * @param {string} locale language locale code
	 * @returns {Object}
	 */
	Builder.prototype.getLanguageByLocale = function(locale) {
		if (!locale) return null;
		for (var i = 0, lang; (lang = wb_builder.availableLanguages[i]); i++) {
			if (lang.locale === locale) {
				return lang;
			}
		}
		return null;
	};
	
	/**
	 * Get language by code
	 * @param {string} code language code
	 * @returns {Object}
	 */
	Builder.prototype.getLanguageByCode = function(code) {
		if (!code) return null;
		for (var i = 0, lang; (lang = wb_builder.availableLanguages[i]); i++) {
			if (lang.code === code) {
				return lang;
			}
		}
		return null;
	};
	
	window.WB_Builder = Builder;
	
	return Builder;
});

/**
 * @param {String|Object} value value from WB_LangInputControl or similar
 * @param {String|Array} langCode desired language. If array then foreaches languages until finds the one with which the "translated" value is true.
 * @param {String} defText returned if "translated" value is not true.
 * @param {Boolean} canTakeAny allow to return any object value if "translated" value is not true.
 * @return {String} "translated" value of specified language (or defText)
 */
window.__tr = function(value, langCode, defText, canTakeAny) {
	if (!value) return value;
	var site = (window.wb_builder && window.wb_builder.site) ? window.wb_builder.site : null;
	
	var defLang = site ? site.getLastDefLang() : null,
		currLang = site ? site.currSelLang : null,
		mDefText = defText || '',
		returnValue = null;

	if (typeof value === 'string') {
		returnValue = value;
	} else if (typeof value === 'object') {
		if (langCode && langCode in value)
			returnValue = value[langCode];
		else if (currLang && currLang in value)
			returnValue = value[currLang];
		else if (defLang && defLang in value)
			returnValue = value[defLang];
		else if (canTakeAny) {
			for (var i in value) { returnValue = value[i]; break; }
		}
	}
	return returnValue ? returnValue : mDefText;
};

/**
 * Takes multilang value translation of builder language
 * @param multilang value
 */
window.__trr = function(value) {
	return __tr(value, wb_builder.getLanguageByLocale(wb_builder.locale).code, null, true);
};

// initialize JavaScript GetText
window.gt = window.Gettext ? new Gettext({"domain": "webbuilder"}) : null;

/**
 * GetText translation functionality
 * @param {string} msgid string to translate
 * @returns {string} translated string
 */
window.__ = function(msgid) {
	if (window.gt) {
		return window.gt.gettext(msgid);
	}
	return msgid;
};

window.getElementById = function(id) {
	var elems = wb_builder.bodyInstance.getContentElements();
	for (var i in elems) {
		var elem = elems[i];
		if (elem.id === 'wb_element_instance' + id) {
			return elem;
		}
	}
	return null;
};
;

/** jQuery ColorPicker plugin **/
/**
 *
 * Color picker
 * Author: Stefan Petre www.eyecon.ro
 * 
 * Dual licensed under the MIT and GPL licenses
 * 
 * @param {jQuery} $
 */
(function ($) {
	var ColorPicker = function () {
		var
			ids = {},
			inAction,
			charMin = 65,
			hexMode = false,
			visible,
			tpl = '<div class="colorpicker">'
					+ '<div class="colorpicker_color"><div><div></div></div></div>'
					+ '<div class="colorpicker_hue"><div></div></div>'
					+ '<div class="colorpicker_color1 colorpicker_new_color"></div>'
					+ '<div class="colorpicker_color1 colorpicker_current_color"></div>'
					+ '<div class="prep">#</div>'
					+ '<div class="colorpicker_hex input-group input-group-sm">'
						+ '<input class="form-control" type="text" maxlength="6" size="6" />'
						+ '<span class="input-group-btn">'
							+ '<button tabindex="-1" data-toggle="dropdown" class="more_controls btn btn-default dropdown-toggle"><span class="caret"></span></button>'
						+ '</span>'
					+ '</div>'
					+ '<div class="colorpicker_rgb">'
						+ '<div class="colorpicker_rgb_r colorpicker_field hide input-group input-group-sm">'
							+ '<span class="letter input-group-addon">R</span>'
							+ '<input class="form-control" type="text" maxlength="3" size="3" />'
							+ '<span class="buttons input-group-btn"></span>'
						+ '</div>'
						+ '<div class="colorpicker_rgb_g colorpicker_field hide input-group input-group-sm">'
							+ '<span class="letter input-group-addon">G</span>'
							+ '<input class="form-control" type="text" maxlength="3" size="3" />'
							+ '<span class="buttons input-group-btn"></span>'
						+ '</div>'
						+ '<div class="colorpicker_rgb_b colorpicker_field hide input-group input-group-sm">'
							+ '<span class="letter input-group-addon">B</span>'
							+ '<input class="form-control" type="text" maxlength="3" size="3" />'
							+ '<span class="buttons input-group-btn"></span>'
						+ '</div>'
						+ '<div class="colorpicker_hsb_h colorpicker_field hide input-group input-group-sm">'
							+ '<span class="letter input-group-addon">H</span>'
							+ '<input class="form-control" type="text" maxlength="3" size="3" />'
							+ '<span class="buttons input-group-btn"></span>'
						+ '</div>'
						+ '<div class="colorpicker_hsb_s colorpicker_field hide input-group input-group-sm">'
							+ '<span class="letter input-group-addon">S</span>'
							+ '<input class="form-control" type="text" maxlength="3" size="3" />'
							+ '<span class="buttons input-group-btn"></span>'
						+ '</div>'
						+ '<div class="colorpicker_hsb_b colorpicker_field hide input-group input-group-sm">'
							+ '<span class="letter input-group-addon">B</span>'
							+ '<input class="form-control" type="text" maxlength="3" size="3" />'
							+ '<span class="buttons input-group-btn"></span>'
						+ '</div>'
					+ '</div>'
					+ '<div class="colorpicker_buttons">'
						+ '<button class="btn btn-default btn-sm colorpicker_cancel">'+ __('Cancel') +'</button>'
						+ ' <button class="btn btn-default btn-sm colorpicker_transparent">'+ __('Transparent') +'</button>'
						+ ' <button class="btn btn-default btn-sm colorpicker_automatic hide2">'+ __('Automatic') +'</button>'
						+ ' <button class="btn btn-success btn-sm colorpicker_submit">'+ __('Apply') +'</button>'
					+ '</div>'
				+ '</div>',
			defaults = {
				eventName: "click",
				onShow: function () {},
				onBeforeShow: function(){},
				onHide: function () {},
				onChange: function () {},
				onSubmit: function () {},
				color: "ff0000",
				trans: false,
				auto: false,
				livePreview: true,
				flat: false
			},
			fillRGBFields = function  (hsb, cal) {
				var rgb = HSBToRGB(hsb);
				$(cal).data('colorpicker').fields
					.eq(1).val(rgb.r).end()
					.eq(2).val(rgb.g).end()
					.eq(3).val(rgb.b).end();
			},
			fillHSBFields = function  (hsb, cal) {
				$(cal).data('colorpicker').fields
					.eq(4).val(hsb.h).end()
					.eq(5).val(hsb.s).end()
					.eq(6).val(hsb.b).end();
			},
			fillHexFields = function (hsb, cal) {
				$(cal).data('colorpicker').fields
					.eq(0).val(HSBToHex(hsb)).end();
			},
			setSelector = function (hsb, cal) {
				$(cal).data('colorpicker').selector.css('backgroundColor', '#' + HSBToHex({h: hsb.h, s: 100, b: 100}));
				$(cal).data('colorpicker').selectorIndic.css({
					left: parseInt(150 * hsb.s/100, 10),
					top: parseInt(150 * (100-hsb.b)/100, 10)
				});
			},
			setHue = function (hsb, cal) {
				$(cal).data('colorpicker').hue.css('top', parseInt(150 - 150 * hsb.h/360, 10));
			},
			setCurrentColor = function (hsb, cal) {
				$(cal).data('colorpicker').currentColor.css('backgroundColor', '#' + HSBToHex(hsb));
			},
			setNewColor = function (hsb, cal) {
				$(cal).data('colorpicker').newColor.css('backgroundColor', '#' + HSBToHex(hsb));
			},
			keyDown = function (e) {
				var valid = false;
				if (e.ctrlKey && (e.keyCode === 67 || e.keyCode === 86)) { // allow copy/paste with Ctrl+C/Ctrl+V
					valid = true;
				}
				if ((!e.charCode && e.keyCode >= 48 && e.keyCode <= 57) ||
					(!e.charCode && e.keyCode >= 96 && e.keyCode <= 105) ||
					(e.charCode >= 48 && e.charCode <= 57)) { // validate numbers
					valid = true;
				}
				if ((e.keyCode >= 35 && e.keyCode <= 40) || e.keyCode === 45 ||
					e.keyCode === 46 || e.keyCode === 17 || e.keyCode === 13) { // validate controll keys
					valid = true;
				}
				if (hexMode) {
					if ((!e.charCode && e.keyCode >= 65 && e.keyCode <= 70) ||
						(e.charCode >= 65 && e.charCode <= 70) ||
						(e.charCode >= 97 && e.charCode <= 102)) { // validate hex
						valid = true;
					}
				}
				if (!valid) {
					return false;
				}
				var cal = $(this).parents(".colorpicker");
				if (cal.data('colorpicker').livePreview === true) {
					change.apply(this);
				}
			},
			change = function (ev) {
				var cal = $(this).parents(".colorpicker"), col;
				if (this.parentNode.className.indexOf('_hex') > 0) {
					cal.data('colorpicker').color = col = HexToHSB(fixHex(this.value));
				} else if (this.parentNode.className.indexOf('_hsb') > 0) {
					cal.data('colorpicker').color = col = fixHSB({
						h: parseInt(cal.data('colorpicker').fields.eq(4).val(), 10),
						s: parseInt(cal.data('colorpicker').fields.eq(5).val(), 10),
						b: parseInt(cal.data('colorpicker').fields.eq(6).val(), 10)
					});
				} else {
					cal.data('colorpicker').color = col = RGBToHSB(fixRGB({
						r: parseInt(cal.data('colorpicker').fields.eq(1).val(), 10),
						g: parseInt(cal.data('colorpicker').fields.eq(2).val(), 10),
						b: parseInt(cal.data('colorpicker').fields.eq(3).val(), 10)
					}));
				}
				if (ev) {
					fillRGBFields(col, cal.get(0));
					fillHexFields(col, cal.get(0));
					fillHSBFields(col, cal.get(0));
				}
				setSelector(col, cal.get(0));
				setHue(col, cal.get(0));
				setNewColor(col, cal.get(0));
				cal.data('colorpicker').onChange.apply(cal, [col, HSBToHex(col), HSBToRGB(col)]);
			},
			blur = function (ev) {
				var cal = $(this).parents(".colorpicker");
				cal.data('colorpicker').fields.parent().removeClass('colorpicker_focus');
			},
			focus = function () {
				var cal = $(this).parents(".colorpicker");
				charMin = this.parentNode.className.indexOf('_hex') > 0 ? 70 : 65;
				hexMode = (this.parentNode.className.indexOf('_hex') > 0);
				cal.data('colorpicker').fields.parent().removeClass('colorpicker_focus');
				$(this).parent().addClass('colorpicker_focus');
			},
			downIncrement = function (ev) {
				var field = $(this).parent().find('input').focus();
				var current = {
					el: $(this).parent().addClass('colorpicker_slider'),
					max: this.parentNode.className.indexOf('_hsb_h') > 0 ? 360 : (this.parentNode.className.indexOf('_hsb') > 0 ? 100 : 255),
					y: ev.pageY,
					field: field,
					val: parseInt(field.val(), 10),
					preview: $(this).parent().parent().parent().data('colorpicker').livePreview					
				};
				$(document).bind('mouseup', current, upIncrement);
				$(document).bind('mousemove', current, moveIncrement);
			},
			moveIncrement = function (ev) {
				ev.data.field.val(Math.max(0, Math.min(ev.data.max, parseInt(ev.data.val + ev.pageY - ev.data.y, 10))));
				if (ev.data.preview) {
					change.apply(ev.data.field.get(0), [true]);
				}
				return false;
			},
			upIncrement = function (ev) {
				change.apply(ev.data.field.get(0), [true]);
				ev.data.el.removeClass('colorpicker_slider').find('input').focus();
				$(document).unbind('mouseup', upIncrement);
				$(document).unbind('mousemove', moveIncrement);
				return false;
			},
			downHue = function (ev) {
				var current = {
					cal: $(this).parent(),
					y: $(this).offset().top
				};
				current.preview = current.cal.data('colorpicker').livePreview;
				$(document).bind('mouseup', current, upHue);
				$(document).bind('mousemove', current, moveHue);
			},
			moveHue = function (ev) {
				change.apply(
					ev.data.cal.data('colorpicker')
						.fields
						.eq(4)
						.val(parseInt(360*(150 - Math.max(0,Math.min(150,(ev.pageY - ev.data.y))))/150, 10))
						.get(0),
					[ev.data.preview]
				);
				return false;
			},
			upHue = function (ev) {
				fillRGBFields(ev.data.cal.data('colorpicker').color, ev.data.cal.get(0));
				fillHexFields(ev.data.cal.data('colorpicker').color, ev.data.cal.get(0));
				moveHue(ev); // update on click
				$(document).unbind('mouseup', upHue);
				$(document).unbind('mousemove', moveHue);
				return false;
			},
			downSelector = function (ev) {
				var current = {
					cal: $(this).parent(),
					pos: $(this).offset()
				};
				current.preview = current.cal.data('colorpicker').livePreview;
				$(document).bind('mouseup', current, upSelector);
				$(document).bind('mousemove', current, moveSelector);
			},
			moveSelector = function (ev) {
				change.apply(
					ev.data.cal.data('colorpicker')
						.fields
						.eq(6)
						.val(parseInt(100*(150 - Math.max(0,Math.min(150,(ev.pageY - ev.data.pos.top))))/150, 10))
						.end()
						.eq(5)
						.val(parseInt(100*(Math.max(0,Math.min(150,(ev.pageX - ev.data.pos.left))))/150, 10))
						.get(0),
					[ev.data.preview]
				);
				return false;
			},
			upSelector = function (ev) {
				fillRGBFields(ev.data.cal.data('colorpicker').color, ev.data.cal.get(0));
				fillHexFields(ev.data.cal.data('colorpicker').color, ev.data.cal.get(0));
				moveSelector(ev); // update on click
				$(document).unbind('mouseup', upSelector);
				$(document).unbind('mousemove', moveSelector);
				return false;
			},
			enterSubmit = function (ev) {
				$(this).addClass('colorpicker_focus');
			},
			leaveSubmit = function (ev) {
				$(this).removeClass('colorpicker_focus');
			},
			clickSubmit = function (ev) {
				var cal = $(this).parents(".colorpicker");
				var col = cal.data('colorpicker').color;
				cal.data('colorpicker').origColor = col;
				setCurrentColor(col, cal.get(0));
				cal.data('colorpicker').onSubmit(col, HSBToHex(col), HSBToRGB(col), cal.data('colorpicker').el);
			},
			show = function (ev) {
				var cal = $('#' + $(this).data('colorpickerId'));
				cal.data('colorpicker').onBeforeShow.apply(this, [cal.get(0)]);
				var pos = $(this).offset();
				var viewPort = getViewport();
				var top = pos.top + this.offsetHeight;
				var left = pos.left;
				if (top + 176 > viewPort.t + viewPort.h) {
					top -= this.offsetHeight + 176;
				}
				if (left + 356 > viewPort.l + viewPort.w) {
					left -= 356;
				}
				cal.css({left: left + 'px', top: top + 'px'});
				if (cal.data('colorpicker').onShow.apply(this, [cal.get(0)]) != false) {
					cal.show();
				}
				$(document).bind('mousedown', {cal: cal}, hide);
				return false;
			},
			hide = function (ev, force) {
				if (!isChildOf(ev.data.cal.get(0), ev.target, ev.data.cal.get(0))) {
					if (ev.data.cal.data('colorpicker').onHide.apply(this, [ev.data.cal.get(0)]) != false) {
						ev.data.cal.hide();
					}
					$(document).unbind('mousedown', hide);
				}
				else if (force) {
					ev.data.cal.data('colorpicker').onHide(ev.data.cal, ev);
					$(document).unbind('mousedown', hide);
				}
			},
			isChildOf = function(parentEl, el, container) {
				if (parentEl == el) {
					return true;
				}
				if (parentEl.contains) {
					return parentEl.contains(el);
				}
				if ( parentEl.compareDocumentPosition ) {
					return !!(parentEl.compareDocumentPosition(el) & 16);
				}
				var prEl = el.parentNode;
				while(prEl && prEl != container) {
					if (prEl == parentEl)
						return true;
					prEl = prEl.parentNode;
				}
				return false;
			},
			getViewport = function () {
				var m = document.compatMode == 'CSS1Compat';
				return {
					l : window.pageXOffset || (m ? document.documentElement.scrollLeft : document.body.scrollLeft),
					t : window.pageYOffset || (m ? document.documentElement.scrollTop : document.body.scrollTop),
					w : window.innerWidth || (m ? document.documentElement.clientWidth : document.body.clientWidth),
					h : window.innerHeight || (m ? document.documentElement.clientHeight : document.body.clientHeight)
				};
			},
			fixHSB = function (hsb) {
				return {
					h: Math.min(360, Math.max(0, hsb.h)),
					s: Math.min(100, Math.max(0, hsb.s)),
					b: Math.min(100, Math.max(0, hsb.b))
				};
			}, 
			fixRGB = function (rgb) {
				return {
					r: Math.min(255, Math.max(0, rgb.r)),
					g: Math.min(255, Math.max(0, rgb.g)),
					b: Math.min(255, Math.max(0, rgb.b))
				};
			},
			fixHex = function (hex) {
				var len = 6 - hex.length;
				if (len > 0) {
					var o = [];
					for (var i=0; i<len; i++) {
						o.push('0');
					}
					o.push(hex);
					hex = o.join('');
				}
				return hex;
			}, 
			HexToRGB = function (hex) {
				var hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);
				return {r: hex >> 16, g: (hex & 0x00FF00) >> 8, b: (hex & 0x0000FF)};
			},
			HexToHSB = function (hex) {
				return RGBToHSB(HexToRGB(hex));
			},
			RGBToHSB = function (rgb) {
				var hsb = {
					h: 0,
					s: 0,
					b: 0
				};
				var min = Math.min(rgb.r, rgb.g, rgb.b);
				var max = Math.max(rgb.r, rgb.g, rgb.b);
				var delta = max - min;
				hsb.b = max;
				if (max != 0) {
					
				}
				hsb.s = max != 0 ? 255 * delta / max : 0;
				if (hsb.s != 0) {
					if (rgb.r == max) {
						hsb.h = (rgb.g - rgb.b) / delta;
					} else if (rgb.g == max) {
						hsb.h = 2 + (rgb.b - rgb.r) / delta;
					} else {
						hsb.h = 4 + (rgb.r - rgb.g) / delta;
					}
				} else {
					hsb.h = -1;
				}
				hsb.h *= 60;
				if (hsb.h < 0) {
					hsb.h += 360;
				}
				hsb.s *= 100/255;
				hsb.b *= 100/255;
				return hsb;
			},
			HSBToRGB = function (hsb) {
				var rgb = {};
				var h = Math.round(hsb.h);
				var s = Math.round(hsb.s*255/100);
				var v = Math.round(hsb.b*255/100);
				if(s == 0) {
					rgb.r = rgb.g = rgb.b = v;
				} else {
					var t1 = v;
					var t2 = (255-s)*v/255;
					var t3 = (t1-t2)*(h%60)/60;
					if(h==360) h = 0;
					if(h<60) {rgb.r=t1;	rgb.b=t2; rgb.g=t2+t3}
					else if(h<120) {rgb.g=t1; rgb.b=t2;	rgb.r=t1-t3}
					else if(h<180) {rgb.g=t1; rgb.r=t2;	rgb.b=t2+t3}
					else if(h<240) {rgb.b=t1; rgb.r=t2;	rgb.g=t1-t3}
					else if(h<300) {rgb.b=t1; rgb.g=t2;	rgb.r=t2+t3}
					else if(h<360) {rgb.r=t1; rgb.g=t2;	rgb.b=t1-t3}
					else {rgb.r=0; rgb.g=0;	rgb.b=0}
				}
				return {r:Math.round(rgb.r), g:Math.round(rgb.g), b:Math.round(rgb.b)};
			},
			RGBToHex = function (rgb) {
				var hex = [
					rgb.r.toString(16),
					rgb.g.toString(16),
					rgb.b.toString(16)
				];
				$.each(hex, function (nr, val) {
					if (val.length == 1) {
						hex[nr] = '0' + val;
					}
				});
				return hex.join('');
			},
			HSBToHex = function (hsb) {
				return RGBToHex(HSBToRGB(hsb));
			},
			restoreOriginal = function () {
				var cal = $(this).parent();
				var col = cal.data('colorpicker').origColor;
				cal.data('colorpicker').color = col;
				fillRGBFields(col, cal.get(0));
				fillHexFields(col, cal.get(0));
				fillHSBFields(col, cal.get(0));
				setSelector(col, cal.get(0));
				setHue(col, cal.get(0));
				setNewColor(col, cal.get(0));
			};
		return {
			init: function (opt) {
				opt = $.extend({}, defaults, opt||{});
				if (typeof opt.color == 'string') {
					opt.color = HexToHSB(opt.color);
				} else if (opt.color.r != undefined && opt.color.g != undefined && opt.color.b != undefined) {
					opt.color = RGBToHSB(opt.color);
				} else if (opt.color.h != undefined && opt.color.s != undefined && opt.color.b != undefined) {
					opt.color = fixHSB(opt.color);
				} else {
					return this;
				}
				return this.each(function () {
					if (!$(this).data('colorpickerId')) {
						var options = $.extend({}, opt);
						options.origColor = opt.color;
						var id = 'collorpicker_' + parseInt(Math.random() * 1000);
						$(this).data('colorpickerId', id);
						var cal = $(tpl).attr('id', id);
						if (options.flat) {
							cal.appendTo(this).show();
						} else {
							cal.appendTo(document.body);
						}
						options.fields = cal
											.find('input')
												.bind('keyup', keyDown)
												.bind('change', change)
												.bind('blur', blur)
												.bind('focus', focus);
						cal
							.find('span.buttons').bind('mousedown', downIncrement).end()
							.find('>div.colorpicker_current_color').bind('click', restoreOriginal);
						options.selector = cal.find('div.colorpicker_color').bind('mousedown', downSelector);
						options.selectorIndic = options.selector.find('div div');
						options.el = this;
						options.hue = cal.find('div.colorpicker_hue div');
						cal.find('div.colorpicker_hue').bind('mousedown', downHue);
						options.newColor = cal.find('div.colorpicker_new_color');
						options.currentColor = cal.find('div.colorpicker_current_color');
						cal.data('colorpicker', options);
						cal.find('button.colorpicker_submit')
							.bind('mouseenter', enterSubmit)
							.bind('mouseleave', leaveSubmit)
							.bind('click', clickSubmit);
						cal.find('button.colorpicker_cancel')
							.bind('click', function(e) {
								e.data = {cal:cal};
								hide(e, true);
							});
						cal.find('button.colorpicker_transparent')
						.bind('click', function(e) {
							cal.data('colorpicker').onSubmit(null, 'transparent', null, cal.data('colorpicker').el);
						});
						cal.find('button.colorpicker_automatic')
							.bind('click', function(e) {
								cal.data('colorpicker').onSubmit(null, 'inherit', null, cal.data('colorpicker').el);
							});
						if (options.auto) {
							cal.find('button.colorpicker_automatic').removeClass("hide2");
						}
						cal.find('button.more_controls')
							.bind('click', function(e) {
								cal.css("height", "305px");
								cal.find(".colorpicker_field").removeClass('hide');
								$(this).attr("disabled", "disabled");
							});
						cal.find('.colorpicker_field span.buttons').each(function(i, el) {
							$(el).html('<button class="btn btn-default btn-arrow arrow-up"><span class="caret"></span></button><button class="btn btn-default btn-arrow arrow-down"><span class="caret"></span></button>');
							$(el).find("button").click(function() {
								var inc = $(this).hasClass("arrow-up") ? true : false;
								var field = $(this).parents('.colorpicker_field').find('input').focus();
								var max =  $(this).parents('.colorpicker_field').attr('class').indexOf('_hsb_h') > 0 ? 360 : ($(this).parents('.colorpicker_field').attr('class').indexOf('_hsb') > 0 ? 100 : 255);
								var val = parseInt(field.val());
								if (inc) {
									val++;
								}
								else {
									val--;
								}
								if (val < 0) {
									val = 0;
								}
								else if (val > max) {
									val = max;
								}
								field.val(val);
								field.change();
							});
						});
						fillRGBFields(options.color, cal.get(0));
						fillHSBFields(options.color, cal.get(0));
						fillHexFields(options.color, cal.get(0));
						setHue(options.color, cal.get(0));
						setSelector(options.color, cal.get(0));
						setCurrentColor(options.color, cal.get(0));
						setNewColor(options.color, cal.get(0));
						if (options.flat) {
							cal.css({
								position: 'relative',
								display: 'block'
							});
						} else {
							$(this).bind(options.eventName, show);
						}
					}
				});
			},
			showPicker: function() {
				return this.each( function () {
					if ($(this).data('colorpickerId')) {
						show.apply(this);
					}
				});
			},
			hidePicker: function() {
				return this.each( function () {
					if ($(this).data('colorpickerId')) {
						$('#' + $(this).data('colorpickerId')).hide();
					}
				});
			},
			setColor: function(col) {
				if (typeof col == 'string') {
					col = HexToHSB(col);
				} else if (col.r != undefined && col.g != undefined && col.b != undefined) {
					col = RGBToHSB(col);
				} else if (col.h != undefined && col.s != undefined && col.b != undefined) {
					col = fixHSB(col);
				} else {
					return this;
				}
				return this.each(function(){
					if ($(this).data('colorpickerId')) {
						var cal = $('#' + $(this).data('colorpickerId'));
						cal.data('colorpicker').color = col;
						cal.data('colorpicker').origColor = col;
						fillRGBFields(col, cal.get(0));
						fillHSBFields(col, cal.get(0));
						fillHexFields(col, cal.get(0));
						setHue(col, cal.get(0));
						setSelector(col, cal.get(0));
						setCurrentColor(col, cal.get(0));
						setNewColor(col, cal.get(0));
					}
				});
			}
		};
	}();
	$.fn.extend({
		ColorPicker: ColorPicker.init,
		ColorPickerHide: ColorPicker.hidePicker,
		ColorPickerShow: ColorPicker.showPicker,
		ColorPickerSetColor: ColorPicker.setColor
	});
})(jQuery);
;

/** jQuery JSON plugin **/
jQuery.JSON = {
useHasOwn : ({}.hasOwnProperty ? true : false),
pad : function(n) {
return n < 10 ? "0" + n : n;
},
m : {
"\b": '\\b',
"\t": '\\t',
"\n": '\\n',
"\f": '\\f',
"\r": '\\r',
'"' : '\\"',
"\\": '\\\\'
},
encodeString : function(s){
if (/["\\\x00-\x1f]/.test(s)) {
var m = this.m;
return '"' + s.replace(/([\x00-\x1f\\"])/g, function(a, b) {
var c = m[b];
if(c){
return c;
}
c = b.charCodeAt();
return "\\u00" +
Math.floor(c / 16).toString(16) +
(c % 16).toString(16);
}) + '"';
}
return '"' + s + '"';
},
encodeArray : function(o){
var a = ["["], b, i, l = o.length, v;
for (i = 0; i < l; i += 1) {
v = o[i];
switch (typeof v) {
case "undefined":
case "function":
case "unknown":
break;
default:
if (b) {
a.push(',');
}
a.push(v === null ? "null" : this.encode(v));
b = true;
}
}
a.push("]");
return a.join("");
},
encodeDate : function(o){
return '"' + o.getFullYear() + "-" +
pad(o.getMonth() + 1) + "-" +
pad(o.getDate()) + "T" +
pad(o.getHours()) + ":" +
pad(o.getMinutes()) + ":" +
pad(o.getSeconds()) + '"';
},
encode : function(o){
if(typeof o == "undefined" || o === null){
return "null";
}else if(o instanceof Array){
return this.encodeArray(o);
}else if(o instanceof Date){
return this.encodeDate(o);
}else if(typeof o == "string"){
return this.encodeString(o);
}else if(typeof o == "number"){
return isFinite(o) ? String(o) : "null";
}else if(typeof o == "boolean"){
return String(o);
}else {
var self = this;

var a = ["{"], b, i, v;
for (i in o) {
if(!this.useHasOwn || o.hasOwnProperty(i)) {
v = o[i];
switch (typeof v) {
case "undefined":
case "function":
case "unknown":
break;
default:
if(b){
a.push(',');
}
a.push(self.encode(i), ":",
v === null ? "null" : self.encode(v));
b = true;
}
}
}
a.push("}");
return a.join("");
}
},
decode : function(json){
return eval("(" + json + ')');
}
};;

/** jQuery jsTree **/
/*
 * jsTree 1.0-rc3
 * http://jstree.com/
 *
 * Copyright (c) 2010 Ivan Bozhanov (vakata.com)
 *
 * Licensed same as jquery - under the terms of either the MIT License or the GPL Version 2 License
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 * $Date: 2011-02-09 01:17:14 +0200 (ср, 09 февр 2011) $
 * $Revision: 236 $
 */

/*jslint browser: true, onevar: true, undef: true, bitwise: true, strict: true */
/*global window : false, clearInterval: false, clearTimeout: false, document: false, setInterval: false, setTimeout: false, jQuery: false, navigator: false, XSLTProcessor: false, DOMParser: false, XMLSerializer: false*/

"use strict";

// top wrapper to prevent multiple inclusion (is this OK?)
(function () { if(jQuery && jQuery.jstree) { return; }
	var is_ie6 = false, is_ie7 = false, is_ff2 = false;

/* 
 * jsTree core
 */
(function ($) {
	// Common functions not related to jsTree 
	// decided to move them to a `vakata` "namespace"
	$.vakata = {};
	// CSS related functions
	$.vakata.css = {
		get_css : function(rule_name, delete_flag, sheet) {
			rule_name = rule_name.toLowerCase();
			var css_rules = sheet.cssRules || sheet.rules,
				j = 0;
			do {
				if(css_rules.length && j > css_rules.length + 5) { return false; }
				if(css_rules[j].selectorText && css_rules[j].selectorText.toLowerCase() == rule_name) {
					if(delete_flag === true) {
						if(sheet.removeRule) { sheet.removeRule(j); }
						if(sheet.deleteRule) { sheet.deleteRule(j); }
						return true;
					}
					else { return css_rules[j]; }
				}
			}
			while (css_rules[++j]);
			return false;
		},
		add_css : function(rule_name, sheet) {
			if($.jstree.css.get_css(rule_name, false, sheet)) { return false; }
			if(sheet.insertRule) { sheet.insertRule(rule_name + ' { }', 0); } else { sheet.addRule(rule_name, null, 0); }
			return $.vakata.css.get_css(rule_name);
		},
		remove_css : function(rule_name, sheet) { 
			return $.vakata.css.get_css(rule_name, true, sheet); 
		},
		add_sheet : function(opts) {
			var tmp = false, is_new = true;
			if(opts.str) {
				if(opts.title) { tmp = $("style[id='" + opts.title + "-stylesheet']")[0]; }
				if(tmp) { is_new = false; }
				else {
					tmp = document.createElement("style");
					tmp.setAttribute('type',"text/css");
					if(opts.title) { tmp.setAttribute("id", opts.title + "-stylesheet"); }
				}
				if(tmp.styleSheet) {
					if(is_new) { 
						document.getElementsByTagName("head")[0].appendChild(tmp); 
						tmp.styleSheet.cssText = opts.str; 
					}
					else {
						tmp.styleSheet.cssText = tmp.styleSheet.cssText + " " + opts.str; 
					}
				}
				else {
					tmp.appendChild(document.createTextNode(opts.str));
					document.getElementsByTagName("head")[0].appendChild(tmp);
				}
				return tmp.sheet || tmp.styleSheet;
			}
			if(opts.url) {
				if(document.createStyleSheet) {
					try { tmp = document.createStyleSheet(opts.url); } catch (e) { }
				}
				else {
					tmp			= document.createElement('link');
					tmp.rel		= 'stylesheet';
					tmp.type	= 'text/css';
					tmp.media	= "all";
					tmp.href	= opts.url;
					document.getElementsByTagName("head")[0].appendChild(tmp);
					return tmp.styleSheet;
				}
			}
		}
	};

	// private variables 
	var instances = [],			// instance array (used by $.jstree.reference/create/focused)
		focused_instance = -1,	// the index in the instance array of the currently focused instance
		plugins = {},			// list of included plugins
		prepared_move = {};		// for the move_node function

	// jQuery plugin wrapper (thanks to jquery UI widget function)
	$.fn.jstree = function (settings) {
		var isMethodCall = (typeof settings == 'string'), // is this a method call like $().jstree("open_node")
			args = Array.prototype.slice.call(arguments, 1), 
			returnValue = this;

		// if a method call execute the method on all selected instances
		if(isMethodCall) {
			if(settings.substring(0, 1) == '_') { return returnValue; }
			this.each(function() {
				var instance = instances[$.data(this, "jstree_instance_id")],
					methodValue = (instance && $.isFunction(instance[settings])) ? instance[settings].apply(instance, args) : instance;
					if(typeof methodValue !== "undefined" && (settings.indexOf("is_") === 0 || (methodValue !== true && methodValue !== false))) { returnValue = methodValue; return false; }
			});
		}
		else {
			this.each(function() {
				// extend settings and allow for multiple hashes and $.data
				var instance_id = $.data(this, "jstree_instance_id"),
					a = [],
					b = settings ? $.extend({}, true, settings) : {},
					c = $(this), 
					s = false, 
					t = [];
				a = a.concat(args);
				if(c.data("jstree")) { a.push(c.data("jstree")); }
				b = a.length ? $.extend.apply(null, [true, b].concat(a)) : b;

				// if an instance already exists, destroy it first
				if(typeof instance_id !== "undefined" && instances[instance_id]) { instances[instance_id].destroy(); }
				// push a new empty object to the instances array
				instance_id = parseInt(instances.push({}),10) - 1;
				// store the jstree instance id to the container element
				$.data(this, "jstree_instance_id", instance_id);
				// clean up all plugins
				b.plugins = $.isArray(b.plugins) ? b.plugins : $.jstree.defaults.plugins.slice();
				b.plugins.unshift("core");
				// only unique plugins
				b.plugins = b.plugins.sort().join(",,").replace(/(,|^)([^,]+)(,,\2)+(,|$)/g,"$1$2$4").replace(/,,+/g,",").replace(/,$/,"").split(",");

				// extend defaults with passed data
				s = $.extend(true, {}, $.jstree.defaults, b);
				s.plugins = b.plugins;
				$.each(plugins, function (i, val) { 
					if($.inArray(i, s.plugins) === -1) { s[i] = null; delete s[i]; } 
					else { t.push(i); }
				});
				s.plugins = t;

				// push the new object to the instances array (at the same time set the default classes to the container) and init
				instances[instance_id] = new $.jstree._instance(instance_id, $(this).addClass("jstree jstree-" + instance_id), s); 
				// init all activated plugins for this instance
				$.each(instances[instance_id]._get_settings().plugins, function (i, val) { instances[instance_id].data[val] = {}; });
				$.each(instances[instance_id]._get_settings().plugins, function (i, val) { if(plugins[val]) { plugins[val].__init.apply(instances[instance_id]); } });
				// initialize the instance
				setTimeout(function() { if(instances[instance_id]) { instances[instance_id].init(); } }, 0);
			});
		}
		// return the jquery selection (or if it was a method call that returned a value - the returned value)
		return returnValue;
	};
	// object to store exposed functions and objects
	$.jstree = {
		defaults : {
			plugins : []
		},
		_focused : function () { return instances[focused_instance] || null; },
		_reference : function (needle) { 
			// get by instance id
			if(instances[needle]) { return instances[needle]; }
			// get by DOM (if still no luck - return null
			var o = $(needle); 
			if(!o.length && typeof needle === "string") { o = $("#" + needle); }
			if(!o.length) { return null; }
			return instances[o.closest(".jstree").data("jstree_instance_id")] || null; 
		},
		_instance : function (index, container, settings) { 
			// for plugins to store data in
			this.data = { core : {} };
			this.get_settings	= function () { return $.extend(true, {}, settings); };
			this._get_settings	= function () { return settings; };
			this.get_index		= function () { return index; };
			this.get_container	= function () { return container; };
			this.get_container_ul = function () { return container.children("ul:eq(0)"); };
			this._set_settings	= function (s) { 
				settings = $.extend(true, {}, settings, s);
			};
		},
		_fn : { },
		plugin : function (pname, pdata) {
			pdata = $.extend({}, {
				__init		: $.noop, 
				__destroy	: $.noop,
				_fn			: {},
				defaults	: false
			}, pdata);
			plugins[pname] = pdata;

			$.jstree.defaults[pname] = pdata.defaults;
			$.each(pdata._fn, function (i, val) {
				val.plugin		= pname;
				val.old			= $.jstree._fn[i];
				$.jstree._fn[i] = function () {
					var rslt,
						func = val,
						args = Array.prototype.slice.call(arguments),
						evnt = new $.Event("before.jstree"),
						rlbk = false;

					if(this.data.core.locked === true && i !== "unlock" && i !== "is_locked") { return; }

					// Check if function belongs to the included plugins of this instance
					do {
						if(func && func.plugin && $.inArray(func.plugin, this._get_settings().plugins) !== -1) { break; }
						func = func.old;
					} while(func);
					if(!func) { return; }

					// context and function to trigger events, then finally call the function
					if(i.indexOf("_") === 0) {
						rslt = func.apply(this, args);
					}
					else {
						rslt = this.get_container().triggerHandler(evnt, { "func" : i, "inst" : this, "args" : args, "plugin" : func.plugin });
						if(rslt === false) { return; }
						if(typeof rslt !== "undefined") { args = rslt; }

						rslt = func.apply(
							$.extend({}, this, { 
								__callback : function (data) { 
									this.get_container().triggerHandler( i + '.jstree', { "inst" : this, "args" : args, "rslt" : data, "rlbk" : rlbk });
								},
								__rollback : function () { 
									rlbk = this.get_rollback();
									return rlbk;
								},
								__call_old : function (replace_arguments) {
									return func.old.apply(this, (replace_arguments ? Array.prototype.slice.call(arguments, 1) : args ) );
								}
							}), args);
					}

					// return the result
					return rslt;
				};
				$.jstree._fn[i].old = val.old;
				$.jstree._fn[i].plugin = pname;
			});
		},
		rollback : function (rb) {
			if(rb) {
				if(!$.isArray(rb)) { rb = [ rb ]; }
				$.each(rb, function (i, val) {
					instances[val.i].set_rollback(val.h, val.d);
				});
			}
		}
	};
	// set the prototype for all instances
	$.jstree._fn = $.jstree._instance.prototype = {};

	// load the css when DOM is ready
	$(function() {
		// code is copied from jQuery ($.browser is deprecated + there is a bug in IE)
		var u = navigator.userAgent.toLowerCase(),
			v = (u.match( /.+?(?:rv|it|ra|ie)[\/: ]([\d.]+)/ ) || [0,'0'])[1],
			css_string = '' + 
				'.jstree ul, .jstree li { display:block; margin:0 0 0 0; padding:0 0 0 0; list-style-type:none; } ' + 
				'.jstree li { display:block; min-height:18px; line-height:24px; white-space:nowrap; margin-left:18px; min-width:18px; } ' + 
				'.jstree-rtl li { margin-left:0; margin-right:18px; } ' + 
				'.jstree > ul > li { margin-left:0px; } ' + 
				'.jstree-rtl > ul > li { margin-right:0px; } ' + 
				'.jstree ins { display:inline-block; text-decoration:none; width:18px; height:18px; margin:0 0 0 0; padding:0; } ' + 
				'.jstree a { display:inline-block; line-height:16px; color:black; white-space:nowrap; text-decoration:none; padding:1px 2px; margin:0; } ' + 
				'.jstree a:focus { outline: none; } ' + 
				//'.jstree a > ins { height:16px; width:16px; } ' + 
				'.jstree a > .jstree-icon { margin-right:3px; } ' + 
				'.jstree-rtl a > .jstree-icon { margin-left:3px; margin-right:0; } ' + 
				'li.jstree-open > ul { display:block; } ' + 
				'li.jstree-closed > ul { display:none; } ';
		// Correct IE 6 (does not support the > CSS selector)
		if(/msie/.test(u) && parseInt(v, 10) == 6) { 
			is_ie6 = true;

			// fix image flicker and lack of caching
			try {
				document.execCommand("BackgroundImageCache", false, true);
			} catch (err) { }

			css_string += '' + 
				'.jstree li { height:18px; margin-left:0; margin-right:0; } ' + 
				'.jstree li li { margin-left:18px; } ' + 
				'.jstree-rtl li li { margin-left:0px; margin-right:18px; } ' + 
				'li.jstree-open ul { display:block; } ' + 
				'li.jstree-closed ul { display:none !important; } ' + 
				'.jstree li a { display:inline; border-width:0 !important; padding:0px 2px !important; } ' + 
				'.jstree li a ins { height:16px; width:16px; margin-right:3px; } ' + 
				'.jstree-rtl li a ins { margin-right:0px; margin-left:3px; } ';
		}
		// Correct IE 7 (shifts anchor nodes onhover)
		if(/msie/.test(u) && parseInt(v, 10) == 7) { 
			is_ie7 = true;
			css_string += '.jstree li a { border-width:0 !important; padding:0px 2px !important; } ';
		}
		// correct ff2 lack of display:inline-block
		if(!/compatible/.test(u) && /mozilla/.test(u) && parseFloat(v, 10) < 1.9) {
			is_ff2 = true;
			css_string += '' + 
				'.jstree ins { display:-moz-inline-box; } ' + 
				'.jstree li { line-height:12px; } ' + // WHY??
				'.jstree a { display:-moz-inline-box; } ' + 
				'.jstree .jstree-no-icons .jstree-checkbox { display:-moz-inline-stack !important; } ';
				/* this shouldn't be here as it is theme specific */
		}
		// the default stylesheet
		$.vakata.css.add_sheet({ str : css_string, title : "jstree" });
	});

	// core functions (open, close, create, update, delete)
	$.jstree.plugin("core", {
		__init : function () {
			this.data.core.locked = false;
			this.data.core.to_open = this.get_settings().core.initially_open;
			this.data.core.to_load = this.get_settings().core.initially_load;
		},
		defaults : { 
			html_titles	: false,
			animation	: 500,
			initially_open : [],
			initially_load : [],
			open_parents : true,
			notify_plugins : true,
			rtl			: false,
			load_open	: false,
			strings		: {
				loading		: "Loading ...",
				new_node	: "New node",
				multiple_selection : "Multiple selection"
			}
		},
		_fn : { 
			init	: function () { 
				this.set_focus(); 
				if(this._get_settings().core.rtl) {
					this.get_container().addClass("jstree-rtl").css("direction", "rtl");
				}
				this.get_container().html("<ul><li class='jstree-last jstree-leaf'><ins>&#160;</ins><a class='jstree-loading' href='#'><ins class='jstree-icon'>&#160;</ins>" + this._get_string("loading") + "</a></li></ul>");
				this.data.core.li_height = this.get_container_ul().find("li.jstree-closed, li.jstree-leaf").eq(0).height() || 18;

				this.get_container()
					.delegate("li > ins", "click.jstree", $.proxy(function (event) {
							var trgt = $(event.target);
							// if(trgt.is("ins") && event.pageY - trgt.offset().top < this.data.core.li_height) { this.toggle_node(trgt); }
							this.toggle_node(trgt);
						}, this))
					.bind("mousedown.jstree", $.proxy(function () { 
							this.set_focus(); // This used to be setTimeout(set_focus,0) - why?
						}, this))
					.bind("dblclick.jstree", function (event) { 
						var sel;
						if(document.selection && document.selection.empty) { document.selection.empty(); }
						else {
							if(window.getSelection) {
								sel = window.getSelection();
								try { 
									sel.removeAllRanges();
									sel.collapse();
								} catch (err) { }
							}
						}
					});
				if(this._get_settings().core.notify_plugins) {
					this.get_container()
						.bind("load_node.jstree", $.proxy(function (e, data) { 
								var o = this._get_node(data.rslt.obj),
									t = this;
								if(o === -1) { o = this.get_container_ul(); }
								if(!o.length) { return; }
								o.find("li").each(function () {
									var th = $(this);
									if(th.data("jstree")) {
										$.each(th.data("jstree"), function (plugin, values) {
											if(t.data[plugin] && $.isFunction(t["_" + plugin + "_notify"])) {
												t["_" + plugin + "_notify"].call(t, th, values);
											}
										});
									}
								});
							}, this));
				}
				if(this._get_settings().core.load_open) {
					this.get_container()
						.bind("load_node.jstree", $.proxy(function (e, data) { 
								var o = this._get_node(data.rslt.obj),
									t = this;
								if(o === -1) { o = this.get_container_ul(); }
								if(!o.length) { return; }
								o.find("li.jstree-open:not(:has(ul))").each(function () {
									t.load_node(this, $.noop, $.noop);
								});
							}, this));
				}
				this.__callback();
				this.load_node(-1, function () { this.loaded(); this.reload_nodes(); });
			},
			destroy	: function () { 
				var i,
					n = this.get_index(),
					s = this._get_settings(),
					_this = this;

				$.each(s.plugins, function (i, val) {
					try { plugins[val].__destroy.apply(_this); } catch(err) { }
				});
				this.__callback();
				// set focus to another instance if this one is focused
				if(this.is_focused()) { 
					for(i in instances) { 
						if(instances.hasOwnProperty(i) && i != n) { 
							instances[i].set_focus(); 
							break; 
						} 
					}
				}
				// if no other instance found
				if(n === focused_instance) { focused_instance = -1; }
				// remove all traces of jstree in the DOM (only the ones set using jstree*) and cleans all events
				this.get_container()
					.unbind(".jstree")
					.undelegate(".jstree")
					.removeData("jstree_instance_id")
					.find("[class^='jstree']")
						.andSelf()
						.attr("class", function () { return this.className.replace(/jstree[^ ]*|$/ig,''); });
				$(document)
					.unbind(".jstree-" + n)
					.undelegate(".jstree-" + n);
				// remove the actual data
				instances[n] = null;
				delete instances[n];
			},

			_core_notify : function (n, data) {
				if(data.opened) {
					this.open_node(n, false, true);
				}
			},

			lock : function () {
				this.data.core.locked = true;
				this.get_container().children("ul").addClass("jstree-locked").css("opacity","0.7");
				this.__callback({});
			},
			unlock : function () {
				this.data.core.locked = false;
				this.get_container().children("ul").removeClass("jstree-locked").css("opacity","1");
				this.__callback({});
			},
			is_locked : function () { return this.data.core.locked; },
			save_opened : function () {
				var _this = this;
				this.data.core.to_open = [];
				this.get_container_ul().find("li.jstree-open").each(function () { 
					if(this.id) { _this.data.core.to_open.push("#" + this.id.toString().replace(/^#/,"").replace(/\\\//g,"/").replace(/\//g,"\\\/").replace(/\\\./g,".").replace(/\./g,"\\.").replace(/\:/g,"\\:")); }
				});
				this.__callback(_this.data.core.to_open);
			},
			save_loaded : function () { },
			reload_nodes : function (is_callback) {
				var _this = this,
					done = true,
					current = [],
					remaining = [];
				if(!is_callback) { 
					this.data.core.reopen = false; 
					this.data.core.refreshing = true; 
					this.data.core.to_open = $.map($.makeArray(this.data.core.to_open), function (n) { return "#" + n.toString().replace(/^#/,"").replace(/\\\//g,"/").replace(/\//g,"\\\/").replace(/\\\./g,".").replace(/\./g,"\\.").replace(/\:/g,"\\:"); });
					this.data.core.to_load = $.map($.makeArray(this.data.core.to_load), function (n) { return "#" + n.toString().replace(/^#/,"").replace(/\\\//g,"/").replace(/\//g,"\\\/").replace(/\\\./g,".").replace(/\./g,"\\.").replace(/\:/g,"\\:"); });
					if(this.data.core.to_open.length) {
						this.data.core.to_load = this.data.core.to_load.concat(this.data.core.to_open);
					}
				}
				if(this.data.core.to_load.length) {
					$.each(this.data.core.to_load, function (i, val) {
						if(val == "#") { return true; }
						if($(val).length) { current.push(val); }
						else { remaining.push(val); }
					});
					if(current.length) {
						this.data.core.to_load = remaining;
						$.each(current, function (i, val) { 
							if(!_this._is_loaded(val)) {
								_this.load_node(val, function () { _this.reload_nodes(true); }, function () { _this.reload_nodes(true); });
								done = false;
							}
						});
					}
				}
				if(this.data.core.to_open.length) {
					$.each(this.data.core.to_open, function (i, val) {
						_this.open_node(val, false, true); 
					});
				}
				if(done) { 
					// TODO: find a more elegant approach to syncronizing returning requests
					if(this.data.core.reopen) { clearTimeout(this.data.core.reopen); }
					this.data.core.reopen = setTimeout(function () { _this.__callback({}, _this); }, 50);
					this.data.core.refreshing = false;
					this.reopen();
				}
			},
			reopen : function () {
				var _this = this;
				if(this.data.core.to_open.length) {
					$.each(this.data.core.to_open, function (i, val) {
						_this.open_node(val, false, true); 
					});
				}
				this.__callback({});
			},
			refresh : function (obj) {
				var _this = this;
				this.save_opened();
				if(!obj) { obj = -1; }
				obj = this._get_node(obj);
				if(!obj) { obj = -1; }
				if(obj !== -1) { obj.children("UL").remove(); }
				else { this.get_container_ul().empty(); }
				this.load_node(obj, function () { _this.__callback({ "obj" : obj}); _this.reload_nodes(); });
			},
			// Dummy function to fire after the first load (so that there is a jstree.loaded event)
			loaded	: function () { 
				this.__callback(); 
			},
			// deal with focus
			set_focus	: function () { 
				if(this.is_focused()) { return; }
				var f = $.jstree._focused();
				if(f) { f.unset_focus(); }

				this.get_container().addClass("jstree-focused"); 
				focused_instance = this.get_index(); 
				this.__callback();
			},
			is_focused	: function () { 
				return focused_instance == this.get_index(); 
			},
			unset_focus	: function () {
				if(this.is_focused()) {
					this.get_container().removeClass("jstree-focused"); 
					focused_instance = -1; 
				}
				this.__callback();
			},

			// traverse
			_get_node		: function (obj) { 
				var $obj = $(obj, this.get_container()); 
				if($obj.is(".jstree") || obj == -1) { return -1; } 
				$obj = $obj.closest("li", this.get_container()); 
				return $obj.length ? $obj : false; 
			},
			_get_next		: function (obj, strict) {
				obj = this._get_node(obj);
				if(obj === -1) { return this.get_container().find("> ul > li:first-child"); }
				if(!obj.length) { return false; }
				if(strict) { return (obj.nextAll("li").size() > 0) ? obj.nextAll("li:eq(0)") : false; }

				if(obj.hasClass("jstree-open")) { return obj.find("li:eq(0)"); }
				else if(obj.nextAll("li").size() > 0) { return obj.nextAll("li:eq(0)"); }
				else { return obj.parentsUntil(".jstree","li").next("li").eq(0); }
			},
			_get_prev		: function (obj, strict) {
				obj = this._get_node(obj);
				if(obj === -1) { return this.get_container().find("> ul > li:last-child"); }
				if(!obj.length) { return false; }
				if(strict) { return (obj.prevAll("li").length > 0) ? obj.prevAll("li:eq(0)") : false; }

				if(obj.prev("li").length) {
					obj = obj.prev("li").eq(0);
					while(obj.hasClass("jstree-open")) { obj = obj.children("ul:eq(0)").children("li:last"); }
					return obj;
				}
				else { var o = obj.parentsUntil(".jstree","li:eq(0)"); return o.length ? o : false; }
			},
			_get_parent		: function (obj) {
				obj = this._get_node(obj);
				if(obj == -1 || !obj.length) { return false; }
				var o = obj.parentsUntil(".jstree", "li:eq(0)");
				return o.length ? o : -1;
			},
			_get_children	: function (obj) {
				obj = this._get_node(obj);
				if(obj === -1) { return this.get_container().children("ul:eq(0)").children("li"); }
				if(!obj.length) { return false; }
				return obj.children("ul:eq(0)").children("li");
			},
			get_path		: function (obj, id_mode) {
				var p = [],
					_this = this;
				obj = this._get_node(obj);
				if(obj === -1 || !obj || !obj.length) { return false; }
				obj.parentsUntil(".jstree", "li").each(function () {
					p.push( id_mode ? this.id : _this.get_text(this) );
				});
				p.reverse();
				p.push( id_mode ? obj.attr("id") : this.get_text(obj) );
				return p;
			},

			// string functions
			_get_string : function (key) {
				return this._get_settings().core.strings[key] || key;
			},

			is_open		: function (obj) { obj = this._get_node(obj); return obj && obj !== -1 && obj.hasClass("jstree-open"); },
			is_closed	: function (obj) { obj = this._get_node(obj); return obj && obj !== -1 && obj.hasClass("jstree-closed"); },
			is_leaf		: function (obj) { obj = this._get_node(obj); return obj && obj !== -1 && obj.hasClass("jstree-leaf"); },
			correct_state	: function (obj) {
				obj = this._get_node(obj);
				if(!obj || obj === -1) { return false; }
				obj.removeClass("jstree-closed jstree-open").addClass("jstree-leaf").children("ul").remove();
				this.__callback({ "obj" : obj });
			},
			// open/close
			open_node	: function (obj, callback, skip_animation) {
				obj = this._get_node(obj);
				if(!obj.length) { return false; }
				if(!obj.hasClass("jstree-closed")) { if(callback) { callback.call(); } return false; }
				var s = skip_animation || is_ie6 ? 0 : this._get_settings().core.animation,
					t = this;
				if(!this._is_loaded(obj)) {
					obj.children("a").addClass("jstree-loading");
					this.load_node(obj, function () { t.open_node(obj, callback, skip_animation); }, callback);
				}
				else {
					if(this._get_settings().core.open_parents) {
						obj.parentsUntil(".jstree",".jstree-closed").each(function () {
							t.open_node(this, false, true);
						});
					}
					if(s) { obj.children("ul").css("display","none"); }
					obj.removeClass("jstree-closed").addClass("jstree-open").children("a").removeClass("jstree-loading");
					if(s) { obj.children("ul").stop(true, true).slideDown(s, function () { this.style.display = ""; t.after_open(obj); }); }
					else { t.after_open(obj); }
					this.__callback({ "obj" : obj });
					if(callback) { callback.call(); }
				}
			},
			after_open	: function (obj) { this.__callback({ "obj" : obj }); },
			close_node	: function (obj, skip_animation) {
				obj = this._get_node(obj);
				var s = skip_animation || is_ie6 ? 0 : this._get_settings().core.animation,
					t = this;
				if(!obj.length || !obj.hasClass("jstree-open")) { return false; }
				if(s) { obj.children("ul").attr("style","display:block !important"); }
				obj.removeClass("jstree-open").addClass("jstree-closed");
				if(s) { obj.children("ul").stop(true, true).slideUp(s, function () { this.style.display = ""; t.after_close(obj); }); }
				else { t.after_close(obj); }
				this.__callback({ "obj" : obj });
			},
			after_close	: function (obj) { this.__callback({ "obj" : obj }); },
			toggle_node	: function (obj) {
				obj = this._get_node(obj);
				if(obj.hasClass("jstree-closed")) { return this.open_node(obj); }
				if(obj.hasClass("jstree-open")) { return this.close_node(obj); }
			},
			open_all	: function (obj, do_animation, original_obj) {
				obj = obj ? this._get_node(obj) : -1;
				if(!obj || obj === -1) { obj = this.get_container_ul(); }
				if(original_obj) { 
					obj = obj.find("li.jstree-closed");
				}
				else {
					original_obj = obj;
					if(obj.is(".jstree-closed")) { obj = obj.find("li.jstree-closed").andSelf(); }
					else { obj = obj.find("li.jstree-closed"); }
				}
				var _this = this;
				obj.each(function () { 
					var __this = this; 
					if(!_this._is_loaded(this)) { _this.open_node(this, function() { _this.open_all(__this, do_animation, original_obj); }, !do_animation); }
					else { _this.open_node(this, false, !do_animation); }
				});
				// so that callback is fired AFTER all nodes are open
				if(original_obj.find('li.jstree-closed').length === 0) { this.__callback({ "obj" : original_obj }); }
			},
			close_all	: function (obj, do_animation) {
				var _this = this;
				obj = obj ? this._get_node(obj) : this.get_container();
				if(!obj || obj === -1) { obj = this.get_container_ul(); }
				obj.find("li.jstree-open").andSelf().each(function () { _this.close_node(this, !do_animation); });
				this.__callback({ "obj" : obj });
			},
			clean_node	: function (obj) {
				obj = obj && obj != -1 ? $(obj) : this.get_container_ul();
				obj = obj.is("li") ? obj.find("li").andSelf() : obj.find("li");
				obj.removeClass("jstree-last")
					.filter("li:last-child").addClass("jstree-last").end()
					.filter(":has(li)")
						.not(".jstree-open").removeClass("jstree-leaf").addClass("jstree-closed");
				obj.not(".jstree-open, .jstree-closed").addClass("jstree-leaf").children("ul").remove();
				this.__callback({ "obj" : obj });
			},
			// rollback
			get_rollback : function () { 
				this.__callback();
				return { i : this.get_index(), h : this.get_container().children("ul").clone(true), d : this.data }; 
			},
			set_rollback : function (html, data) {
				this.get_container().empty().append(html);
				this.data = data;
				this.__callback();
			},
			// Dummy functions to be overwritten by any datastore plugin included
			load_node	: function (obj, s_call, e_call) { this.__callback({ "obj" : obj }); },
			_is_loaded	: function (obj) { return true; },

			// Basic operations: create
			create_node	: function (obj, position, js, callback, is_loaded) {
				obj = this._get_node(obj);
				position = typeof position === "undefined" ? "last" : position;
				var d = $("<li />"),
					s = this._get_settings().core,
					tmp;

				if(obj !== -1 && !obj.length) { return false; }
				if(!is_loaded && !this._is_loaded(obj)) { this.load_node(obj, function () { this.create_node(obj, position, js, callback, true); }); return false; }

				this.__rollback();

				if(typeof js === "string") { js = { "data" : js }; }
				if(!js) { js = {}; }
				if(js.attr) { d.attr(js.attr); }
				if(js.metadata) { d.data(js.metadata); }
				if(js.state) { d.addClass("jstree-" + js.state); }
				if(!js.data) { js.data = this._get_string("new_node"); }
				if(!$.isArray(js.data)) { tmp = js.data; js.data = []; js.data.push(tmp); }
				$.each(js.data, function (i, m) {
					tmp = $("<a />");
					if($.isFunction(m)) { m = m.call(this, js); }
					if(typeof m == "string") { tmp.attr('href','#')[ s.html_titles ? "html" : "text" ](m); }
					else {
						if(!m.attr) { m.attr = {}; }
						if(!m.attr.href) { m.attr.href = '#'; }
						tmp.attr(m.attr)[ s.html_titles ? "html" : "text" ](m.title);
						if(m.language) { tmp.addClass(m.language); }
					}
					tmp.prepend("<ins class='jstree-icon'>&#160;</ins>");
					if(!m.icon && js.icon) { m.icon = js.icon; }
					if(m.icon) { 
						if(m.icon.indexOf("/") === -1) { tmp.children("ins").addClass(m.icon); }
						else { tmp.children("ins").css("background","url('" + m.icon + "') center center no-repeat"); }
					}
					d.append(tmp);
				});
				d.prepend("<ins class='jstree-icon'>&#160;</ins>");
				if(obj === -1) {
					obj = this.get_container();
					if(position === "before") { position = "first"; }
					if(position === "after") { position = "last"; }
				}
				switch(position) {
					case "before": obj.before(d); tmp = this._get_parent(obj); break;
					case "after" : obj.after(d);  tmp = this._get_parent(obj); break;
					case "inside":
					case "first" :
						if(!obj.children("ul").length) { obj.append("<ul />"); }
						obj.children("ul").prepend(d);
						tmp = obj;
						break;
					case "last":
						if(!obj.children("ul").length) { obj.append("<ul />"); }
						obj.children("ul").append(d);
						tmp = obj;
						break;
					default:
						if(!obj.children("ul").length) { obj.append("<ul />"); }
						if(!position) { position = 0; }
						tmp = obj.children("ul").children("li").eq(position);
						if(tmp.length) { tmp.before(d); }
						else { obj.children("ul").append(d); }
						tmp = obj;
						break;
				}
				if(tmp === -1 || tmp.get(0) === this.get_container().get(0)) { tmp = -1; }
				this.clean_node(tmp);
				this.__callback({ "obj" : d, "parent" : tmp });
				if(callback) { callback.call(this, d); }
				return d;
			},
			// Basic operations: rename (deal with text)
			get_text	: function (obj) {
				obj = this._get_node(obj);
				if(!obj.length) { return false; }
				var s = this._get_settings().core.html_titles;
				obj = obj.children("a:eq(0)");
				if(s) {
					obj = obj.clone();
					obj.children("INS").remove();
					return obj.html();
				}
				else {
					obj = obj.contents().filter(function() { return this.nodeType == 3; })[0];
					return obj.nodeValue;
				}
			},
			set_text	: function (obj, val) {
				obj = this._get_node(obj);
				if(!obj.length) { return false; }
				obj = obj.children("a:eq(0)");
				if(this._get_settings().core.html_titles) {
					var tmp = obj.children("INS").clone();
					obj.html(val).prepend(tmp);
					this.__callback({ "obj" : obj, "name" : val });
					return true;
				}
				else {
					obj = obj.contents().filter(function() { return this.nodeType == 3; })[0];
					this.__callback({ "obj" : obj, "name" : val });
					return (obj.nodeValue = val);
				}
			},
			rename_node : function (obj, val) {
				obj = this._get_node(obj);
				this.__rollback();
				if(obj && obj.length && this.set_text.apply(this, Array.prototype.slice.call(arguments))) { this.__callback({ "obj" : obj, "name" : val }); }
			},
			// Basic operations: deleting nodes
			delete_node : function (obj) {
				obj = this._get_node(obj);
				if(!obj.length) { return false; }
				this.__rollback();
				var p = this._get_parent(obj), prev = $([]), t = this;
				obj.each(function () {
					prev = prev.add(t._get_prev(this));
				});
				obj = obj.detach();
				if(p !== -1 && p.find("> ul > li").length === 0) {
					p.removeClass("jstree-open jstree-closed").addClass("jstree-leaf");
				}
				this.clean_node(p);
				this.__callback({ "obj" : obj, "prev" : prev, "parent" : p });
				return obj;
			},
			prepare_move : function (o, r, pos, cb, is_cb) {
				var p = {};

				p.ot = $.jstree._reference(o) || this;
				p.o = p.ot._get_node(o);
				p.r = r === - 1 ? -1 : this._get_node(r);
				p.p = (typeof pos === "undefined" || pos === false) ? "last" : pos; // TODO: move to a setting
				if(!is_cb && prepared_move.o && prepared_move.o[0] === p.o[0] && prepared_move.r[0] === p.r[0] && prepared_move.p === p.p) {
					this.__callback(prepared_move);
					if(cb) { cb.call(this, prepared_move); }
					return;
				}
				p.ot = $.jstree._reference(p.o) || this;
				p.rt = $.jstree._reference(p.r) || this; // r === -1 ? p.ot : $.jstree._reference(p.r) || this
				if(p.r === -1 || !p.r) {
					p.cr = -1;
					switch(p.p) {
						case "first":
						case "before":
						case "inside":
							p.cp = 0; 
							break;
						case "after":
						case "last":
							p.cp = p.rt.get_container().find(" > ul > li").length; 
							break;
						default:
							p.cp = p.p;
							break;
					}
				}
				else {
					if(!/^(before|after)$/.test(p.p) && !this._is_loaded(p.r)) {
						return this.load_node(p.r, function () { this.prepare_move(o, r, pos, cb, true); });
					}
					switch(p.p) {
						case "before":
							p.cp = p.r.index();
							p.cr = p.rt._get_parent(p.r);
							break;
						case "after":
							p.cp = p.r.index() + 1;
							p.cr = p.rt._get_parent(p.r);
							break;
						case "inside":
						case "first":
							p.cp = 0;
							p.cr = p.r;
							break;
						case "last":
							p.cp = p.r.find(" > ul > li").length; 
							p.cr = p.r;
							break;
						default: 
							p.cp = p.p;
							p.cr = p.r;
							break;
					}
				}
				p.np = p.cr == -1 ? p.rt.get_container() : p.cr;
				p.op = p.ot._get_parent(p.o);
				p.cop = p.o.index();
				if(p.op === -1) { p.op = p.ot ? p.ot.get_container() : this.get_container(); }
				if(!/^(before|after)$/.test(p.p) && p.op && p.np && p.op[0] === p.np[0] && p.o.index() < p.cp) { p.cp++; }
				//if(p.p === "before" && p.op && p.np && p.op[0] === p.np[0] && p.o.index() < p.cp) { p.cp--; }
				p.or = p.np.find(" > ul > li:nth-child(" + (p.cp + 1) + ")");
				prepared_move = p;
				this.__callback(prepared_move);
				if(cb) { cb.call(this, prepared_move); }
			},
			check_move : function () {
				var obj = prepared_move, ret = true, r = obj.r === -1 ? this.get_container() : obj.r;
				if(!obj || !obj.o || obj.or[0] === obj.o[0]) { return false; }
				if(obj.op && obj.np && obj.op[0] === obj.np[0] && obj.cp - 1 === obj.o.index()) { return false; }
				obj.o.each(function () { 
					if(r.parentsUntil(".jstree", "li").andSelf().index(this) !== -1) { ret = false; return false; }
				});
				return ret;
			},
			move_node : function (obj, ref, position, is_copy, is_prepared, skip_check) {
				if(!is_prepared) { 
					return this.prepare_move(obj, ref, position, function (p) {
						this.move_node(p, false, false, is_copy, true, skip_check);
					});
				}
				if(is_copy) { 
					prepared_move.cy = true;
				}
				if(!skip_check && !this.check_move()) { return false; }

				this.__rollback();
				var o = false;
				if(is_copy) {
					o = obj.o.clone(true);
					o.find("*[id]").andSelf().each(function () {
						if(this.id) { this.id = "copy_" + this.id; }
					});
				}
				else { o = obj.o; }

				if(obj.or.length) { obj.or.before(o); }
				else { 
					if(!obj.np.children("ul").length) { $("<ul />").appendTo(obj.np); }
					obj.np.children("ul:eq(0)").append(o); 
				}

				try { 
					obj.ot.clean_node(obj.op);
					obj.rt.clean_node(obj.np);
					if(!obj.op.find("> ul > li").length) {
						obj.op.removeClass("jstree-open jstree-closed").addClass("jstree-leaf").children("ul").remove();
					}
				} catch (e) { }

				if(is_copy) { 
					prepared_move.cy = true;
					prepared_move.oc = o; 
				}
				this.__callback(prepared_move);
				return prepared_move;
			},
			_get_move : function () { return prepared_move; }
		}
	});
})(jQuery);
//*/

/* 
 * jsTree ui plugin
 * This plugins handles selecting/deselecting/hovering/dehovering nodes
 */
(function ($) {
	var scrollbar_width, e1, e2;
	$(function() {
		if (/msie/.test(navigator.userAgent.toLowerCase())) {
			e1 = $('<textarea cols="10" rows="2"></textarea>').css({ position: 'absolute', top: -1000, left: 0 }).appendTo('body');
			e2 = $('<textarea cols="10" rows="2" style="overflow: hidden;"></textarea>').css({ position: 'absolute', top: -1000, left: 0 }).appendTo('body');
			scrollbar_width = e1.width() - e2.width();
			e1.add(e2).remove();
		} 
		else {
			e1 = $('<div />').css({ width: 100, height: 100, overflow: 'auto', position: 'absolute', top: -1000, left: 0 })
					.prependTo('body').append('<div />').find('div').css({ width: '100%', height: 200 });
			scrollbar_width = 100 - e1.width();
			e1.parent().remove();
		}
	});
	$.jstree.plugin("ui", {
		__init : function () { 
			this.data.ui.selected = $(); 
			this.data.ui.last_selected = false; 
			this.data.ui.hovered = null;
			this.data.ui.to_select = this.get_settings().ui.initially_select;

			this.get_container()
				.delegate("a", "click.jstree", $.proxy(function (event) {
						event.preventDefault();
						event.currentTarget.blur();
						if(!$(event.currentTarget).hasClass("jstree-loading")) {
							this.select_node(event.currentTarget, true, event);
						}
					}, this))
				.delegate("a", "mouseenter.jstree", $.proxy(function (event) {
						if(!$(event.currentTarget).hasClass("jstree-loading")) {
							this.hover_node(event.target);
						}
					}, this))
				.delegate("a", "mouseleave.jstree", $.proxy(function (event) {
						if(!$(event.currentTarget).hasClass("jstree-loading")) {
							this.dehover_node(event.target);
						}
					}, this))
				.bind("reopen.jstree", $.proxy(function () { 
						this.reselect();
					}, this))
				.bind("get_rollback.jstree", $.proxy(function () { 
						this.dehover_node();
						this.save_selected();
					}, this))
				.bind("set_rollback.jstree", $.proxy(function () { 
						this.reselect();
					}, this))
				.bind("close_node.jstree", $.proxy(function (event, data) { 
						var s = this._get_settings().ui,
							obj = this._get_node(data.rslt.obj),
							clk = (obj && obj.length) ? obj.children("ul").find("a.jstree-clicked") : $(),
							_this = this;
						if(s.selected_parent_close === false || !clk.length) { return; }
						clk.each(function () { 
							_this.deselect_node(this);
							if(s.selected_parent_close === "select_parent") { _this.select_node(obj); }
						});
					}, this))
				.bind("delete_node.jstree", $.proxy(function (event, data) { 
						var s = this._get_settings().ui.select_prev_on_delete,
							obj = this._get_node(data.rslt.obj),
							clk = (obj && obj.length) ? obj.find("a.jstree-clicked") : [],
							_this = this;
						clk.each(function () { _this.deselect_node(this); });
						if(s && clk.length) { 
							data.rslt.prev.each(function () { 
								if(this.parentNode) { _this.select_node(this); return false; /* if return false is removed all prev nodes will be selected */}
							});
						}
					}, this))
				.bind("move_node.jstree", $.proxy(function (event, data) { 
						if(data.rslt.cy) { 
							data.rslt.oc.find("a.jstree-clicked").removeClass("jstree-clicked");
						}
					}, this));
		},
		defaults : {
			select_limit : -1, // 0, 1, 2 ... or -1 for unlimited
			select_multiple_modifier : "ctrl", // on, or ctrl, shift, alt
			select_range_modifier : "shift",
			selected_parent_close : "select_parent", // false, "deselect", "select_parent"
			selected_parent_open : true,
			select_prev_on_delete : true,
			disable_selecting_children : false,
			initially_select : []
		},
		_fn : { 
			_get_node : function (obj, allow_multiple) {
				if(typeof obj === "undefined" || obj === null) { return allow_multiple ? this.data.ui.selected : this.data.ui.last_selected; }
				var $obj = $(obj, this.get_container()); 
				if($obj.is(".jstree") || obj == -1) { return -1; } 
				$obj = $obj.closest("li", this.get_container()); 
				return $obj.length ? $obj : false; 
			},
			_ui_notify : function (n, data) {
				if(data.selected) {
					this.select_node(n, false);
				}
			},
			save_selected : function () {
				var _this = this;
				this.data.ui.to_select = [];
				this.data.ui.selected.each(function () { if(this.id) { _this.data.ui.to_select.push("#" + this.id.toString().replace(/^#/,"").replace(/\\\//g,"/").replace(/\//g,"\\\/").replace(/\\\./g,".").replace(/\./g,"\\.").replace(/\:/g,"\\:")); } });
				this.__callback(this.data.ui.to_select);
			},
			reselect : function () {
				var _this = this,
					s = this.data.ui.to_select;
				s = $.map($.makeArray(s), function (n) { return "#" + n.toString().replace(/^#/,"").replace(/\\\//g,"/").replace(/\//g,"\\\/").replace(/\\\./g,".").replace(/\./g,"\\.").replace(/\:/g,"\\:"); });
				// this.deselect_all(); WHY deselect, breaks plugin state notifier?
				$.each(s, function (i, val) { if(val && val !== "#") { _this.select_node(val); } });
				this.data.ui.selected = this.data.ui.selected.filter(function () { return this.parentNode; });
				this.__callback();
			},
			refresh : function (obj) {
				this.save_selected();
				return this.__call_old();
			},
			hover_node : function (obj) {
				obj = this._get_node(obj);
				if(!obj.length) { return false; }
				//if(this.data.ui.hovered && obj.get(0) === this.data.ui.hovered.get(0)) { return; }
				if(!obj.hasClass("jstree-hovered")) { this.dehover_node(); }
				this.data.ui.hovered = obj.children("a").addClass("jstree-hovered").parent();
				this._fix_scroll(obj);
				this.__callback({ "obj" : obj });
			},
			dehover_node : function () {
				var obj = this.data.ui.hovered, p;
				if(!obj || !obj.length) { return false; }
				p = obj.children("a").removeClass("jstree-hovered").parent();
				if(this.data.ui.hovered[0] === p[0]) { this.data.ui.hovered = null; }
				this.__callback({ "obj" : obj });
			},
			select_node : function (obj, check, e) {
				obj = this._get_node(obj);
				if(obj == -1 || !obj || !obj.length) { return false; }
				var s = this._get_settings().ui,
					is_multiple = (s.select_multiple_modifier == "on" || (s.select_multiple_modifier !== false && e && e[s.select_multiple_modifier + "Key"])),
					is_range = (s.select_range_modifier !== false && e && e[s.select_range_modifier + "Key"] && this.data.ui.last_selected && this.data.ui.last_selected[0] !== obj[0] && this.data.ui.last_selected.parent()[0] === obj.parent()[0]),
					is_selected = this.is_selected(obj),
					proceed = true,
					t = this;
				if(check) {
					if(s.disable_selecting_children && is_multiple && 
						(
							(obj.parentsUntil(".jstree","li").children("a.jstree-clicked").length) ||
							(obj.children("ul").find("a.jstree-clicked:eq(0)").length)
						)
					) {
						return false;
					}
					proceed = false;
					switch(!0) {
						case (is_range):
							this.data.ui.last_selected.addClass("jstree-last-selected");
							obj = obj[ obj.index() < this.data.ui.last_selected.index() ? "nextUntil" : "prevUntil" ](".jstree-last-selected").andSelf();
							if(s.select_limit == -1 || obj.length < s.select_limit) {
								this.data.ui.last_selected.removeClass("jstree-last-selected");
								this.data.ui.selected.each(function () {
									if(this !== t.data.ui.last_selected[0]) { t.deselect_node(this); }
								});
								is_selected = false;
								proceed = true;
							}
							else {
								proceed = false;
							}
							break;
						case (is_selected && !is_multiple): 
							this.deselect_all();
							is_selected = false;
							proceed = true;
							break;
						case (!is_selected && !is_multiple): 
							if(s.select_limit == -1 || s.select_limit > 0) {
								this.deselect_all();
								proceed = true;
							}
							break;
						case (is_selected && is_multiple): 
							this.deselect_node(obj);
							break;
						case (!is_selected && is_multiple): 
							if(s.select_limit == -1 || this.data.ui.selected.length + 1 <= s.select_limit) { 
								proceed = true;
							}
							break;
					}
				}
				if(proceed && !is_selected) {
					if(!is_range) { this.data.ui.last_selected = obj; }
					obj.children("a").addClass("jstree-clicked");
					if(s.selected_parent_open) {
						obj.parents(".jstree-closed").each(function () { t.open_node(this, false, true); });
					}
					this.data.ui.selected = this.data.ui.selected.add(obj);
					this._fix_scroll(obj.eq(0));
					this.__callback({ "obj" : obj, "e" : e });
				}
			},
			_fix_scroll : function (obj) {
				var c = this.get_container()[0], t;
				if(c.scrollHeight > c.offsetHeight) {
					obj = this._get_node(obj);
					if(!obj || obj === -1 || !obj.length || !obj.is(":visible")) { return; }
					t = obj.offset().top - this.get_container().offset().top;
					if(t < 0) { 
						c.scrollTop = c.scrollTop + t - 1; 
					}
					if(t + this.data.core.li_height + (c.scrollWidth > c.offsetWidth ? scrollbar_width : 0) > c.offsetHeight) { 
						c.scrollTop = c.scrollTop + (t - c.offsetHeight + this.data.core.li_height + 1 + (c.scrollWidth > c.offsetWidth ? scrollbar_width : 0)); 
					}
				}
			},
			deselect_node : function (obj) {
				obj = this._get_node(obj);
				if(!obj.length) { return false; }
				if(this.is_selected(obj)) {
					obj.children("a").removeClass("jstree-clicked");
					this.data.ui.selected = this.data.ui.selected.not(obj);
					if(this.data.ui.last_selected.get(0) === obj.get(0)) { this.data.ui.last_selected = this.data.ui.selected.eq(0); }
					this.__callback({ "obj" : obj });
				}
			},
			toggle_select : function (obj) {
				obj = this._get_node(obj);
				if(!obj.length) { return false; }
				if(this.is_selected(obj)) { this.deselect_node(obj); }
				else { this.select_node(obj); }
			},
			is_selected : function (obj) { return this.data.ui.selected.index(this._get_node(obj)) >= 0; },
			get_selected : function (context) { 
				return context ? $(context).find("a.jstree-clicked").parent() : this.data.ui.selected; 
			},
			deselect_all : function (context) {
				var ret = context ? $(context).find("a.jstree-clicked").parent() : this.get_container().find("a.jstree-clicked").parent();
				ret.children("a.jstree-clicked").removeClass("jstree-clicked");
				this.data.ui.selected = $([]);
				this.data.ui.last_selected = false;
				this.__callback({ "obj" : ret });
			}
		}
	});
	// include the selection plugin by default
	$.jstree.defaults.plugins.push("ui");
})(jQuery);
//*/

/* 
 * jsTree CRRM plugin
 * Handles creating/renaming/removing/moving nodes by user interaction.
 */
(function ($) {
	$.jstree.plugin("crrm", { 
		__init : function () {
			this.get_container()
				.bind("move_node.jstree", $.proxy(function (e, data) {
					if(this._get_settings().crrm.move.open_onmove) {
						var t = this;
						data.rslt.np.parentsUntil(".jstree").andSelf().filter(".jstree-closed").each(function () {
							t.open_node(this, false, true);
						});
					}
				}, this));
		},
		defaults : {
			input_width_limit : 200,
			move : {
				always_copy			: false, // false, true or "multitree"
				open_onmove			: true,
				default_position	: "last",
				check_move			: function (m) { return true; }
			}
		},
		_fn : {
			_show_input : function (obj, callback) {
				obj = this._get_node(obj);
				var rtl = this._get_settings().core.rtl,
					w = this._get_settings().crrm.input_width_limit,
					w1 = obj.children("ins").width(),
					w2 = obj.find("> a:visible > ins").width() * obj.find("> a:visible > ins").length,
					t = this.get_text(obj),
					h1 = $("<div />", { css : { "position" : "absolute", "top" : "-200px", "left" : (rtl ? "0px" : "-1000px"), "visibility" : "hidden" } }).appendTo("body"),
					h2 = obj.css("position","relative").append(
					$("<input />", { 
						"value" : t,
						"class" : "jstree-rename-input",
						// "size" : t.length,
						"css" : {
							"padding" : "0",
							"border" : "1px solid silver",
							"position" : "absolute",
							"left"  : (rtl ? "auto" : (w1 + w2 + 4) + "px"),
							"right" : (rtl ? (w1 + w2 + 4) + "px" : "auto"),
							"top" : "0px",
							"height" : (this.data.core.li_height - 2) + "px",
							"lineHeight" : (this.data.core.li_height - 2) + "px",
							"width" : "150px" // will be set a bit further down
						},
						"blur" : $.proxy(function () {
							var i = obj.children(".jstree-rename-input"),
								v = i.val();
							if(v === "") { v = t; }
							h1.remove();
							i.remove(); // rollback purposes
							this.set_text(obj,t); // rollback purposes
							this.rename_node(obj, v);
							callback.call(this, obj, v, t);
							obj.css("position","");
						}, this),
						"keyup" : function (event) {
							var key = event.keyCode || event.which;
							if(key == 27) { this.value = t; this.blur(); return; }
							else if(key == 13) { this.blur(); return; }
							else {
								h2.width(Math.min(h1.text("pW" + this.value).width(),w));
							}
						},
						"keypress" : function(event) {
							var key = event.keyCode || event.which;
							if(key == 13) { return false; }
						}
					})
				).children(".jstree-rename-input"); 
				this.set_text(obj, "");
				h1.css({
						fontFamily		: h2.css('fontFamily')		|| '',
						fontSize		: h2.css('fontSize')		|| '',
						fontWeight		: h2.css('fontWeight')		|| '',
						fontStyle		: h2.css('fontStyle')		|| '',
						fontStretch		: h2.css('fontStretch')		|| '',
						fontVariant		: h2.css('fontVariant')		|| '',
						letterSpacing	: h2.css('letterSpacing')	|| '',
						wordSpacing		: h2.css('wordSpacing')		|| ''
				});
				h2.width(Math.min(h1.text("pW" + h2[0].value).width(),w))[0].select();
			},
			rename : function (obj) {
				obj = this._get_node(obj);
				this.__rollback();
				var f = this.__callback;
				this._show_input(obj, function (obj, new_name, old_name) { 
					f.call(this, { "obj" : obj, "new_name" : new_name, "old_name" : old_name });
				});
			},
			create : function (obj, position, js, callback, skip_rename) {
				var t, _this = this;
				obj = this._get_node(obj);
				if(!obj) { obj = -1; }
				this.__rollback();
				t = this.create_node(obj, position, js, function (t) {
					var p = this._get_parent(t),
						pos = $(t).index();
					if(callback) { callback.call(this, t); }
					if(p.length && p.hasClass("jstree-closed")) { this.open_node(p, false, true); }
					if(!skip_rename) { 
						this._show_input(t, function (obj, new_name, old_name) { 
							_this.__callback({ "obj" : obj, "name" : new_name, "parent" : p, "position" : pos });
						});
					}
					else { _this.__callback({ "obj" : t, "name" : this.get_text(t), "parent" : p, "position" : pos }); }
				});
				return t;
			},
			remove : function (obj) {
				obj = this._get_node(obj, true);
				var p = this._get_parent(obj), prev = this._get_prev(obj);
				this.__rollback();
				obj = this.delete_node(obj);
				if(obj !== false) { this.__callback({ "obj" : obj, "prev" : prev, "parent" : p }); }
			},
			check_move : function () {
				if(!this.__call_old()) { return false; }
				var s = this._get_settings().crrm.move;
				if(!s.check_move.call(this, this._get_move())) { return false; }
				return true;
			},
			move_node : function (obj, ref, position, is_copy, is_prepared, skip_check) {
				var s = this._get_settings().crrm.move;
				if(!is_prepared) { 
					if(typeof position === "undefined") { position = s.default_position; }
					if(position === "inside" && !s.default_position.match(/^(before|after)$/)) { position = s.default_position; }
					return this.__call_old(true, obj, ref, position, is_copy, false, skip_check);
				}
				// if the move is already prepared
				if(s.always_copy === true || (s.always_copy === "multitree" && obj.rt.get_index() !== obj.ot.get_index() )) {
					is_copy = true;
				}
				this.__call_old(true, obj, ref, position, is_copy, true, skip_check);
			},

			cut : function (obj) {
				obj = this._get_node(obj, true);
				if(!obj || !obj.length) { return false; }
				this.data.crrm.cp_nodes = false;
				this.data.crrm.ct_nodes = obj;
				this.__callback({ "obj" : obj });
			},
			copy : function (obj) {
				obj = this._get_node(obj, true);
				if(!obj || !obj.length) { return false; }
				this.data.crrm.ct_nodes = false;
				this.data.crrm.cp_nodes = obj;
				this.__callback({ "obj" : obj });
			},
			paste : function (obj) { 
				obj = this._get_node(obj);
				if(!obj || !obj.length) { return false; }
				var nodes = this.data.crrm.ct_nodes ? this.data.crrm.ct_nodes : this.data.crrm.cp_nodes;
				if(!this.data.crrm.ct_nodes && !this.data.crrm.cp_nodes) { return false; }
				if(this.data.crrm.ct_nodes) { this.move_node(this.data.crrm.ct_nodes, obj); this.data.crrm.ct_nodes = false; }
				if(this.data.crrm.cp_nodes) { this.move_node(this.data.crrm.cp_nodes, obj, false, true); }
				this.__callback({ "obj" : obj, "nodes" : nodes });
			}
		}
	});
	// include the crr plugin by default
	// $.jstree.defaults.plugins.push("crrm");
})(jQuery);
//*/

/* 
 * jsTree themes plugin
 * Handles loading and setting themes, as well as detecting path to themes, etc.
 */
(function ($) {
	var themes_loaded = [];
	// this variable stores the path to the themes folder - if left as false - it will be autodetected
	$.jstree._themes = false;
	$.jstree.plugin("themes", {
		__init : function () { 
			this.get_container()
				.bind("init.jstree", $.proxy(function () {
						var s = this._get_settings().themes;
						this.data.themes.dots = s.dots; 
						this.data.themes.icons = s.icons; 
						this.set_theme(s.theme, s.url);
					}, this))
				.bind("loaded.jstree", $.proxy(function () {
						// bound here too, as simple HTML tree's won't honor dots & icons otherwise
						if(!this.data.themes.dots) { this.hide_dots(); }
						else { this.show_dots(); }
						if(!this.data.themes.icons) { this.hide_icons(); }
						else { this.show_icons(); }
					}, this));
		},
		defaults : { 
			theme : "default", 
			url : false,
			dots : true,
			icons : true
		},
		_fn : {
			set_theme : function (theme_name, theme_url) {
				if(!theme_name) { return false; }
				if(!theme_url) { theme_url = $.jstree._themes + theme_name + '/style.css'; }
				if($.inArray(theme_url, themes_loaded) == -1) {
					$.vakata.css.add_sheet({ "url" : theme_url });
					themes_loaded.push(theme_url);
				}
				if(this.data.themes.theme != theme_name) {
					this.get_container().removeClass('jstree-' + this.data.themes.theme);
					this.data.themes.theme = theme_name;
				}
				this.get_container().addClass('jstree-' + theme_name);
				if(!this.data.themes.dots) { this.hide_dots(); }
				else { this.show_dots(); }
				if(!this.data.themes.icons) { this.hide_icons(); }
				else { this.show_icons(); }
				this.__callback();
			},
			get_theme	: function () { return this.data.themes.theme; },

			show_dots	: function () { this.data.themes.dots = true; this.get_container().children("ul").removeClass("jstree-no-dots"); },
			hide_dots	: function () { this.data.themes.dots = false; this.get_container().children("ul").addClass("jstree-no-dots"); },
			toggle_dots	: function () { if(this.data.themes.dots) { this.hide_dots(); } else { this.show_dots(); } },

			show_icons	: function () { this.data.themes.icons = true; this.get_container().children("ul").removeClass("jstree-no-icons"); },
			hide_icons	: function () { this.data.themes.icons = false; this.get_container().children("ul").addClass("jstree-no-icons"); },
			toggle_icons: function () { if(this.data.themes.icons) { this.hide_icons(); } else { this.show_icons(); } }
		}
	});
	// autodetect themes path
	$(function () {
		if($.jstree._themes === false) {
			$("script").each(function () { 
				if(this.src.toString().match(/jquery\.jstree[^\/]*?\.js(\?.*)?$/)) { 
					$.jstree._themes = this.src.toString().replace(/jquery\.jstree[^\/]*?\.js(\?.*)?$/, "") + 'themes/'; 
					return false; 
				}
			});
		}
		if($.jstree._themes === false) { $.jstree._themes = "themes/"; }
	});
	// include the themes plugin by default
	$.jstree.defaults.plugins.push("themes");
})(jQuery);
//*/

/*
 * jsTree hotkeys plugin
 * Enables keyboard navigation for all tree instances
 * Depends on the jstree ui & jquery hotkeys plugins
 */
(function ($) {
	var bound = [];
	function exec(i, event) {
		var f = $.jstree._focused(), tmp;
		if(f && f.data && f.data.hotkeys && f.data.hotkeys.enabled) { 
			tmp = f._get_settings().hotkeys[i];
			if(tmp) { return tmp.call(f, event); }
		}
	}
	$.jstree.plugin("hotkeys", {
		__init : function () {
			if(typeof $.hotkeys === "undefined") { throw "jsTree hotkeys: jQuery hotkeys plugin not included."; }
			if(!this.data.ui) { throw "jsTree hotkeys: jsTree UI plugin not included."; }
			$.each(this._get_settings().hotkeys, function (i, v) {
				if(v !== false && $.inArray(i, bound) == -1) {
					$(document).bind("keydown", i, function (event) { return exec(i, event); });
					bound.push(i);
				}
			});
			this.get_container()
				.bind("lock.jstree", $.proxy(function () {
						if(this.data.hotkeys.enabled) { this.data.hotkeys.enabled = false; this.data.hotkeys.revert = true; }
					}, this))
				.bind("unlock.jstree", $.proxy(function () {
						if(this.data.hotkeys.revert) { this.data.hotkeys.enabled = true; }
					}, this));
			this.enable_hotkeys();
		},
		defaults : {
			"up" : function () { 
				var o = this.data.ui.hovered || this.data.ui.last_selected || -1;
				this.hover_node(this._get_prev(o));
				return false; 
			},
			"ctrl+up" : function () { 
				var o = this.data.ui.hovered || this.data.ui.last_selected || -1;
				this.hover_node(this._get_prev(o));
				return false; 
			},
			"shift+up" : function () { 
				var o = this.data.ui.hovered || this.data.ui.last_selected || -1;
				this.hover_node(this._get_prev(o));
				return false; 
			},
			"down" : function () { 
				var o = this.data.ui.hovered || this.data.ui.last_selected || -1;
				this.hover_node(this._get_next(o));
				return false;
			},
			"ctrl+down" : function () { 
				var o = this.data.ui.hovered || this.data.ui.last_selected || -1;
				this.hover_node(this._get_next(o));
				return false;
			},
			"shift+down" : function () { 
				var o = this.data.ui.hovered || this.data.ui.last_selected || -1;
				this.hover_node(this._get_next(o));
				return false;
			},
			"left" : function () { 
				var o = this.data.ui.hovered || this.data.ui.last_selected;
				if(o) {
					if(o.hasClass("jstree-open")) { this.close_node(o); }
					else { this.hover_node(this._get_prev(o)); }
				}
				return false;
			},
			"ctrl+left" : function () { 
				var o = this.data.ui.hovered || this.data.ui.last_selected;
				if(o) {
					if(o.hasClass("jstree-open")) { this.close_node(o); }
					else { this.hover_node(this._get_prev(o)); }
				}
				return false;
			},
			"shift+left" : function () { 
				var o = this.data.ui.hovered || this.data.ui.last_selected;
				if(o) {
					if(o.hasClass("jstree-open")) { this.close_node(o); }
					else { this.hover_node(this._get_prev(o)); }
				}
				return false;
			},
			"right" : function () { 
				var o = this.data.ui.hovered || this.data.ui.last_selected;
				if(o && o.length) {
					if(o.hasClass("jstree-closed")) { this.open_node(o); }
					else { this.hover_node(this._get_next(o)); }
				}
				return false;
			},
			"ctrl+right" : function () { 
				var o = this.data.ui.hovered || this.data.ui.last_selected;
				if(o && o.length) {
					if(o.hasClass("jstree-closed")) { this.open_node(o); }
					else { this.hover_node(this._get_next(o)); }
				}
				return false;
			},
			"shift+right" : function () { 
				var o = this.data.ui.hovered || this.data.ui.last_selected;
				if(o && o.length) {
					if(o.hasClass("jstree-closed")) { this.open_node(o); }
					else { this.hover_node(this._get_next(o)); }
				}
				return false;
			},
			"space" : function () { 
				if(this.data.ui.hovered) { this.data.ui.hovered.children("a:eq(0)").click(); } 
				return false; 
			},
			"ctrl+space" : function (event) { 
				event.type = "click";
				if(this.data.ui.hovered) { this.data.ui.hovered.children("a:eq(0)").trigger(event); } 
				return false; 
			},
			"shift+space" : function (event) { 
				event.type = "click";
				if(this.data.ui.hovered) { this.data.ui.hovered.children("a:eq(0)").trigger(event); } 
				return false; 
			},
			"f2" : function () { this.rename(this.data.ui.hovered || this.data.ui.last_selected); },
			"del" : function () { this.remove(this.data.ui.hovered || this._get_node(null)); }
		},
		_fn : {
			enable_hotkeys : function () {
				this.data.hotkeys.enabled = true;
			},
			disable_hotkeys : function () {
				this.data.hotkeys.enabled = false;
			}
		}
	});
})(jQuery);
//*/

/* 
 * jsTree JSON plugin
 * The JSON data store. Datastores are build by overriding the `load_node` and `_is_loaded` functions.
 */
(function ($) {
	$.jstree.plugin("json_data", {
		__init : function() {
			var s = this._get_settings().json_data;
			if(s.progressive_unload) {
				this.get_container().bind("after_close.jstree", function (e, data) {
					data.rslt.obj.children("ul").remove();
				});
			}
		},
		defaults : { 
			// `data` can be a function:
			//  * accepts two arguments - node being loaded and a callback to pass the result to
			//  * will be executed in the current tree's scope & ajax won't be supported
			data : false, 
			ajax : false,
			correct_state : true,
			progressive_render : false,
			progressive_unload : false
		},
		_fn : {
			load_node : function (obj, s_call, e_call) { var _this = this; this.load_node_json(obj, function () { _this.__callback({ "obj" : _this._get_node(obj) }); s_call.call(this); }, e_call); },
			_is_loaded : function (obj) { 
				var s = this._get_settings().json_data;
				obj = this._get_node(obj); 
				return obj == -1 || !obj || (!s.ajax && !s.progressive_render && !$.isFunction(s.data)) || obj.is(".jstree-open, .jstree-leaf") || obj.children("ul").children("li").length > 0;
			},
			refresh : function (obj) {
				obj = this._get_node(obj);
				var s = this._get_settings().json_data;
				if(obj && obj !== -1 && s.progressive_unload && ($.isFunction(s.data) || !!s.ajax)) {
					obj.removeData("jstree_children");
				}
				return this.__call_old();
			},
			load_node_json : function (obj, s_call, e_call) {
				var s = this.get_settings().json_data, d,
					error_func = function () {},
					success_func = function () {};
				obj = this._get_node(obj);

				if(obj && obj !== -1 && (s.progressive_render || s.progressive_unload) && !obj.is(".jstree-open, .jstree-leaf") && obj.children("ul").children("li").length === 0 && obj.data("jstree_children")) {
					d = this._parse_json(obj.data("jstree_children"), obj);
					if(d) {
						obj.append(d);
						if(!s.progressive_unload) { obj.removeData("jstree_children"); }
					}
					this.clean_node(obj);
					if(s_call) { s_call.call(this); }
					return;
				}

				if(obj && obj !== -1) {
					if(obj.data("jstree_is_loading")) { return; }
					else { obj.data("jstree_is_loading",true); }
				}
				switch(!0) {
					case (!s.data && !s.ajax): throw "Neither data nor ajax settings supplied.";
					// function option added here for easier model integration (also supporting async - see callback)
					case ($.isFunction(s.data)):
						s.data.call(this, obj, $.proxy(function (d) {
							d = this._parse_json(d, obj);
							if(!d) { 
								if(obj === -1 || !obj) {
									if(s.correct_state) { this.get_container().children("ul").empty(); }
								}
								else {
									obj.children("a.jstree-loading").removeClass("jstree-loading");
									obj.removeData("jstree_is_loading");
									if(s.correct_state) { this.correct_state(obj); }
								}
								if(e_call) { e_call.call(this); }
							}
							else {
								if(obj === -1 || !obj) { this.get_container().children("ul").empty().append(d.children()); }
								else { obj.append(d).children("a.jstree-loading").removeClass("jstree-loading"); obj.removeData("jstree_is_loading"); }
								this.clean_node(obj);
								if(s_call) { s_call.call(this); }
							}
						}, this));
						break;
					case (!!s.data && !s.ajax) || (!!s.data && !!s.ajax && (!obj || obj === -1)):
						if(!obj || obj == -1) {
							d = this._parse_json(s.data, obj);
							if(d) {
								this.get_container().children("ul").empty().append(d.children());
								this.clean_node();
							}
							else { 
								if(s.correct_state) { this.get_container().children("ul").empty(); }
							}
						}
						if(s_call) { s_call.call(this); }
						break;
					case (!s.data && !!s.ajax) || (!!s.data && !!s.ajax && obj && obj !== -1):
						error_func = function (x, t, e) {
							var ef = this.get_settings().json_data.ajax.error; 
							if(ef) { ef.call(this, x, t, e); }
							if(obj != -1 && obj.length) {
								obj.children("a.jstree-loading").removeClass("jstree-loading");
								obj.removeData("jstree_is_loading");
								if(t === "success" && s.correct_state) { this.correct_state(obj); }
							}
							else {
								if(t === "success" && s.correct_state) { this.get_container().children("ul").empty(); }
							}
							if(e_call) { e_call.call(this); }
						};
						success_func = function (d, t, x) {
							var sf = this.get_settings().json_data.ajax.success; 
							if(sf) { d = sf.call(this,d,t,x) || d; }
							if(d === "" || (d && d.toString && d.toString().replace(/^[\s\n]+$/,"") === "") || (!$.isArray(d) && !$.isPlainObject(d))) {
								return error_func.call(this, x, t, "");
							}
							d = this._parse_json(d, obj);
							if(d) {
								if(obj === -1 || !obj) { this.get_container().children("ul").empty().append(d.children()); }
								else { obj.append(d).children("a.jstree-loading").removeClass("jstree-loading"); obj.removeData("jstree_is_loading"); }
								this.clean_node(obj);
								if(s_call) { s_call.call(this); }
							}
							else {
								if(obj === -1 || !obj) {
									if(s.correct_state) { 
										this.get_container().children("ul").empty(); 
										if(s_call) { s_call.call(this); }
									}
								}
								else {
									obj.children("a.jstree-loading").removeClass("jstree-loading");
									obj.removeData("jstree_is_loading");
									if(s.correct_state) { 
										this.correct_state(obj);
										if(s_call) { s_call.call(this); } 
									}
								}
							}
						};
						s.ajax.context = this;
						s.ajax.error = error_func;
						s.ajax.success = success_func;
						if(!s.ajax.dataType) { s.ajax.dataType = "json"; }
						if($.isFunction(s.ajax.url)) { s.ajax.url = s.ajax.url.call(this, obj); }
						if($.isFunction(s.ajax.data)) { s.ajax.data = s.ajax.data.call(this, obj); }
						$.ajax(s.ajax);
						break;
				}
			},
			_parse_json : function (js, obj, is_callback) {
				var d = false, 
					p = this._get_settings(),
					s = p.json_data,
					t = p.core.html_titles,
					tmp, i, j, ul1, ul2;

				if(!js) { return d; }
				if(s.progressive_unload && obj && obj !== -1) { 
					obj.data("jstree_children", d);
				}
				if($.isArray(js)) {
					d = $();
					if(!js.length) { return false; }
					for(i = 0, j = js.length; i < j; i++) {
						tmp = this._parse_json(js[i], obj, true);
						if(tmp.length) { d = d.add(tmp); }
					}
				}
				else {
					if(typeof js == "string") { js = { data : js }; }
					if(!js.data && js.data !== "") { return d; }
					d = $("<li />");
					if(js.attr) { d.attr(js.attr); }
					if(js.metadata) { d.data(js.metadata); }
					if(js.state) { d.addClass("jstree-" + js.state); }
					if(!$.isArray(js.data)) { tmp = js.data; js.data = []; js.data.push(tmp); }
					$.each(js.data, function (i, m) {
						tmp = $("<a />");
						if($.isFunction(m)) { m = m.call(this, js); }
						if(typeof m == "string") { tmp.attr('href','#')[ t ? "html" : "text" ](m); }
						else {
							if(!m.attr) { m.attr = {}; }
							if(!m.attr.href) { m.attr.href = '#'; }
							tmp.attr(m.attr)[ t ? "html" : "text" ](m.title);
							if(m.language) { tmp.addClass(m.language); }
						}
						tmp.prepend("<ins class='jstree-icon'>&#160;</ins>");
						if(!m.icon && js.icon) { m.icon = js.icon; }
						if(m.icon) { 
							if(m.icon.indexOf("/") === -1) { tmp.children("ins").addClass(m.icon); }
							else { tmp.children("ins").css("background","url('" + m.icon + "') center center no-repeat"); }
						}
						d.append(tmp);
					});
					d.prepend("<ins class='jstree-icon'>&#160;</ins>");
					if(js.children) { 
						if(s.progressive_render && js.state !== "open") {
							d.addClass("jstree-closed").data("jstree_children", js.children);
						}
						else {
							if(s.progressive_unload) { d.data("jstree_children", js.children); }
							if($.isArray(js.children) && js.children.length) {
								tmp = this._parse_json(js.children, obj, true);
								if(tmp.length) {
									ul2 = $("<ul />");
									ul2.append(tmp);
									d.append(ul2);
								}
							}
						}
					}
				}
				if(!is_callback) {
					ul1 = $("<ul />");
					ul1.append(d);
					d = ul1;
				}
				return d;
			},
			get_json : function (obj, li_attr, a_attr, is_callback) {
				var result = [], 
					s = this._get_settings(), 
					_this = this,
					tmp1, tmp2, li, a, t, lang;
				obj = this._get_node(obj);
				if(!obj || obj === -1) { obj = this.get_container().find("> ul > li"); }
				li_attr = $.isArray(li_attr) ? li_attr : [ "id", "class" ];
				if(!is_callback && this.data.types) { li_attr.push(s.types.type_attr); }
				a_attr = $.isArray(a_attr) ? a_attr : [ ];

				obj.each(function () {
					li = $(this);
					tmp1 = { data : [] };
					if(li_attr.length) { tmp1.attr = { }; }
					$.each(li_attr, function (i, v) { 
						tmp2 = li.attr(v); 
						if(tmp2 && tmp2.length && tmp2.replace(/jstree[^ ]*/ig,'').length) {
							tmp1.attr[v] = (" " + tmp2).replace(/ jstree[^ ]*/ig,'').replace(/\s+$/ig," ").replace(/^ /,"").replace(/ $/,""); 
						}
					});
					if(li.hasClass("jstree-open")) { tmp1.state = "open"; }
					if(li.hasClass("jstree-closed")) { tmp1.state = "closed"; }
					if(li.data()) { tmp1.metadata = li.data(); }
					a = li.children("a");
					a.each(function () {
						t = $(this);
						if(
							a_attr.length || 
							$.inArray("languages", s.plugins) !== -1 || 
							t.children("ins").get(0).style.backgroundImage.length || 
							(t.children("ins").get(0).className && t.children("ins").get(0).className.replace(/jstree[^ ]*|$/ig,'').length)
						) { 
							lang = false;
							if($.inArray("languages", s.plugins) !== -1 && $.isArray(s.languages) && s.languages.length) {
								$.each(s.languages, function (l, lv) {
									if(t.hasClass(lv)) {
										lang = lv;
										return false;
									}
								});
							}
							tmp2 = { attr : { }, title : _this.get_text(t, lang) }; 
							$.each(a_attr, function (k, z) {
								tmp2.attr[z] = (" " + (t.attr(z) || "")).replace(/ jstree[^ ]*/ig,'').replace(/\s+$/ig," ").replace(/^ /,"").replace(/ $/,"");
							});
							if($.inArray("languages", s.plugins) !== -1 && $.isArray(s.languages) && s.languages.length) {
								$.each(s.languages, function (k, z) {
									if(t.hasClass(z)) { tmp2.language = z; return true; }
								});
							}
							if(t.children("ins").get(0).className.replace(/jstree[^ ]*|$/ig,'').replace(/^\s+$/ig,"").length) {
								tmp2.icon = t.children("ins").get(0).className.replace(/jstree[^ ]*|$/ig,'').replace(/\s+$/ig," ").replace(/^ /,"").replace(/ $/,"");
							}
							if(t.children("ins").get(0).style.backgroundImage.length) {
								tmp2.icon = t.children("ins").get(0).style.backgroundImage.replace("url(","").replace(")","");
							}
						}
						else {
							tmp2 = _this.get_text(t);
						}
						if(a.length > 1) { tmp1.data.push(tmp2); }
						else { tmp1.data = tmp2; }
					});
					li = li.find("> ul > li");
					if(li.length) { tmp1.children = _this.get_json(li, li_attr, a_attr, true); }
					result.push(tmp1);
				});
				return result;
			}
		}
	});
})(jQuery);
//*/

/* 
 * jsTree languages plugin
 * Adds support for multiple language versions in one tree
 * This basically allows for many titles coexisting in one node, but only one of them being visible at any given time
 * This is useful for maintaining the same structure in many languages (hence the name of the plugin)
 */
(function ($) {
	$.jstree.plugin("languages", {
		__init : function () { this._load_css();  },
		defaults : [],
		_fn : {
			set_lang : function (i) { 
				var langs = this._get_settings().languages,
					st = false,
					selector = ".jstree-" + this.get_index() + ' a';
				if(!$.isArray(langs) || langs.length === 0) { return false; }
				if($.inArray(i,langs) == -1) {
					if(!!langs[i]) { i = langs[i]; }
					else { return false; }
				}
				if(i == this.data.languages.current_language) { return true; }
				st = $.vakata.css.get_css(selector + "." + this.data.languages.current_language, false, this.data.languages.language_css);
				if(st !== false) { st.style.display = "none"; }
				st = $.vakata.css.get_css(selector + "." + i, false, this.data.languages.language_css);
				if(st !== false) { st.style.display = ""; }
				this.data.languages.current_language = i;
				this.__callback(i);
				return true;
			},
			get_lang : function () {
				return this.data.languages.current_language;
			},
			_get_string : function (key, lang) {
				var langs = this._get_settings().languages,
					s = this._get_settings().core.strings;
				if($.isArray(langs) && langs.length) {
					lang = (lang && $.inArray(lang,langs) != -1) ? lang : this.data.languages.current_language;
				}
				if(s[lang] && s[lang][key]) { return s[lang][key]; }
				if(s[key]) { return s[key]; }
				return key;
			},
			get_text : function (obj, lang) {
				obj = this._get_node(obj) || this.data.ui.last_selected;
				if(!obj.size()) { return false; }
				var langs = this._get_settings().languages,
					s = this._get_settings().core.html_titles;
				if($.isArray(langs) && langs.length) {
					lang = (lang && $.inArray(lang,langs) != -1) ? lang : this.data.languages.current_language;
					obj = obj.children("a." + lang);
				}
				else { obj = obj.children("a:eq(0)"); }
				if(s) {
					obj = obj.clone();
					obj.children("INS").remove();
					return obj.html();
				}
				else {
					obj = obj.contents().filter(function() { return this.nodeType == 3; })[0];
					return obj.nodeValue;
				}
			},
			set_text : function (obj, val, lang) {
				obj = this._get_node(obj) || this.data.ui.last_selected;
				if(!obj.size()) { return false; }
				var langs = this._get_settings().languages,
					s = this._get_settings().core.html_titles,
					tmp;
				if($.isArray(langs) && langs.length) {
					lang = (lang && $.inArray(lang,langs) != -1) ? lang : this.data.languages.current_language;
					obj = obj.children("a." + lang);
				}
				else { obj = obj.children("a:eq(0)"); }
				if(s) {
					tmp = obj.children("INS").clone();
					obj.html(val).prepend(tmp);
					this.__callback({ "obj" : obj, "name" : val, "lang" : lang });
					return true;
				}
				else {
					obj = obj.contents().filter(function() { return this.nodeType == 3; })[0];
					this.__callback({ "obj" : obj, "name" : val, "lang" : lang });
					return (obj.nodeValue = val);
				}
			},
			_load_css : function () {
				var langs = this._get_settings().languages,
					str = "/* languages css */",
					selector = ".jstree-" + this.get_index() + ' a',
					ln;
				if($.isArray(langs) && langs.length) {
					this.data.languages.current_language = langs[0];
					for(ln = 0; ln < langs.length; ln++) {
						str += selector + "." + langs[ln] + " {";
						if(langs[ln] != this.data.languages.current_language) { str += " display:none; "; }
						str += " } ";
					}
					this.data.languages.language_css = $.vakata.css.add_sheet({ 'str' : str, 'title' : "jstree-languages" });
				}
			},
			create_node : function (obj, position, js, callback) {
				var t = this.__call_old(true, obj, position, js, function (t) {
					var langs = this._get_settings().languages,
						a = t.children("a"),
						ln;
					if($.isArray(langs) && langs.length) {
						for(ln = 0; ln < langs.length; ln++) {
							if(!a.is("." + langs[ln])) {
								t.append(a.eq(0).clone().removeClass(langs.join(" ")).addClass(langs[ln]));
							}
						}
						a.not("." + langs.join(", .")).remove();
					}
					if(callback) { callback.call(this, t); }
				});
				return t;
			}
		}
	});
})(jQuery);
//*/

/*
 * jsTree cookies plugin
 * Stores the currently opened/selected nodes in a cookie and then restores them
 * Depends on the jquery.cookie plugin
 */
(function ($) {
	$.jstree.plugin("cookies", {
		__init : function () {
			if(typeof $.cookie === "undefined") { throw "jsTree cookie: jQuery cookie plugin not included."; }

			var s = this._get_settings().cookies,
				tmp;
			if(!!s.save_loaded) {
				tmp = $.cookie(s.save_loaded);
				if(tmp && tmp.length) { this.data.core.to_load = tmp.split(","); }
			}
			if(!!s.save_opened) {
				tmp = $.cookie(s.save_opened);
				if(tmp && tmp.length) { this.data.core.to_open = tmp.split(","); }
			}
			if(!!s.save_selected) {
				tmp = $.cookie(s.save_selected);
				if(tmp && tmp.length && this.data.ui) { this.data.ui.to_select = tmp.split(","); }
			}
			this.get_container()
				.one( ( this.data.ui ? "reselect" : "reopen" ) + ".jstree", $.proxy(function () {
					this.get_container()
						.bind("open_node.jstree close_node.jstree select_node.jstree deselect_node.jstree", $.proxy(function (e) { 
								if(this._get_settings().cookies.auto_save) { this.save_cookie((e.handleObj.namespace + e.handleObj.type).replace("jstree","")); }
							}, this));
				}, this));
		},
		defaults : {
			save_loaded		: "jstree_load",
			save_opened		: "jstree_open",
			save_selected	: "jstree_select",
			auto_save		: true,
			cookie_options	: {}
		},
		_fn : {
			save_cookie : function (c) {
				if(this.data.core.refreshing) { return; }
				var s = this._get_settings().cookies;
				if(!c) { // if called manually and not by event
					if(s.save_loaded) {
						this.save_loaded();
						$.cookie(s.save_loaded, this.data.core.to_load.join(","), s.cookie_options);
					}
					if(s.save_opened) {
						this.save_opened();
						$.cookie(s.save_opened, this.data.core.to_open.join(","), s.cookie_options);
					}
					if(s.save_selected && this.data.ui) {
						this.save_selected();
						$.cookie(s.save_selected, this.data.ui.to_select.join(","), s.cookie_options);
					}
					return;
				}
				switch(c) {
					case "open_node":
					case "close_node":
						if(!!s.save_opened) { 
							this.save_opened(); 
							$.cookie(s.save_opened, this.data.core.to_open.join(","), s.cookie_options); 
						}
						if(!!s.save_loaded) { 
							this.save_loaded(); 
							$.cookie(s.save_loaded, this.data.core.to_load.join(","), s.cookie_options); 
						}
						break;
					case "select_node":
					case "deselect_node":
						if(!!s.save_selected && this.data.ui) { 
							this.save_selected(); 
							$.cookie(s.save_selected, this.data.ui.to_select.join(","), s.cookie_options); 
						}
						break;
				}
			}
		}
	});
	// include cookies by default
	// $.jstree.defaults.plugins.push("cookies");
})(jQuery);
//*/

/*
 * jsTree sort plugin
 * Sorts items alphabetically (or using any other function)
 */
(function ($) {
	$.jstree.plugin("sort", {
		__init : function () {
			this.get_container()
				.bind("load_node.jstree", $.proxy(function (e, data) {
						var obj = this._get_node(data.rslt.obj);
						obj = obj === -1 ? this.get_container().children("ul") : obj.children("ul");
						this.sort(obj);
					}, this))
				.bind("rename_node.jstree create_node.jstree create.jstree", $.proxy(function (e, data) {
						this.sort(data.rslt.obj.parent());
					}, this))
				.bind("move_node.jstree", $.proxy(function (e, data) {
						var m = data.rslt.np == -1 ? this.get_container() : data.rslt.np;
						this.sort(m.children("ul"));
					}, this));
		},
		defaults : function (a, b) { return this.get_text(a) > this.get_text(b) ? 1 : -1; },
		_fn : {
			sort : function (obj) {
				var s = this._get_settings().sort,
					t = this;
				obj.append($.makeArray(obj.children("li")).sort($.proxy(s, t)));
				obj.find("> li > ul").each(function() { t.sort($(this)); });
				this.clean_node(obj);
			}
		}
	});
})(jQuery);
//*/

/*
 * jsTree DND plugin
 * Drag and drop plugin for moving/copying nodes
 */
(function ($) {
	var o = false,
		r = false,
		m = false,
		ml = false,
		sli = false,
		sti = false,
		dir1 = false,
		dir2 = false,
		last_pos = false;
	$.vakata.dnd = {
		is_down : false,
		is_drag : false,
		helper : false,
		scroll_spd : 10,
		init_x : 0,
		init_y : 0,
		threshold : 5,
		helper_left : 5,
		helper_top : 10,
		user_data : {},

		drag_start : function (e, data, html) { 
			if($.vakata.dnd.is_drag) { $.vakata.drag_stop({}); }
			try {
				e.currentTarget.unselectable = "on";
				e.currentTarget.onselectstart = function() { return false; };
				if(e.currentTarget.style) { e.currentTarget.style.MozUserSelect = "none"; }
			} catch(err) { }
			$.vakata.dnd.init_x = e.pageX;
			$.vakata.dnd.init_y = e.pageY;
			$.vakata.dnd.user_data = data;
			$.vakata.dnd.is_down = true;
			$.vakata.dnd.helper = $("<div id='vakata-dragged' />").html(html); //.fadeTo(10,0.25);
			$(document).bind("mousemove", $.vakata.dnd.drag);
			$(document).bind("mouseup", $.vakata.dnd.drag_stop);
			return false;
		},
		drag : function (e) { 
			if(!$.vakata.dnd.is_down) { return; }
			if(!$.vakata.dnd.is_drag) {
				if(Math.abs(e.pageX - $.vakata.dnd.init_x) > 5 || Math.abs(e.pageY - $.vakata.dnd.init_y) > 5) { 
					$.vakata.dnd.helper.appendTo("body");
					$.vakata.dnd.is_drag = true;
					$(document).triggerHandler("drag_start.vakata", { "event" : e, "data" : $.vakata.dnd.user_data });
				}
				else { return; }
			}

			// maybe use a scrolling parent element instead of document?
			if(e.type === "mousemove") { // thought of adding scroll in order to move the helper, but mouse poisition is n/a
				var d = $(document), t = d.scrollTop(), l = d.scrollLeft();
				if(e.pageY - t < 20) { 
					if(sti && dir1 === "down") { clearInterval(sti); sti = false; }
					if(!sti) { dir1 = "up"; sti = setInterval(function () { $(document).scrollTop($(document).scrollTop() - $.vakata.dnd.scroll_spd); }, 150); }
				}
				else { 
					if(sti && dir1 === "up") { clearInterval(sti); sti = false; }
				}
				if($(window).height() - (e.pageY - t) < 20) {
					if(sti && dir1 === "up") { clearInterval(sti); sti = false; }
					if(!sti) { dir1 = "down"; sti = setInterval(function () { $(document).scrollTop($(document).scrollTop() + $.vakata.dnd.scroll_spd); }, 150); }
				}
				else { 
					if(sti && dir1 === "down") { clearInterval(sti); sti = false; }
				}

				if(e.pageX - l < 20) {
					if(sli && dir2 === "right") { clearInterval(sli); sli = false; }
					if(!sli) { dir2 = "left"; sli = setInterval(function () { $(document).scrollLeft($(document).scrollLeft() - $.vakata.dnd.scroll_spd); }, 150); }
				}
				else { 
					if(sli && dir2 === "left") { clearInterval(sli); sli = false; }
				}
				if($(window).width() - (e.pageX - l) < 20) {
					if(sli && dir2 === "left") { clearInterval(sli); sli = false; }
					if(!sli) { dir2 = "right"; sli = setInterval(function () { $(document).scrollLeft($(document).scrollLeft() + $.vakata.dnd.scroll_spd); }, 150); }
				}
				else { 
					if(sli && dir2 === "right") { clearInterval(sli); sli = false; }
				}
			}
			var rtl = ($('html').eq(0).attr('dir') === 'rtl');
			$.vakata.dnd.helper.css({ left : (e.pageX + $.vakata.dnd.helper_left - (rtl ? $.vakata.dnd.helper.outerWidth() : 0)) + "px", top : (e.pageY + $.vakata.dnd.helper_top) + "px" });
			$(document).triggerHandler("drag.vakata", { "event" : e, "data" : $.vakata.dnd.user_data });
		},
		drag_stop : function (e) {
			//console.log("Point One");
			if(sli) { clearInterval(sli); }
			if(sti) { clearInterval(sti); }
			$(document).unbind("mousemove", $.vakata.dnd.drag);
			$(document).unbind("mouseup", $.vakata.dnd.drag_stop);
			$(document).triggerHandler("drag_stop.vakata", { "event" : e, "data" : $.vakata.dnd.user_data });
			$.vakata.dnd.helper.remove();
			$.vakata.dnd.init_x = 0;
			$.vakata.dnd.init_y = 0;
			$.vakata.dnd.user_data = {};
			$.vakata.dnd.is_down = false;
			$.vakata.dnd.is_drag = false;
		}
	};
	$(function() {
		var css_string = '#vakata-dragged { display:block; margin:0 0 0 0; padding:4px 4px 4px 24px; position:absolute; top:-2000px; line-height:16px; z-index:10000; } '+
				'html[dir=rtl] #vakata-dragged { padding:4px 24px 4px 4px; }';
		$.vakata.css.add_sheet({ str : css_string, title : "vakata" });
	});

	$.jstree.plugin("dnd", {
		__init : function () {
			this.data.dnd = {
				active : false,
				after : false,
				inside : false,
				before : false,
				off : false,
				prepared : false,
				w : 0,
				to1 : false,
				to2 : false,
				cof : false,
				cw : false,
				ch : false,
				i1 : false,
				i2 : false,
				mto : false
			};
			this.get_container()
				.bind("mouseenter.jstree", $.proxy(function (e) {
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							if(this.data.themes) {
								m.attr("class", "jstree-" + this.data.themes.theme); 
								if(ml) { ml.attr("class", "jstree-" + this.data.themes.theme); }
								$.vakata.dnd.helper.attr("class", "jstree-dnd-helper jstree-" + this.data.themes.theme);
							}
							//if($(e.currentTarget).find("> ul > li").length === 0) {
							if(e.currentTarget === e.target && $.vakata.dnd.user_data.obj && $($.vakata.dnd.user_data.obj).length && $($.vakata.dnd.user_data.obj).parents(".jstree:eq(0)")[0] !== e.target) { // node should not be from the same tree
								var tr = $.jstree._reference(e.target), dc;
								if(tr.data.dnd.foreign) {
									dc = tr._get_settings().dnd.drag_check.call(this, { "o" : o, "r" : tr.get_container(), is_root : true });
									if(dc === true || dc.inside === true || dc.before === true || dc.after === true) {
										$.vakata.dnd.helper.children("ins").attr("class","jstree-ok");
									}
								}
								else {
									tr.prepare_move(o, tr.get_container(), "last");
									if(tr.check_move()) {
										$.vakata.dnd.helper.children("ins").attr("class","jstree-ok");
									}
								}
							}
						}
					}, this))
				.bind("mouseup.jstree", $.proxy(function (e) {
						//if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree && $(e.currentTarget).find("> ul > li").length === 0) {
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree && e.currentTarget === e.target && $.vakata.dnd.user_data.obj && $($.vakata.dnd.user_data.obj).length && $($.vakata.dnd.user_data.obj).parents(".jstree:eq(0)")[0] !== e.target) { // node should not be from the same tree
							var tr = $.jstree._reference(e.currentTarget), dc;
							if(tr.data.dnd.foreign) {
								dc = tr._get_settings().dnd.drag_check.call(this, { "o" : o, "r" : tr.get_container(), is_root : true });
								if(dc === true || dc.inside === true || dc.before === true || dc.after === true) {
									tr._get_settings().dnd.drag_finish.call(this, { "o" : o, "r" : tr.get_container(), is_root : true });
								}
							}
							else {
								tr.move_node(o, tr.get_container(), "last", e[tr._get_settings().dnd.copy_modifier + "Key"]);
							}
						}
					}, this))
				.bind("mouseleave.jstree", $.proxy(function (e) {
						if(e.relatedTarget && e.relatedTarget.id && e.relatedTarget.id === "jstree-marker-line") {
							return false; 
						}
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							if(this.data.dnd.i1) { clearInterval(this.data.dnd.i1); }
							if(this.data.dnd.i2) { clearInterval(this.data.dnd.i2); }
							if(this.data.dnd.to1) { clearTimeout(this.data.dnd.to1); }
							if(this.data.dnd.to2) { clearTimeout(this.data.dnd.to2); }
							if($.vakata.dnd.helper.children("ins").hasClass("jstree-ok")) {
								$.vakata.dnd.helper.children("ins").attr("class","jstree-invalid");
							}
						}
					}, this))
				.bind("mousemove.jstree", $.proxy(function (e) {
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							var cnt = this.get_container()[0];

							// Horizontal scroll
							if(e.pageX + 24 > this.data.dnd.cof.left + this.data.dnd.cw) {
								if(this.data.dnd.i1) { clearInterval(this.data.dnd.i1); }
								this.data.dnd.i1 = setInterval($.proxy(function () { this.scrollLeft += $.vakata.dnd.scroll_spd; }, cnt), 100);
							}
							else if(e.pageX - 24 < this.data.dnd.cof.left) {
								if(this.data.dnd.i1) { clearInterval(this.data.dnd.i1); }
								this.data.dnd.i1 = setInterval($.proxy(function () { this.scrollLeft -= $.vakata.dnd.scroll_spd; }, cnt), 100);
							}
							else {
								if(this.data.dnd.i1) { clearInterval(this.data.dnd.i1); }
							}

							// Vertical scroll
							if(e.pageY + 24 > this.data.dnd.cof.top + this.data.dnd.ch) {
								if(this.data.dnd.i2) { clearInterval(this.data.dnd.i2); }
								this.data.dnd.i2 = setInterval($.proxy(function () { this.scrollTop += $.vakata.dnd.scroll_spd; }, cnt), 100);
							}
							else if(e.pageY - 24 < this.data.dnd.cof.top) {
								if(this.data.dnd.i2) { clearInterval(this.data.dnd.i2); }
								this.data.dnd.i2 = setInterval($.proxy(function () { this.scrollTop -= $.vakata.dnd.scroll_spd; }, cnt), 100);
							}
							else {
								if(this.data.dnd.i2) { clearInterval(this.data.dnd.i2); }
							}

						}
					}, this))
				.bind("scroll.jstree", $.proxy(function (e) { 
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree && m && ml) {
							m.hide();
							ml.hide();
						}
					}, this))
				.delegate("a", "mousedown.jstree", $.proxy(function (e) { 
						if(e.which === 1) {
							this.start_drag(e.currentTarget, e);
							return false;
						}
					}, this))
				.delegate("a", "mouseenter.jstree", $.proxy(function (e) { 
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							this.dnd_enter(e.currentTarget);
						}
					}, this))
				.delegate("a", "mousemove.jstree", $.proxy(function (e) { 
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							if(!r || !r.length || r.children("a")[0] !== e.currentTarget) {
								this.dnd_enter(e.currentTarget);
							}
							if(typeof this.data.dnd.off.top === "undefined") { this.data.dnd.off = $(e.target).offset(); }
							this.data.dnd.w = (e.pageY - (this.data.dnd.off.top || 0)) % this.data.core.li_height;
							if(this.data.dnd.w < 0) { this.data.dnd.w += this.data.core.li_height; }
							this.dnd_show();
						}
					}, this))
				.delegate("a", "mouseleave.jstree", $.proxy(function (e) { 
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							if(e.relatedTarget && e.relatedTarget.id && e.relatedTarget.id === "jstree-marker-line") {
								return false; 
							}
								if(m) { m.hide(); }
								if(ml) { ml.hide(); }
							/*
							var ec = $(e.currentTarget).closest("li"), 
								er = $(e.relatedTarget).closest("li");
							if(er[0] !== ec.prev()[0] && er[0] !== ec.next()[0]) {
								if(m) { m.hide(); }
								if(ml) { ml.hide(); }
							}
							*/
							this.data.dnd.mto = setTimeout( 
								(function (t) { return function () { t.dnd_leave(e); }; })(this),
							0);
						}
					}, this))
				.delegate("a", "mouseup.jstree", $.proxy(function (e) {
						//console.log("Where is finish");
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree) {
							this.dnd_finish(e);
						}
					}, this));

			$(document)
				.bind("drag_stop.vakata", $.proxy(function () {
						if(this.data.dnd.to1) { clearTimeout(this.data.dnd.to1); }
						if(this.data.dnd.to2) { clearTimeout(this.data.dnd.to2); }
						if(this.data.dnd.i1) { clearInterval(this.data.dnd.i1); }
						if(this.data.dnd.i2) { clearInterval(this.data.dnd.i2); }
						this.data.dnd.after		= false;
						this.data.dnd.before	= false;
						this.data.dnd.inside	= false;
						this.data.dnd.off		= false;
						this.data.dnd.prepared	= false;
						this.data.dnd.w			= false;
						this.data.dnd.to1		= false;
						this.data.dnd.to2		= false;
						this.data.dnd.i1		= false;
						this.data.dnd.i2		= false;
						this.data.dnd.active	= false;
						this.data.dnd.foreign	= false;
						if(m) { m.css({ "top" : "-2000px" }); }
						if(ml) { ml.css({ "top" : "-2000px" }); }
					}, this))
				.bind("drag_start.vakata", $.proxy(function (e, data) {
						if(data.data.jstree) { 
							var et = $(data.event.target);
							if(et.closest(".jstree").hasClass("jstree-" + this.get_index())) {
								this.dnd_enter(et);
							}
						}
					}, this));
				/*
				.bind("keydown.jstree-" + this.get_index() + " keyup.jstree-" + this.get_index(), $.proxy(function(e) {
						if($.vakata.dnd.is_drag && $.vakata.dnd.user_data.jstree && !this.data.dnd.foreign) {
							var h = $.vakata.dnd.helper.children("ins");
							if(e[this._get_settings().dnd.copy_modifier + "Key"] && h.hasClass("jstree-ok")) {
								h.parent().html(h.parent().html().replace(/ \(Copy\)$/, "") + " (Copy)");
							} 
							else {
								h.parent().html(h.parent().html().replace(/ \(Copy\)$/, ""));
							}
						}
					}, this)); */



			var s = this._get_settings().dnd;
			if(s.drag_target) {
				$(document)
					.delegate(s.drag_target, "mousedown.jstree-" + this.get_index(), $.proxy(function (e) {
						o = e.target;
						$.vakata.dnd.drag_start(e, { jstree : true, obj : e.target }, "<ins class='jstree-icon'></ins>" + $(e.target).text() );
						if(this.data.themes) { 
							if(m) { m.attr("class", "jstree-" + this.data.themes.theme); }
							if(ml) { ml.attr("class", "jstree-" + this.data.themes.theme); }
							$.vakata.dnd.helper.attr("class", "jstree-dnd-helper jstree-" + this.data.themes.theme); 
						}
						$.vakata.dnd.helper.children("ins").attr("class","jstree-invalid");
						var cnt = this.get_container();
						this.data.dnd.cof = cnt.offset();
						this.data.dnd.cw = parseInt(cnt.width(),10);
						this.data.dnd.ch = parseInt(cnt.height(),10);
						this.data.dnd.foreign = true;
						e.preventDefault();
					}, this));
			}
			if(s.drop_target) {
				$(document)
					.delegate(s.drop_target, "mouseenter.jstree-" + this.get_index(), $.proxy(function (e) {
							if(this.data.dnd.active && this._get_settings().dnd.drop_check.call(this, { "o" : o, "r" : $(e.target), "e" : e })) {
								$.vakata.dnd.helper.children("ins").attr("class","jstree-ok");
							}
						}, this))
					.delegate(s.drop_target, "mouseleave.jstree-" + this.get_index(), $.proxy(function (e) {
							if(this.data.dnd.active) {
								$.vakata.dnd.helper.children("ins").attr("class","jstree-invalid");
							}
						}, this))
					.delegate(s.drop_target, "mouseup.jstree-" + this.get_index(), $.proxy(function (e) {
							if(this.data.dnd.active && $.vakata.dnd.helper.children("ins").hasClass("jstree-ok")) {
								this._get_settings().dnd.drop_finish.call(this, { "o" : o, "r" : $(e.target), "e" : e });
							}
						}, this));
			}
		},
		defaults : {
			copy_modifier	: "ctrl",
			check_timeout	: 100,
			open_timeout	: 500,
			drop_target		: ".jstree-drop",
			drop_check		: function (data) { return true; },
			drop_finish		: $.noop,
			drag_target		: ".jstree-draggable",
			drag_finish		: $.noop,
			drag_check		: function (data) { return { after : false, before : false, inside : true }; }
		},
		_fn : {
			dnd_prepare : function () {
				if(!r || !r.length) { return; }
				this.data.dnd.off = r.offset();
				if(this._get_settings().core.rtl) {
					this.data.dnd.off.right = this.data.dnd.off.left + r.width();
				}
				if(this.data.dnd.foreign) {
					var a = this._get_settings().dnd.drag_check.call(this, { "o" : o, "r" : r });
					this.data.dnd.after = a.after;
					this.data.dnd.before = a.before;
					this.data.dnd.inside = a.inside;
					this.data.dnd.prepared = true;
					return this.dnd_show();
				}
				this.prepare_move(o, r, "before");
				this.data.dnd.before = this.check_move();
				this.prepare_move(o, r, "after");
				this.data.dnd.after = this.check_move();
				if(this._is_loaded(r)) {
					this.prepare_move(o, r, "inside");
					this.data.dnd.inside = this.check_move();
				}
				else {
					this.data.dnd.inside = false;
				}
				this.data.dnd.prepared = true;
				return this.dnd_show();
			},
			dnd_show : function () {
				if(!this.data.dnd.prepared) { return; }
				var o = ["before","inside","after"],
					r = false,
					rtl = this._get_settings().core.rtl,
					pos;
				if(this.data.dnd.w < this.data.core.li_height/3) { o = ["before","inside","after"]; }
				else if(this.data.dnd.w <= this.data.core.li_height*2/3) {
					o = this.data.dnd.w < this.data.core.li_height/2 ? ["inside","before","after"] : ["inside","after","before"];
				}
				else { o = ["after","inside","before"]; }
				$.each(o, $.proxy(function (i, val) { 
					if(this.data.dnd[val]) {
						$.vakata.dnd.helper.children("ins").attr("class","jstree-ok");
						r = val;
						return false;
					}
				}, this));
				if(r === false) { $.vakata.dnd.helper.children("ins").attr("class","jstree-invalid"); }
				
				pos = rtl ? (this.data.dnd.off.right - 18) : (this.data.dnd.off.left + 10);
				switch(r) {
					case "before":
						m.css({ "left" : pos + "px", "top" : (this.data.dnd.off.top - 6) + "px" }).show();
						if(ml) { ml.css({ "left" : (pos + (rtl ? (-ml.width() - 8) : 8)) + "px", "top" : (this.data.dnd.off.top - 1) + "px" }).show(); }
						break;
					case "after":
						m.css({ "left" : pos + "px", "top" : (this.data.dnd.off.top + this.data.core.li_height - 6) + "px" }).show();
						if(ml) { ml.css({ "left" : (pos + (rtl ? (-ml.width() - 8) : 8)) + "px", "top" : (this.data.dnd.off.top + this.data.core.li_height - 1) + "px" }).show(); }
						break;
					case "inside":
						m.css({ "left" : pos + ( rtl ? -4 : 4) + "px", "top" : (this.data.dnd.off.top + this.data.core.li_height/2 - 5) + "px" }).show();
						if(ml) { ml.hide(); }
						break;
					default:
						m.hide();
						if(ml) { ml.hide(); }
						break;
				}
				last_pos = r;
				return r;
			},
			dnd_open : function () {
				this.data.dnd.to2 = false;
				this.open_node(r, $.proxy(this.dnd_prepare,this), true);
			},
			dnd_finish : function (e) {
				if(this.data.dnd.foreign) {
					if(this.data.dnd.after || this.data.dnd.before || this.data.dnd.inside) {
						this._get_settings().dnd.drag_finish.call(this, { "o" : o, "r" : r, "p" : last_pos });
					}
				}
				else {
					this.dnd_prepare();
					this.move_node(o, r, last_pos, e[this._get_settings().dnd.copy_modifier + "Key"]);
				}
				o = false;
				r = false;
				m.hide();
				if(ml) { ml.hide(); }
			},
			dnd_enter : function (obj) {
				if(this.data.dnd.mto) { 
					clearTimeout(this.data.dnd.mto);
					this.data.dnd.mto = false;
				}
				var s = this._get_settings().dnd;
				this.data.dnd.prepared = false;
				r = this._get_node(obj);
				if(s.check_timeout) { 
					// do the calculations after a minimal timeout (users tend to drag quickly to the desired location)
					if(this.data.dnd.to1) { clearTimeout(this.data.dnd.to1); }
					this.data.dnd.to1 = setTimeout($.proxy(this.dnd_prepare, this), s.check_timeout); 
				}
				else { 
					this.dnd_prepare(); 
				}
				if(s.open_timeout) { 
					if(this.data.dnd.to2) { clearTimeout(this.data.dnd.to2); }
					if(r && r.length && r.hasClass("jstree-closed")) { 
						// if the node is closed - open it, then recalculate
						this.data.dnd.to2 = setTimeout($.proxy(this.dnd_open, this), s.open_timeout);
					}
				}
				else {
					if(r && r.length && r.hasClass("jstree-closed")) { 
						this.dnd_open();
					}
				}
			},
			dnd_leave : function (e) {
				this.data.dnd.after		= false;
				this.data.dnd.before	= false;
				this.data.dnd.inside	= false;
				$.vakata.dnd.helper.children("ins").attr("class","jstree-invalid");
				m.hide();
				if(ml) { ml.hide(); }
				if(r && r[0] === e.target.parentNode) {
					if(this.data.dnd.to1) {
						clearTimeout(this.data.dnd.to1);
						this.data.dnd.to1 = false;
					}
					if(this.data.dnd.to2) {
						clearTimeout(this.data.dnd.to2);
						this.data.dnd.to2 = false;
					}
				}
			},
			start_drag : function (obj, e) {
				o = this._get_node(obj);
				if(this.data.ui && this.is_selected(o)) { o = this._get_node(null, true); }
				var dt = o.length > 1 ? this._get_string("multiple_selection") : this.get_text(o),
					cnt = this.get_container();
				if(!this._get_settings().core.html_titles) { dt = dt.replace(/</ig,"&lt;").replace(/>/ig,"&gt;"); }
				$.vakata.dnd.drag_start(e, { jstree : true, obj : o }, "<ins class='jstree-icon'></ins>" + dt );
				if(this.data.themes) { 
					if(m) { m.attr("class", "jstree-" + this.data.themes.theme); }
					if(ml) { ml.attr("class", "jstree-" + this.data.themes.theme); }
					$.vakata.dnd.helper.attr("class", "jstree-dnd-helper jstree-" + this.data.themes.theme); 
				}
				this.data.dnd.cof = cnt.offset();
				this.data.dnd.cw = parseInt(cnt.width(),10);
				this.data.dnd.ch = parseInt(cnt.height(),10);
				this.data.dnd.active = true;
			}
		}
	});
	$(function() {
		var css_string = '' + 
			'#vakata-dragged ins { display:block; text-decoration:none; width:16px; height:16px; margin:0 0 0 0; padding:0; position:absolute; top:4px; left:4px; ' + 
			' -moz-border-radius:4px; border-radius:4px; -webkit-border-radius:4px; ' +
			'} ' + 
			'html[dir=rtl] #vakata-dragged ins { left:auto; right:4px; }' +
			'#vakata-dragged .jstree-ok { background:green; } ' + 
			'#vakata-dragged .jstree-invalid { background:red; } ' + 
			'#jstree-marker { padding:0; margin:0; font-size:12px; overflow:hidden; height:12px; width:8px; position:absolute; top:-30px; z-index:10001; background-repeat:no-repeat; display:none; background-color:transparent; text-shadow:1px 1px 1px white; color:black; line-height:10px; } ' + 
			'#jstree-marker-line { padding:0; margin:0; line-height:0%; font-size:1px; overflow:hidden; height:1px; width:100px; position:absolute; top:-30px; z-index:10000; background-repeat:no-repeat; display:none; background-color:#456c43; ' + 
			' cursor:pointer; border:1px solid #eeeeee; border-left:0; -moz-box-shadow: 0px 0px 2px #666; -webkit-box-shadow: 0px 0px 2px #666; box-shadow: 0px 0px 2px #666; ' + 
			' -moz-border-radius:1px; border-radius:1px; -webkit-border-radius:1px; ' +
			'}' + 
			'';
		$.vakata.css.add_sheet({ str : css_string, title : "jstree" });
		m = $("<div />").attr({ id : "jstree-marker" }).hide().html("&raquo;")
			.bind("mouseleave mouseenter", function (e) { 
				m.hide();
				ml.hide();
				e.preventDefault(); 
				e.stopImmediatePropagation(); 
				return false; 
			})
			.appendTo("body");
		ml = $("<div />").attr({ id : "jstree-marker-line" }).hide()
			.bind("mouseup", function (e) {
				if(r && r.length) { 
					var a = r.children("a");
					a.trigger("mouseup.jstree");
					a.trigger(e);
					e.preventDefault(); 
					e.stopImmediatePropagation(); 
					return false; 
				} 
			})
			.bind("mouseleave", function (e) { 
				var rt = $(e.relatedTarget);
				if(rt.is(".jstree") || rt.closest(".jstree").length === 0) {
					if(r && r.length) { 
						r.children("a").trigger(e); 
						m.hide();
						ml.hide();
						e.preventDefault(); 
						e.stopImmediatePropagation(); 
						return false; 
					}
				}
			})
			.appendTo("body");
		$(document).bind("drag_start.vakata", function (e, data) {
			if(data.data.jstree) { m.show(); if(ml) { ml.show(); } }
		});
		$(document).bind("drag_stop.vakata", function (e, data) {
			if(data.data.jstree) { m.hide(); if(ml) { ml.hide(); } }
		});
	});
})(jQuery);
//*/

/*
 * jsTree checkbox plugin
 * Inserts checkboxes in front of every node
 * Depends on the ui plugin
 * DOES NOT WORK NICELY WITH MULTITREE DRAG'N'DROP
 */
(function ($) {
	$.jstree.plugin("checkbox", {
		__init : function () {
			this.data.checkbox.noui = this._get_settings().checkbox.override_ui;
			if(this.data.ui && this.data.checkbox.noui) {
				this.select_node = this.deselect_node = this.deselect_all = $.noop;
				this.get_selected = this.get_checked;
			}

			this.get_container()
				.bind("open_node.jstree create_node.jstree clean_node.jstree refresh.jstree", $.proxy(function (e, data) { 
						this._prepare_checkboxes(data.rslt.obj);
					}, this))
				.bind("loaded.jstree", $.proxy(function (e) {
						this._prepare_checkboxes();
					}, this))
				.delegate( (this.data.ui && this.data.checkbox.noui ? "a" : "ins.jstree-checkbox") , "click.jstree", $.proxy(function (e) {
						e.preventDefault();
						if(this._get_node(e.target).hasClass("jstree-checked")) { this.uncheck_node(e.target); }
						else { this.check_node(e.target); }
						if(this.data.ui && this.data.checkbox.noui) {
							this.save_selected();
							if(this.data.cookies) { this.save_cookie("select_node"); }
						}
						else {
							e.stopImmediatePropagation();
							return false;
						}
					}, this));
		},
		defaults : {
			override_ui : false,
			two_state : false,
			real_checkboxes : false,
			checked_parent_open : true,
			real_checkboxes_names : function (n) { return [ ("check_" + (n[0].id || Math.ceil(Math.random() * 10000))) , 1]; }
		},
		__destroy : function () {
			this.get_container()
				.find("input.jstree-real-checkbox").removeClass("jstree-real-checkbox").end()
				.find("ins.jstree-checkbox").remove();
		},
		_fn : {
			_checkbox_notify : function (n, data) {
				if(data.checked) {
					this.check_node(n, false);
				}
			},
			_prepare_checkboxes : function (obj) {
				obj = !obj || obj == -1 ? this.get_container().find("> ul > li") : this._get_node(obj);
				if(obj === false) { return; } // added for removing root nodes
				var c, _this = this, t, ts = this._get_settings().checkbox.two_state, rc = this._get_settings().checkbox.real_checkboxes, rcn = this._get_settings().checkbox.real_checkboxes_names;
				obj.each(function () {
					t = $(this);
					c = t.is("li") && (t.hasClass("jstree-checked") || (rc && t.children(":checked").length)) ? "jstree-checked" : "jstree-unchecked";
					t.find("li").andSelf().each(function () {
						var $t = $(this), nm;
						$t.children("a" + (_this.data.languages ? "" : ":eq(0)") ).not(":has(.jstree-checkbox)").prepend("<ins class='jstree-checkbox'>&#160;</ins>").parent().not(".jstree-checked, .jstree-unchecked").addClass( ts ? "jstree-unchecked" : c );
						if(rc) {
							if(!$t.children(":checkbox").length) {
								nm = rcn.call(_this, $t);
								$t.prepend("<input type='checkbox' class='jstree-real-checkbox' id='" + nm[0] + "' name='" + nm[0] + "' value='" + nm[1] + "' />");
							}
							else {
								$t.children(":checkbox").addClass("jstree-real-checkbox");
							}
						}
						if(!ts) {
							if(c === "jstree-checked" || $t.hasClass("jstree-checked") || $t.children(':checked').length) {
								$t.find("li").andSelf().addClass("jstree-checked").children(":checkbox").prop("checked", true);
							}
						}
						else {
							if($t.hasClass("jstree-checked") || $t.children(':checked').length) {
								$t.addClass("jstree-checked").children(":checkbox").prop("checked", true);
							}
						}
					});
				});
				if(!ts) {
					obj.find(".jstree-checked").parent().parent().each(function () { _this._repair_state(this); }); 
				}
			},
			change_state : function (obj, state) {
				obj = this._get_node(obj);
				var coll = false, rc = this._get_settings().checkbox.real_checkboxes;
				if(!obj || obj === -1) { return false; }
				state = (state === false || state === true) ? state : obj.hasClass("jstree-checked");
				if(this._get_settings().checkbox.two_state) {
					if(state) { 
						obj.removeClass("jstree-checked").addClass("jstree-unchecked"); 
						if(rc) { obj.children(":checkbox").prop("checked", false); }
					}
					else { 
						obj.removeClass("jstree-unchecked").addClass("jstree-checked"); 
						if(rc) { obj.children(":checkbox").prop("checked", true); }
					}
				}
				else {
					if(state) { 
						coll = obj.find("li").andSelf();
						if(!coll.filter(".jstree-checked, .jstree-undetermined").length) { return false; }
						coll.removeClass("jstree-checked jstree-undetermined").addClass("jstree-unchecked"); 
						if(rc) { coll.children(":checkbox").prop("checked", false); }
					}
					else { 
						coll = obj.find("li").andSelf();
						if(!coll.filter(".jstree-unchecked, .jstree-undetermined").length) { return false; }
						coll.removeClass("jstree-unchecked jstree-undetermined").addClass("jstree-checked"); 
						if(rc) { coll.children(":checkbox").prop("checked", true); }
						if(this.data.ui) { this.data.ui.last_selected = obj; }
						this.data.checkbox.last_selected = obj;
					}
					obj.parentsUntil(".jstree", "li").each(function () {
						var $this = $(this);
						if(state) {
							if($this.children("ul").children("li.jstree-checked, li.jstree-undetermined").length) {
								$this.parentsUntil(".jstree", "li").andSelf().removeClass("jstree-checked jstree-unchecked").addClass("jstree-undetermined");
								if(rc) { $this.parentsUntil(".jstree", "li").andSelf().children(":checkbox").prop("checked", false); }
								return false;
							}
							else {
								$this.removeClass("jstree-checked jstree-undetermined").addClass("jstree-unchecked");
								if(rc) { $this.children(":checkbox").prop("checked", false); }
							}
						}
						else {
							if($this.children("ul").children("li.jstree-unchecked, li.jstree-undetermined").length) {
								$this.parentsUntil(".jstree", "li").andSelf().removeClass("jstree-checked jstree-unchecked").addClass("jstree-undetermined");
								if(rc) { $this.parentsUntil(".jstree", "li").andSelf().children(":checkbox").prop("checked", false); }
								return false;
							}
							else {
								$this.removeClass("jstree-unchecked jstree-undetermined").addClass("jstree-checked");
								if(rc) { $this.children(":checkbox").prop("checked", true); }
							}
						}
					});
				}
				if(this.data.ui && this.data.checkbox.noui) { this.data.ui.selected = this.get_checked(); }
				this.__callback(obj);
				return true;
			},
			check_node : function (obj) {
				if(this.change_state(obj, false)) { 
					obj = this._get_node(obj);
					if(this._get_settings().checkbox.checked_parent_open) {
						var t = this;
						obj.parents(".jstree-closed").each(function () { t.open_node(this, false, true); });
					}
					this.__callback({ "obj" : obj }); 
				}
			},
			uncheck_node : function (obj) {
				if(this.change_state(obj, true)) { this.__callback({ "obj" : this._get_node(obj) }); }
			},
			check_all : function () {
				var _this = this, 
					coll = this._get_settings().checkbox.two_state ? this.get_container_ul().find("li") : this.get_container_ul().children("li");
				coll.each(function () {
					_this.change_state(this, false);
				});
				this.__callback();
			},
			uncheck_all : function () {
				var _this = this,
					coll = this._get_settings().checkbox.two_state ? this.get_container_ul().find("li") : this.get_container_ul().children("li");
				coll.each(function () {
					_this.change_state(this, true);
				});
				this.__callback();
			},

			is_checked : function(obj) {
				obj = this._get_node(obj);
				return obj.length ? obj.is(".jstree-checked") : false;
			},
			get_checked : function (obj, get_all) {
				obj = !obj || obj === -1 ? this.get_container() : this._get_node(obj);
				return get_all || this._get_settings().checkbox.two_state ? obj.find(".jstree-checked") : obj.find("> ul > .jstree-checked, .jstree-undetermined > ul > .jstree-checked");
			},
			get_unchecked : function (obj, get_all) { 
				obj = !obj || obj === -1 ? this.get_container() : this._get_node(obj);
				return get_all || this._get_settings().checkbox.two_state ? obj.find(".jstree-unchecked") : obj.find("> ul > .jstree-unchecked, .jstree-undetermined > ul > .jstree-unchecked");
			},

			show_checkboxes : function () { this.get_container().children("ul").removeClass("jstree-no-checkboxes"); },
			hide_checkboxes : function () { this.get_container().children("ul").addClass("jstree-no-checkboxes"); },

			_repair_state : function (obj) {
				obj = this._get_node(obj);
				if(!obj.length) { return; }
				if(this._get_settings().checkbox.two_state) {
					obj.find('li').andSelf().not('.jstree-checked').removeClass('jstree-undetermined').addClass('jstree-unchecked').children(':checkbox').prop('checked', true);
					return;
				}
				var rc = this._get_settings().checkbox.real_checkboxes,
					a = obj.find("> ul > .jstree-checked").length,
					b = obj.find("> ul > .jstree-undetermined").length,
					c = obj.find("> ul > li").length;
				if(c === 0) { if(obj.hasClass("jstree-undetermined")) { this.change_state(obj, false); } }
				else if(a === 0 && b === 0) { this.change_state(obj, true); }
				else if(a === c) { this.change_state(obj, false); }
				else { 
					obj.parentsUntil(".jstree","li").andSelf().removeClass("jstree-checked jstree-unchecked").addClass("jstree-undetermined");
					if(rc) { obj.parentsUntil(".jstree", "li").andSelf().children(":checkbox").prop("checked", false); }
				}
			},
			reselect : function () {
				if(this.data.ui && this.data.checkbox.noui) { 
					var _this = this,
						s = this.data.ui.to_select;
					s = $.map($.makeArray(s), function (n) { return "#" + n.toString().replace(/^#/,"").replace(/\\\//g,"/").replace(/\//g,"\\\/").replace(/\\\./g,".").replace(/\./g,"\\.").replace(/\:/g,"\\:"); });
					this.deselect_all();
					$.each(s, function (i, val) { _this.check_node(val); });
					this.__callback();
				}
				else { 
					this.__call_old(); 
				}
			},
			save_loaded : function () {
				var _this = this;
				this.data.core.to_load = [];
				this.get_container_ul().find("li.jstree-closed.jstree-undetermined").each(function () {
					if(this.id) { _this.data.core.to_load.push("#" + this.id); }
				});
			}
		}
	});
	$(function() {
		var css_string = '.jstree .jstree-real-checkbox { display:none; } ';
		$.vakata.css.add_sheet({ str : css_string, title : "jstree" });
	});
})(jQuery);
//*/

/* 
 * jsTree XML plugin
 * The XML data store. Datastores are build by overriding the `load_node` and `_is_loaded` functions.
 */
(function ($) {
	$.vakata.xslt = function (xml, xsl, callback) {
		var rs = "", xm, xs, processor, support;
		// TODO: IE9 no XSLTProcessor, no document.recalc
		if(document.recalc) {
			xm = document.createElement('xml');
			xs = document.createElement('xml');
			xm.innerHTML = xml;
			xs.innerHTML = xsl;
			$("body").append(xm).append(xs);
			setTimeout( (function (xm, xs, callback) {
				return function () {
					callback.call(null, xm.transformNode(xs.XMLDocument));
					setTimeout( (function (xm, xs) { return function () { $(xm).remove(); $(xs).remove(); }; })(xm, xs), 200);
				};
			})(xm, xs, callback), 100);
			return true;
		}
		if(typeof window.DOMParser !== "undefined" && typeof window.XMLHttpRequest !== "undefined" && typeof window.XSLTProcessor === "undefined") {
			xml = new DOMParser().parseFromString(xml, "text/xml");
			xsl = new DOMParser().parseFromString(xsl, "text/xml");
			// alert(xml.transformNode());
			// callback.call(null, new XMLSerializer().serializeToString(rs));
			
		}
		if(typeof window.DOMParser !== "undefined" && typeof window.XMLHttpRequest !== "undefined" && typeof window.XSLTProcessor !== "undefined") {
			processor = new XSLTProcessor();
			support = $.isFunction(processor.transformDocument) ? (typeof window.XMLSerializer !== "undefined") : true;
			if(!support) { return false; }
			xml = new DOMParser().parseFromString(xml, "text/xml");
			xsl = new DOMParser().parseFromString(xsl, "text/xml");
			if($.isFunction(processor.transformDocument)) {
				rs = document.implementation.createDocument("", "", null);
				processor.transformDocument(xml, xsl, rs, null);
				callback.call(null, new XMLSerializer().serializeToString(rs));
				return true;
			}
			else {
				processor.importStylesheet(xsl);
				rs = processor.transformToFragment(xml, document);
				callback.call(null, $("<div />").append(rs).html());
				return true;
			}
		}
		return false;
	};
	var xsl = {
		'nest' : '<' + '?xml version="1.0" encoding="utf-8" ?>' + 
			'<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" >' + 
			'<xsl:output method="html" encoding="utf-8" omit-xml-declaration="yes" standalone="no" indent="no" media-type="text/html" />' + 
			'<xsl:template match="/">' + 
			'	<xsl:call-template name="nodes">' + 
			'		<xsl:with-param name="node" select="/root" />' + 
			'	</xsl:call-template>' + 
			'</xsl:template>' + 
			'<xsl:template name="nodes">' + 
			'	<xsl:param name="node" />' + 
			'	<ul>' + 
			'	<xsl:for-each select="$node/item">' + 
			'		<xsl:variable name="children" select="count(./item) &gt; 0" />' + 
			'		<li>' + 
			'			<xsl:attribute name="class">' + 
			'				<xsl:if test="position() = last()">jstree-last </xsl:if>' + 
			'				<xsl:choose>' + 
			'					<xsl:when test="@state = \'open\'">jstree-open </xsl:when>' + 
			'					<xsl:when test="$children or @hasChildren or @state = \'closed\'">jstree-closed </xsl:when>' + 
			'					<xsl:otherwise>jstree-leaf </xsl:otherwise>' + 
			'				</xsl:choose>' + 
			'				<xsl:value-of select="@class" />' + 
			'			</xsl:attribute>' + 
			'			<xsl:for-each select="@*">' + 
			'				<xsl:if test="name() != \'class\' and name() != \'state\' and name() != \'hasChildren\'">' + 
			'					<xsl:attribute name="{name()}"><xsl:value-of select="." /></xsl:attribute>' + 
			'				</xsl:if>' + 
			'			</xsl:for-each>' + 
			'	<ins class="jstree-icon"><xsl:text>&#xa0;</xsl:text></ins>' + 
			'			<xsl:for-each select="content/name">' + 
			'				<a>' + 
			'				<xsl:attribute name="href">' + 
			'					<xsl:choose>' + 
			'					<xsl:when test="@href"><xsl:value-of select="@href" /></xsl:when>' + 
			'					<xsl:otherwise>#</xsl:otherwise>' + 
			'					</xsl:choose>' + 
			'				</xsl:attribute>' + 
			'				<xsl:attribute name="class"><xsl:value-of select="@lang" /> <xsl:value-of select="@class" /></xsl:attribute>' + 
			'				<xsl:attribute name="style"><xsl:value-of select="@style" /></xsl:attribute>' + 
			'				<xsl:for-each select="@*">' + 
			'					<xsl:if test="name() != \'style\' and name() != \'class\' and name() != \'href\'">' + 
			'						<xsl:attribute name="{name()}"><xsl:value-of select="." /></xsl:attribute>' + 
			'					</xsl:if>' + 
			'				</xsl:for-each>' + 
			'					<ins>' + 
			'						<xsl:attribute name="class">jstree-icon ' + 
			'							<xsl:if test="string-length(attribute::icon) > 0 and not(contains(@icon,\'/\'))"><xsl:value-of select="@icon" /></xsl:if>' + 
			'						</xsl:attribute>' + 
			'						<xsl:if test="string-length(attribute::icon) > 0 and contains(@icon,\'/\')"><xsl:attribute name="style">background:url(<xsl:value-of select="@icon" />) center center no-repeat;</xsl:attribute></xsl:if>' + 
			'						<xsl:text>&#xa0;</xsl:text>' + 
			'					</ins>' + 
			'					<xsl:copy-of select="./child::node()" />' + 
			'				</a>' + 
			'			</xsl:for-each>' + 
			'			<xsl:if test="$children or @hasChildren"><xsl:call-template name="nodes"><xsl:with-param name="node" select="current()" /></xsl:call-template></xsl:if>' + 
			'		</li>' + 
			'	</xsl:for-each>' + 
			'	</ul>' + 
			'</xsl:template>' + 
			'</xsl:stylesheet>',

		'flat' : '<' + '?xml version="1.0" encoding="utf-8" ?>' + 
			'<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" >' + 
			'<xsl:output method="html" encoding="utf-8" omit-xml-declaration="yes" standalone="no" indent="no" media-type="text/xml" />' + 
			'<xsl:template match="/">' + 
			'	<ul>' + 
			'	<xsl:for-each select="//item[not(@parent_id) or @parent_id=0 or not(@parent_id = //item/@id)]">' + /* the last `or` may be removed */
			'		<xsl:call-template name="nodes">' + 
			'			<xsl:with-param name="node" select="." />' + 
			'			<xsl:with-param name="is_last" select="number(position() = last())" />' + 
			'		</xsl:call-template>' + 
			'	</xsl:for-each>' + 
			'	</ul>' + 
			'</xsl:template>' + 
			'<xsl:template name="nodes">' + 
			'	<xsl:param name="node" />' + 
			'	<xsl:param name="is_last" />' + 
			'	<xsl:variable name="children" select="count(//item[@parent_id=$node/attribute::id]) &gt; 0" />' + 
			'	<li>' + 
			'	<xsl:attribute name="class">' + 
			'		<xsl:if test="$is_last = true()">jstree-last </xsl:if>' + 
			'		<xsl:choose>' + 
			'			<xsl:when test="@state = \'open\'">jstree-open </xsl:when>' + 
			'			<xsl:when test="$children or @hasChildren or @state = \'closed\'">jstree-closed </xsl:when>' + 
			'			<xsl:otherwise>jstree-leaf </xsl:otherwise>' + 
			'		</xsl:choose>' + 
			'		<xsl:value-of select="@class" />' + 
			'	</xsl:attribute>' + 
			'	<xsl:for-each select="@*">' + 
			'		<xsl:if test="name() != \'parent_id\' and name() != \'hasChildren\' and name() != \'class\' and name() != \'state\'">' + 
			'		<xsl:attribute name="{name()}"><xsl:value-of select="." /></xsl:attribute>' + 
			'		</xsl:if>' + 
			'	</xsl:for-each>' + 
			'	<ins class="jstree-icon"><xsl:text>&#xa0;</xsl:text></ins>' + 
			'	<xsl:for-each select="content/name">' + 
			'		<a>' + 
			'		<xsl:attribute name="href">' + 
			'			<xsl:choose>' + 
			'			<xsl:when test="@href"><xsl:value-of select="@href" /></xsl:when>' + 
			'			<xsl:otherwise>#</xsl:otherwise>' + 
			'			</xsl:choose>' + 
			'		</xsl:attribute>' + 
			'		<xsl:attribute name="class"><xsl:value-of select="@lang" /> <xsl:value-of select="@class" /></xsl:attribute>' + 
			'		<xsl:attribute name="style"><xsl:value-of select="@style" /></xsl:attribute>' + 
			'		<xsl:for-each select="@*">' + 
			'			<xsl:if test="name() != \'style\' and name() != \'class\' and name() != \'href\'">' + 
			'				<xsl:attribute name="{name()}"><xsl:value-of select="." /></xsl:attribute>' + 
			'			</xsl:if>' + 
			'		</xsl:for-each>' + 
			'			<ins>' + 
			'				<xsl:attribute name="class">jstree-icon ' + 
			'					<xsl:if test="string-length(attribute::icon) > 0 and not(contains(@icon,\'/\'))"><xsl:value-of select="@icon" /></xsl:if>' + 
			'				</xsl:attribute>' + 
			'				<xsl:if test="string-length(attribute::icon) > 0 and contains(@icon,\'/\')"><xsl:attribute name="style">background:url(<xsl:value-of select="@icon" />) center center no-repeat;</xsl:attribute></xsl:if>' + 
			'				<xsl:text>&#xa0;</xsl:text>' + 
			'			</ins>' + 
			'			<xsl:copy-of select="./child::node()" />' + 
			'		</a>' + 
			'	</xsl:for-each>' + 
			'	<xsl:if test="$children">' + 
			'		<ul>' + 
			'		<xsl:for-each select="//item[@parent_id=$node/attribute::id]">' + 
			'			<xsl:call-template name="nodes">' + 
			'				<xsl:with-param name="node" select="." />' + 
			'				<xsl:with-param name="is_last" select="number(position() = last())" />' + 
			'			</xsl:call-template>' + 
			'		</xsl:for-each>' + 
			'		</ul>' + 
			'	</xsl:if>' + 
			'	</li>' + 
			'</xsl:template>' + 
			'</xsl:stylesheet>'
	},
	escape_xml = function(string) {
		return string
			.toString()
			.replace(/&/g, '&amp;')
			.replace(/</g, '&lt;')
			.replace(/>/g, '&gt;')
			.replace(/"/g, '&quot;')
			.replace(/'/g, '&apos;');
	};
	$.jstree.plugin("xml_data", {
		defaults : { 
			data : false,
			ajax : false,
			xsl : "flat",
			clean_node : false,
			correct_state : true,
			get_skip_empty : false,
			get_include_preamble : true
		},
		_fn : {
			load_node : function (obj, s_call, e_call) { var _this = this; this.load_node_xml(obj, function () { _this.__callback({ "obj" : _this._get_node(obj) }); s_call.call(this); }, e_call); },
			_is_loaded : function (obj) { 
				var s = this._get_settings().xml_data;
				obj = this._get_node(obj);
				return obj == -1 || !obj || (!s.ajax && !$.isFunction(s.data)) || obj.is(".jstree-open, .jstree-leaf") || obj.children("ul").children("li").size() > 0;
			},
			load_node_xml : function (obj, s_call, e_call) {
				var s = this.get_settings().xml_data,
					error_func = function () {},
					success_func = function () {};

				obj = this._get_node(obj);
				if(obj && obj !== -1) {
					if(obj.data("jstree_is_loading")) { return; }
					else { obj.data("jstree_is_loading",true); }
				}
				switch(!0) {
					case (!s.data && !s.ajax): throw "Neither data nor ajax settings supplied.";
					case ($.isFunction(s.data)):
						s.data.call(this, obj, $.proxy(function (d) {
							this.parse_xml(d, $.proxy(function (d) {
								if(d) {
									d = d.replace(/ ?xmlns="[^"]*"/ig, "");
									if(d.length > 10) {
										d = $(d);
										if(obj === -1 || !obj) { this.get_container().children("ul").empty().append(d.children()); }
										else { obj.children("a.jstree-loading").removeClass("jstree-loading"); obj.append(d); obj.removeData("jstree_is_loading"); }
										if(s.clean_node) { this.clean_node(obj); }
										if(s_call) { s_call.call(this); }
									}
									else {
										if(obj && obj !== -1) { 
											obj.children("a.jstree-loading").removeClass("jstree-loading");
											obj.removeData("jstree_is_loading");
											if(s.correct_state) { 
												this.correct_state(obj);
												if(s_call) { s_call.call(this); } 
											}
										}
										else {
											if(s.correct_state) { 
												this.get_container().children("ul").empty();
												if(s_call) { s_call.call(this); } 
											}
										}
									}
								}
							}, this));
						}, this));
						break;
					case (!!s.data && !s.ajax) || (!!s.data && !!s.ajax && (!obj || obj === -1)):
						if(!obj || obj == -1) {
							this.parse_xml(s.data, $.proxy(function (d) {
								if(d) {
									d = d.replace(/ ?xmlns="[^"]*"/ig, "");
									if(d.length > 10) {
										d = $(d);
										this.get_container().children("ul").empty().append(d.children());
										if(s.clean_node) { this.clean_node(obj); }
										if(s_call) { s_call.call(this); }
									}
								}
								else { 
									if(s.correct_state) { 
										this.get_container().children("ul").empty(); 
										if(s_call) { s_call.call(this); }
									}
								}
							}, this));
						}
						break;
					case (!s.data && !!s.ajax) || (!!s.data && !!s.ajax && obj && obj !== -1):
						error_func = function (x, t, e) {
							var ef = this.get_settings().xml_data.ajax.error; 
							if(ef) { ef.call(this, x, t, e); }
							if(obj !== -1 && obj.length) {
								obj.children("a.jstree-loading").removeClass("jstree-loading");
								obj.removeData("jstree_is_loading");
								if(t === "success" && s.correct_state) { this.correct_state(obj); }
							}
							else {
								if(t === "success" && s.correct_state) { this.get_container().children("ul").empty(); }
							}
							if(e_call) { e_call.call(this); }
						};
						success_func = function (d, t, x) {
							d = x.responseText;
							var sf = this.get_settings().xml_data.ajax.success; 
							if(sf) { d = sf.call(this,d,t,x) || d; }
							if(d === "" || (d && d.toString && d.toString().replace(/^[\s\n]+$/,"") === "")) {
								return error_func.call(this, x, t, "");
							}
							this.parse_xml(d, $.proxy(function (d) {
								if(d) {
									d = d.replace(/ ?xmlns="[^"]*"/ig, "");
									if(d.length > 10) {
										d = $(d);
										if(obj === -1 || !obj) { this.get_container().children("ul").empty().append(d.children()); }
										else { obj.children("a.jstree-loading").removeClass("jstree-loading"); obj.append(d); obj.removeData("jstree_is_loading"); }
										if(s.clean_node) { this.clean_node(obj); }
										if(s_call) { s_call.call(this); }
									}
									else {
										if(obj && obj !== -1) { 
											obj.children("a.jstree-loading").removeClass("jstree-loading");
											obj.removeData("jstree_is_loading");
											if(s.correct_state) { 
												this.correct_state(obj);
												if(s_call) { s_call.call(this); } 
											}
										}
										else {
											if(s.correct_state) { 
												this.get_container().children("ul").empty();
												if(s_call) { s_call.call(this); } 
											}
										}
									}
								}
							}, this));
						};
						s.ajax.context = this;
						s.ajax.error = error_func;
						s.ajax.success = success_func;
						if(!s.ajax.dataType) { s.ajax.dataType = "xml"; }
						if($.isFunction(s.ajax.url)) { s.ajax.url = s.ajax.url.call(this, obj); }
						if($.isFunction(s.ajax.data)) { s.ajax.data = s.ajax.data.call(this, obj); }
						$.ajax(s.ajax);
						break;
				}
			},
			parse_xml : function (xml, callback) {
				var s = this._get_settings().xml_data;
				$.vakata.xslt(xml, xsl[s.xsl], callback);
			},
			get_xml : function (tp, obj, li_attr, a_attr, is_callback) {
				var result = "", 
					s = this._get_settings(), 
					_this = this,
					tmp1, tmp2, li, a, lang;
				if(!tp) { tp = "flat"; }
				if(!is_callback) { is_callback = 0; }
				obj = this._get_node(obj);
				if(!obj || obj === -1) { obj = this.get_container().find("> ul > li"); }
				li_attr = $.isArray(li_attr) ? li_attr : [ "id", "class" ];
				if(!is_callback && this.data.types && $.inArray(s.types.type_attr, li_attr) === -1) { li_attr.push(s.types.type_attr); }

				a_attr = $.isArray(a_attr) ? a_attr : [ ];

				if(!is_callback) { 
					if(s.xml_data.get_include_preamble) { 
						result += '<' + '?xml version="1.0" encoding="UTF-8"?' + '>'; 
					}
					result += "<root>"; 
				}
				obj.each(function () {
					result += "<item";
					li = $(this);
					$.each(li_attr, function (i, v) { 
						var t = li.attr(v);
						if(!s.xml_data.get_skip_empty || typeof t !== "undefined") {
							result += " " + v + "=\"" + escape_xml((" " + (t || "")).replace(/ jstree[^ ]*/ig,'').replace(/\s+$/ig," ").replace(/^ /,"").replace(/ $/,"")) + "\""; 
						}
					});
					if(li.hasClass("jstree-open")) { result += " state=\"open\""; }
					if(li.hasClass("jstree-closed")) { result += " state=\"closed\""; }
					if(tp === "flat") { result += " parent_id=\"" + escape_xml(is_callback) + "\""; }
					result += ">";
					result += "<content>";
					a = li.children("a");
					a.each(function () {
						tmp1 = $(this);
						lang = false;
						result += "<name";
						if($.inArray("languages", s.plugins) !== -1) {
							$.each(s.languages, function (k, z) {
								if(tmp1.hasClass(z)) { result += " lang=\"" + escape_xml(z) + "\""; lang = z; return false; }
							});
						}
						if(a_attr.length) { 
							$.each(a_attr, function (k, z) {
								var t = tmp1.attr(z);
								if(!s.xml_data.get_skip_empty || typeof t !== "undefined") {
									result += " " + z + "=\"" + escape_xml((" " + t || "").replace(/ jstree[^ ]*/ig,'').replace(/\s+$/ig," ").replace(/^ /,"").replace(/ $/,"")) + "\"";
								}
							});
						}
						if(tmp1.children("ins").get(0).className.replace(/jstree[^ ]*|$/ig,'').replace(/^\s+$/ig,"").length) {
							result += ' icon="' + escape_xml(tmp1.children("ins").get(0).className.replace(/jstree[^ ]*|$/ig,'').replace(/\s+$/ig," ").replace(/^ /,"").replace(/ $/,"")) + '"';
						}
						if(tmp1.children("ins").get(0).style.backgroundImage.length) {
							result += ' icon="' + escape_xml(tmp1.children("ins").get(0).style.backgroundImage.replace("url(","").replace(")","").replace(/'/ig,"").replace(/"/ig,"")) + '"';
						}
						result += ">";
						result += "<![CDATA[" + _this.get_text(tmp1, lang) + "]]>";
						result += "</name>";
					});
					result += "</content>";
					tmp2 = li[0].id || true;
					li = li.find("> ul > li");
					if(li.length) { tmp2 = _this.get_xml(tp, li, li_attr, a_attr, tmp2); }
					else { tmp2 = ""; }
					if(tp == "nest") { result += tmp2; }
					result += "</item>";
					if(tp == "flat") { result += tmp2; }
				});
				if(!is_callback) { result += "</root>"; }
				return result;
			}
		}
	});
})(jQuery);
//*/

/*
 * jsTree search plugin
 * Enables both sync and async search on the tree
 * DOES NOT WORK WITH JSON PROGRESSIVE RENDER
 */
(function ($) {
	$.expr[':'].jstree_contains = function(a,i,m){
		return (a.textContent || a.innerText || "").toLowerCase().indexOf(m[3].toLowerCase())>=0;
	};
	$.expr[':'].jstree_title_contains = function(a,i,m) {
		return (a.getAttribute("title") || "").toLowerCase().indexOf(m[3].toLowerCase())>=0;
	};
	$.jstree.plugin("search", {
		__init : function () {
			this.data.search.str = "";
			this.data.search.result = $();
			if(this._get_settings().search.show_only_matches) {
				this.get_container()
					.bind("search.jstree", function (e, data) {
						$(this).children("ul").find("li").hide().removeClass("jstree-last");
						data.rslt.nodes.parentsUntil(".jstree").andSelf().show()
							.filter("ul").each(function () { $(this).children("li:visible").eq(-1).addClass("jstree-last"); });
					})
					.bind("clear_search.jstree", function () {
						$(this).children("ul").find("li").css("display","").end().end().jstree("clean_node", -1);
					});
			}
		},
		defaults : {
			ajax : false,
			search_method : "jstree_contains", // for case insensitive - jstree_contains
			show_only_matches : false
		},
		_fn : {
			search : function (str, skip_async) {
				if($.trim(str) === "") { this.clear_search(); return; }
				var s = this.get_settings().search, 
					t = this,
					error_func = function () { },
					success_func = function () { };
				this.data.search.str = str;

				if(!skip_async && s.ajax !== false && this.get_container_ul().find("li.jstree-closed:not(:has(ul)):eq(0)").length > 0) {
					this.search.supress_callback = true;
					error_func = function () { };
					success_func = function (d, t, x) {
						var sf = this.get_settings().search.ajax.success; 
						if(sf) { d = sf.call(this,d,t,x) || d; }
						this.data.search.to_open = d;
						this._search_open();
					};
					s.ajax.context = this;
					s.ajax.error = error_func;
					s.ajax.success = success_func;
					if($.isFunction(s.ajax.url)) { s.ajax.url = s.ajax.url.call(this, str); }
					if($.isFunction(s.ajax.data)) { s.ajax.data = s.ajax.data.call(this, str); }
					if(!s.ajax.data) { s.ajax.data = { "search_string" : str }; }
					if(!s.ajax.dataType || /^json/.exec(s.ajax.dataType)) { s.ajax.dataType = "json"; }
					$.ajax(s.ajax);
					return;
				}
				if(this.data.search.result.length) { this.clear_search(); }
				this.data.search.result = this.get_container().find("a" + (this.data.languages ? "." + this.get_lang() : "" ) + ":" + (s.search_method) + "(" + this.data.search.str + ")");
				this.data.search.result.addClass("jstree-search").parent().parents(".jstree-closed").each(function () {
					t.open_node(this, false, true);
				});
				this.__callback({ nodes : this.data.search.result, str : str });
			},
			clear_search : function (str) {
				this.data.search.result.removeClass("jstree-search");
				this.__callback(this.data.search.result);
				this.data.search.result = $();
			},
			_search_open : function (is_callback) {
				var _this = this,
					done = true,
					current = [],
					remaining = [];
				if(this.data.search.to_open.length) {
					$.each(this.data.search.to_open, function (i, val) {
						if(val == "#") { return true; }
						if($(val).length && $(val).is(".jstree-closed")) { current.push(val); }
						else { remaining.push(val); }
					});
					if(current.length) {
						this.data.search.to_open = remaining;
						$.each(current, function (i, val) { 
							_this.open_node(val, function () { _this._search_open(true); }); 
						});
						done = false;
					}
				}
				if(done) { this.search(this.data.search.str, true); }
			}
		}
	});
})(jQuery);
//*/

/* 
 * jsTree contextmenu plugin
 */
(function ($) {
	$.vakata.context = {
		hide_on_mouseleave : false,

		cnt		: $("<div id='vakata-contextmenu' />"),
		vis		: false,
		tgt		: false,
		par		: false,
		func	: false,
		data	: false,
		rtl		: false,
		show	: function (s, t, x, y, d, p, rtl) {
			$.vakata.context.rtl = !!rtl;
			var html = $.vakata.context.parse(s), h, w;
			if(!html) { return; }
			$.vakata.context.vis = true;
			$.vakata.context.tgt = t;
			$.vakata.context.par = p || t || null;
			$.vakata.context.data = d || null;
			$.vakata.context.cnt
				.html(html)
				.css({ "visibility" : "hidden", "display" : "block", "left" : 0, "top" : 0 });

			if($.vakata.context.hide_on_mouseleave) {
				$.vakata.context.cnt
					.one("mouseleave", function(e) { $.vakata.context.hide(); });
			}

			h = $.vakata.context.cnt.height();
			w = $.vakata.context.cnt.width();
			if(x + w > $(document).width()) { 
				x = $(document).width() - (w + 5); 
				$.vakata.context.cnt.find("li > ul").addClass("right"); 
			}
			if(y + h > $(document).height()) { 
				y = y - (h + t[0].offsetHeight); 
				$.vakata.context.cnt.find("li > ul").addClass("bottom"); 
			}

			$.vakata.context.cnt
				.css({ "left" : x, "top" : y })
				.find("li:has(ul)")
					.bind("mouseenter", function (e) { 
						var w = $(document).width(),
							h = $(document).height(),
							ul = $(this).children("ul").show(); 
						if(w !== $(document).width()) { ul.toggleClass("right"); }
						if(h !== $(document).height()) { ul.toggleClass("bottom"); }
					})
					.bind("mouseleave", function (e) { 
						$(this).children("ul").hide(); 
					})
					.end()
				.css({ "visibility" : "visible" })
				.show();
			$(document).triggerHandler("context_show.vakata");
		},
		hide	: function () {
			$.vakata.context.vis = false;
			$.vakata.context.cnt.attr("class","").css({ "visibility" : "hidden" });
			$(document).triggerHandler("context_hide.vakata");
		},
		parse	: function (s, is_callback) {
			if(!s) { return false; }
			var str = "",
				tmp = false,
				was_sep = true;
			if(!is_callback) { $.vakata.context.func = {}; }
			str += "<ul>";
			$.each(s, function (i, val) {
				if(!val) { return true; }
				$.vakata.context.func[i] = val.action;
				if(!was_sep && val.separator_before) {
					str += "<li class='vakata-separator vakata-separator-before'></li>";
				}
				was_sep = false;
				str += "<li class='" + (val._class || "") + (val._disabled ? " jstree-contextmenu-disabled " : "") + "'><ins ";
				if(val.icon && val.icon.indexOf("/") === -1) { str += " class='" + val.icon + "' "; }
				if(val.icon && val.icon.indexOf("/") !== -1) { str += " style='background:url(" + val.icon + ") center center no-repeat;' "; }
				str += ">&#160;</ins><a href='#' rel='" + i + "'>";
				if(val.submenu) {
					str += "<span style='float:" + ($.vakata.context.rtl ? "left" : "right") + ";'>&raquo;</span>";
				}
				str += val.label + "</a>";
				if(val.submenu) {
					tmp = $.vakata.context.parse(val.submenu, true);
					if(tmp) { str += tmp; }
				}
				str += "</li>";
				if(val.separator_after) {
					str += "<li class='vakata-separator vakata-separator-after'></li>";
					was_sep = true;
				}
			});
			str = str.replace(/<li class\='vakata-separator vakata-separator-after'\><\/li\>$/,"");
			str += "</ul>";
			$(document).triggerHandler("context_parse.vakata");
			return str.length > 10 ? str : false;
		},
		exec	: function (i) {
			if($.isFunction($.vakata.context.func[i])) {
				// if is string - eval and call it!
				$.vakata.context.func[i].call($.vakata.context.data, $.vakata.context.par);
				return true;
			}
			else { return false; }
		}
	};
	$(function () {
		var css_string = '' + 
			'#vakata-contextmenu { display:block; visibility:hidden; left:0; top:-200px; position:absolute; margin:0; padding:0; min-width:180px; background:#ebebeb; border:1px solid silver; z-index:10000; *width:180px; } ' + 
			'#vakata-contextmenu ul { min-width:180px; *width:180px; } ' + 
			'#vakata-contextmenu ul, #vakata-contextmenu li { margin:0; padding:0; list-style-type:none; display:block; } ' + 
			'#vakata-contextmenu li { line-height:20px; min-height:20px; position:relative; padding:0px; } ' + 
			'#vakata-contextmenu li a { padding:1px 6px; line-height:17px; display:block; text-decoration:none; margin:1px 1px 0 1px; } ' + 
			'#vakata-contextmenu li ins { float:left; width:16px; height:16px; text-decoration:none; margin-right:2px; } ' + 
			'#vakata-contextmenu li a:hover, #vakata-contextmenu li.vakata-hover > a { background:gray; color:white; } ' + 
			'#vakata-contextmenu li ul { display:none; position:absolute; top:-2px; left:100%; background:#ebebeb; border:1px solid gray; } ' + 
			'#vakata-contextmenu .right { right:100%; left:auto; } ' + 
			'#vakata-contextmenu .bottom { bottom:-1px; top:auto; } ' + 
			'#vakata-contextmenu li.vakata-separator { min-height:0; height:1px; line-height:1px; font-size:1px; overflow:hidden; margin:0 2px; background:silver; /* border-top:1px solid #fefefe; */ padding:0; } ';
		$.vakata.css.add_sheet({ str : css_string, title : "vakata" });
		$.vakata.context.cnt
			.delegate("a","click", function (e) { e.preventDefault(); })
			.delegate("a","mouseup", function (e) {
				if(!$(this).parent().hasClass("jstree-contextmenu-disabled") && $.vakata.context.exec($(this).attr("rel"))) {
					$.vakata.context.hide();
				}
				else { $(this).blur(); }
			})
			.delegate("a","mouseover", function () {
				$.vakata.context.cnt.find(".vakata-hover").removeClass("vakata-hover");
			})
			.appendTo("body");
		$(document).bind("mousedown", function (e) { if($.vakata.context.vis && !$.contains($.vakata.context.cnt[0], e.target)) { $.vakata.context.hide(); } });
		if(typeof $.hotkeys !== "undefined") {
			$(document)
				.bind("keydown", "up", function (e) { 
					if($.vakata.context.vis) { 
						var o = $.vakata.context.cnt.find("ul:visible").last().children(".vakata-hover").removeClass("vakata-hover").prevAll("li:not(.vakata-separator)").first();
						if(!o.length) { o = $.vakata.context.cnt.find("ul:visible").last().children("li:not(.vakata-separator)").last(); }
						o.addClass("vakata-hover");
						e.stopImmediatePropagation(); 
						e.preventDefault();
					} 
				})
				.bind("keydown", "down", function (e) { 
					if($.vakata.context.vis) { 
						var o = $.vakata.context.cnt.find("ul:visible").last().children(".vakata-hover").removeClass("vakata-hover").nextAll("li:not(.vakata-separator)").first();
						if(!o.length) { o = $.vakata.context.cnt.find("ul:visible").last().children("li:not(.vakata-separator)").first(); }
						o.addClass("vakata-hover");
						e.stopImmediatePropagation(); 
						e.preventDefault();
					} 
				})
				.bind("keydown", "right", function (e) { 
					if($.vakata.context.vis) { 
						$.vakata.context.cnt.find(".vakata-hover").children("ul").show().children("li:not(.vakata-separator)").removeClass("vakata-hover").first().addClass("vakata-hover");
						e.stopImmediatePropagation(); 
						e.preventDefault();
					} 
				})
				.bind("keydown", "left", function (e) { 
					if($.vakata.context.vis) { 
						$.vakata.context.cnt.find(".vakata-hover").children("ul").hide().children(".vakata-separator").removeClass("vakata-hover");
						e.stopImmediatePropagation(); 
						e.preventDefault();
					} 
				})
				.bind("keydown", "esc", function (e) { 
					$.vakata.context.hide(); 
					e.preventDefault();
				})
				.bind("keydown", "space", function (e) { 
					$.vakata.context.cnt.find(".vakata-hover").last().children("a").click();
					e.preventDefault();
				});
		}
	});

	$.jstree.plugin("contextmenu", {
		__init : function () {
			this.get_container()
				.delegate("a", "contextmenu.jstree", $.proxy(function (e) {
						e.preventDefault();
						if(!$(e.currentTarget).hasClass("jstree-loading")) {
							this.show_contextmenu(e.currentTarget, e.pageX, e.pageY);
						}
					}, this))
				.delegate("a", "click.jstree", $.proxy(function (e) {
						if(this.data.contextmenu) {
							$.vakata.context.hide();
						}
					}, this))
				.bind("destroy.jstree", $.proxy(function () {
						// TODO: move this to descruct method
						if(this.data.contextmenu) {
							$.vakata.context.hide();
						}
					}, this));
			$(document).bind("context_hide.vakata", $.proxy(function () { this.data.contextmenu = false; }, this));
		},
		defaults : { 
			select_node : false, // requires UI plugin
			show_at_node : true,
			items : { // Could be a function that should return an object like this one
				"create" : {
					"separator_before"	: false,
					"separator_after"	: true,
					"label"				: "Create",
					"action"			: function (obj) { this.create(obj); }
				},
				"rename" : {
					"separator_before"	: false,
					"separator_after"	: false,
					"label"				: "Rename",
					"action"			: function (obj) { this.rename(obj); }
				},
				"remove" : {
					"separator_before"	: false,
					"icon"				: false,
					"separator_after"	: false,
					"label"				: "Delete",
					"action"			: function (obj) { if(this.is_selected(obj)) { this.remove(); } else { this.remove(obj); } }
				},
				"ccp" : {
					"separator_before"	: true,
					"icon"				: false,
					"separator_after"	: false,
					"label"				: "Edit",
					"action"			: false,
					"submenu" : { 
						"cut" : {
							"separator_before"	: false,
							"separator_after"	: false,
							"label"				: "Cut",
							"action"			: function (obj) { this.cut(obj); }
						},
						"copy" : {
							"separator_before"	: false,
							"icon"				: false,
							"separator_after"	: false,
							"label"				: "Copy",
							"action"			: function (obj) { this.copy(obj); }
						},
						"paste" : {
							"separator_before"	: false,
							"icon"				: false,
							"separator_after"	: false,
							"label"				: "Paste",
							"action"			: function (obj) { this.paste(obj); }
						}
					}
				}
			}
		},
		_fn : {
			show_contextmenu : function (obj, x, y) {
				obj = this._get_node(obj);
				var s = this.get_settings().contextmenu,
					a = obj.children("a:visible:eq(0)"),
					o = false,
					i = false;
				if(s.select_node && this.data.ui && !this.is_selected(obj)) {
					this.deselect_all();
					this.select_node(obj, true);
				}
				if(s.show_at_node || typeof x === "undefined" || typeof y === "undefined") {
					o = a.offset();
					x = o.left;
					y = o.top + this.data.core.li_height;
				}
				i = obj.data("jstree") && obj.data("jstree").contextmenu ? obj.data("jstree").contextmenu : s.items;
				if($.isFunction(i)) { i = i.call(this, obj); }
				this.data.contextmenu = true;
				$.vakata.context.show(i, a, x, y, this, obj, this._get_settings().core.rtl);
				if(this.data.themes) { $.vakata.context.cnt.attr("class", "jstree-" + this.data.themes.theme + "-context"); }
			}
		}
	});
})(jQuery);
//*/

/* 
 * jsTree types plugin
 * Adds support types of nodes
 * You can set an attribute on each li node, that represents its type.
 * According to the type setting the node may get custom icon/validation rules
 */
(function ($) {
	$.jstree.plugin("types", {
		__init : function () {
			var s = this._get_settings().types;
			this.data.types.attach_to = [];
			this.get_container()
				.bind("init.jstree", $.proxy(function () { 
						var types = s.types, 
							attr  = s.type_attr, 
							icons_css = "", 
							_this = this;

						$.each(types, function (i, tp) {
							$.each(tp, function (k, v) { 
								if(!/^(max_depth|max_children|icon|valid_children)$/.test(k)) { _this.data.types.attach_to.push(k); }
							});
							if(!tp.icon) { return true; }
							if( tp.icon.image || tp.icon.position) {
								if(i == "default")	{ icons_css += '.jstree-' + _this.get_index() + ' a > .jstree-icon { '; }
								else				{ icons_css += '.jstree-' + _this.get_index() + ' li[' + attr + '="' + i + '"] > a > .jstree-icon { '; }
								if(tp.icon.image)	{ icons_css += ' background-image:url(' + tp.icon.image + '); '; }
								if(tp.icon.position){ icons_css += ' background-position:' + tp.icon.position + '; '; }
								else				{ icons_css += ' background-position:0 0; '; }
								icons_css += '} ';
							}
						});
						if(icons_css !== "") { $.vakata.css.add_sheet({ 'str' : icons_css, title : "jstree-types" }); }
					}, this))
				.bind("before.jstree", $.proxy(function (e, data) { 
						var s, t, 
							o = this._get_settings().types.use_data ? this._get_node(data.args[0]) : false, 
							d = o && o !== -1 && o.length ? o.data("jstree") : false;
						if(d && d.types && d.types[data.func] === false) { e.stopImmediatePropagation(); return false; }
						if($.inArray(data.func, this.data.types.attach_to) !== -1) {
							if(!data.args[0] || (!data.args[0].tagName && !data.args[0].jquery)) { return; }
							s = this._get_settings().types.types;
							t = this._get_type(data.args[0]);
							if(
								( 
									(s[t] && typeof s[t][data.func] !== "undefined") || 
									(s["default"] && typeof s["default"][data.func] !== "undefined") 
								) && this._check(data.func, data.args[0]) === false
							) {
								e.stopImmediatePropagation();
								return false;
							}
						}
					}, this));
			if(is_ie6) {
				this.get_container()
					.bind("load_node.jstree set_type.jstree", $.proxy(function (e, data) {
							var r = data && data.rslt && data.rslt.obj && data.rslt.obj !== -1 ? this._get_node(data.rslt.obj).parent() : this.get_container_ul(),
								c = false,
								s = this._get_settings().types;
							$.each(s.types, function (i, tp) {
								if(tp.icon && (tp.icon.image || tp.icon.position)) {
									c = i === "default" ? r.find("li > a > .jstree-icon") : r.find("li[" + s.type_attr + "='" + i + "'] > a > .jstree-icon");
									if(tp.icon.image) { c.css("backgroundImage","url(" + tp.icon.image + ")"); }
									c.css("backgroundPosition", tp.icon.position || "0 0");
								}
							});
						}, this));
			}
		},
		defaults : {
			// defines maximum number of root nodes (-1 means unlimited, -2 means disable max_children checking)
			max_children		: -1,
			// defines the maximum depth of the tree (-1 means unlimited, -2 means disable max_depth checking)
			max_depth			: -1,
			// defines valid node types for the root nodes
			valid_children		: "all",

			// whether to use $.data
			use_data : false, 
			// where is the type stores (the rel attribute of the LI element)
			type_attr : "rel",
			// a list of types
			types : {
				// the default type
				"default" : {
					"max_children"	: -1,
					"max_depth"		: -1,
					"valid_children": "all"

					// Bound functions - you can bind any other function here (using boolean or function)
					//"select_node"	: true
				}
			}
		},
		_fn : {
			_types_notify : function (n, data) {
				if(data.type && this._get_settings().types.use_data) {
					this.set_type(data.type, n);
				}
			},
			_get_type : function (obj) {
				obj = this._get_node(obj);
				return (!obj || !obj.length) ? false : obj.attr(this._get_settings().types.type_attr) || "default";
			},
			set_type : function (str, obj) {
				obj = this._get_node(obj);
				var ret = (!obj.length || !str) ? false : obj.attr(this._get_settings().types.type_attr, str);
				if(ret) { this.__callback({ obj : obj, type : str}); }
				return ret;
			},
			_check : function (rule, obj, opts) {
				obj = this._get_node(obj);
				var v = false, t = this._get_type(obj), d = 0, _this = this, s = this._get_settings().types, data = false;
				if(obj === -1) { 
					if(!!s[rule]) { v = s[rule]; }
					else { return; }
				}
				else {
					if(t === false) { return; }
					data = s.use_data ? obj.data("jstree") : false;
					if(data && data.types && typeof data.types[rule] !== "undefined") { v = data.types[rule]; }
					else if(!!s.types[t] && typeof s.types[t][rule] !== "undefined") { v = s.types[t][rule]; }
					else if(!!s.types["default"] && typeof s.types["default"][rule] !== "undefined") { v = s.types["default"][rule]; }
				}
				if($.isFunction(v)) { v = v.call(this, obj); }
				if(rule === "max_depth" && obj !== -1 && opts !== false && s.max_depth !== -2 && v !== 0) {
					// also include the node itself - otherwise if root node it is not checked
					obj.children("a:eq(0)").parentsUntil(".jstree","li").each(function (i) {
						// check if current depth already exceeds global tree depth
						if(s.max_depth !== -1 && s.max_depth - (i + 1) <= 0) { v = 0; return false; }
						d = (i === 0) ? v : _this._check(rule, this, false);
						// check if current node max depth is already matched or exceeded
						if(d !== -1 && d - (i + 1) <= 0) { v = 0; return false; }
						// otherwise - set the max depth to the current value minus current depth
						if(d >= 0 && (d - (i + 1) < v || v < 0) ) { v = d - (i + 1); }
						// if the global tree depth exists and it minus the nodes calculated so far is less than `v` or `v` is unlimited
						if(s.max_depth >= 0 && (s.max_depth - (i + 1) < v || v < 0) ) { v = s.max_depth - (i + 1); }
					});
				}
				return v;
			},
			check_move : function () {
				if(!this.__call_old()) { return false; }
				var m  = this._get_move(),
					s  = m.rt._get_settings().types,
					mc = m.rt._check("max_children", m.cr),
					md = m.rt._check("max_depth", m.cr),
					vc = m.rt._check("valid_children", m.cr),
					ch = 0, d = 1, t;

				if(vc === "none") { return false; } 
				if($.isArray(vc) && m.ot && m.ot._get_type) {
					m.o.each(function () {
						if($.inArray(m.ot._get_type(this), vc) === -1) { d = false; return false; }
					});
					if(d === false) { return false; }
				}
				if(s.max_children !== -2 && mc !== -1) {
					ch = m.cr === -1 ? this.get_container().find("> ul > li").not(m.o).length : m.cr.find("> ul > li").not(m.o).length;
					if(ch + m.o.length > mc) { return false; }
				}
				if(s.max_depth !== -2 && md !== -1) {
					d = 0;
					if(md === 0) { return false; }
					if(typeof m.o.d === "undefined") {
						// TODO: deal with progressive rendering and async when checking max_depth (how to know the depth of the moved node)
						t = m.o;
						while(t.length > 0) {
							t = t.find("> ul > li");
							d ++;
						}
						m.o.d = d;
					}
					if(md - m.o.d < 0) { return false; }
				}
				return true;
			},
			create_node : function (obj, position, js, callback, is_loaded, skip_check) {
				if(!skip_check && (is_loaded || this._is_loaded(obj))) {
					var p  = (typeof position == "string" && position.match(/^before|after$/i) && obj !== -1) ? this._get_parent(obj) : this._get_node(obj),
						s  = this._get_settings().types,
						mc = this._check("max_children", p),
						md = this._check("max_depth", p),
						vc = this._check("valid_children", p),
						ch;
					if(typeof js === "string") { js = { data : js }; }
					if(!js) { js = {}; }
					if(vc === "none") { return false; } 
					if($.isArray(vc)) {
						if(!js.attr || !js.attr[s.type_attr]) { 
							if(!js.attr) { js.attr = {}; }
							js.attr[s.type_attr] = vc[0]; 
						}
						else {
							if($.inArray(js.attr[s.type_attr], vc) === -1) { return false; }
						}
					}
					if(s.max_children !== -2 && mc !== -1) {
						ch = p === -1 ? this.get_container().find("> ul > li").length : p.find("> ul > li").length;
						if(ch + 1 > mc) { return false; }
					}
					if(s.max_depth !== -2 && md !== -1 && (md - 1) < 0) { return false; }
				}
				return this.__call_old(true, obj, position, js, callback, is_loaded, skip_check);
			}
		}
	});
})(jQuery);
//*/

/* 
 * jsTree HTML plugin
 * The HTML data store. Datastores are build by replacing the `load_node` and `_is_loaded` functions.
 */
(function ($) {
	$.jstree.plugin("html_data", {
		__init : function () { 
			// this used to use html() and clean the whitespace, but this way any attached data was lost
			this.data.html_data.original_container_html = this.get_container().find(" > ul > li").clone(true);
			// remove white space from LI node - otherwise nodes appear a bit to the right
			this.data.html_data.original_container_html.find("li").andSelf().contents().filter(function() { return this.nodeType == 3; }).remove();
		},
		defaults : { 
			data : false,
			ajax : false,
			correct_state : true
		},
		_fn : {
			load_node : function (obj, s_call, e_call) { var _this = this; this.load_node_html(obj, function () { _this.__callback({ "obj" : _this._get_node(obj) }); s_call.call(this); }, e_call); },
			_is_loaded : function (obj) { 
				obj = this._get_node(obj); 
				return obj == -1 || !obj || (!this._get_settings().html_data.ajax && !$.isFunction(this._get_settings().html_data.data)) || obj.is(".jstree-open, .jstree-leaf") || obj.children("ul").children("li").size() > 0;
			},
			load_node_html : function (obj, s_call, e_call) {
				var d,
					s = this.get_settings().html_data,
					error_func = function () {},
					success_func = function () {};
				obj = this._get_node(obj);
				if(obj && obj !== -1) {
					if(obj.data("jstree_is_loading")) { return; }
					else { obj.data("jstree_is_loading",true); }
				}
				switch(!0) {
					case ($.isFunction(s.data)):
						s.data.call(this, obj, $.proxy(function (d) {
							if(d && d !== "" && d.toString && d.toString().replace(/^[\s\n]+$/,"") !== "") {
								d = $(d);
								if(!d.is("ul")) { d = $("<ul />").append(d); }
								if(obj == -1 || !obj) { this.get_container().children("ul").empty().append(d.children()).find("li, a").filter(function () { return !this.firstChild || !this.firstChild.tagName || this.firstChild.tagName !== "INS"; }).prepend("<ins class='jstree-icon'>&#160;</ins>").end().filter("a").children("ins:first-child").not(".jstree-icon").addClass("jstree-icon"); }
								else { obj.children("a.jstree-loading").removeClass("jstree-loading"); obj.append(d).children("ul").find("li, a").filter(function () { return !this.firstChild || !this.firstChild.tagName || this.firstChild.tagName !== "INS"; }).prepend("<ins class='jstree-icon'>&#160;</ins>").end().filter("a").children("ins:first-child").not(".jstree-icon").addClass("jstree-icon"); obj.removeData("jstree_is_loading"); }
								this.clean_node(obj);
								if(s_call) { s_call.call(this); }
							}
							else {
								if(obj && obj !== -1) {
									obj.children("a.jstree-loading").removeClass("jstree-loading");
									obj.removeData("jstree_is_loading");
									if(s.correct_state) { 
										this.correct_state(obj);
										if(s_call) { s_call.call(this); } 
									}
								}
								else {
									if(s.correct_state) { 
										this.get_container().children("ul").empty();
										if(s_call) { s_call.call(this); } 
									}
								}
							}
						}, this));
						break;
					case (!s.data && !s.ajax):
						if(!obj || obj == -1) {
							this.get_container()
								.children("ul").empty()
								.append(this.data.html_data.original_container_html)
								.find("li, a").filter(function () { return !this.firstChild || !this.firstChild.tagName || this.firstChild.tagName !== "INS"; }).prepend("<ins class='jstree-icon'>&#160;</ins>").end()
								.filter("a").children("ins:first-child").not(".jstree-icon").addClass("jstree-icon");
							this.clean_node();
						}
						if(s_call) { s_call.call(this); }
						break;
					case (!!s.data && !s.ajax) || (!!s.data && !!s.ajax && (!obj || obj === -1)):
						if(!obj || obj == -1) {
							d = $(s.data);
							if(!d.is("ul")) { d = $("<ul />").append(d); }
							this.get_container()
								.children("ul").empty().append(d.children())
								.find("li, a").filter(function () { return !this.firstChild || !this.firstChild.tagName || this.firstChild.tagName !== "INS"; }).prepend("<ins class='jstree-icon'>&#160;</ins>").end()
								.filter("a").children("ins:first-child").not(".jstree-icon").addClass("jstree-icon");
							this.clean_node();
						}
						if(s_call) { s_call.call(this); }
						break;
					case (!s.data && !!s.ajax) || (!!s.data && !!s.ajax && obj && obj !== -1):
						obj = this._get_node(obj);
						error_func = function (x, t, e) {
							var ef = this.get_settings().html_data.ajax.error; 
							if(ef) { ef.call(this, x, t, e); }
							if(obj != -1 && obj.length) {
								obj.children("a.jstree-loading").removeClass("jstree-loading");
								obj.removeData("jstree_is_loading");
								if(t === "success" && s.correct_state) { this.correct_state(obj); }
							}
							else {
								if(t === "success" && s.correct_state) { this.get_container().children("ul").empty(); }
							}
							if(e_call) { e_call.call(this); }
						};
						success_func = function (d, t, x) {
							var sf = this.get_settings().html_data.ajax.success; 
							if(sf) { d = sf.call(this,d,t,x) || d; }
							if(d === "" || (d && d.toString && d.toString().replace(/^[\s\n]+$/,"") === "")) {
								return error_func.call(this, x, t, "");
							}
							if(d) {
								d = $(d);
								if(!d.is("ul")) { d = $("<ul />").append(d); }
								if(obj == -1 || !obj) { this.get_container().children("ul").empty().append(d.children()).find("li, a").filter(function () { return !this.firstChild || !this.firstChild.tagName || this.firstChild.tagName !== "INS"; }).prepend("<ins class='jstree-icon'>&#160;</ins>").end().filter("a").children("ins:first-child").not(".jstree-icon").addClass("jstree-icon"); }
								else { obj.children("a.jstree-loading").removeClass("jstree-loading"); obj.append(d).children("ul").find("li, a").filter(function () { return !this.firstChild || !this.firstChild.tagName || this.firstChild.tagName !== "INS"; }).prepend("<ins class='jstree-icon'>&#160;</ins>").end().filter("a").children("ins:first-child").not(".jstree-icon").addClass("jstree-icon"); obj.removeData("jstree_is_loading"); }
								this.clean_node(obj);
								if(s_call) { s_call.call(this); }
							}
							else {
								if(obj && obj !== -1) {
									obj.children("a.jstree-loading").removeClass("jstree-loading");
									obj.removeData("jstree_is_loading");
									if(s.correct_state) { 
										this.correct_state(obj);
										if(s_call) { s_call.call(this); } 
									}
								}
								else {
									if(s.correct_state) { 
										this.get_container().children("ul").empty();
										if(s_call) { s_call.call(this); } 
									}
								}
							}
						};
						s.ajax.context = this;
						s.ajax.error = error_func;
						s.ajax.success = success_func;
						if(!s.ajax.dataType) { s.ajax.dataType = "html"; }
						if($.isFunction(s.ajax.url)) { s.ajax.url = s.ajax.url.call(this, obj); }
						if($.isFunction(s.ajax.data)) { s.ajax.data = s.ajax.data.call(this, obj); }
						$.ajax(s.ajax);
						break;
				}
			}
		}
	});
	// include the HTML data plugin by default
	$.jstree.defaults.plugins.push("html_data");
})(jQuery);
//*/

/* 
 * jsTree themeroller plugin
 * Adds support for jQuery UI themes. Include this at the end of your plugins list, also make sure "themes" is not included.
 */
(function ($) {
	$.jstree.plugin("themeroller", {
		__init : function () {
			var s = this._get_settings().themeroller;
			this.get_container()
				.addClass("ui-widget-content")
				.addClass("jstree-themeroller")
				.delegate("a","mouseenter.jstree", function (e) {
					if(!$(e.currentTarget).hasClass("jstree-loading")) {
						$(this).addClass(s.item_h);
					}
				})
				.delegate("a","mouseleave.jstree", function () {
					$(this).removeClass(s.item_h);
				})
				.bind("init.jstree", $.proxy(function (e, data) { 
						data.inst.get_container().find("> ul > li > .jstree-loading > ins").addClass("ui-icon-refresh");
						this._themeroller(data.inst.get_container().find("> ul > li"));
					}, this))
				.bind("open_node.jstree create_node.jstree", $.proxy(function (e, data) { 
						this._themeroller(data.rslt.obj);
					}, this))
				.bind("loaded.jstree refresh.jstree", $.proxy(function (e) {
						this._themeroller();
					}, this))
				.bind("close_node.jstree", $.proxy(function (e, data) {
						this._themeroller(data.rslt.obj);
					}, this))
				.bind("delete_node.jstree", $.proxy(function (e, data) {
						this._themeroller(data.rslt.parent);
					}, this))
				.bind("correct_state.jstree", $.proxy(function (e, data) {
						data.rslt.obj
							.children("ins.jstree-icon").removeClass(s.opened + " " + s.closed + " ui-icon").end()
							.find("> a > ins.ui-icon")
								.filter(function() { 
									return this.className.toString()
										.replace(s.item_clsd,"").replace(s.item_open,"").replace(s.item_leaf,"")
										.indexOf("ui-icon-") === -1; 
								}).removeClass(s.item_open + " " + s.item_clsd).addClass(s.item_leaf || "jstree-no-icon");
					}, this))
				.bind("select_node.jstree", $.proxy(function (e, data) {
						data.rslt.obj.children("a").addClass(s.item_a);
					}, this))
				.bind("deselect_node.jstree deselect_all.jstree", $.proxy(function (e, data) {
						this.get_container()
							.find("a." + s.item_a).removeClass(s.item_a).end()
							.find("a.jstree-clicked").addClass(s.item_a);
					}, this))
				.bind("dehover_node.jstree", $.proxy(function (e, data) {
						data.rslt.obj.children("a").removeClass(s.item_h);
					}, this))
				.bind("hover_node.jstree", $.proxy(function (e, data) {
						this.get_container()
							.find("a." + s.item_h).not(data.rslt.obj).removeClass(s.item_h);
						data.rslt.obj.children("a").addClass(s.item_h);
					}, this))
				.bind("move_node.jstree", $.proxy(function (e, data) {
						this._themeroller(data.rslt.o);
						this._themeroller(data.rslt.op);
					}, this));
		},
		__destroy : function () {
			var s = this._get_settings().themeroller,
				c = [ "ui-icon" ];
			$.each(s, function (i, v) {
				v = v.split(" ");
				if(v.length) { c = c.concat(v); }
			});
			this.get_container()
				.removeClass("ui-widget-content")
				.find("." + c.join(", .")).removeClass(c.join(" "));
		},
		_fn : {
			_themeroller : function (obj) {
				var s = this._get_settings().themeroller;
				obj = !obj || obj == -1 ? this.get_container_ul() : this._get_node(obj).parent();
				obj
					.find("li.jstree-closed")
						.children("ins.jstree-icon").removeClass(s.opened).addClass("ui-icon " + s.closed).end()
						.children("a").addClass(s.item)
							.children("ins.jstree-icon").addClass("ui-icon")
								.filter(function() { 
									return this.className.toString()
										.replace(s.item_clsd,"").replace(s.item_open,"").replace(s.item_leaf,"")
										.indexOf("ui-icon-") === -1; 
								}).removeClass(s.item_leaf + " " + s.item_open).addClass(s.item_clsd || "jstree-no-icon")
								.end()
							.end()
						.end()
					.end()
					.find("li.jstree-open")
						.children("ins.jstree-icon").removeClass(s.closed).addClass("ui-icon " + s.opened).end()
						.children("a").addClass(s.item)
							.children("ins.jstree-icon").addClass("ui-icon")
								.filter(function() { 
									return this.className.toString()
										.replace(s.item_clsd,"").replace(s.item_open,"").replace(s.item_leaf,"")
										.indexOf("ui-icon-") === -1; 
								}).removeClass(s.item_leaf + " " + s.item_clsd).addClass(s.item_open || "jstree-no-icon")
								.end()
							.end()
						.end()
					.end()
					.find("li.jstree-leaf")
						.children("ins.jstree-icon").removeClass(s.closed + " ui-icon " + s.opened).end()
						.children("a").addClass(s.item)
							.children("ins.jstree-icon").addClass("ui-icon")
								.filter(function() { 
									return this.className.toString()
										.replace(s.item_clsd,"").replace(s.item_open,"").replace(s.item_leaf,"")
										.indexOf("ui-icon-") === -1; 
								}).removeClass(s.item_clsd + " " + s.item_open).addClass(s.item_leaf || "jstree-no-icon");
			}
		},
		defaults : {
			"opened"	: "ui-icon-triangle-1-se",
			"closed"	: "ui-icon-triangle-1-e",
			"item"		: "ui-state-default",
			"item_h"	: "ui-state-hover",
			"item_a"	: "ui-state-active",
			"item_open"	: "ui-icon-folder-open",
			"item_clsd"	: "ui-icon-folder-collapsed",
			"item_leaf"	: "ui-icon-document"
		}
	});
	$(function() {
		var css_string = '' + 
			'.jstree-themeroller .ui-icon { overflow:visible; } ' + 
			'.jstree-themeroller a { padding:0 2px; } ' + 
			'.jstree-themeroller .jstree-no-icon { display:none; }';
		$.vakata.css.add_sheet({ str : css_string, title : "jstree" });
	});
})(jQuery);
//*/

/* 
 * jsTree unique plugin
 * Forces different names amongst siblings (still a bit experimental)
 * NOTE: does not check language versions (it will not be possible to have nodes with the same title, even in different languages)
 */
(function ($) {
	$.jstree.plugin("unique", {
		__init : function () {
			this.get_container()
				.bind("before.jstree", $.proxy(function (e, data) { 
						var nms = [], res = true, p, t;
						if(data.func == "move_node") {
							// obj, ref, position, is_copy, is_prepared, skip_check
							if(data.args[4] === true) {
								if(data.args[0].o && data.args[0].o.length) {
									data.args[0].o.children("a").each(function () { nms.push($(this).text().replace(/^\s+/g,"")); });
									res = this._check_unique(nms, data.args[0].np.find("> ul > li").not(data.args[0].o), "move_node");
								}
							}
						}
						if(data.func == "create_node") {
							// obj, position, js, callback, is_loaded
							if(data.args[4] || this._is_loaded(data.args[0])) {
								p = this._get_node(data.args[0]);
								if(data.args[1] && (data.args[1] === "before" || data.args[1] === "after")) {
									p = this._get_parent(data.args[0]);
									if(!p || p === -1) { p = this.get_container(); }
								}
								if(typeof data.args[2] === "string") { nms.push(data.args[2]); }
								else if(!data.args[2] || !data.args[2].data) { nms.push(this._get_string("new_node")); }
								else { nms.push(data.args[2].data); }
								res = this._check_unique(nms, p.find("> ul > li"), "create_node");
							}
						}
						if(data.func == "rename_node") {
							// obj, val
							nms.push(data.args[1]);
							t = this._get_node(data.args[0]);
							p = this._get_parent(t);
							if(!p || p === -1) { p = this.get_container(); }
							res = this._check_unique(nms, p.find("> ul > li").not(t), "rename_node");
						}
						if(!res) {
							e.stopPropagation();
							return false;
						}
					}, this));
		},
		defaults : { 
			error_callback : $.noop
		},
		_fn : { 
			_check_unique : function (nms, p, func) {
				var cnms = [];
				p.children("a").each(function () { cnms.push($(this).text().replace(/^\s+/g,"")); });
				if(!cnms.length || !nms.length) { return true; }
				cnms = cnms.sort().join(",,").replace(/(,|^)([^,]+)(,,\2)+(,|$)/g,"$1$2$4").replace(/,,+/g,",").replace(/,$/,"").split(",");
				if((cnms.length + nms.length) != cnms.concat(nms).sort().join(",,").replace(/(,|^)([^,]+)(,,\2)+(,|$)/g,"$1$2$4").replace(/,,+/g,",").replace(/,$/,"").split(",").length) {
					this._get_settings().unique.error_callback.call(null, nms, p, func);
					return false;
				}
				return true;
			},
			check_move : function () {
				if(!this.__call_old()) { return false; }
				var p = this._get_move(), nms = [];
				if(p.o && p.o.length) {
					p.o.children("a").each(function () { nms.push($(this).text().replace(/^\s+/g,"")); });
					return this._check_unique(nms, p.np.find("> ul > li").not(p.o), "check_move");
				}
				return true;
			}
		}
	});
})(jQuery);
//*/

/*
 * jsTree wholerow plugin
 * Makes select and hover work on the entire width of the node
 * MAY BE HEAVY IN LARGE DOM
 */
(function ($) {
	$.jstree.plugin("wholerow", {
		__init : function () {
			if(!this.data.ui) { throw "jsTree wholerow: jsTree UI plugin not included."; }
			this.data.wholerow.html = false;
			this.data.wholerow.to = false;
			this.get_container()
				.bind("init.jstree", $.proxy(function (e, data) { 
						this._get_settings().core.animation = 0;
					}, this))
				.bind("open_node.jstree create_node.jstree clean_node.jstree loaded.jstree", $.proxy(function (e, data) { 
						this._prepare_wholerow_span( data && data.rslt && data.rslt.obj ? data.rslt.obj : -1 );
					}, this))
				.bind("search.jstree clear_search.jstree reopen.jstree after_open.jstree after_close.jstree create_node.jstree delete_node.jstree clean_node.jstree", $.proxy(function (e, data) { 
						if(this.data.to) { clearTimeout(this.data.to); }
						this.data.to = setTimeout( (function (t, o) { return function() { t._prepare_wholerow_ul(o); }; })(this,  data && data.rslt && data.rslt.obj ? data.rslt.obj : -1), 0);
					}, this))
				.bind("deselect_all.jstree", $.proxy(function (e, data) { 
						this.get_container().find(" > .jstree-wholerow .jstree-clicked").removeClass("jstree-clicked " + (this.data.themeroller ? this._get_settings().themeroller.item_a : "" ));
					}, this))
				.bind("select_node.jstree deselect_node.jstree ", $.proxy(function (e, data) { 
						data.rslt.obj.each(function () { 
							var ref = data.inst.get_container().find(" > .jstree-wholerow li:visible:eq(" + ( parseInt((($(this).offset().top - data.inst.get_container().offset().top + data.inst.get_container()[0].scrollTop) / data.inst.data.core.li_height),10)) + ")");
							// ref.children("a")[e.type === "select_node" ? "addClass" : "removeClass"]("jstree-clicked");
							ref.children("a").attr("class",data.rslt.obj.children("a").attr("class"));
						});
					}, this))
				.bind("hover_node.jstree dehover_node.jstree", $.proxy(function (e, data) { 
						this.get_container().find(" > .jstree-wholerow .jstree-hovered").removeClass("jstree-hovered " + (this.data.themeroller ? this._get_settings().themeroller.item_h : "" ));
						if(e.type === "hover_node") {
							var ref = this.get_container().find(" > .jstree-wholerow li:visible:eq(" + ( parseInt(((data.rslt.obj.offset().top - this.get_container().offset().top + this.get_container()[0].scrollTop) / this.data.core.li_height),10)) + ")");
							// ref.children("a").addClass("jstree-hovered");
							ref.children("a").attr("class",data.rslt.obj.children(".jstree-hovered").attr("class"));
						}
					}, this))
				.delegate(".jstree-wholerow-span, ins.jstree-icon, li", "click.jstree", function (e) {
						var n = $(e.currentTarget);
						if(e.target.tagName === "A" || (e.target.tagName === "INS" && n.closest("li").is(".jstree-open, .jstree-closed"))) { return; }
						n.closest("li").children("a:visible:eq(0)").click();
						e.stopImmediatePropagation();
					})
				.delegate("li", "mouseover.jstree", $.proxy(function (e) {
						e.stopImmediatePropagation();
						if($(e.currentTarget).children(".jstree-hovered, .jstree-clicked").length) { return false; }
						this.hover_node(e.currentTarget);
						return false;
					}, this))
				.delegate("li", "mouseleave.jstree", $.proxy(function (e) {
						if($(e.currentTarget).children("a").hasClass("jstree-hovered").length) { return; }
						this.dehover_node(e.currentTarget);
					}, this));
			if(is_ie7 || is_ie6) {
				$.vakata.css.add_sheet({ str : ".jstree-" + this.get_index() + " { position:relative; } ", title : "jstree" });
			}
		},
		defaults : {
		},
		__destroy : function () {
			this.get_container().children(".jstree-wholerow").remove();
			this.get_container().find(".jstree-wholerow-span").remove();
		},
		_fn : {
			_prepare_wholerow_span : function (obj) {
				obj = !obj || obj == -1 ? this.get_container().find("> ul > li") : this._get_node(obj);
				if(obj === false) { return; } // added for removing root nodes
				obj.each(function () {
					$(this).find("li").andSelf().each(function () {
						var $t = $(this);
						if($t.children(".jstree-wholerow-span").length) { return true; }
						$t.prepend("<span class='jstree-wholerow-span' style='width:" + ($t.parentsUntil(".jstree","li").length * 18) + "px;'>&#160;</span>");
					});
				});
			},
			_prepare_wholerow_ul : function () {
				var o = this.get_container().children("ul").eq(0), h = o.html();
				o.addClass("jstree-wholerow-real");
				if(this.data.wholerow.last_html !== h) {
					this.data.wholerow.last_html = h;
					this.get_container().children(".jstree-wholerow").remove();
					this.get_container().append(
						o.clone().removeClass("jstree-wholerow-real")
							.wrapAll("<div class='jstree-wholerow' />").parent()
							.width(o.parent()[0].scrollWidth)
							.css("top", (o.height() + ( is_ie7 ? 5 : 0)) * -1 )
							.find("li[id]").each(function () { this.removeAttribute("id"); }).end()
					);
				}
			}
		}
	});
	$(function() {
		var css_string = '' + 
			'.jstree .jstree-wholerow-real { position:relative; z-index:1; } ' + 
			'.jstree .jstree-wholerow-real li { cursor:pointer; } ' + 
			'.jstree .jstree-wholerow-real a { border-left-color:transparent !important; border-right-color:transparent !important; } ' + 
			'.jstree .jstree-wholerow { position:relative; z-index:0; height:0; } ' + 
			'.jstree .jstree-wholerow ul, .jstree .jstree-wholerow li { width:100%; } ' + 
			'.jstree .jstree-wholerow, .jstree .jstree-wholerow ul, .jstree .jstree-wholerow li, .jstree .jstree-wholerow a { margin:0 !important; padding:0 !important; } ' + 
			'.jstree .jstree-wholerow, .jstree .jstree-wholerow ul, .jstree .jstree-wholerow li { background:transparent !important; }' + 
			'.jstree .jstree-wholerow ins, .jstree .jstree-wholerow span, .jstree .jstree-wholerow input { display:none !important; }' + 
			'.jstree .jstree-wholerow a, .jstree .jstree-wholerow a:hover { text-indent:-9999px; !important; width:100%; padding:0 !important; border-right-width:0px !important; border-left-width:0px !important; } ' + 
			'.jstree .jstree-wholerow-span { position:absolute; left:0; margin:0px; padding:0; height:18px; border-width:0; padding:0; z-index:0; }';
		if(is_ff2) {
			css_string += '' + 
				'.jstree .jstree-wholerow a { display:block; height:18px; margin:0; padding:0; border:0; } ' + 
				'.jstree .jstree-wholerow-real a { border-color:transparent !important; } ';
		}
		if(is_ie7 || is_ie6) {
			css_string += '' + 
				'.jstree .jstree-wholerow, .jstree .jstree-wholerow li, .jstree .jstree-wholerow ul, .jstree .jstree-wholerow a { margin:0; padding:0; line-height:18px; } ' + 
				'.jstree .jstree-wholerow a { display:block; height:18px; line-height:18px; overflow:hidden; } ';
		}
		$.vakata.css.add_sheet({ str : css_string, title : "jstree" });
	});
})(jQuery);
//*/

/*
* jsTree model plugin
* This plugin gets jstree to use a class model to retrieve data, creating great dynamism
*/
(function ($) {
	var nodeInterface = ["getChildren","getChildrenCount","getAttr","getName","getProps"],
		validateInterface = function(obj, inter) {
			var valid = true;
			obj = obj || {};
			inter = [].concat(inter);
			$.each(inter, function (i, v) {
				if(!$.isFunction(obj[v])) { valid = false; return false; }
			});
			return valid;
		};
	$.jstree.plugin("model", {
		__init : function () {
			if(!this.data.json_data) { throw "jsTree model: jsTree json_data plugin not included."; }
			this._get_settings().json_data.data = function (n, b) {
				var obj = (n == -1) ? this._get_settings().model.object : n.data("jstree_model");
				if(!validateInterface(obj, nodeInterface)) { return b.call(null, false); }
				if(this._get_settings().model.async) {
					obj.getChildren($.proxy(function (data) {
						this.model_done(data, b);
					}, this));
				}
				else {
					this.model_done(obj.getChildren(), b);
				}
			};
		},
		defaults : {
			object : false,
			id_prefix : false,
			'async': false
		},
		_fn : {
			model_done : function (data, callback) {
				var ret = [], 
					s = this._get_settings(),
					_this = this;

				if(!$.isArray(data)) { data = [data]; }
				$.each(data, function (i, nd) {
					var r = nd.getProps() || {};
					r.attr = nd.getAttr() || {};
					if(nd.getChildrenCount()) { r.state = "closed"; }
					r.data = nd.getName();
					if(!$.isArray(r.data)) { r.data = [r.data]; }
					if(_this.data.types && $.isFunction(nd.getType)) {
						r.attr[s.types.type_attr] = nd.getType();
					}
					if(r.attr.id && s.model.id_prefix) { r.attr.id = s.model.id_prefix + r.attr.id; }
					if(!r.metadata) { r.metadata = { }; }
					r.metadata.jstree_model = nd;
					ret.push(r);
				});
				callback.call(null, ret);
			}
		}
	});
})(jQuery);
//*/

})();;

/** jQuery FancyBox **/
/*
 * FancyBox - jQuery Plugin
 * Simple and fancy lightbox alternative
 *
 * Examples and documentation at: http://fancybox.net
 * 
 * Copyright (c) 2008 - 2010 Janis Skarnelis
 * That said, it is hardly a one-person project. Many people have submitted bugs, code, and offered their advice freely. Their support is greatly appreciated.
 * 
 * Version: 1.3.4 (11/11/2010)
 * Requires: jQuery v1.3+
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 */

;(function(b){var m,t,u,f,D,j,E,n,z,A,q=0,e={},o=[],p=0,d={},l=[],G=null,v=new Image,J=/\.(jpg|gif|png|bmp|jpeg)(.*)?$/i,W=/[^\.]\.(swf)\s*$/i,K,L=1,y=0,s="",r,i,h=false,B=b.extend(b("<div/>")[0],{prop:0}),M=b.browser.msie&&b.browser.version<7&&!window.XMLHttpRequest,N=function(){t.hide();v.onerror=v.onload=null;G&&G.abort();m.empty()},O=function(){if(false===e.onError(o,q,e)){t.hide();h=false}else{e.titleShow=false;e.width="auto";e.height="auto";m.html('<p id="fancybox-error">The requested content cannot be loaded.<br />Please try again later.</p>');
F()}},I=function(){var a=o[q],c,g,k,C,P,w;N();e=b.extend({},b.fn.fancybox.defaults,typeof b(a).data("fancybox")=="undefined"?e:b(a).data("fancybox"));w=e.onStart(o,q,e);if(w===false)h=false;else{if(typeof w=="object")e=b.extend(e,w);k=e.title||(a.nodeName?b(a).attr("title"):a.title)||"";if(a.nodeName&&!e.orig)e.orig=b(a).children("img:first").length?b(a).children("img:first"):b(a);if(k===""&&e.orig&&e.titleFromAlt)k=e.orig.attr("alt");c=e.href||(a.nodeName?b(a).attr("href"):a.href)||null;if(/^(?:javascript)/i.test(c)||
c=="#")c=null;if(e.type){g=e.type;if(!c)c=e.content}else if(e.content)g="html";else if(c)g=c.match(J)?"image":c.match(W)?"swf":b(a).hasClass("iframe")?"iframe":c.indexOf("#")===0?"inline":"ajax";if(g){if(g=="inline"){a=c.substr(c.indexOf("#"));g=b(a).length>0?"inline":"ajax"}e.type=g;e.href=c;e.title=k;if(e.autoDimensions)if(e.type=="html"||e.type=="inline"||e.type=="ajax"){e.width="auto";e.height="auto"}else e.autoDimensions=false;if(e.modal){e.overlayShow=true;e.hideOnOverlayClick=false;e.hideOnContentClick=
false;e.enableEscapeButton=false;e.showCloseButton=false}e.padding=parseInt(e.padding,10);e.margin=parseInt(e.margin,10);m.css("padding",e.padding+e.margin);b(".fancybox-inline-tmp").unbind("fancybox-cancel").bind("fancybox-change",function(){b(this).replaceWith(j.children())});switch(g){case "html":m.html(e.content);F();break;case "inline":if(b(a).parent().is("#fancybox-content")===true){h=false;break}b('<div class="fancybox-inline-tmp" />').hide().insertBefore(b(a)).bind("fancybox-cleanup",function(){b(this).replaceWith(j.children())}).bind("fancybox-cancel",
function(){b(this).replaceWith(m.children())});b(a).appendTo(m);F();break;case "image":h=false;b.fancybox.showActivity();v=new Image;v.onerror=function(){O()};v.onload=function(){h=true;v.onerror=v.onload=null;e.width=v.width;e.height=v.height;b("<img />").attr({id:"fancybox-img",src:v.src,alt:e.title}).appendTo(m);Q()};v.src=c;break;case "swf":e.scrolling="no";C='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="'+e.width+'" height="'+e.height+'"><param name="movie" value="'+c+
'"></param>';P="";b.each(e.swf,function(x,H){C+='<param name="'+x+'" value="'+H+'"></param>';P+=" "+x+'="'+H+'"'});C+='<embed src="'+c+'" type="application/x-shockwave-flash" width="'+e.width+'" height="'+e.height+'"'+P+"></embed></object>";m.html(C);F();break;case "ajax":h=false;b.fancybox.showActivity();e.ajax.win=e.ajax.success;G=b.ajax(b.extend({},e.ajax,{url:c,data:e.ajax.data||{},error:function(x){x.status>0&&O()},success:function(x,H,R){if((typeof R=="object"?R:G).status==200){if(typeof e.ajax.win==
"function"){w=e.ajax.win(c,x,H,R);if(w===false){t.hide();return}else if(typeof w=="string"||typeof w=="object")x=w}m.html(x);F()}}}));break;case "iframe":Q()}}else O()}},F=function(){var a=e.width,c=e.height;a=a.toString().indexOf("%")>-1?parseInt((b(window).width()-e.margin*2)*parseFloat(a)/100,10)+"px":a=="auto"?"auto":a+"px";c=c.toString().indexOf("%")>-1?parseInt((b(window).height()-e.margin*2)*parseFloat(c)/100,10)+"px":c=="auto"?"auto":c+"px";m.wrapInner('<div style="width:'+a+";height:"+c+
";overflow: "+(e.scrolling=="auto"?"auto":e.scrolling=="yes"?"scroll":"hidden")+';position:relative;"></div>');e.width=m.width();e.height=m.height();Q()},Q=function(){var a,c;t.hide();if(f.is(":visible")&&false===d.onCleanup(l,p,d)){b.event.trigger("fancybox-cancel");h=false}else{h=true;b(j.add(u)).unbind();b(window).unbind("resize.fb scroll.fb");b(document).unbind("keydown.fb");f.is(":visible")&&d.titlePosition!=="outside"&&f.css("height",f.height());l=o;p=q;d=e;if(d.overlayShow){u.css({"background-color":d.overlayColor,
opacity:d.overlayOpacity,cursor:d.hideOnOverlayClick?"pointer":"auto",height:b(document).height()});if(!u.is(":visible")){M&&b("select:not(#fancybox-tmp select)").filter(function(){return this.style.visibility!=="hidden"}).css({visibility:"hidden"}).one("fancybox-cleanup",function(){this.style.visibility="inherit"});u.show()}}else u.hide();i=X();s=d.title||"";y=0;n.empty().removeAttr("style").removeClass();if(d.titleShow!==false){if(b.isFunction(d.titleFormat))a=d.titleFormat(s,l,p,d);else a=s&&s.length?
d.titlePosition=="float"?'<table id="fancybox-title-float-wrap" cellpadding="0" cellspacing="0"><tr><td id="fancybox-title-float-left"></td><td id="fancybox-title-float-main">'+s+'</td><td id="fancybox-title-float-right"></td></tr></table>':'<div id="fancybox-title-'+d.titlePosition+'">'+s+"</div>":false;s=a;if(!(!s||s==="")){n.addClass("fancybox-title-"+d.titlePosition).html(s).appendTo("body").show();switch(d.titlePosition){case "inside":n.css({width:i.width-d.padding*2,marginLeft:d.padding,marginRight:d.padding});
y=n.outerHeight(true);n.appendTo(D);i.height+=y;break;case "over":n.css({marginLeft:d.padding,width:i.width-d.padding*2,bottom:d.padding}).appendTo(D);break;case "float":n.css("left",parseInt((n.width()-i.width-40)/2,10)*-1).appendTo(f);break;default:n.css({width:i.width-d.padding*2,paddingLeft:d.padding,paddingRight:d.padding}).appendTo(f)}}}n.hide();if(f.is(":visible")){b(E.add(z).add(A)).hide();a=f.position();r={top:a.top,left:a.left,width:f.width(),height:f.height()};c=r.width==i.width&&r.height==
i.height;j.fadeTo(d.changeFade,0.3,function(){var g=function(){j.html(m.contents()).fadeTo(d.changeFade,1,S)};b.event.trigger("fancybox-change");j.empty().removeAttr("filter").css({"border-width":d.padding,width:i.width-d.padding*2,height:e.autoDimensions?"auto":i.height-y-d.padding*2});if(c)g();else{B.prop=0;b(B).animate({prop:1},{duration:d.changeSpeed,easing:d.easingChange,step:T,complete:g})}})}else{f.removeAttr("style");j.css("border-width",d.padding);if(d.transitionIn=="elastic"){r=V();j.html(m.contents());
f.show();if(d.opacity)i.opacity=0;B.prop=0;b(B).animate({prop:1},{duration:d.speedIn,easing:d.easingIn,step:T,complete:S})}else{d.titlePosition=="inside"&&y>0&&n.show();j.css({width:i.width-d.padding*2,height:e.autoDimensions?"auto":i.height-y-d.padding*2}).html(m.contents());f.css(i).fadeIn(d.transitionIn=="none"?0:d.speedIn,S)}}}},Y=function(){if(d.enableEscapeButton||d.enableKeyboardNav)b(document).bind("keydown.fb",function(a){if(a.keyCode==27&&d.enableEscapeButton){a.preventDefault();b.fancybox.close()}else if((a.keyCode==
37||a.keyCode==39)&&d.enableKeyboardNav&&a.target.tagName!=="INPUT"&&a.target.tagName!=="TEXTAREA"&&a.target.tagName!=="SELECT"){a.preventDefault();b.fancybox[a.keyCode==37?"prev":"next"]()}});if(d.showNavArrows){if(d.cyclic&&l.length>1||p!==0)z.show();if(d.cyclic&&l.length>1||p!=l.length-1)A.show()}else{z.hide();A.hide()}},S=function(){if(!b.support.opacity){j.get(0).style.removeAttribute("filter");f.get(0).style.removeAttribute("filter")}e.autoDimensions&&j.css("height","auto");f.css("height","auto");
s&&s.length&&n.show();d.showCloseButton&&E.show();Y();d.hideOnContentClick&&j.bind("click",b.fancybox.close);d.hideOnOverlayClick&&u.bind("click",b.fancybox.close);b(window).bind("resize.fb",b.fancybox.resize);d.centerOnScroll&&b(window).bind("scroll.fb",b.fancybox.center);if(d.type=="iframe")b('<iframe id="fancybox-frame" name="fancybox-frame'+(new Date).getTime()+'" frameborder="0" hspace="0" '+(b.browser.msie?'allowtransparency="true""':"")+' scrolling="'+e.scrolling+'" src="'+d.href+'"></iframe>').appendTo(j);
f.show();h=false;b.fancybox.center();d.onComplete(l,p,d);var a,c;if(l.length-1>p){a=l[p+1].href;if(typeof a!=="undefined"&&a.match(J)){c=new Image;c.src=a}}if(p>0){a=l[p-1].href;if(typeof a!=="undefined"&&a.match(J)){c=new Image;c.src=a}}},T=function(a){var c={width:parseInt(r.width+(i.width-r.width)*a,10),height:parseInt(r.height+(i.height-r.height)*a,10),top:parseInt(r.top+(i.top-r.top)*a,10),left:parseInt(r.left+(i.left-r.left)*a,10)};if(typeof i.opacity!=="undefined")c.opacity=a<0.5?0.5:a;f.css(c);
j.css({width:c.width-d.padding*2,height:c.height-y*a-d.padding*2})},U=function(){return[b(window).width()-d.margin*2,b(window).height()-d.margin*2,b(document).scrollLeft()+d.margin,b(document).scrollTop()+d.margin]},X=function(){var a=U(),c={},g=d.autoScale,k=d.padding*2;c.width=d.width.toString().indexOf("%")>-1?parseInt(a[0]*parseFloat(d.width)/100,10):d.width+k;c.height=d.height.toString().indexOf("%")>-1?parseInt(a[1]*parseFloat(d.height)/100,10):d.height+k;if(g&&(c.width>a[0]||c.height>a[1]))if(e.type==
"image"||e.type=="swf"){g=d.width/d.height;if(c.width>a[0]){c.width=a[0];c.height=parseInt((c.width-k)/g+k,10)}if(c.height>a[1]){c.height=a[1];c.width=parseInt((c.height-k)*g+k,10)}}else{c.width=Math.min(c.width,a[0]);c.height=Math.min(c.height,a[1])}c.top=parseInt(Math.max(a[3]-20,a[3]+(a[1]-c.height-40)*0.5),10);c.left=parseInt(Math.max(a[2]-20,a[2]+(a[0]-c.width-40)*0.5),10);return c},V=function(){var a=e.orig?b(e.orig):false,c={};if(a&&a.length){c=a.offset();c.top+=parseInt(a.css("paddingTop"),
10)||0;c.left+=parseInt(a.css("paddingLeft"),10)||0;c.top+=parseInt(a.css("border-top-width"),10)||0;c.left+=parseInt(a.css("border-left-width"),10)||0;c.width=a.width();c.height=a.height();c={width:c.width+d.padding*2,height:c.height+d.padding*2,top:c.top-d.padding-20,left:c.left-d.padding-20}}else{a=U();c={width:d.padding*2,height:d.padding*2,top:parseInt(a[3]+a[1]*0.5,10),left:parseInt(a[2]+a[0]*0.5,10)}}return c},Z=function(){if(t.is(":visible")){b("div",t).css("top",L*-40+"px");L=(L+1)%12}else clearInterval(K)};
b.fn.fancybox=function(a){if(!b(this).length)return this;b(this).data("fancybox",b.extend({},a,b.metadata?b(this).metadata():{})).unbind("click.fb").bind("click.fb",function(c){c.preventDefault();if(!h){h=true;b(this).blur();o=[];q=0;c=b(this).attr("rel")||"";if(!c||c==""||c==="nofollow")o.push(this);else{o=b("a[rel="+c+"], area[rel="+c+"]");q=o.index(this)}I()}});return this};b.fancybox=function(a,c){var g;if(!h){h=true;g=typeof c!=="undefined"?c:{};o=[];q=parseInt(g.index,10)||0;if(b.isArray(a)){for(var k=
0,C=a.length;k<C;k++)if(typeof a[k]=="object")b(a[k]).data("fancybox",b.extend({},g,a[k]));else a[k]=b({}).data("fancybox",b.extend({content:a[k]},g));o=jQuery.merge(o,a)}else{if(typeof a=="object")b(a).data("fancybox",b.extend({},g,a));else a=b({}).data("fancybox",b.extend({content:a},g));o.push(a)}if(q>o.length||q<0)q=0;I()}};b.fancybox.showActivity=function(){clearInterval(K);t.show();K=setInterval(Z,66)};b.fancybox.hideActivity=function(){t.hide()};b.fancybox.next=function(){return b.fancybox.pos(p+
1)};b.fancybox.prev=function(){return b.fancybox.pos(p-1)};b.fancybox.pos=function(a){if(!h){a=parseInt(a);o=l;if(a>-1&&a<l.length){q=a;I()}else if(d.cyclic&&l.length>1){q=a>=l.length?0:l.length-1;I()}}};b.fancybox.cancel=function(){if(!h){h=true;b.event.trigger("fancybox-cancel");N();e.onCancel(o,q,e);h=false}};b.fancybox.close=function(){function a(){u.fadeOut("fast");n.empty().hide();f.hide();b.event.trigger("fancybox-cleanup");j.empty();d.onClosed(l,p,d);l=e=[];p=q=0;d=e={};h=false}if(!(h||f.is(":hidden"))){h=
true;if(d&&false===d.onCleanup(l,p,d))h=false;else{N();b(E.add(z).add(A)).hide();b(j.add(u)).unbind();b(window).unbind("resize.fb scroll.fb");b(document).unbind("keydown.fb");j.find("iframe").attr("src",M&&/^https/i.test(window.location.href||"")?"javascript:void(false)":"about:blank");d.titlePosition!=="inside"&&n.empty();f.stop();if(d.transitionOut=="elastic"){r=V();var c=f.position();i={top:c.top,left:c.left,width:f.width(),height:f.height()};if(d.opacity)i.opacity=1;n.empty().hide();B.prop=1;
b(B).animate({prop:0},{duration:d.speedOut,easing:d.easingOut,step:T,complete:a})}else f.fadeOut(d.transitionOut=="none"?0:d.speedOut,a)}}};b.fancybox.resize=function(){u.is(":visible")&&u.css("height",b(document).height());b.fancybox.center(true)};b.fancybox.center=function(a){var c,g;if(!h){g=a===true?1:0;c=U();!g&&(f.width()>c[0]||f.height()>c[1])||f.stop().animate({top:parseInt(Math.max(c[3]-20,c[3]+(c[1]-j.height()-40)*0.5-d.padding)),left:parseInt(Math.max(c[2]-20,c[2]+(c[0]-j.width()-40)*0.5-
d.padding))},typeof a=="number"?a:200)}};b.fancybox.init=function(){if(!b("#fancybox-wrap").length){b("body").append(m=b('<div id="fancybox-tmp"></div>'),t=b('<div id="fancybox-loading"><div></div></div>'),u=b('<div id="fancybox-overlay"></div>'),f=b('<div id="fancybox-wrap"></div>'));D=b('<div id="fancybox-outer"></div>').append('<div class="fancybox-bg" id="fancybox-bg-n"></div><div class="fancybox-bg" id="fancybox-bg-ne"></div><div class="fancybox-bg" id="fancybox-bg-e"></div><div class="fancybox-bg" id="fancybox-bg-se"></div><div class="fancybox-bg" id="fancybox-bg-s"></div><div class="fancybox-bg" id="fancybox-bg-sw"></div><div class="fancybox-bg" id="fancybox-bg-w"></div><div class="fancybox-bg" id="fancybox-bg-nw"></div>').appendTo(f);
D.append(j=b('<div id="fancybox-content"></div>'),E=b('<a id="fancybox-close"></a>'),n=b('<div id="fancybox-title"></div>'),z=b('<a href="javascript:;" id="fancybox-left"><span class="fancy-ico" id="fancybox-left-ico"></span></a>'),A=b('<a href="javascript:;" id="fancybox-right"><span class="fancy-ico" id="fancybox-right-ico"></span></a>'));E.click(b.fancybox.close);t.click(b.fancybox.cancel);z.click(function(a){a.preventDefault();b.fancybox.prev()});A.click(function(a){a.preventDefault();b.fancybox.next()});
b.fn.mousewheel&&f.bind("mousewheel.fb",function(a,c){if(h)a.preventDefault();else if(b(a.target).get(0).clientHeight==0||b(a.target).get(0).scrollHeight===b(a.target).get(0).clientHeight){a.preventDefault();b.fancybox[c>0?"prev":"next"]()}});b.support.opacity||f.addClass("fancybox-ie");if(M){t.addClass("fancybox-ie6");f.addClass("fancybox-ie6");b('<iframe id="fancybox-hide-sel-frame" src="'+(/^https/i.test(window.location.href||"")?"javascript:void(false)":"about:blank")+'" scrolling="no" border="0" frameborder="0" tabindex="-1"></iframe>').prependTo(D)}}};
b.fn.fancybox.defaults={padding:10,margin:40,opacity:false,modal:false,cyclic:false,scrolling:"auto",width:560,height:340,autoScale:true,autoDimensions:true,centerOnScroll:false,ajax:{},swf:{wmode:"transparent"},hideOnOverlayClick:true,hideOnContentClick:false,overlayShow:true,overlayOpacity:0.7,overlayColor:"#777",titleShow:true,titlePosition:"float",titleFormat:null,titleFromAlt:false,transitionIn:"fade",transitionOut:"fade",speedIn:300,speedOut:300,changeSpeed:300,changeFade:"fast",easingIn:"swing",
easingOut:"swing",showCloseButton:true,showNavArrows:true,enableEscapeButton:true,enableKeyboardNav:true,onStart:function(){},onCancel:function(){},onComplete:function(){},onCleanup:function(){},onClosed:function(){},onError:function(){}};b(document).ready(function(){b.fancybox.init()})})(jQuery);;

/** Plupload **/
/*1.5.4*/
(function(){var f=0,l=[],n={},j={},a={"<":"lt",">":"gt","&":"amp",'"':"quot","'":"#39"},m=/[<>&\"\']/g,b,c=window.setTimeout,d={},e;function h(){this.returnValue=false}function k(){this.cancelBubble=true}(function(o){var p=o.split(/,/),q,s,r;for(q=0;q<p.length;q+=2){r=p[q+1].split(/ /);for(s=0;s<r.length;s++){j[r[s]]=p[q]}}})("application/msword,doc dot,application/pdf,pdf,application/pgp-signature,pgp,application/postscript,ps ai eps,application/rtf,rtf,application/vnd.ms-excel,xls xlb,application/vnd.ms-powerpoint,ppt pps pot,application/zip,zip,application/x-shockwave-flash,swf swfl,application/vnd.openxmlformats-officedocument.wordprocessingml.document,docx,application/vnd.openxmlformats-officedocument.wordprocessingml.template,dotx,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,xlsx,application/vnd.openxmlformats-officedocument.presentationml.presentation,pptx,application/vnd.openxmlformats-officedocument.presentationml.template,potx,application/vnd.openxmlformats-officedocument.presentationml.slideshow,ppsx,application/x-javascript,js,application/json,json,audio/mpeg,mpga mpega mp2 mp3,audio/x-wav,wav,audio/mp4,m4a,image/bmp,bmp,image/gif,gif,image/jpeg,jpeg jpg jpe,image/photoshop,psd,image/png,png,image/svg+xml,svg svgz,image/tiff,tiff tif,text/plain,asc txt text diff log,text/html,htm html xhtml,text/css,css,text/csv,csv,text/rtf,rtf,video/mpeg,mpeg mpg mpe,video/quicktime,qt mov,video/mp4,mp4,video/x-m4v,m4v,video/x-flv,flv,video/x-ms-wmv,wmv,video/avi,avi,video/webm,webm,video/vnd.rn-realvideo,rv,application/vnd.oasis.opendocument.formula-template,otf,application/octet-stream,exe");var g={VERSION:"1.5.4",STOPPED:1,STARTED:2,QUEUED:1,UPLOADING:2,FAILED:4,DONE:5,GENERIC_ERROR:-100,HTTP_ERROR:-200,IO_ERROR:-300,SECURITY_ERROR:-400,INIT_ERROR:-500,FILE_SIZE_ERROR:-600,FILE_EXTENSION_ERROR:-601,IMAGE_FORMAT_ERROR:-700,IMAGE_MEMORY_ERROR:-701,IMAGE_DIMENSIONS_ERROR:-702,mimeTypes:j,ua:(function(){var s=navigator,r=s.userAgent,t=s.vendor,p,o,q;p=/WebKit/.test(r);q=p&&t.indexOf("Apple")!==-1;o=window.opera&&window.opera.buildNumber;return{windows:navigator.platform.indexOf("Win")!==-1,ie:!p&&!o&&(/MSIE/gi).test(r)&&(/Explorer/gi).test(s.appName),webkit:p,gecko:!p&&/Gecko/.test(r),safari:q,opera:!!o}}()),typeOf:function(p){return({}).toString.call(p).match(/\s([a-z|A-Z]+)/)[1].toLowerCase()},extend:function(o){g.each(arguments,function(p,q){if(q>0){g.each(p,function(s,r){o[r]=s})}});return o},cleanName:function(o){var p,q;q=[/[\300-\306]/g,"A",/[\340-\346]/g,"a",/\307/g,"C",/\347/g,"c",/[\310-\313]/g,"E",/[\350-\353]/g,"e",/[\314-\317]/g,"I",/[\354-\357]/g,"i",/\321/g,"N",/\361/g,"n",/[\322-\330]/g,"O",/[\362-\370]/g,"o",/[\331-\334]/g,"U",/[\371-\374]/g,"u"];for(p=0;p<q.length;p+=2){o=o.replace(q[p],q[p+1])}o=o.replace(/\s+/g,"_");o=o.replace(/[^a-z0-9_\-\.]+/gi,"");return o},addRuntime:function(o,p){p.name=o;l[o]=p;l.push(p);return p},guid:function(){var o=new Date().getTime().toString(32),p;for(p=0;p<5;p++){o+=Math.floor(Math.random()*65535).toString(32)}return(g.guidPrefix||"p")+o+(f++).toString(32)},buildUrl:function(p,o){var q="";g.each(o,function(s,r){q+=(q?"&":"")+encodeURIComponent(r)+"="+encodeURIComponent(s)});if(q){p+=(p.indexOf("?")>0?"&":"?")+q}return p},each:function(r,s){var q,p,o;if(r){q=r.length;if(q===b){for(p in r){if(r.hasOwnProperty(p)){if(s(r[p],p)===false){return}}}}else{for(o=0;o<q;o++){if(s(r[o],o)===false){return}}}}},formatSize:function(o){if(o===b||/\D/.test(o)){return g.translate("N/A")}if(o>1073741824){return Math.round(o/1073741824,1)+" GB"}if(o>1048576){return Math.round(o/1048576,1)+" MB"}if(o>1024){return Math.round(o/1024,1)+" KB"}return o+" b"},getPos:function(p,t){var u=0,s=0,w,v=document,q,r;p=p;t=t||v.body;function o(C){var A,B,z=0,D=0;if(C){B=C.getBoundingClientRect();A=v.compatMode==="CSS1Compat"?v.documentElement:v.body;z=B.left+A.scrollLeft;D=B.top+A.scrollTop}return{x:z,y:D}}if(p&&p.getBoundingClientRect&&((navigator.userAgent.indexOf("MSIE")>0)&&(v.documentMode<8))){q=o(p);r=o(t);return{x:q.x-r.x,y:q.y-r.y}}w=p;while(w&&w!=t&&w.nodeType){u+=w.offsetLeft||0;s+=w.offsetTop||0;w=w.offsetParent}w=p.parentNode;while(w&&w!=t&&w.nodeType){u-=w.scrollLeft||0;s-=w.scrollTop||0;w=w.parentNode}return{x:u,y:s}},getSize:function(o){return{w:o.offsetWidth||o.clientWidth,h:o.offsetHeight||o.clientHeight}},parseSize:function(o){var p;if(typeof(o)=="string"){o=/^([0-9]+)([mgk]?)$/.exec(o.toLowerCase().replace(/[^0-9mkg]/g,""));p=o[2];o=+o[1];if(p=="g"){o*=1073741824}if(p=="m"){o*=1048576}if(p=="k"){o*=1024}}return o},xmlEncode:function(o){return o?(""+o).replace(m,function(p){return a[p]?"&"+a[p]+";":p}):o},toArray:function(q){var p,o=[];for(p=0;p<q.length;p++){o[p]=q[p]}return o},inArray:function(q,r){if(r){if(Array.prototype.indexOf){return Array.prototype.indexOf.call(r,q)}for(var o=0,p=r.length;o<p;o++){if(r[o]===q){return o}}}return -1},addI18n:function(o){return g.extend(n,o)},translate:function(o){return n[o]||o},isEmptyObj:function(o){if(o===b){return true}for(var p in o){return false}return true},hasClass:function(q,p){var o;if(q.className==""){return false}o=new RegExp("(^|\\s+)"+p+"(\\s+|$)");return o.test(q.className)},addClass:function(p,o){if(!g.hasClass(p,o)){p.className=p.className==""?o:p.className.replace(/\s+$/,"")+" "+o}},removeClass:function(q,p){var o=new RegExp("(^|\\s+)"+p+"(\\s+|$)");q.className=q.className.replace(o,function(s,r,t){return r===" "&&t===" "?" ":""})},getStyle:function(p,o){if(p.currentStyle){return p.currentStyle[o]}else{if(window.getComputedStyle){return window.getComputedStyle(p,null)[o]}}},addEvent:function(t,o,u){var s,r,q,p;p=arguments[3];o=o.toLowerCase();if(e===b){e="Plupload_"+g.guid()}if(t.addEventListener){s=u;t.addEventListener(o,s,false)}else{if(t.attachEvent){s=function(){var v=window.event;if(!v.target){v.target=v.srcElement}v.preventDefault=h;v.stopPropagation=k;u(v)};t.attachEvent("on"+o,s)}}if(t[e]===b){t[e]=g.guid()}if(!d.hasOwnProperty(t[e])){d[t[e]]={}}r=d[t[e]];if(!r.hasOwnProperty(o)){r[o]=[]}r[o].push({func:s,orig:u,key:p})},removeEvent:function(t,o){var r,u,q;if(typeof(arguments[2])=="function"){u=arguments[2]}else{q=arguments[2]}o=o.toLowerCase();if(t[e]&&d[t[e]]&&d[t[e]][o]){r=d[t[e]][o]}else{return}for(var p=r.length-1;p>=0;p--){if(r[p].key===q||r[p].orig===u){if(t.removeEventListener){t.removeEventListener(o,r[p].func,false)}else{if(t.detachEvent){t.detachEvent("on"+o,r[p].func)}}r[p].orig=null;r[p].func=null;r.splice(p,1);if(u!==b){break}}}if(!r.length){delete d[t[e]][o]}if(g.isEmptyObj(d[t[e]])){delete d[t[e]];try{delete t[e]}catch(s){t[e]=b}}},removeAllEvents:function(p){var o=arguments[1];if(p[e]===b||!p[e]){return}g.each(d[p[e]],function(r,q){g.removeEvent(p,q,o)})}};g.Uploader=function(s){var p={},v,u=[],r,q=false;v=new g.QueueProgress();s=g.extend({chunk_size:0,multipart:true,multi_selection:true,file_data_name:"file",filters:[]},s);function t(){var x,y=0,w;if(this.state==g.STARTED){for(w=0;w<u.length;w++){if(!x&&u[w].status==g.QUEUED){x=u[w];x.status=g.UPLOADING;if(this.trigger("BeforeUpload",x)){this.trigger("UploadFile",x)}}else{y++}}if(y==u.length){this.stop();this.trigger("UploadComplete",u)}}}function o(){var x,w;v.reset();for(x=0;x<u.length;x++){w=u[x];if(w.size!==b){v.size+=w.size;v.loaded+=w.loaded}else{v.size=b}if(w.status==g.DONE){v.uploaded++}else{if(w.status==g.FAILED){v.failed++}else{v.queued++}}}if(v.size===b){v.percent=u.length>0?Math.ceil(v.uploaded/u.length*100):0}else{v.bytesPerSec=Math.ceil(v.loaded/((+new Date()-r||1)/1000));v.percent=v.size>0?Math.ceil(v.loaded/v.size*100):0}}g.extend(this,{state:g.STOPPED,runtime:"",features:{},files:u,settings:s,total:v,id:g.guid(),init:function(){var B=this,C,y,x,A=0,z;if(typeof(s.preinit)=="function"){s.preinit(B)}else{g.each(s.preinit,function(E,D){B.bind(D,E)})}s.page_url=s.page_url||document.location.pathname.replace(/\/[^\/]+$/g,"/");if(!/^(\w+:\/\/|\/)/.test(s.url)){s.url=s.page_url+s.url}s.chunk_size=g.parseSize(s.chunk_size);s.max_file_size=g.parseSize(s.max_file_size);B.bind("FilesAdded",function(D,G){var F,E,I=0,J,H=s.filters;if(H&&H.length){J=[];g.each(H,function(K){g.each(K.extensions.split(/,/),function(L){if(/^\s*\*\s*$/.test(L)){J.push("\\.*")}else{J.push("\\."+L.replace(new RegExp("["+("/^$.*+?|()[]{}\\".replace(/./g,"\\$&"))+"]","g"),"\\$&"))}})});J=new RegExp(J.join("|")+"$","i")}for(F=0;F<G.length;F++){E=G[F];E.loaded=0;E.percent=0;E.status=g.QUEUED;if(J&&!J.test(E.name)){D.trigger("Error",{code:g.FILE_EXTENSION_ERROR,message:g.translate("File extension error."),file:E});continue}if(E.size!==b&&E.size>s.max_file_size){D.trigger("Error",{code:g.FILE_SIZE_ERROR,message:g.translate("File size error."),file:E});continue}u.push(E);I++}if(I){c(function(){B.trigger("QueueChanged");B.refresh()},1)}else{return false}});if(s.unique_names){B.bind("UploadFile",function(D,E){var G=E.name.match(/\.([^.]+)$/),F="tmp";if(G){F=G[1]}E.target_name=E.id+"."+F})}B.bind("UploadProgress",function(D,E){E.percent=E.size>0?Math.ceil(E.loaded/E.size*100):100;o()});B.bind("StateChanged",function(D){if(D.state==g.STARTED){r=(+new Date())}else{if(D.state==g.STOPPED){for(C=D.files.length-1;C>=0;C--){if(D.files[C].status==g.UPLOADING){D.files[C].status=g.QUEUED;o()}}}}});B.bind("QueueChanged",o);B.bind("Error",function(D,E){if(E.file){E.file.status=g.FAILED;o();if(D.state==g.STARTED){c(function(){t.call(B)},1)}}});B.bind("FileUploaded",function(D,E){E.status=g.DONE;E.loaded=E.size;D.trigger("UploadProgress",E);c(function(){t.call(B)},1)});if(s.runtimes){y=[];z=s.runtimes.split(/\s?,\s?/);for(C=0;C<z.length;C++){if(l[z[C]]){y.push(l[z[C]])}}}else{y=l}function w(){var G=y[A++],F,D,E;if(G){F=G.getFeatures();D=B.settings.required_features;if(D){D=D.split(",");for(E=0;E<D.length;E++){if(!F[D[E]]){w();return}}}G.init(B,function(H){if(H&&H.success){B.features=F;B.runtime=G.name;B.trigger("Init",{runtime:G.name});B.trigger("PostInit");B.refresh()}else{w()}})}else{B.trigger("Error",{code:g.INIT_ERROR,message:g.translate("Init error.")})}}w();if(typeof(s.init)=="function"){s.init(B)}else{g.each(s.init,function(E,D){B.bind(D,E)})}},refresh:function(){this.trigger("Refresh")},start:function(){if(u.length&&this.state!=g.STARTED){this.state=g.STARTED;this.trigger("StateChanged");t.call(this)}},stop:function(){if(this.state!=g.STOPPED){this.state=g.STOPPED;this.trigger("CancelUpload");this.trigger("StateChanged")}},disableBrowse:function(){q=arguments[0]!==b?arguments[0]:true;this.trigger("DisableBrowse",q)},getFile:function(x){var w;for(w=u.length-1;w>=0;w--){if(u[w].id===x){return u[w]}}},removeFile:function(x){var w;for(w=u.length-1;w>=0;w--){if(u[w].id===x.id){return this.splice(w,1)[0]}}},splice:function(y,w){var x;x=u.splice(y===b?0:y,w===b?u.length:w);this.trigger("FilesRemoved",x);this.trigger("QueueChanged");return x},trigger:function(x){var z=p[x.toLowerCase()],y,w;if(z){w=Array.prototype.slice.call(arguments);w[0]=this;for(y=0;y<z.length;y++){if(z[y].func.apply(z[y].scope,w)===false){return false}}}return true},hasEventListener:function(w){return !!p[w.toLowerCase()]},bind:function(w,y,x){var z;w=w.toLowerCase();z=p[w]||[];z.push({func:y,scope:x||this});p[w]=z},unbind:function(w){w=w.toLowerCase();var z=p[w],x,y=arguments[1];if(z){if(y!==b){for(x=z.length-1;x>=0;x--){if(z[x].func===y){z.splice(x,1);break}}}else{z=[]}if(!z.length){delete p[w]}}},unbindAll:function(){var w=this;g.each(p,function(y,x){w.unbind(x)})},destroy:function(){this.stop();this.trigger("Destroy");this.unbindAll()}})};g.File=function(r,p,q){var o=this;o.id=r;o.name=p;o.size=q;o.loaded=0;o.percent=0;o.status=0};g.Runtime=function(){this.getFeatures=function(){};this.init=function(o,p){}};g.QueueProgress=function(){var o=this;o.size=0;o.loaded=0;o.uploaded=0;o.failed=0;o.queued=0;o.percent=0;o.bytesPerSec=0;o.reset=function(){o.size=o.loaded=o.uploaded=o.failed=o.queued=o.percent=o.bytesPerSec=0}};g.runtimes={};window.plupload=g})();(function(){if(window.google&&google.gears){return}var a=null;if(typeof GearsFactory!="undefined"){a=new GearsFactory()}else{try{a=new ActiveXObject("Gears.Factory");if(a.getBuildInfo().indexOf("ie_mobile")!=-1){a.privateSetGlobalObject(this)}}catch(b){if((typeof navigator.mimeTypes!="undefined")&&navigator.mimeTypes["application/x-googlegears"]){a=document.createElement("object");a.style.display="none";a.width=0;a.height=0;a.type="application/x-googlegears";document.documentElement.appendChild(a)}}}if(!a){return}if(!window.google){window.google={}}if(!google.gears){google.gears={factory:a}}})();(function(e,b,c,d){var f={};function a(h,k,m){var g,j,l,o;j=google.gears.factory.create("beta.canvas");try{j.decode(h);if(!k.width){k.width=j.width}if(!k.height){k.height=j.height}o=Math.min(width/j.width,height/j.height);if(o<1||(o===1&&m==="image/jpeg")){j.resize(Math.round(j.width*o),Math.round(j.height*o));if(k.quality){return j.encode(m,{quality:k.quality/100})}return j.encode(m)}}catch(n){}return h}c.runtimes.Gears=c.addRuntime("gears",{getFeatures:function(){return{dragdrop:true,jpgresize:true,pngresize:true,chunks:true,progress:true,multipart:true,multi_selection:true}},init:function(l,n){var m,h,g=false;if(!e.google||!google.gears){return n({success:false})}try{m=google.gears.factory.create("beta.desktop")}catch(k){return n({success:false})}function j(q){var p,o,r=[],s;for(o=0;o<q.length;o++){p=q[o];s=c.guid();f[s]=p.blob;r.push(new c.File(s,p.name,p.blob.length))}l.trigger("FilesAdded",r)}l.bind("PostInit",function(){var p=l.settings,o=b.getElementById(p.drop_element);if(o){c.addEvent(o,"dragover",function(q){m.setDropEffect(q,"copy");q.preventDefault()},l.id);c.addEvent(o,"drop",function(r){var q=m.getDragData(r,"application/x-gears-files");if(q){j(q.files)}r.preventDefault()},l.id);o=0}c.addEvent(b.getElementById(p.browse_button),"click",function(u){var t=[],r,q,s;u.preventDefault();if(g){return}no_type_restriction:for(r=0;r<p.filters.length;r++){s=p.filters[r].extensions.split(",");for(q=0;q<s.length;q++){if(s[q]==="*"){t=[];break no_type_restriction}t.push("."+s[q])}}m.openFiles(j,{singleFile:!p.multi_selection,filter:t})},l.id)});l.bind("CancelUpload",function(){if(h.abort){h.abort()}});l.bind("UploadFile",function(u,r){var w=0,v,s,t=0,q=u.settings.resize,o;if(q&&/\.(png|jpg|jpeg)$/i.test(r.name)){f[r.id]=a(f[r.id],q,/\.png$/i.test(r.name)?"image/png":"image/jpeg")}r.size=f[r.id].length;s=u.settings.chunk_size;o=s>0;v=Math.ceil(r.size/s);if(!o){s=r.size;v=1}function p(){var C,y=u.settings.multipart,x=0,B={name:r.target_name||r.name},z=u.settings.url;function A(E){var D,J="----pluploadboundary"+c.guid(),G="--",I="\r\n",F,H;if(y){h.setRequestHeader("Content-Type","multipart/form-data; boundary="+J);D=google.gears.factory.create("beta.blobbuilder");c.each(c.extend(B,u.settings.multipart_params),function(L,K){D.append(G+J+I+'Content-Disposition: form-data; name="'+K+'"'+I+I);D.append(L+I)});H=c.mimeTypes[r.name.replace(/^.+\.([^.]+)/,"$1").toLowerCase()]||"application/octet-stream";D.append(G+J+I+'Content-Disposition: form-data; name="'+u.settings.file_data_name+'"; filename="'+r.name+'"'+I+"Content-Type: "+H+I+I);D.append(E);D.append(I+G+J+G+I);F=D.getAsBlob();x=F.length-E.length;E=F}h.send(E)}if(r.status==c.DONE||r.status==c.FAILED||u.state==c.STOPPED){return}if(o){B.chunk=w;B.chunks=v}C=Math.min(s,r.size-(w*s));if(!y){z=c.buildUrl(u.settings.url,B)}h=google.gears.factory.create("beta.httprequest");h.open("POST",z);if(!y){h.setRequestHeader("Content-Disposition",'attachment; filename="'+r.name+'"');h.setRequestHeader("Content-Type","application/octet-stream")}c.each(u.settings.headers,function(E,D){h.setRequestHeader(D,E)});h.upload.onprogress=function(D){r.loaded=t+D.loaded-x;u.trigger("UploadProgress",r)};h.onreadystatechange=function(){var D;if(h.readyState==4&&u.state!==c.STOPPED){if(h.status==200){D={chunk:w,chunks:v,response:h.responseText,status:h.status};u.trigger("ChunkUploaded",r,D);if(D.cancelled){r.status=c.FAILED;return}t+=C;if(++w>=v){r.status=c.DONE;u.trigger("FileUploaded",r,{response:h.responseText,status:h.status})}else{p()}}else{u.trigger("Error",{code:c.HTTP_ERROR,message:c.translate("HTTP Error."),file:r,chunk:w,chunks:v,status:h.status})}}};if(w<v){A(f[r.id].slice(w*s,C))}}p()});l.bind("DisableBrowse",function(o,p){g=p});l.bind("Destroy",function(o){var p,q,r={browseButton:o.settings.browse_button,dropElm:o.settings.drop_element};for(p in r){q=b.getElementById(r[p]);if(q){c.removeAllEvents(q,o.id)}}});n({success:true})}})})(window,document,plupload);(function(g,b,d,e){var a={},h={};function c(o){var n,m=typeof o,j,l,k;if(o===e||o===null){return"null"}if(m==="string"){n="\bb\tt\nn\ff\rr\"\"''\\\\";return'"'+o.replace(/([\u0080-\uFFFF\x00-\x1f\"])/g,function(r,q){var p=n.indexOf(q);if(p+1){return"\\"+n.charAt(p+1)}r=q.charCodeAt().toString(16);return"\\u"+"0000".substring(r.length)+r})+'"'}if(m=="object"){j=o.length!==e;n="";if(j){for(l=0;l<o.length;l++){if(n){n+=","}n+=c(o[l])}n="["+n+"]"}else{for(k in o){if(o.hasOwnProperty(k)){if(n){n+=","}n+=c(k)+":"+c(o[k])}}n="{"+n+"}"}return n}return""+o}function f(s){var v=false,j=null,o=null,k,l,m,u,n,q=0;try{try{o=new ActiveXObject("AgControl.AgControl");if(o.IsVersionSupported(s)){v=true}o=null}catch(r){var p=navigator.plugins["Silverlight Plug-In"];if(p){k=p.description;if(k==="1.0.30226.2"){k="2.0.30226.2"}l=k.split(".");while(l.length>3){l.pop()}while(l.length<4){l.push(0)}m=s.split(".");while(m.length>4){m.pop()}do{u=parseInt(m[q],10);n=parseInt(l[q],10);q++}while(q<m.length&&u===n);if(u<=n&&!isNaN(u)){v=true}}}}catch(t){v=false}return v}d.silverlight={trigger:function(n,k){var m=a[n],l,j;if(m){j=d.toArray(arguments).slice(1);j[0]="Silverlight:"+k;setTimeout(function(){m.trigger.apply(m,j)},0)}}};d.runtimes.Silverlight=d.addRuntime("silverlight",{getFeatures:function(){return{jpgresize:true,pngresize:true,chunks:true,progress:true,multipart:true,multi_selection:true}},init:function(p,q){var o,m="",n=p.settings.filters,l,k=b.body;if(!f("2.0.31005.0")||(g.opera&&g.opera.buildNumber)){q({success:false});return}h[p.id]=false;a[p.id]=p;o=b.createElement("div");o.id=p.id+"_silverlight_container";d.extend(o.style,{position:"absolute",top:"0px",background:p.settings.shim_bgcolor||"transparent",zIndex:99999,width:"100px",height:"100px",overflow:"hidden",opacity:p.settings.shim_bgcolor||b.documentMode>8?"":0.01});o.className="plupload silverlight";if(p.settings.container){k=b.getElementById(p.settings.container);if(d.getStyle(k,"position")==="static"){k.style.position="relative"}}k.appendChild(o);for(l=0;l<n.length;l++){m+=(m!=""?"|":"")+n[l].title+" | *."+n[l].extensions.replace(/,/g,";*.")}o.innerHTML='<object id="'+p.id+'_silverlight" data="data:application/x-silverlight," type="application/x-silverlight-2" style="outline:none;" width="1024" height="1024"><param name="source" value="'+p.settings.silverlight_xap_url+'"/><param name="background" value="Transparent"/><param name="windowless" value="true"/><param name="enablehtmlaccess" value="true"/><param name="initParams" value="id='+p.id+",filter="+m+",multiselect="+p.settings.multi_selection+'"/></object>';function j(){return b.getElementById(p.id+"_silverlight").content.Upload}p.bind("Silverlight:Init",function(){var r,s={};if(h[p.id]){return}h[p.id]=true;p.bind("Silverlight:StartSelectFiles",function(t){r=[]});p.bind("Silverlight:SelectFile",function(t,w,u,v){var x;x=d.guid();s[x]=w;s[w]=x;r.push(new d.File(x,u,v))});p.bind("Silverlight:SelectSuccessful",function(){if(r.length){p.trigger("FilesAdded",r)}});p.bind("Silverlight:UploadChunkError",function(t,w,u,x,v){p.trigger("Error",{code:d.IO_ERROR,message:"IO Error.",details:v,file:t.getFile(s[w])})});p.bind("Silverlight:UploadFileProgress",function(t,x,u,w){var v=t.getFile(s[x]);if(v.status!=d.FAILED){v.size=w;v.loaded=u;t.trigger("UploadProgress",v)}});p.bind("Refresh",function(t){var u,v,w;u=b.getElementById(t.settings.browse_button);if(u){v=d.getPos(u,b.getElementById(t.settings.container));w=d.getSize(u);d.extend(b.getElementById(t.id+"_silverlight_container").style,{top:v.y+"px",left:v.x+"px",width:w.w+"px",height:w.h+"px"})}});p.bind("Silverlight:UploadChunkSuccessful",function(t,w,u,z,y){var x,v=t.getFile(s[w]);x={chunk:u,chunks:z,response:y};t.trigger("ChunkUploaded",v,x);if(v.status!=d.FAILED&&t.state!==d.STOPPED){j().UploadNextChunk()}if(u==z-1){v.status=d.DONE;t.trigger("FileUploaded",v,{response:y})}});p.bind("Silverlight:UploadSuccessful",function(t,w,u){var v=t.getFile(s[w]);v.status=d.DONE;t.trigger("FileUploaded",v,{response:u})});p.bind("FilesRemoved",function(t,v){var u;for(u=0;u<v.length;u++){j().RemoveFile(s[v[u].id])}});p.bind("UploadFile",function(t,v){var w=t.settings,u=w.resize||{};j().UploadFile(s[v.id],t.settings.url,c({name:v.target_name||v.name,mime:d.mimeTypes[v.name.replace(/^.+\.([^.]+)/,"$1").toLowerCase()]||"application/octet-stream",chunk_size:w.chunk_size,image_width:u.width,image_height:u.height,image_quality:u.quality||90,multipart:!!w.multipart,multipart_params:w.multipart_params||{},file_data_name:w.file_data_name,headers:w.headers}))});p.bind("CancelUpload",function(){j().CancelUpload()});p.bind("Silverlight:MouseEnter",function(t){var u,v;u=b.getElementById(p.settings.browse_button);v=t.settings.browse_button_hover;if(u&&v){d.addClass(u,v)}});p.bind("Silverlight:MouseLeave",function(t){var u,v;u=b.getElementById(p.settings.browse_button);v=t.settings.browse_button_hover;if(u&&v){d.removeClass(u,v)}});p.bind("Silverlight:MouseLeftButtonDown",function(t){var u,v;u=b.getElementById(p.settings.browse_button);v=t.settings.browse_button_active;if(u&&v){d.addClass(u,v);d.addEvent(b.body,"mouseup",function(){d.removeClass(u,v)})}});p.bind("Sliverlight:StartSelectFiles",function(t){var u,v;u=b.getElementById(p.settings.browse_button);v=t.settings.browse_button_active;if(u&&v){d.removeClass(u,v)}});p.bind("DisableBrowse",function(t,u){j().DisableBrowse(u)});p.bind("Destroy",function(t){var u;d.removeAllEvents(b.body,t.id);delete h[t.id];delete a[t.id];u=b.getElementById(t.id+"_silverlight_container");if(u){k.removeChild(u)}});q({success:true})})}})})(window,document,plupload);(function(f,b,d,e){var a={},g={};function c(){var h;try{h=navigator.plugins["Shockwave Flash"];h=h.description}catch(k){try{h=new ActiveXObject("ShockwaveFlash.ShockwaveFlash").GetVariable("$version")}catch(j){h="0.0"}}h=h.match(/\d+/g);return parseFloat(h[0]+"."+h[1])}d.flash={trigger:function(k,h,j){setTimeout(function(){var n=a[k],m,l;if(n){n.trigger("Flash:"+h,j)}},0)}};d.runtimes.Flash=d.addRuntime("flash",{getFeatures:function(){return{jpgresize:true,pngresize:true,maxWidth:8091,maxHeight:8091,chunks:true,progress:true,multipart:true,multi_selection:true}},init:function(n,p){var l,m,h=0,j=b.body;if(c()<10){p({success:false});return}g[n.id]=false;a[n.id]=n;l=b.getElementById(n.settings.browse_button);m=b.createElement("div");m.id=n.id+"_flash_container";d.extend(m.style,{position:"absolute",top:"0px",background:n.settings.shim_bgcolor||"transparent",zIndex:99999,width:"100%",height:"100%"});m.className="plupload flash";if(n.settings.container){j=b.getElementById(n.settings.container);if(d.getStyle(j,"position")==="static"){j.style.position="relative"}}j.appendChild(m);(function(){var q,r;q='<object id="'+n.id+'_flash" type="application/x-shockwave-flash" data="'+n.settings.flash_swf_url+'" ';if(d.ua.ie){q+='classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" '}q+='width="100%" height="100%" style="outline:0"><param name="movie" value="'+n.settings.flash_swf_url+'" /><param name="flashvars" value="id='+escape(n.id)+'" /><param name="wmode" value="transparent" /><param name="allowscriptaccess" value="always" /></object>';if(d.ua.ie){r=b.createElement("div");m.appendChild(r);r.outerHTML=q;r=null}else{m.innerHTML=q}}());function o(){return b.getElementById(n.id+"_flash")}function k(){if(h++>5000){p({success:false});return}if(g[n.id]===false){setTimeout(k,1)}}k();l=m=null;n.bind("Destroy",function(q){var r;d.removeAllEvents(b.body,q.id);delete g[q.id];delete a[q.id];r=b.getElementById(q.id+"_flash_container");if(r){j.removeChild(r)}});n.bind("Flash:Init",function(){var s={},r;try{o().setFileFilters(n.settings.filters,n.settings.multi_selection)}catch(q){p({success:false});return}if(g[n.id]){return}g[n.id]=true;n.bind("UploadFile",function(t,v){var w=t.settings,u=n.settings.resize||{};o().uploadFile(s[v.id],w.url,{name:v.target_name||v.name,mime:d.mimeTypes[v.name.replace(/^.+\.([^.]+)/,"$1").toLowerCase()]||"application/octet-stream",chunk_size:w.chunk_size,width:u.width,height:u.height,quality:u.quality,multipart:w.multipart,multipart_params:w.multipart_params||{},file_data_name:w.file_data_name,format:/\.(jpg|jpeg)$/i.test(v.name)?"jpg":"png",headers:w.headers,urlstream_upload:w.urlstream_upload})});n.bind("CancelUpload",function(){o().cancelUpload()});n.bind("Flash:UploadProcess",function(u,t){var v=u.getFile(s[t.id]);if(v.status!=d.FAILED){v.loaded=t.loaded;v.size=t.size;u.trigger("UploadProgress",v)}});n.bind("Flash:UploadChunkComplete",function(t,v){var w,u=t.getFile(s[v.id]);w={chunk:v.chunk,chunks:v.chunks,response:v.text};t.trigger("ChunkUploaded",u,w);if(u.status!==d.FAILED&&t.state!==d.STOPPED){o().uploadNextChunk()}if(v.chunk==v.chunks-1){u.status=d.DONE;t.trigger("FileUploaded",u,{response:v.text})}});n.bind("Flash:SelectFiles",function(t,w){var v,u,x=[],y;for(u=0;u<w.length;u++){v=w[u];y=d.guid();s[y]=v.id;s[v.id]=y;x.push(new d.File(y,v.name,v.size))}if(x.length){n.trigger("FilesAdded",x)}});n.bind("Flash:SecurityError",function(t,u){n.trigger("Error",{code:d.SECURITY_ERROR,message:d.translate("Security error."),details:u.message,file:n.getFile(s[u.id])})});n.bind("Flash:GenericError",function(t,u){n.trigger("Error",{code:d.GENERIC_ERROR,message:d.translate("Generic error."),details:u.message,file:n.getFile(s[u.id])})});n.bind("Flash:IOError",function(t,u){n.trigger("Error",{code:d.IO_ERROR,message:d.translate("IO error."),details:u.message,file:n.getFile(s[u.id])})});n.bind("Flash:ImageError",function(t,u){n.trigger("Error",{code:parseInt(u.code,10),message:d.translate("Image error."),file:n.getFile(s[u.id])})});n.bind("Flash:StageEvent:rollOver",function(t){var u,v;u=b.getElementById(n.settings.browse_button);v=t.settings.browse_button_hover;if(u&&v){d.addClass(u,v)}});n.bind("Flash:StageEvent:rollOut",function(t){var u,v;u=b.getElementById(n.settings.browse_button);v=t.settings.browse_button_hover;if(u&&v){d.removeClass(u,v)}});n.bind("Flash:StageEvent:mouseDown",function(t){var u,v;u=b.getElementById(n.settings.browse_button);v=t.settings.browse_button_active;if(u&&v){d.addClass(u,v);d.addEvent(b.body,"mouseup",function(){d.removeClass(u,v)},t.id)}});n.bind("Flash:StageEvent:mouseUp",function(t){var u,v;u=b.getElementById(n.settings.browse_button);v=t.settings.browse_button_active;if(u&&v){d.removeClass(u,v)}});n.bind("Flash:ExifData",function(t,u){n.trigger("ExifData",n.getFile(s[u.id]),u.data)});n.bind("Flash:GpsData",function(t,u){n.trigger("GpsData",n.getFile(s[u.id]),u.data)});n.bind("QueueChanged",function(t){n.refresh()});n.bind("FilesRemoved",function(t,v){var u;for(u=0;u<v.length;u++){o().removeFile(s[v[u].id])}});n.bind("StateChanged",function(t){n.refresh()});n.bind("Refresh",function(t){var u,v,w;o().setFileFilters(n.settings.filters,n.settings.multi_selection);u=b.getElementById(t.settings.browse_button);if(u){v=d.getPos(u,b.getElementById(t.settings.container));w=d.getSize(u);d.extend(b.getElementById(t.id+"_flash_container").style,{top:v.y+"px",left:v.x+"px",width:w.w+"px",height:w.h+"px"})}});n.bind("DisableBrowse",function(t,u){o().disableBrowse(u)});p({success:true})})}})})(window,document,plupload);(function(a){a.runtimes.BrowserPlus=a.addRuntime("browserplus",{getFeatures:function(){return{dragdrop:true,jpgresize:true,pngresize:true,chunks:true,progress:true,multipart:true,multi_selection:true}},init:function(g,j){var e=window.BrowserPlus,h={},d=g.settings,c=d.resize;function f(o){var n,m,k=[],l,p;for(m=0;m<o.length;m++){l=o[m];p=a.guid();h[p]=l;k.push(new a.File(p,l.name,l.size))}if(m){g.trigger("FilesAdded",k)}}function b(){var k=false;g.bind("PostInit",function(){var o,m=d.drop_element,q=g.id+"_droptarget",l=document.getElementById(m),n;function r(t,s){e.DragAndDrop.AddDropTarget({id:t},function(u){e.DragAndDrop.AttachCallbacks({id:t,hover:function(v){if(!v&&s){s()}},drop:function(v){if(s){s()}f(v)}},function(){})})}function p(){document.getElementById(q).style.top="-1000px"}if(l){if(document.attachEvent&&(/MSIE/gi).test(navigator.userAgent)){o=document.createElement("div");o.setAttribute("id",q);a.extend(o.style,{position:"absolute",top:"-1000px",background:"red",filter:"alpha(opacity=0)",opacity:0});document.body.appendChild(o);a.addEvent(l,"dragenter",function(t){var s,u;s=document.getElementById(m);u=a.getPos(s);a.extend(document.getElementById(q).style,{top:u.y+"px",left:u.x+"px",width:s.offsetWidth+"px",height:s.offsetHeight+"px"})});r(q,p)}else{r(m)}}a.addEvent(document.getElementById(d.browse_button),"click",function(y){var s=[],u,t,x=d.filters,w,v;y.preventDefault();if(k){return}no_type_restriction:for(u=0;u<x.length;u++){w=x[u].extensions.split(",");for(t=0;t<w.length;t++){if(w[t]==="*"){s=[];break no_type_restriction}v=a.mimeTypes[w[t]];if(v&&a.inArray(v,s)===-1){s.push(a.mimeTypes[w[t]])}}}e.FileBrowse.OpenBrowseDialog({mimeTypes:s},function(z){if(z.success){f(z.value)}})});l=o=null});g.bind("CancelUpload",function(){e.Uploader.cancel({},function(){})});g.bind("DisableBrowse",function(l,m){k=m});g.bind("UploadFile",function(o,l){var n=h[l.id],t={},m=o.settings.chunk_size,p,q=[];function s(u,w){var v;if(l.status==a.FAILED){return}t.name=l.target_name||l.name;if(m){t.chunk=""+u;t.chunks=""+w}v=q.shift();e.Uploader.upload({url:o.settings.url,files:{file:v},cookies:document.cookies,postvars:a.extend(t,o.settings.multipart_params),progressCallback:function(z){var y,x=0;p[u]=parseInt(z.filePercent*v.size/100,10);for(y=0;y<p.length;y++){x+=p[y]}l.loaded=x;o.trigger("UploadProgress",l)}},function(y){var x,z;if(y.success){x=y.value.statusCode;if(m){o.trigger("ChunkUploaded",l,{chunk:u,chunks:w,response:y.value.body,status:x})}if(q.length>0){s(++u,w)}else{l.status=a.DONE;o.trigger("FileUploaded",l,{response:y.value.body,status:x});if(x>=400){o.trigger("Error",{code:a.HTTP_ERROR,message:a.translate("HTTP Error."),file:l,status:x})}}}else{o.trigger("Error",{code:a.GENERIC_ERROR,message:a.translate("Generic Error."),file:l,details:y.error})}})}function r(u){l.size=u.size;if(m){e.FileAccess.chunk({file:u,chunkSize:m},function(x){if(x.success){var y=x.value,v=y.length;p=Array(v);for(var w=0;w<v;w++){p[w]=0;q.push(y[w])}s(0,v)}})}else{p=Array(1);q.push(u);s(0,1)}}if(c&&/\.(png|jpg|jpeg)$/i.test(l.name)){BrowserPlus.ImageAlter.transform({file:n,quality:c.quality||90,actions:[{scale:{maxwidth:c.width,maxheight:c.height}}]},function(u){if(u.success){r(u.value.file)}})}else{r(n)}});j({success:true})}if(e){e.init(function(l){var k=[{service:"Uploader",version:"3"},{service:"DragAndDrop",version:"1"},{service:"FileBrowse",version:"1"},{service:"FileAccess",version:"2"}];if(c){k.push({service:"ImageAlter",version:"4"})}if(l.success){e.require({services:k},function(m){if(m.success){b()}else{j()}})}else{j()}})}else{j()}}})})(plupload);(function(h,k,j,e){var c={},g;function m(o,p){var n;if("FileReader" in h){n=new FileReader();n.readAsDataURL(o);n.onload=function(){p(n.result)}}else{return p(o.getAsDataURL())}}function l(o,p){var n;if("FileReader" in h){n=new FileReader();n.readAsBinaryString(o);n.onload=function(){p(n.result)}}else{return p(o.getAsBinary())}}function d(r,p,n,v){var q,o,u,s,t=this;m(c[r.id],function(w){q=k.createElement("canvas");q.style.display="none";k.body.appendChild(q);o=q.getContext("2d");u=new Image();u.onerror=u.onabort=function(){v({success:false})};u.onload=function(){var B,x,z,y,A;if(!p.width){p.width=u.width}if(!p.height){p.height=u.height}s=Math.min(p.width/u.width,p.height/u.height);if(s<1||(s===1&&n==="image/jpeg")){B=Math.round(u.width*s);x=Math.round(u.height*s);q.width=B;q.height=x;o.drawImage(u,0,0,B,x);if(n==="image/jpeg"){y=new f(atob(w.substring(w.indexOf("base64,")+7)));if(y.headers&&y.headers.length){A=new a();if(A.init(y.get("exif")[0])){A.setExif("PixelXDimension",B);A.setExif("PixelYDimension",x);y.set("exif",A.getBinary());if(t.hasEventListener("ExifData")){t.trigger("ExifData",r,A.EXIF())}if(t.hasEventListener("GpsData")){t.trigger("GpsData",r,A.GPS())}}}if(p.quality){try{w=q.toDataURL(n,p.quality/100)}catch(C){w=q.toDataURL(n)}}}else{w=q.toDataURL(n)}w=w.substring(w.indexOf("base64,")+7);w=atob(w);if(y&&y.headers&&y.headers.length){w=y.restore(w);y.purge()}q.parentNode.removeChild(q);v({success:true,data:w})}else{v({success:false})}};u.src=w})}j.runtimes.Html5=j.addRuntime("html5",{getFeatures:function(){var s,o,r,q,p,n;o=r=p=n=false;if(h.XMLHttpRequest){s=new XMLHttpRequest();r=!!s.upload;o=!!(s.sendAsBinary||s.upload)}if(o){q=!!(s.sendAsBinary||(h.Uint8Array&&h.ArrayBuffer));p=!!(File&&(File.prototype.getAsDataURL||h.FileReader)&&q);n=!!(File&&(File.prototype.mozSlice||File.prototype.webkitSlice||File.prototype.slice))}g=j.ua.safari&&j.ua.windows;return{html5:o,dragdrop:(function(){var t=k.createElement("div");return("draggable" in t)||("ondragstart" in t&&"ondrop" in t)}()),jpgresize:p,pngresize:p,multipart:p||!!h.FileReader||!!h.FormData,canSendBinary:q,cantSendBlobInFormData:!!(j.ua.gecko&&h.FormData&&h.FileReader&&!FileReader.prototype.readAsArrayBuffer),progress:r,chunks:n,multi_selection:!(j.ua.safari&&j.ua.windows),triggerDialog:(j.ua.gecko&&h.FormData||j.ua.webkit)}},init:function(p,r){var n,q;function o(w){var u,t,v=[],x,s={};for(t=0;t<w.length;t++){u=w[t];if(s[u.name]){continue}s[u.name]=true;x=j.guid();c[x]=u;v.push(new j.File(x,u.fileName||u.name,u.fileSize||u.size))}if(v.length){p.trigger("FilesAdded",v)}}n=this.getFeatures();if(!n.html5){r({success:false});return}p.bind("Init",function(w){var G,F,C=[],v,D,t=w.settings.filters,u,B,s=k.body,E;G=k.createElement("div");G.id=w.id+"_html5_container";j.extend(G.style,{position:"absolute",background:p.settings.shim_bgcolor||"transparent",width:"100px",height:"100px",overflow:"hidden",zIndex:99999,opacity:p.settings.shim_bgcolor?"":0});G.className="plupload html5";if(p.settings.container){s=k.getElementById(p.settings.container);if(j.getStyle(s,"position")==="static"){s.style.position="relative"}}s.appendChild(G);no_type_restriction:for(v=0;v<t.length;v++){u=t[v].extensions.split(/,/);for(D=0;D<u.length;D++){if(u[D]==="*"){C=[];break no_type_restriction}B=j.mimeTypes[u[D]];if(B&&j.inArray(B,C)===-1){C.push(B)}}}G.innerHTML='<input id="'+p.id+'_html5"  style="font-size:999px" type="file" accept="'+C.join(",")+'" '+(p.settings.multi_selection&&p.features.multi_selection?'multiple="multiple"':"")+" />";G.scrollTop=100;E=k.getElementById(p.id+"_html5");if(w.features.triggerDialog){j.extend(E.style,{position:"absolute",width:"100%",height:"100%"})}else{j.extend(E.style,{cssFloat:"right",styleFloat:"right"})}E.onchange=function(){o(this.files);this.value=""};F=k.getElementById(w.settings.browse_button);if(F){var z=w.settings.browse_button_hover,A=w.settings.browse_button_active,x=w.features.triggerDialog?F:G;if(z){j.addEvent(x,"mouseover",function(){j.addClass(F,z)},w.id);j.addEvent(x,"mouseout",function(){j.removeClass(F,z)},w.id)}if(A){j.addEvent(x,"mousedown",function(){j.addClass(F,A)},w.id);j.addEvent(k.body,"mouseup",function(){j.removeClass(F,A)},w.id)}if(w.features.triggerDialog){j.addEvent(F,"click",function(H){var y=k.getElementById(w.id+"_html5");if(y&&!y.disabled){y.click()}H.preventDefault()},w.id)}}});p.bind("PostInit",function(){var s=k.getElementById(p.settings.drop_element);if(s){if(g){j.addEvent(s,"dragenter",function(w){var v,t,u;v=k.getElementById(p.id+"_drop");if(!v){v=k.createElement("input");v.setAttribute("type","file");v.setAttribute("id",p.id+"_drop");v.setAttribute("multiple","multiple");j.addEvent(v,"change",function(){o(this.files);j.removeEvent(v,"change",p.id);v.parentNode.removeChild(v)},p.id);s.appendChild(v)}t=j.getPos(s,k.getElementById(p.settings.container));u=j.getSize(s);if(j.getStyle(s,"position")==="static"){j.extend(s.style,{position:"relative"})}j.extend(v.style,{position:"absolute",display:"block",top:0,left:0,width:u.w+"px",height:u.h+"px",opacity:0})},p.id);return}j.addEvent(s,"dragover",function(t){t.preventDefault()},p.id);j.addEvent(s,"drop",function(u){var t=u.dataTransfer;if(t&&t.files){o(t.files)}u.preventDefault()},p.id)}});p.bind("Refresh",function(s){var t,u,v,x,w;t=k.getElementById(p.settings.browse_button);if(t){u=j.getPos(t,k.getElementById(s.settings.container));v=j.getSize(t);x=k.getElementById(p.id+"_html5_container");j.extend(x.style,{top:u.y+"px",left:u.x+"px",width:v.w+"px",height:v.h+"px"});if(p.features.triggerDialog){if(j.getStyle(t,"position")==="static"){j.extend(t.style,{position:"relative"})}w=parseInt(j.getStyle(t,"z-index"),10);if(isNaN(w)){w=0}j.extend(t.style,{zIndex:w});j.extend(x.style,{zIndex:w-1})}}});p.bind("DisableBrowse",function(s,u){var t=k.getElementById(s.id+"_html5");if(t){t.disabled=u}});p.bind("CancelUpload",function(){if(q&&q.abort){q.abort()}});p.bind("UploadFile",function(s,u){var v=s.settings,y,t;function x(A,D,z){var B;if(File.prototype.slice){try{A.slice();return A.slice(D,z)}catch(C){return A.slice(D,z-D)}}else{if(B=File.prototype.webkitSlice||File.prototype.mozSlice){return B.call(A,D,z)}else{return null}}}function w(A){var D=0,C=0,z=("FileReader" in h)?new FileReader:null;function B(){var I,M,K,L,H,J,F,E=s.settings.url;function G(V){var T=0,N="----pluploadboundary"+j.guid(),O,P="--",U="\r\n",R="";q=new XMLHttpRequest;if(q.upload){q.upload.onprogress=function(W){u.loaded=Math.min(u.size,C+W.loaded-T);s.trigger("UploadProgress",u)}}q.onreadystatechange=function(){var W,Y;if(q.readyState==4&&s.state!==j.STOPPED){try{W=q.status}catch(X){W=0}if(W>=400){s.trigger("Error",{code:j.HTTP_ERROR,message:j.translate("HTTP Error."),file:u,status:W})}else{if(K){Y={chunk:D,chunks:K,response:q.responseText,status:W};s.trigger("ChunkUploaded",u,Y);C+=J;if(Y.cancelled){u.status=j.FAILED;return}u.loaded=Math.min(u.size,(D+1)*H)}else{u.loaded=u.size}s.trigger("UploadProgress",u);V=I=O=R=null;if(!K||++D>=K){u.status=j.DONE;s.trigger("FileUploaded",u,{response:q.responseText,status:W})}else{B()}}}};if(s.settings.multipart&&n.multipart){L.name=u.target_name||u.name;q.open("post",E,true);j.each(s.settings.headers,function(X,W){q.setRequestHeader(W,X)});if(typeof(V)!=="string"&&!!h.FormData){O=new FormData();j.each(j.extend(L,s.settings.multipart_params),function(X,W){O.append(W,X)});O.append(s.settings.file_data_name,V);q.send(O);return}if(typeof(V)==="string"){q.setRequestHeader("Content-Type","multipart/form-data; boundary="+N);j.each(j.extend(L,s.settings.multipart_params),function(X,W){R+=P+N+U+'Content-Disposition: form-data; name="'+W+'"'+U+U;R+=unescape(encodeURIComponent(X))+U});F=j.mimeTypes[u.name.replace(/^.+\.([^.]+)/,"$1").toLowerCase()]||"application/octet-stream";R+=P+N+U+'Content-Disposition: form-data; name="'+s.settings.file_data_name+'"; filename="'+unescape(encodeURIComponent(u.name))+'"'+U+"Content-Type: "+F+U+U+V+U+P+N+P+U;T=R.length-V.length;V=R;if(q.sendAsBinary){q.sendAsBinary(V)}else{if(n.canSendBinary){var S=new Uint8Array(V.length);for(var Q=0;Q<V.length;Q++){S[Q]=(V.charCodeAt(Q)&255)}q.send(S.buffer)}}return}}E=j.buildUrl(s.settings.url,j.extend(L,s.settings.multipart_params));q.open("post",E,true);q.setRequestHeader("Content-Type","application/octet-stream");j.each(s.settings.headers,function(X,W){q.setRequestHeader(W,X)});q.send(V)}if(u.status==j.DONE||u.status==j.FAILED||s.state==j.STOPPED){return}L={name:u.target_name||u.name};if(v.chunk_size&&u.size>v.chunk_size&&(n.chunks||typeof(A)=="string")){H=v.chunk_size;K=Math.ceil(u.size/H);J=Math.min(H,u.size-(D*H));if(typeof(A)=="string"){I=A.substring(D*H,D*H+J)}else{I=x(A,D*H,D*H+J)}L.chunk=D;L.chunks=K}else{J=u.size;I=A}if(s.settings.multipart&&n.multipart&&typeof(I)!=="string"&&z&&n.cantSendBlobInFormData&&n.chunks&&s.settings.chunk_size){z.onload=function(){G(z.result)};z.readAsBinaryString(I)}else{G(I)}}B()}y=c[u.id];if(n.jpgresize&&s.settings.resize&&/\.(png|jpg|jpeg)$/i.test(u.name)){d.call(s,u,s.settings.resize,/\.png$/i.test(u.name)?"image/png":"image/jpeg",function(z){if(z.success){u.size=z.data.length;w(z.data)}else{if(n.chunks){w(y)}else{l(y,w)}}})}else{if(!n.chunks&&n.jpgresize){l(y,w)}else{w(y)}}});p.bind("Destroy",function(s){var u,v,t=k.body,w={inputContainer:s.id+"_html5_container",inputFile:s.id+"_html5",browseButton:s.settings.browse_button,dropElm:s.settings.drop_element};for(u in w){v=k.getElementById(w[u]);if(v){j.removeAllEvents(v,s.id)}}j.removeAllEvents(k.body,s.id);if(s.settings.container){t=k.getElementById(s.settings.container)}t.removeChild(k.getElementById(w.inputContainer))});r({success:true})}});function b(){var q=false,o;function r(t,v){var s=q?0:-8*(v-1),w=0,u;for(u=0;u<v;u++){w|=(o.charCodeAt(t+u)<<Math.abs(s+u*8))}return w}function n(u,s,t){var t=arguments.length===3?t:o.length-s-1;o=o.substr(0,s)+u+o.substr(t+s)}function p(t,u,w){var x="",s=q?0:-8*(w-1),v;for(v=0;v<w;v++){x+=String.fromCharCode((u>>Math.abs(s+v*8))&255)}n(x,t,w)}return{II:function(s){if(s===e){return q}else{q=s}},init:function(s){q=false;o=s},SEGMENT:function(s,u,t){switch(arguments.length){case 1:return o.substr(s,o.length-s-1);case 2:return o.substr(s,u);case 3:n(t,s,u);break;default:return o}},BYTE:function(s){return r(s,1)},SHORT:function(s){return r(s,2)},LONG:function(s,t){if(t===e){return r(s,4)}else{p(s,t,4)}},SLONG:function(s){var t=r(s,4);return(t>2147483647?t-4294967296:t)},STRING:function(s,t){var u="";for(t+=s;s<t;s++){u+=String.fromCharCode(r(s,1))}return u}}}function f(s){var u={65505:{app:"EXIF",name:"APP1",signature:"Exif\0"},65506:{app:"ICC",name:"APP2",signature:"ICC_PROFILE\0"},65517:{app:"IPTC",name:"APP13",signature:"Photoshop 3.0\0"}},t=[],r,n,p=e,q=0,o;r=new b();r.init(s);if(r.SHORT(0)!==65496){return}n=2;o=Math.min(1048576,s.length);while(n<=o){p=r.SHORT(n);if(p>=65488&&p<=65495){n+=2;continue}if(p===65498||p===65497){break}q=r.SHORT(n+2)+2;if(u[p]&&r.STRING(n+4,u[p].signature.length)===u[p].signature){t.push({hex:p,app:u[p].app.toUpperCase(),name:u[p].name.toUpperCase(),start:n,length:q,segment:r.SEGMENT(n,q)})}n+=q}r.init(null);return{headers:t,restore:function(y){r.init(y);var w=new f(y);if(!w.headers){return false}for(var x=w.headers.length;x>0;x--){var z=w.headers[x-1];r.SEGMENT(z.start,z.length,"")}w.purge();n=r.SHORT(2)==65504?4+r.SHORT(4):2;for(var x=0,v=t.length;x<v;x++){r.SEGMENT(n,0,t[x].segment);n+=t[x].length}return r.SEGMENT()},get:function(x){var y=[];for(var w=0,v=t.length;w<v;w++){if(t[w].app===x.toUpperCase()){y.push(t[w].segment)}}return y},set:function(y,x){var z=[];if(typeof(x)==="string"){z.push(x)}else{z=x}for(var w=ii=0,v=t.length;w<v;w++){if(t[w].app===y.toUpperCase()){t[w].segment=z[ii];t[w].length=z[ii].length;ii++}if(ii>=z.length){break}}},purge:function(){t=[];r.init(null)}}}function a(){var q,n,o={},t;q=new b();n={tiff:{274:"Orientation",34665:"ExifIFDPointer",34853:"GPSInfoIFDPointer"},exif:{36864:"ExifVersion",40961:"ColorSpace",40962:"PixelXDimension",40963:"PixelYDimension",36867:"DateTimeOriginal",33434:"ExposureTime",33437:"FNumber",34855:"ISOSpeedRatings",37377:"ShutterSpeedValue",37378:"ApertureValue",37383:"MeteringMode",37384:"LightSource",37385:"Flash",41986:"ExposureMode",41987:"WhiteBalance",41990:"SceneCaptureType",41988:"DigitalZoomRatio",41992:"Contrast",41993:"Saturation",41994:"Sharpness"},gps:{0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude"}};t={ColorSpace:{1:"sRGB",0:"Uncalibrated"},MeteringMode:{0:"Unknown",1:"Average",2:"CenterWeightedAverage",3:"Spot",4:"MultiSpot",5:"Pattern",6:"Partial",255:"Other"},LightSource:{1:"Daylight",2:"Fliorescent",3:"Tungsten",4:"Flash",9:"Fine weather",10:"Cloudy weather",11:"Shade",12:"Daylight fluorescent (D 5700 - 7100K)",13:"Day white fluorescent (N 4600 -5400K)",14:"Cool white fluorescent (W 3900 - 4500K)",15:"White fluorescent (WW 3200 - 3700K)",17:"Standard light A",18:"Standard light B",19:"Standard light C",20:"D55",21:"D65",22:"D75",23:"D50",24:"ISO studio tungsten",255:"Other"},Flash:{0:"Flash did not fire.",1:"Flash fired.",5:"Strobe return light not detected.",7:"Strobe return light detected.",9:"Flash fired, compulsory flash mode",13:"Flash fired, compulsory flash mode, return light not detected",15:"Flash fired, compulsory flash mode, return light detected",16:"Flash did not fire, compulsory flash mode",24:"Flash did not fire, auto mode",25:"Flash fired, auto mode",29:"Flash fired, auto mode, return light not detected",31:"Flash fired, auto mode, return light detected",32:"No flash function",65:"Flash fired, red-eye reduction mode",69:"Flash fired, red-eye reduction mode, return light not detected",71:"Flash fired, red-eye reduction mode, return light detected",73:"Flash fired, compulsory flash mode, red-eye reduction mode",77:"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected",79:"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected",89:"Flash fired, auto mode, red-eye reduction mode",93:"Flash fired, auto mode, return light not detected, red-eye reduction mode",95:"Flash fired, auto mode, return light detected, red-eye reduction mode"},ExposureMode:{0:"Auto exposure",1:"Manual exposure",2:"Auto bracket"},WhiteBalance:{0:"Auto white balance",1:"Manual white balance"},SceneCaptureType:{0:"Standard",1:"Landscape",2:"Portrait",3:"Night scene"},Contrast:{0:"Normal",1:"Soft",2:"Hard"},Saturation:{0:"Normal",1:"Low saturation",2:"High saturation"},Sharpness:{0:"Normal",1:"Soft",2:"Hard"},GPSLatitudeRef:{N:"North latitude",S:"South latitude"},GPSLongitudeRef:{E:"East longitude",W:"West longitude"}};function p(u,C){var w=q.SHORT(u),z,F,G,B,A,v,x,D,E=[],y={};for(z=0;z<w;z++){x=v=u+12*z+2;G=C[q.SHORT(x)];if(G===e){continue}B=q.SHORT(x+=2);A=q.LONG(x+=2);x+=4;E=[];switch(B){case 1:case 7:if(A>4){x=q.LONG(x)+o.tiffHeader}for(F=0;F<A;F++){E[F]=q.BYTE(x+F)}break;case 2:if(A>4){x=q.LONG(x)+o.tiffHeader}y[G]=q.STRING(x,A-1);continue;case 3:if(A>2){x=q.LONG(x)+o.tiffHeader}for(F=0;F<A;F++){E[F]=q.SHORT(x+F*2)}break;case 4:if(A>1){x=q.LONG(x)+o.tiffHeader}for(F=0;F<A;F++){E[F]=q.LONG(x+F*4)}break;case 5:x=q.LONG(x)+o.tiffHeader;for(F=0;F<A;F++){E[F]=q.LONG(x+F*4)/q.LONG(x+F*4+4)}break;case 9:x=q.LONG(x)+o.tiffHeader;for(F=0;F<A;F++){E[F]=q.SLONG(x+F*4)}break;case 10:x=q.LONG(x)+o.tiffHeader;for(F=0;F<A;F++){E[F]=q.SLONG(x+F*4)/q.SLONG(x+F*4+4)}break;default:continue}D=(A==1?E[0]:E);if(t.hasOwnProperty(G)&&typeof D!="object"){y[G]=t[G][D]}else{y[G]=D}}return y}function s(){var v=e,u=o.tiffHeader;q.II(q.SHORT(u)==18761);if(q.SHORT(u+=2)!==42){return false}o.IFD0=o.tiffHeader+q.LONG(u+=2);v=p(o.IFD0,n.tiff);o.exifIFD=("ExifIFDPointer" in v?o.tiffHeader+v.ExifIFDPointer:e);o.gpsIFD=("GPSInfoIFDPointer" in v?o.tiffHeader+v.GPSInfoIFDPointer:e);return true}function r(w,u,z){var B,y,x,A=0;if(typeof(u)==="string"){var v=n[w.toLowerCase()];for(hex in v){if(v[hex]===u){u=hex;break}}}B=o[w.toLowerCase()+"IFD"];y=q.SHORT(B);for(i=0;i<y;i++){x=B+12*i+2;if(q.SHORT(x)==u){A=x+8;break}}if(!A){return false}q.LONG(A,z);return true}return{init:function(u){o={tiffHeader:10};if(u===e||!u.length){return false}q.init(u);if(q.SHORT(0)===65505&&q.STRING(4,5).toUpperCase()==="EXIF\0"){return s()}return false},EXIF:function(){var v;v=p(o.exifIFD,n.exif);if(v.ExifVersion&&j.typeOf(v.ExifVersion)==="array"){for(var w=0,u="";w<v.ExifVersion.length;w++){u+=String.fromCharCode(v.ExifVersion[w])}v.ExifVersion=u}return v},GPS:function(){var u;u=p(o.gpsIFD,n.gps);if(u.GPSVersionID){u.GPSVersionID=u.GPSVersionID.join(".")}return u},setExif:function(u,v){if(u!=="PixelXDimension"&&u!=="PixelYDimension"){return false}return r("exif",u,v)},getBinary:function(){return q.SEGMENT()}}}})(window,document,plupload);(function(d,a,b,c){function e(f){return a.getElementById(f)}b.runtimes.Html4=b.addRuntime("html4",{getFeatures:function(){return{multipart:true,triggerDialog:(b.ua.gecko&&d.FormData||b.ua.webkit)}},init:function(f,g){f.bind("Init",function(p){var j=a.body,n,h="javascript",k,x,q,z=[],r=/MSIE/.test(navigator.userAgent),t=[],m=p.settings.filters,o,l,s,w;no_type_restriction:for(o=0;o<m.length;o++){l=m[o].extensions.split(/,/);for(w=0;w<l.length;w++){if(l[w]==="*"){t=[];break no_type_restriction}s=b.mimeTypes[l[w]];if(s&&b.inArray(s,t)===-1){t.push(s)}}}t=t.join(",");function v(){var C,A,y,B;q=b.guid();z.push(q);C=a.createElement("form");C.setAttribute("id","form_"+q);C.setAttribute("method","post");C.setAttribute("enctype","multipart/form-data");C.setAttribute("encoding","multipart/form-data");C.setAttribute("target",p.id+"_iframe");C.style.position="absolute";A=a.createElement("input");A.setAttribute("id","input_"+q);A.setAttribute("type","file");A.setAttribute("accept",t);A.setAttribute("size",1);B=e(p.settings.browse_button);if(p.features.triggerDialog&&B){b.addEvent(e(p.settings.browse_button),"click",function(D){if(!A.disabled){A.click()}D.preventDefault()},p.id)}b.extend(A.style,{width:"100%",height:"100%",opacity:0,fontSize:"99px",cursor:"pointer"});b.extend(C.style,{overflow:"hidden"});y=p.settings.shim_bgcolor;if(y){C.style.background=y}if(r){b.extend(A.style,{filter:"alpha(opacity=0)"})}b.addEvent(A,"change",function(G){var E=G.target,D,F=[],H;if(E.value){e("form_"+q).style.top=-1048575+"px";D=E.value.replace(/\\/g,"/");D=D.substring(D.length,D.lastIndexOf("/")+1);F.push(new b.File(q,D));if(!p.features.triggerDialog){b.removeAllEvents(C,p.id)}else{b.removeEvent(B,"click",p.id)}b.removeEvent(A,"change",p.id);v();if(F.length){f.trigger("FilesAdded",F)}}},p.id);C.appendChild(A);j.appendChild(C);p.refresh()}function u(){var y=a.createElement("div");y.innerHTML='<iframe id="'+p.id+'_iframe" name="'+p.id+'_iframe" src="'+h+':&quot;&quot;" style="display:none"></iframe>';n=y.firstChild;j.appendChild(n);b.addEvent(n,"load",function(D){var E=D.target,C,A;if(!k){return}try{C=E.contentWindow.document||E.contentDocument||d.frames[E.id].document}catch(B){p.trigger("Error",{code:b.SECURITY_ERROR,message:b.translate("Security error."),file:k});return}A=C.body.innerHTML;if(A){k.status=b.DONE;k.loaded=1025;k.percent=100;p.trigger("UploadProgress",k);p.trigger("FileUploaded",k,{response:A})}},p.id)}if(p.settings.container){j=e(p.settings.container);if(b.getStyle(j,"position")==="static"){j.style.position="relative"}}p.bind("UploadFile",function(y,B){var C,A;if(B.status==b.DONE||B.status==b.FAILED||y.state==b.STOPPED){return}C=e("form_"+B.id);A=e("input_"+B.id);A.setAttribute("name",y.settings.file_data_name);C.setAttribute("action",y.settings.url);b.each(b.extend({name:B.target_name||B.name},y.settings.multipart_params),function(F,D){var E=a.createElement("input");b.extend(E,{type:"hidden",name:D,value:F});C.insertBefore(E,C.firstChild)});k=B;e("form_"+q).style.top=-1048575+"px";C.submit()});p.bind("FileUploaded",function(y){y.refresh()});p.bind("StateChanged",function(y){if(y.state==b.STARTED){u()}else{if(y.state==b.STOPPED){d.setTimeout(function(){b.removeEvent(n,"load",y.id);if(n.parentNode){n.parentNode.removeChild(n)}},0)}}b.each(y.files,function(B,A){if(B.status===b.DONE||B.status===b.FAILED){var C=e("form_"+B.id);if(C){C.parentNode.removeChild(C)}}})});p.bind("Refresh",function(A){var G,B,C,D,y,H,I,F,E;G=e(A.settings.browse_button);if(G){y=b.getPos(G,e(A.settings.container));H=b.getSize(G);I=e("form_"+q);F=e("input_"+q);b.extend(I.style,{top:y.y+"px",left:y.x+"px",width:H.w+"px",height:H.h+"px"});if(A.features.triggerDialog){if(b.getStyle(G,"position")==="static"){b.extend(G.style,{position:"relative"})}E=parseInt(G.style.zIndex,10);if(isNaN(E)){E=0}b.extend(G.style,{zIndex:E});b.extend(I.style,{zIndex:E-1})}C=A.settings.browse_button_hover;D=A.settings.browse_button_active;B=A.features.triggerDialog?G:I;if(C){b.addEvent(B,"mouseover",function(){b.addClass(G,C)},A.id);b.addEvent(B,"mouseout",function(){b.removeClass(G,C)},A.id)}if(D){b.addEvent(B,"mousedown",function(){b.addClass(G,D)},A.id);b.addEvent(a.body,"mouseup",function(){b.removeClass(G,D)},A.id)}}});f.bind("FilesRemoved",function(y,B){var A,C;for(A=0;A<B.length;A++){C=e("form_"+B[A].id);if(C){C.parentNode.removeChild(C)}}});f.bind("DisableBrowse",function(y,B){var A=a.getElementById("input_"+q);if(A){A.disabled=B}});f.bind("Destroy",function(y){var A,B,C,D={inputContainer:"form_"+q,inputFile:"input_"+q,browseButton:y.settings.browse_button};for(A in D){B=e(D[A]);if(B){b.removeAllEvents(B,y.id)}}b.removeAllEvents(a.body,y.id);b.each(z,function(F,E){C=e("form_"+F);if(C){j.removeChild(C)}})});v()});g({success:true})}})})(window,document,plupload);;

/** CKEitor **/
﻿/*
Copyright (c) 2003-2013, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.html or http://ckeditor.com/license
*/
(function(){if(window.CKEDITOR&&window.CKEDITOR.dom)return;window.CKEDITOR||(window.CKEDITOR=function(){var a={timestamp:"D3NA",version:"4.1.1",revision:"5a2a7e3",rnd:Math.floor(900*Math.random())+100,_:{pending:[]},status:"unloaded",basePath:function(){var b=window.CKEDITOR_BASEPATH||"";if(!b)for(var a=document.getElementsByTagName("script"),d=0;d<a.length;d++){var c=a[d].src.match(/(^|.*[\\\/])ckeditor(?:_basic)?(?:_source)?.js(?:\?.*)?$/i);if(c){b=c[1];break}}-1==b.indexOf(":/")&&(b=0===b.indexOf("/")?location.href.match(/^.*?:\/\/[^\/]*/)[0]+b:location.href.match(/^[^\?]*\/(?:)/)[0]+
b);if(!b)throw'The CKEditor installation path could not be automatically detected. Please set the global variable "CKEDITOR_BASEPATH" before creating editor instances.';return b}(),getUrl:function(b){-1==b.indexOf(":/")&&0!==b.indexOf("/")&&(b=this.basePath+b);this.timestamp&&("/"!=b.charAt(b.length-1)&&!/[&?]t=/.test(b))&&(b+=(0<=b.indexOf("?")?"&":"?")+"t="+this.timestamp);return b},domReady:function(){function b(){try{document.addEventListener?(document.removeEventListener("DOMContentLoaded",b,
!1),a()):document.attachEvent&&"complete"===document.readyState&&(document.detachEvent("onreadystatechange",b),a())}catch(d){}}function a(){for(var b;b=d.shift();)b()}var d=[];return function(a){d.push(a);"complete"===document.readyState&&setTimeout(b,1);if(1==d.length)if(document.addEventListener)document.addEventListener("DOMContentLoaded",b,!1),window.addEventListener("load",b,!1);else if(document.attachEvent){document.attachEvent("onreadystatechange",b);window.attachEvent("onload",b);a=!1;try{a=
!window.frameElement}catch(e){}if(document.documentElement.doScroll&&a){var c=function(){try{document.documentElement.doScroll("left")}catch(a){setTimeout(c,1);return}b()};c()}}}}()},c=window.CKEDITOR_GETURL;if(c){var b=a.getUrl;a.getUrl=function(f){return c.call(a,f)||b.call(a,f)}}return a}());
CKEDITOR.event||(CKEDITOR.event=function(){},CKEDITOR.event.implementOn=function(a){var c=CKEDITOR.event.prototype,b;for(b in c)a[b]==void 0&&(a[b]=c[b])},CKEDITOR.event.prototype=function(){function a(f){var a=c(this);return a[f]||(a[f]=new b(f))}var c=function(b){b=b.getPrivate&&b.getPrivate()||b._||(b._={});return b.events||(b.events={})},b=function(b){this.name=b;this.listeners=[]};b.prototype={getListenerIndex:function(b){for(var a=0,d=this.listeners;a<d.length;a++)if(d[a].fn==b)return a;return-1}};
return{define:function(b,e){var d=a.call(this,b);CKEDITOR.tools.extend(d,e,true)},on:function(b,e,d,c,l){function i(a,h,n,p){a={name:b,sender:this,editor:a,data:h,listenerData:c,stop:n,cancel:p,removeListener:m};return e.call(d,a)===false?false:a.data}function m(){r.removeListener(b,e)}var n=a.call(this,b);if(n.getListenerIndex(e)<0){n=n.listeners;d||(d=this);isNaN(l)&&(l=10);var r=this;i.fn=e;i.priority=l;for(var p=n.length-1;p>=0;p--)if(n[p].priority<=l){n.splice(p+1,0,i);return{removeListener:m}}n.unshift(i)}return{removeListener:m}},
once:function(){var b=arguments[1];arguments[1]=function(a){a.removeListener();return b.apply(this,arguments)};return this.on.apply(this,arguments)},capture:function(){CKEDITOR.event.useCapture=1;var b=this.on.apply(this,arguments);CKEDITOR.event.useCapture=0;return b},fire:function(){var b=0,a=function(){b=1},d=0,j=function(){d=1};return function(l,i,m){var n=c(this)[l],l=b,r=d;b=d=0;if(n){var p=n.listeners;if(p.length)for(var p=p.slice(0),g,h=0;h<p.length;h++){if(n.errorProof)try{g=p[h].call(this,
m,i,a,j)}catch(u){}else g=p[h].call(this,m,i,a,j);g===false?d=1:typeof g!="undefined"&&(i=g);if(b||d)break}}i=d?false:typeof i=="undefined"?true:i;b=l;d=r;return i}}(),fireOnce:function(b,a,d){a=this.fire(b,a,d);delete c(this)[b];return a},removeListener:function(b,a){var d=c(this)[b];if(d){var j=d.getListenerIndex(a);j>=0&&d.listeners.splice(j,1)}},removeAllListeners:function(){var b=c(this),a;for(a in b)delete b[a]},hasListeners:function(b){return(b=c(this)[b])&&b.listeners.length>0}}}());
CKEDITOR.editor||(CKEDITOR.editor=function(){CKEDITOR._.pending.push([this,arguments]);CKEDITOR.event.call(this)},CKEDITOR.editor.prototype.fire=function(a,c){a in{instanceReady:1,loaded:1}&&(this[a]=true);return CKEDITOR.event.prototype.fire.call(this,a,c,this)},CKEDITOR.editor.prototype.fireOnce=function(a,c){a in{instanceReady:1,loaded:1}&&(this[a]=true);return CKEDITOR.event.prototype.fireOnce.call(this,a,c,this)},CKEDITOR.event.implementOn(CKEDITOR.editor.prototype));
CKEDITOR.env||(CKEDITOR.env=function(){var a=navigator.userAgent.toLowerCase(),c=window.opera,b={ie:eval("/*@cc_on!@*/false"),opera:!!c&&c.version,webkit:a.indexOf(" applewebkit/")>-1,air:a.indexOf(" adobeair/")>-1,mac:a.indexOf("macintosh")>-1,quirks:document.compatMode=="BackCompat",mobile:a.indexOf("mobile")>-1,iOS:/(ipad|iphone|ipod)/.test(a),isCustomDomain:function(){if(!this.ie)return false;var b=document.domain,a=window.location.hostname;return b!=a&&b!="["+a+"]"},secure:location.protocol==
"https:"};b.gecko=navigator.product=="Gecko"&&!b.webkit&&!b.opera;if(b.webkit)a.indexOf("chrome")>-1?b.chrome=true:b.safari=true;var f=0;if(b.ie){f=b.quirks||!document.documentMode?parseFloat(a.match(/msie (\d+)/)[1]):document.documentMode;b.ie9Compat=f==9;b.ie8Compat=f==8;b.ie7Compat=f==7;b.ie6Compat=f<7||b.quirks}if(b.gecko){var e=a.match(/rv:([\d\.]+)/);if(e){e=e[1].split(".");f=e[0]*1E4+(e[1]||0)*100+(e[2]||0)*1}}b.opera&&(f=parseFloat(c.version()));b.air&&(f=parseFloat(a.match(/ adobeair\/(\d+)/)[1]));
b.webkit&&(f=parseFloat(a.match(/ applewebkit\/(\d+)/)[1]));b.version=f;b.isCompatible=b.iOS&&f>=534||!b.mobile&&(b.ie&&f>6||b.gecko&&f>=10801||b.opera&&f>=9.5||b.air&&f>=1||b.webkit&&f>=522||false);b.cssClass="cke_browser_"+(b.ie?"ie":b.gecko?"gecko":b.opera?"opera":b.webkit?"webkit":"unknown");if(b.quirks)b.cssClass=b.cssClass+" cke_browser_quirks";if(b.ie){b.cssClass=b.cssClass+(" cke_browser_ie"+(b.quirks||b.version<7?"6":b.version));if(b.quirks)b.cssClass=b.cssClass+" cke_browser_iequirks"}if(b.gecko)if(f<
10900)b.cssClass=b.cssClass+" cke_browser_gecko18";else if(f<=11E3)b.cssClass=b.cssClass+" cke_browser_gecko19";if(b.air)b.cssClass=b.cssClass+" cke_browser_air";return b}());
"unloaded"==CKEDITOR.status&&function(){CKEDITOR.event.implementOn(CKEDITOR);CKEDITOR.loadFullCore=function(){if(CKEDITOR.status!="basic_ready")CKEDITOR.loadFullCore._load=1;else{delete CKEDITOR.loadFullCore;var a=document.createElement("script");a.type="text/javascript";a.src=CKEDITOR.basePath+"ckeditor.js";document.getElementsByTagName("head")[0].appendChild(a)}};CKEDITOR.loadFullCoreTimeout=0;CKEDITOR.add=function(a){(this._.pending||(this._.pending=[])).push(a)};(function(){CKEDITOR.domReady(function(){var a=
CKEDITOR.loadFullCore,c=CKEDITOR.loadFullCoreTimeout;if(a){CKEDITOR.status="basic_ready";a&&a._load?a():c&&setTimeout(function(){CKEDITOR.loadFullCore&&CKEDITOR.loadFullCore()},c*1E3)}})})();CKEDITOR.status="basic_loaded"}();CKEDITOR.dom={};
(function(){var a=[],c=CKEDITOR.env.gecko?"-moz-":CKEDITOR.env.webkit?"-webkit-":CKEDITOR.env.opera?"-o-":CKEDITOR.env.ie?"-ms-":"";CKEDITOR.on("reset",function(){a=[]});CKEDITOR.tools={arrayCompare:function(b,a){if(!b&&!a)return true;if(!b||!a||b.length!=a.length)return false;for(var e=0;e<b.length;e++)if(b[e]!=a[e])return false;return true},clone:function(b){var a;if(b&&b instanceof Array){a=[];for(var e=0;e<b.length;e++)a[e]=CKEDITOR.tools.clone(b[e]);return a}if(b===null||typeof b!="object"||
b instanceof String||b instanceof Number||b instanceof Boolean||b instanceof Date||b instanceof RegExp)return b;a=new b.constructor;for(e in b)a[e]=CKEDITOR.tools.clone(b[e]);return a},capitalize:function(b){return b.charAt(0).toUpperCase()+b.substring(1).toLowerCase()},extend:function(b){var a=arguments.length,e,d;if(typeof(e=arguments[a-1])=="boolean")a--;else if(typeof(e=arguments[a-2])=="boolean"){d=arguments[a-1];a=a-2}for(var c=1;c<a;c++){var l=arguments[c],i;for(i in l)if(e===true||b[i]==void 0)if(!d||
i in d)b[i]=l[i]}return b},prototypedCopy:function(b){var a=function(){};a.prototype=b;return new a},copy:function(b){var a={},e;for(e in b)a[e]=b[e];return a},isArray:function(b){return!!b&&b instanceof Array},isEmpty:function(b){for(var a in b)if(b.hasOwnProperty(a))return false;return true},cssVendorPrefix:function(b,a,e){if(e)return c+b+":"+a+";"+b+":"+a;e={};e[b]=a;e[c+b]=a;return e},cssStyleToDomStyle:function(){var b=document.createElement("div").style,a=typeof b.cssFloat!="undefined"?"cssFloat":
typeof b.styleFloat!="undefined"?"styleFloat":"float";return function(b){return b=="float"?a:b.replace(/-./g,function(b){return b.substr(1).toUpperCase()})}}(),buildStyleHtml:function(b){for(var b=[].concat(b),a,e=[],d=0;d<b.length;d++)if(a=b[d])/@import|[{}]/.test(a)?e.push("<style>"+a+"</style>"):e.push('<link type="text/css" rel=stylesheet href="'+a+'">');return e.join("")},htmlEncode:function(b){return(""+b).replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;")},htmlEncodeAttr:function(b){return b.replace(/"/g,
"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;")},getNextNumber:function(){var b=0;return function(){return++b}}(),getNextId:function(){return"cke_"+this.getNextNumber()},override:function(b,a){var e=a(b);e.prototype=b.prototype;return e},setTimeout:function(b,a,e,d,c){c||(c=window);e||(e=c);return c.setTimeout(function(){d?b.apply(e,[].concat(d)):b.apply(e)},a||0)},trim:function(){var b=/(?:^[ \t\n\r]+)|(?:[ \t\n\r]+$)/g;return function(a){return a.replace(b,"")}}(),ltrim:function(){var b=/^[ \t\n\r]+/g;
return function(a){return a.replace(b,"")}}(),rtrim:function(){var b=/[ \t\n\r]+$/g;return function(a){return a.replace(b,"")}}(),indexOf:function(b,a){if(typeof a=="function")for(var e=0,d=b.length;e<d;e++){if(a(b[e]))return e}else{if(b.indexOf)return b.indexOf(a);e=0;for(d=b.length;e<d;e++)if(b[e]===a)return e}return-1},search:function(b,a){var e=CKEDITOR.tools.indexOf(b,a);return e>=0?b[e]:null},bind:function(b,a){return function(){return b.apply(a,arguments)}},createClass:function(b){var a=b.$,
e=b.base,d=b.privates||b._,c=b.proto,b=b.statics;!a&&(a=function(){e&&this.base.apply(this,arguments)});if(d)var l=a,a=function(){var b=this._||(this._={}),a;for(a in d){var f=d[a];b[a]=typeof f=="function"?CKEDITOR.tools.bind(f,this):f}l.apply(this,arguments)};if(e){a.prototype=this.prototypedCopy(e.prototype);a.prototype.constructor=a;a.base=e;a.baseProto=e.prototype;a.prototype.base=function(){this.base=e.prototype.base;e.apply(this,arguments);this.base=arguments.callee}}c&&this.extend(a.prototype,
c,true);b&&this.extend(a,b,true);return a},addFunction:function(b,f){return a.push(function(){return b.apply(f||this,arguments)})-1},removeFunction:function(b){a[b]=null},callFunction:function(b){var f=a[b];return f&&f.apply(window,Array.prototype.slice.call(arguments,1))},cssLength:function(){var b=/^-?\d+\.?\d*px$/,a;return function(e){a=CKEDITOR.tools.trim(e+"")+"px";return b.test(a)?a:e||""}}(),convertToPx:function(){var b;return function(a){if(!b){b=CKEDITOR.dom.element.createFromHtml('<div style="position:absolute;left:-9999px;top:-9999px;margin:0px;padding:0px;border:0px;"></div>',
CKEDITOR.document);CKEDITOR.document.getBody().append(b)}if(!/%$/.test(a)){b.setStyle("width",a);return b.$.clientWidth}return a}}(),repeat:function(b,a){return Array(a+1).join(b)},tryThese:function(){for(var b,a=0,e=arguments.length;a<e;a++){var d=arguments[a];try{b=d();break}catch(c){}}return b},genKey:function(){return Array.prototype.slice.call(arguments).join("-")},defer:function(b){return function(){var a=arguments,e=this;window.setTimeout(function(){b.apply(e,a)},0)}},normalizeCssText:function(b,
a){var e=[],d,c=CKEDITOR.tools.parseCssText(b,true,a);for(d in c)e.push(d+":"+c[d]);e.sort();return e.length?e.join(";")+";":""},convertRgbToHex:function(b){return b.replace(/(?:rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\))/gi,function(b,a,d,c){b=[a,d,c];for(a=0;a<3;a++)b[a]=("0"+parseInt(b[a],10).toString(16)).slice(-2);return"#"+b.join("")})},parseCssText:function(b,a,e){var d={};if(e){e=new CKEDITOR.dom.element("span");e.setAttribute("style",b);b=CKEDITOR.tools.convertRgbToHex(e.getAttribute("style")||
"")}if(!b||b==";")return d;b.replace(/&quot;/g,'"').replace(/\s*([^:;\s]+)\s*:\s*([^;]+)\s*(?=;|$)/g,function(b,e,c){if(a){e=e.toLowerCase();e=="font-family"&&(c=c.toLowerCase().replace(/["']/g,"").replace(/\s*,\s*/g,","));c=CKEDITOR.tools.trim(c)}d[e]=c});return d},writeCssText:function(b,a){var e,c=[];for(e in b)c.push(e+":"+b[e]);a&&c.sort();return c.join("; ")},objectCompare:function(b,a,c){var d;if(!b&&!a)return true;if(!b||!a)return false;for(d in b)if(b[d]!=a[d])return false;if(!c)for(d in a)if(b[d]!=
a[d])return false;return true},objectKeys:function(b){var a=[],c;for(c in b)a.push(c);return a},convertArrayToObject:function(b,a){var c={};arguments.length==1&&(a=true);for(var d=0,j=b.length;d<j;++d)c[b[d]]=a;return c}}})();
CKEDITOR.dtd=function(){var a=CKEDITOR.tools.extend,c=function(b,a){for(var f=CKEDITOR.tools.clone(b),c=1;c<arguments.length;c++){var a=arguments[c],g;for(g in a)delete f[g]}return f},b={},f={},e={address:1,article:1,aside:1,blockquote:1,details:1,div:1,dl:1,fieldset:1,figure:1,footer:1,form:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,header:1,hgroup:1,hr:1,menu:1,nav:1,ol:1,p:1,pre:1,section:1,table:1,ul:1},d={command:1,link:1,meta:1,noscript:1,script:1,style:1},j={},l={"#":1},i={center:1,dir:1,noframes:1};
a(b,{a:1,abbr:1,area:1,audio:1,b:1,bdi:1,bdo:1,br:1,button:1,canvas:1,cite:1,code:1,command:1,datalist:1,del:1,dfn:1,em:1,embed:1,i:1,iframe:1,img:1,input:1,ins:1,kbd:1,keygen:1,label:1,map:1,mark:1,meter:1,noscript:1,object:1,output:1,progress:1,q:1,ruby:1,s:1,samp:1,script:1,select:1,small:1,span:1,strong:1,sub:1,sup:1,textarea:1,time:1,u:1,"var":1,video:1,wbr:1},l,{acronym:1,applet:1,basefont:1,big:1,font:1,isindex:1,strike:1,style:1,tt:1});a(f,e,b,i);c={a:c(b,{a:1,button:1}),abbr:b,address:f,
area:j,article:a({style:1},f),aside:a({style:1},f),audio:a({source:1,track:1},f),b:b,base:j,bdi:b,bdo:b,blockquote:f,body:f,br:j,button:c(b,{a:1,button:1}),canvas:b,caption:f,cite:b,code:b,col:j,colgroup:{col:1},command:j,datalist:a({option:1},b),dd:f,del:b,details:a({summary:1},f),dfn:b,div:a({style:1},f),dl:{dt:1,dd:1},dt:f,em:b,embed:j,fieldset:a({legend:1},f),figcaption:f,figure:a({figcaption:1},f),footer:f,form:f,h1:b,h2:b,h3:b,h4:b,h5:b,h6:b,head:a({title:1,base:1},d),header:f,hgroup:{h1:1,
h2:1,h3:1,h4:1,h5:1,h6:1},hr:j,html:a({head:1,body:1},f,d),i:b,iframe:l,img:j,input:j,ins:b,kbd:b,keygen:j,label:b,legend:b,li:f,link:j,map:f,mark:b,menu:a({li:1},f),meta:j,meter:c(b,{meter:1}),nav:f,noscript:a({link:1,meta:1,style:1},b),object:a({param:1},b),ol:{li:1},optgroup:{option:1},option:l,output:b,p:b,param:j,pre:b,progress:c(b,{progress:1}),q:b,rp:b,rt:b,ruby:a({rp:1,rt:1},b),s:b,samp:b,script:l,section:a({style:1},f),select:{optgroup:1,option:1},small:b,source:j,span:b,strong:b,style:l,
sub:b,summary:b,sup:b,table:{caption:1,colgroup:1,thead:1,tfoot:1,tbody:1,tr:1},tbody:{tr:1},td:f,textarea:l,tfoot:{tr:1},th:f,thead:{tr:1},time:c(b,{time:1}),title:l,tr:{th:1,td:1},track:j,u:b,ul:{li:1},"var":b,video:a({source:1,track:1},f),wbr:j,acronym:b,applet:a({param:1},f),basefont:j,big:b,center:f,dialog:j,dir:{li:1},font:b,isindex:j,noframes:f,strike:b,tt:b};a(c,{$block:a({audio:1,dd:1,dt:1,li:1,video:1},e,i),$blockLimit:{article:1,aside:1,audio:1,body:1,caption:1,details:1,dir:1,div:1,dl:1,
fieldset:1,figure:1,footer:1,form:1,header:1,hgroup:1,menu:1,nav:1,ol:1,section:1,table:1,td:1,th:1,tr:1,ul:1,video:1},$cdata:{script:1,style:1},$editable:{address:1,article:1,aside:1,blockquote:1,body:1,details:1,div:1,fieldset:1,footer:1,form:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,header:1,hgroup:1,nav:1,p:1,pre:1,section:1},$empty:{area:1,base:1,basefont:1,br:1,col:1,command:1,dialog:1,embed:1,hr:1,img:1,input:1,isindex:1,keygen:1,link:1,meta:1,param:1,source:1,track:1,wbr:1},$inline:b,$list:{dl:1,ol:1,
ul:1},$listItem:{dd:1,dt:1,li:1},$nonBodyContent:a({body:1,head:1,html:1},c.head),$nonEditable:{applet:1,audio:1,button:1,embed:1,iframe:1,map:1,object:1,option:1,param:1,script:1,textarea:1,video:1},$object:{applet:1,audio:1,button:1,hr:1,iframe:1,img:1,input:1,object:1,select:1,table:1,textarea:1,video:1},$removeEmpty:{abbr:1,acronym:1,b:1,bdi:1,bdo:1,big:1,cite:1,code:1,del:1,dfn:1,em:1,font:1,i:1,ins:1,label:1,kbd:1,mark:1,meter:1,output:1,q:1,ruby:1,s:1,samp:1,small:1,span:1,strike:1,strong:1,
sub:1,sup:1,time:1,tt:1,u:1,"var":1},$tabIndex:{a:1,area:1,button:1,input:1,object:1,select:1,textarea:1},$tableContent:{caption:1,col:1,colgroup:1,tbody:1,td:1,tfoot:1,th:1,thead:1,tr:1},$transparent:{a:1,audio:1,canvas:1,del:1,ins:1,map:1,noscript:1,object:1,video:1},$intermediate:{caption:1,colgroup:1,dd:1,dt:1,figcaption:1,legend:1,li:1,optgroup:1,option:1,rp:1,rt:1,summary:1,tbody:1,td:1,tfoot:1,th:1,thead:1,tr:1}});return c}();CKEDITOR.dom.event=function(a){this.$=a};
CKEDITOR.dom.event.prototype={getKey:function(){return this.$.keyCode||this.$.which},getKeystroke:function(){var a=this.getKey();if(this.$.ctrlKey||this.$.metaKey)a=a+CKEDITOR.CTRL;this.$.shiftKey&&(a=a+CKEDITOR.SHIFT);this.$.altKey&&(a=a+CKEDITOR.ALT);return a},preventDefault:function(a){var c=this.$;c.preventDefault?c.preventDefault():c.returnValue=false;a&&this.stopPropagation()},stopPropagation:function(){var a=this.$;a.stopPropagation?a.stopPropagation():a.cancelBubble=true},getTarget:function(){var a=
this.$.target||this.$.srcElement;return a?new CKEDITOR.dom.node(a):null},getPhase:function(){return this.$.eventPhase||2},getPageOffset:function(){var a=this.getTarget().getDocument().$;return{x:this.$.pageX||this.$.clientX+(a.documentElement.scrollLeft||a.body.scrollLeft),y:this.$.pageY||this.$.clientY+(a.documentElement.scrollTop||a.body.scrollTop)}}};CKEDITOR.CTRL=1114112;CKEDITOR.SHIFT=2228224;CKEDITOR.ALT=4456448;CKEDITOR.EVENT_PHASE_CAPTURING=1;CKEDITOR.EVENT_PHASE_AT_TARGET=2;
CKEDITOR.EVENT_PHASE_BUBBLING=3;CKEDITOR.dom.domObject=function(a){if(a)this.$=a};
CKEDITOR.dom.domObject.prototype=function(){var a=function(a,b){return function(f){typeof CKEDITOR!="undefined"&&a.fire(b,new CKEDITOR.dom.event(f))}};return{getPrivate:function(){var a;if(!(a=this.getCustomData("_")))this.setCustomData("_",a={});return a},on:function(c){var b=this.getCustomData("_cke_nativeListeners");if(!b){b={};this.setCustomData("_cke_nativeListeners",b)}if(!b[c]){b=b[c]=a(this,c);this.$.addEventListener?this.$.addEventListener(c,b,!!CKEDITOR.event.useCapture):this.$.attachEvent&&
this.$.attachEvent("on"+c,b)}return CKEDITOR.event.prototype.on.apply(this,arguments)},removeListener:function(a){CKEDITOR.event.prototype.removeListener.apply(this,arguments);if(!this.hasListeners(a)){var b=this.getCustomData("_cke_nativeListeners"),f=b&&b[a];if(f){this.$.removeEventListener?this.$.removeEventListener(a,f,false):this.$.detachEvent&&this.$.detachEvent("on"+a,f);delete b[a]}}},removeAllListeners:function(){var a=this.getCustomData("_cke_nativeListeners"),b;for(b in a){var f=a[b];this.$.detachEvent?
this.$.detachEvent("on"+b,f):this.$.removeEventListener&&this.$.removeEventListener(b,f,false);delete a[b]}}}}();
(function(a){var c={};CKEDITOR.on("reset",function(){c={}});a.equals=function(b){try{return b&&b.$===this.$}catch(a){return false}};a.setCustomData=function(b,a){var e=this.getUniqueId();(c[e]||(c[e]={}))[b]=a;return this};a.getCustomData=function(b){var a=this.$["data-cke-expando"];return(a=a&&c[a])&&b in a?a[b]:null};a.removeCustomData=function(b){var a=this.$["data-cke-expando"],a=a&&c[a],e,d;if(a){e=a[b];d=b in a;delete a[b]}return d?e:null};a.clearCustomData=function(){this.removeAllListeners();
var b=this.$["data-cke-expando"];b&&delete c[b]};a.getUniqueId=function(){return this.$["data-cke-expando"]||(this.$["data-cke-expando"]=CKEDITOR.tools.getNextNumber())};CKEDITOR.event.implementOn(a)})(CKEDITOR.dom.domObject.prototype);
CKEDITOR.dom.node=function(a){return a?new CKEDITOR.dom[a.nodeType==CKEDITOR.NODE_DOCUMENT?"document":a.nodeType==CKEDITOR.NODE_ELEMENT?"element":a.nodeType==CKEDITOR.NODE_TEXT?"text":a.nodeType==CKEDITOR.NODE_COMMENT?"comment":a.nodeType==CKEDITOR.NODE_DOCUMENT_FRAGMENT?"documentFragment":"domObject"](a):this};CKEDITOR.dom.node.prototype=new CKEDITOR.dom.domObject;CKEDITOR.NODE_ELEMENT=1;CKEDITOR.NODE_DOCUMENT=9;CKEDITOR.NODE_TEXT=3;CKEDITOR.NODE_COMMENT=8;CKEDITOR.NODE_DOCUMENT_FRAGMENT=11;
CKEDITOR.POSITION_IDENTICAL=0;CKEDITOR.POSITION_DISCONNECTED=1;CKEDITOR.POSITION_FOLLOWING=2;CKEDITOR.POSITION_PRECEDING=4;CKEDITOR.POSITION_IS_CONTAINED=8;CKEDITOR.POSITION_CONTAINS=16;
CKEDITOR.tools.extend(CKEDITOR.dom.node.prototype,{appendTo:function(a,c){a.append(this,c);return a},clone:function(a,c){var b=this.$.cloneNode(a),f=function(b){b["data-cke-expando"]&&(b["data-cke-expando"]=false);if(b.nodeType==CKEDITOR.NODE_ELEMENT){c||b.removeAttribute("id",false);if(a)for(var b=b.childNodes,d=0;d<b.length;d++)f(b[d])}};f(b);return new CKEDITOR.dom.node(b)},hasPrevious:function(){return!!this.$.previousSibling},hasNext:function(){return!!this.$.nextSibling},insertAfter:function(a){a.$.parentNode.insertBefore(this.$,
a.$.nextSibling);return a},insertBefore:function(a){a.$.parentNode.insertBefore(this.$,a.$);return a},insertBeforeMe:function(a){this.$.parentNode.insertBefore(a.$,this.$);return a},getAddress:function(a){for(var c=[],b=this.getDocument().$.documentElement,f=this.$;f&&f!=b;){var e=f.parentNode;e&&c.unshift(this.getIndex.call({$:f},a));f=e}return c},getDocument:function(){return new CKEDITOR.dom.document(this.$.ownerDocument||this.$.parentNode.ownerDocument)},getIndex:function(a){var c=this.$,b=-1,
f;if(!this.$.parentNode)return b;do if(!a||!(c!=this.$&&c.nodeType==CKEDITOR.NODE_TEXT&&(f||!c.nodeValue))){b++;f=c.nodeType==CKEDITOR.NODE_TEXT}while(c=c.previousSibling);return b},getNextSourceNode:function(a,c,b){if(b&&!b.call)var f=b,b=function(b){return!b.equals(f)};var a=!a&&this.getFirst&&this.getFirst(),e;if(!a){if(this.type==CKEDITOR.NODE_ELEMENT&&b&&b(this,true)===false)return null;a=this.getNext()}for(;!a&&(e=(e||this).getParent());){if(b&&b(e,true)===false)return null;a=e.getNext()}return!a||
b&&b(a)===false?null:c&&c!=a.type?a.getNextSourceNode(false,c,b):a},getPreviousSourceNode:function(a,c,b){if(b&&!b.call)var f=b,b=function(b){return!b.equals(f)};var a=!a&&this.getLast&&this.getLast(),e;if(!a){if(this.type==CKEDITOR.NODE_ELEMENT&&b&&b(this,true)===false)return null;a=this.getPrevious()}for(;!a&&(e=(e||this).getParent());){if(b&&b(e,true)===false)return null;a=e.getPrevious()}return!a||b&&b(a)===false?null:c&&a.type!=c?a.getPreviousSourceNode(false,c,b):a},getPrevious:function(a){var c=
this.$,b;do b=(c=c.previousSibling)&&c.nodeType!=10&&new CKEDITOR.dom.node(c);while(b&&a&&!a(b));return b},getNext:function(a){var c=this.$,b;do b=(c=c.nextSibling)&&new CKEDITOR.dom.node(c);while(b&&a&&!a(b));return b},getParent:function(a){var c=this.$.parentNode;return c&&(c.nodeType==CKEDITOR.NODE_ELEMENT||a&&c.nodeType==CKEDITOR.NODE_DOCUMENT_FRAGMENT)?new CKEDITOR.dom.node(c):null},getParents:function(a){var c=this,b=[];do b[a?"push":"unshift"](c);while(c=c.getParent());return b},getCommonAncestor:function(a){if(a.equals(this))return this;
if(a.contains&&a.contains(this))return a;var c=this.contains?this:this.getParent();do if(c.contains(a))return c;while(c=c.getParent());return null},getPosition:function(a){var c=this.$,b=a.$;if(c.compareDocumentPosition)return c.compareDocumentPosition(b);if(c==b)return CKEDITOR.POSITION_IDENTICAL;if(this.type==CKEDITOR.NODE_ELEMENT&&a.type==CKEDITOR.NODE_ELEMENT){if(c.contains){if(c.contains(b))return CKEDITOR.POSITION_CONTAINS+CKEDITOR.POSITION_PRECEDING;if(b.contains(c))return CKEDITOR.POSITION_IS_CONTAINED+
CKEDITOR.POSITION_FOLLOWING}if("sourceIndex"in c)return c.sourceIndex<0||b.sourceIndex<0?CKEDITOR.POSITION_DISCONNECTED:c.sourceIndex<b.sourceIndex?CKEDITOR.POSITION_PRECEDING:CKEDITOR.POSITION_FOLLOWING}for(var c=this.getAddress(),a=a.getAddress(),b=Math.min(c.length,a.length),f=0;f<=b-1;f++)if(c[f]!=a[f]){if(f<b)return c[f]<a[f]?CKEDITOR.POSITION_PRECEDING:CKEDITOR.POSITION_FOLLOWING;break}return c.length<a.length?CKEDITOR.POSITION_CONTAINS+CKEDITOR.POSITION_PRECEDING:CKEDITOR.POSITION_IS_CONTAINED+
CKEDITOR.POSITION_FOLLOWING},getAscendant:function(a,c){var b=this.$,f;if(!c)b=b.parentNode;for(;b;){if(b.nodeName&&(f=b.nodeName.toLowerCase(),typeof a=="string"?f==a:f in a))return new CKEDITOR.dom.node(b);try{b=b.parentNode}catch(e){b=null}}return null},hasAscendant:function(a,c){var b=this.$;if(!c)b=b.parentNode;for(;b;){if(b.nodeName&&b.nodeName.toLowerCase()==a)return true;b=b.parentNode}return false},move:function(a,c){a.append(this.remove(),c)},remove:function(a){var c=this.$,b=c.parentNode;
if(b){if(a)for(;a=c.firstChild;)b.insertBefore(c.removeChild(a),c);b.removeChild(c)}return this},replace:function(a){this.insertBefore(a);a.remove()},trim:function(){this.ltrim();this.rtrim()},ltrim:function(){for(var a;this.getFirst&&(a=this.getFirst());){if(a.type==CKEDITOR.NODE_TEXT){var c=CKEDITOR.tools.ltrim(a.getText()),b=a.getLength();if(c){if(c.length<b){a.split(b-c.length);this.$.removeChild(this.$.firstChild)}}else{a.remove();continue}}break}},rtrim:function(){for(var a;this.getLast&&(a=
this.getLast());){if(a.type==CKEDITOR.NODE_TEXT){var c=CKEDITOR.tools.rtrim(a.getText()),b=a.getLength();if(c){if(c.length<b){a.split(c.length);this.$.lastChild.parentNode.removeChild(this.$.lastChild)}}else{a.remove();continue}}break}if(!CKEDITOR.env.ie&&!CKEDITOR.env.opera)(a=this.$.lastChild)&&(a.type==1&&a.nodeName.toLowerCase()=="br")&&a.parentNode.removeChild(a)},isReadOnly:function(){var a=this;this.type!=CKEDITOR.NODE_ELEMENT&&(a=this.getParent());if(a&&typeof a.$.isContentEditable!="undefined")return!(a.$.isContentEditable||
a.data("cke-editable"));for(;a;){if(a.data("cke-editable"))break;if(a.getAttribute("contentEditable")=="false")return true;if(a.getAttribute("contentEditable")=="true")break;a=a.getParent()}return!a}});CKEDITOR.dom.window=function(a){CKEDITOR.dom.domObject.call(this,a)};CKEDITOR.dom.window.prototype=new CKEDITOR.dom.domObject;
CKEDITOR.tools.extend(CKEDITOR.dom.window.prototype,{focus:function(){this.$.focus()},getViewPaneSize:function(){var a=this.$.document,c=a.compatMode=="CSS1Compat";return{width:(c?a.documentElement.clientWidth:a.body.clientWidth)||0,height:(c?a.documentElement.clientHeight:a.body.clientHeight)||0}},getScrollPosition:function(){var a=this.$;if("pageXOffset"in a)return{x:a.pageXOffset||0,y:a.pageYOffset||0};a=a.document;return{x:a.documentElement.scrollLeft||a.body.scrollLeft||0,y:a.documentElement.scrollTop||
a.body.scrollTop||0}},getFrame:function(){var a=this.$.frameElement;return a?new CKEDITOR.dom.element.get(a):null}});CKEDITOR.dom.document=function(a){CKEDITOR.dom.domObject.call(this,a)};CKEDITOR.dom.document.prototype=new CKEDITOR.dom.domObject;
CKEDITOR.tools.extend(CKEDITOR.dom.document.prototype,{type:CKEDITOR.NODE_DOCUMENT,appendStyleSheet:function(a){if(this.$.createStyleSheet)this.$.createStyleSheet(a);else{var c=new CKEDITOR.dom.element("link");c.setAttributes({rel:"stylesheet",type:"text/css",href:a});this.getHead().append(c)}},appendStyleText:function(a){if(this.$.createStyleSheet){var c=this.$.createStyleSheet("");c.cssText=a}else{var b=new CKEDITOR.dom.element("style",this);b.append(new CKEDITOR.dom.text(a,this));this.getHead().append(b)}return c||
b.$.sheet},createElement:function(a,c){var b=new CKEDITOR.dom.element(a,this);if(c){c.attributes&&b.setAttributes(c.attributes);c.styles&&b.setStyles(c.styles)}return b},createText:function(a){return new CKEDITOR.dom.text(a,this)},focus:function(){this.getWindow().focus()},getActive:function(){return new CKEDITOR.dom.element(this.$.activeElement)},getById:function(a){return(a=this.$.getElementById(a))?new CKEDITOR.dom.element(a):null},getByAddress:function(a,c){for(var b=this.$.documentElement,f=
0;b&&f<a.length;f++){var e=a[f];if(c)for(var d=-1,j=0;j<b.childNodes.length;j++){var l=b.childNodes[j];if(!(c===true&&l.nodeType==3&&l.previousSibling&&l.previousSibling.nodeType==3)){d++;if(d==e){b=l;break}}}else b=b.childNodes[e]}return b?new CKEDITOR.dom.node(b):null},getElementsByTag:function(a,c){if((!CKEDITOR.env.ie||document.documentMode>8)&&c)a=c+":"+a;return new CKEDITOR.dom.nodeList(this.$.getElementsByTagName(a))},getHead:function(){var a=this.$.getElementsByTagName("head")[0];return a=
a?new CKEDITOR.dom.element(a):this.getDocumentElement().append(new CKEDITOR.dom.element("head"),true)},getBody:function(){return new CKEDITOR.dom.element(this.$.body)},getDocumentElement:function(){return new CKEDITOR.dom.element(this.$.documentElement)},getWindow:function(){var a=new CKEDITOR.dom.window(this.$.parentWindow||this.$.defaultView);return(this.getWindow=function(){return a})()},write:function(a){this.$.open("text/html","replace");CKEDITOR.env.isCustomDomain()&&(this.$.domain=document.domain);
this.$.write(a);this.$.close()}});CKEDITOR.dom.nodeList=function(a){this.$=a};CKEDITOR.dom.nodeList.prototype={count:function(){return this.$.length},getItem:function(a){if(a<0||a>=this.$.length)return null;return(a=this.$[a])?new CKEDITOR.dom.node(a):null}};CKEDITOR.dom.element=function(a,c){typeof a=="string"&&(a=(c?c.$:document).createElement(a));CKEDITOR.dom.domObject.call(this,a)};
CKEDITOR.dom.element.get=function(a){return(a=typeof a=="string"?document.getElementById(a)||document.getElementsByName(a)[0]:a)&&(a.$?a:new CKEDITOR.dom.element(a))};CKEDITOR.dom.element.prototype=new CKEDITOR.dom.node;CKEDITOR.dom.element.createFromHtml=function(a,c){var b=new CKEDITOR.dom.element("div",c);b.setHtml(a);return b.getFirst().remove()};
CKEDITOR.dom.element.setMarker=function(a,c,b,f){var e=c.getCustomData("list_marker_id")||c.setCustomData("list_marker_id",CKEDITOR.tools.getNextNumber()).getCustomData("list_marker_id"),d=c.getCustomData("list_marker_names")||c.setCustomData("list_marker_names",{}).getCustomData("list_marker_names");a[e]=c;d[b]=1;return c.setCustomData(b,f)};CKEDITOR.dom.element.clearAllMarkers=function(a){for(var c in a)CKEDITOR.dom.element.clearMarkers(a,a[c],1)};
CKEDITOR.dom.element.clearMarkers=function(a,c,b){var f=c.getCustomData("list_marker_names"),e=c.getCustomData("list_marker_id"),d;for(d in f)c.removeCustomData(d);c.removeCustomData("list_marker_names");if(b){c.removeCustomData("list_marker_id");delete a[e]}};
(function(){function a(b){for(var a=0,e=0,d=c[b].length;e<d;e++)a=a+(parseInt(this.getComputedStyle(c[b][e])||0,10)||0);return a}CKEDITOR.tools.extend(CKEDITOR.dom.element.prototype,{type:CKEDITOR.NODE_ELEMENT,addClass:function(b){var a=this.$.className;a&&(RegExp("(?:^|\\s)"+b+"(?:\\s|$)","").test(a)||(a=a+(" "+b)));this.$.className=a||b},removeClass:function(b){var a=this.getAttribute("class");if(a){b=RegExp("(?:^|\\s+)"+b+"(?=\\s|$)","i");if(b.test(a))(a=a.replace(b,"").replace(/^\s+/,""))?this.setAttribute("class",
a):this.removeAttribute("class")}return this},hasClass:function(b){return RegExp("(?:^|\\s+)"+b+"(?=\\s|$)","").test(this.getAttribute("class"))},append:function(b,a){typeof b=="string"&&(b=this.getDocument().createElement(b));a?this.$.insertBefore(b.$,this.$.firstChild):this.$.appendChild(b.$);return b},appendHtml:function(b){if(this.$.childNodes.length){var a=new CKEDITOR.dom.element("div",this.getDocument());a.setHtml(b);a.moveChildren(this)}else this.setHtml(b)},appendText:function(b){this.$.text!=
void 0?this.$.text=this.$.text+b:this.append(new CKEDITOR.dom.text(b))},appendBogus:function(){for(var b=this.getLast();b&&b.type==CKEDITOR.NODE_TEXT&&!CKEDITOR.tools.rtrim(b.getText());)b=b.getPrevious();if(!b||!b.is||!b.is("br")){b=CKEDITOR.env.opera?this.getDocument().createText(""):this.getDocument().createElement("br");CKEDITOR.env.gecko&&b.setAttribute("type","_moz");this.append(b)}},breakParent:function(b){var a=new CKEDITOR.dom.range(this.getDocument());a.setStartAfter(this);a.setEndAfter(b);
b=a.extractContents();a.insertNode(this.remove());b.insertAfterNode(this)},contains:CKEDITOR.env.ie||CKEDITOR.env.webkit?function(b){var a=this.$;return b.type!=CKEDITOR.NODE_ELEMENT?a.contains(b.getParent().$):a!=b.$&&a.contains(b.$)}:function(b){return!!(this.$.compareDocumentPosition(b.$)&16)},focus:function(){function b(){try{this.$.focus()}catch(b){}}return function(a){a?CKEDITOR.tools.setTimeout(b,100,this):b.call(this)}}(),getHtml:function(){var b=this.$.innerHTML;return CKEDITOR.env.ie?b.replace(/<\?[^>]*>/g,
""):b},getOuterHtml:function(){if(this.$.outerHTML)return this.$.outerHTML.replace(/<\?[^>]*>/,"");var b=this.$.ownerDocument.createElement("div");b.appendChild(this.$.cloneNode(true));return b.innerHTML},getClientRect:function(){var b=CKEDITOR.tools.extend({},this.$.getBoundingClientRect());!b.width&&(b.width=b.right-b.left);!b.height&&(b.height=b.bottom-b.top);return b},setHtml:function(){var b=function(b){return this.$.innerHTML=b};return CKEDITOR.env.ie&&CKEDITOR.env.version<9?function(b){try{return this.$.innerHTML=
b}catch(a){this.$.innerHTML="";var c=new CKEDITOR.dom.element("body",this.getDocument());c.$.innerHTML=b;for(c=c.getChildren();c.count();)this.append(c.getItem(0));return b}}:b}(),setText:function(b){CKEDITOR.dom.element.prototype.setText=this.$.innerText!=void 0?function(b){return this.$.innerText=b}:function(b){return this.$.textContent=b};return this.setText(b)},getAttribute:function(){var b=function(b){return this.$.getAttribute(b,2)};return CKEDITOR.env.ie&&(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat)?
function(b){switch(b){case "class":b="className";break;case "http-equiv":b="httpEquiv";break;case "name":return this.$.name;case "tabindex":b=this.$.getAttribute(b,2);b!==0&&this.$.tabIndex===0&&(b=null);return b;case "checked":b=this.$.attributes.getNamedItem(b);return(b.specified?b.nodeValue:this.$.checked)?"checked":null;case "hspace":case "value":return this.$[b];case "style":return this.$.style.cssText;case "contenteditable":case "contentEditable":return this.$.attributes.getNamedItem("contentEditable").specified?
this.$.getAttribute("contentEditable"):null}return this.$.getAttribute(b,2)}:b}(),getChildren:function(){return new CKEDITOR.dom.nodeList(this.$.childNodes)},getComputedStyle:CKEDITOR.env.ie?function(b){return this.$.currentStyle[CKEDITOR.tools.cssStyleToDomStyle(b)]}:function(b){var a=this.getWindow().$.getComputedStyle(this.$,null);return a?a.getPropertyValue(b):""},getDtd:function(){var b=CKEDITOR.dtd[this.getName()];this.getDtd=function(){return b};return b},getElementsByTag:CKEDITOR.dom.document.prototype.getElementsByTag,
getTabIndex:CKEDITOR.env.ie?function(){var b=this.$.tabIndex;b===0&&(!CKEDITOR.dtd.$tabIndex[this.getName()]&&parseInt(this.getAttribute("tabindex"),10)!==0)&&(b=-1);return b}:CKEDITOR.env.webkit?function(){var b=this.$.tabIndex;if(b==void 0){b=parseInt(this.getAttribute("tabindex"),10);isNaN(b)&&(b=-1)}return b}:function(){return this.$.tabIndex},getText:function(){return this.$.textContent||this.$.innerText||""},getWindow:function(){return this.getDocument().getWindow()},getId:function(){return this.$.id||
null},getNameAtt:function(){return this.$.name||null},getName:function(){var b=this.$.nodeName.toLowerCase();if(CKEDITOR.env.ie&&!(document.documentMode>8)){var a=this.$.scopeName;a!="HTML"&&(b=a.toLowerCase()+":"+b)}return(this.getName=function(){return b})()},getValue:function(){return this.$.value},getFirst:function(b){var a=this.$.firstChild;(a=a&&new CKEDITOR.dom.node(a))&&(b&&!b(a))&&(a=a.getNext(b));return a},getLast:function(b){var a=this.$.lastChild;(a=a&&new CKEDITOR.dom.node(a))&&(b&&!b(a))&&
(a=a.getPrevious(b));return a},getStyle:function(b){return this.$.style[CKEDITOR.tools.cssStyleToDomStyle(b)]},is:function(){var b=this.getName();if(typeof arguments[0]=="object")return!!arguments[0][b];for(var a=0;a<arguments.length;a++)if(arguments[a]==b)return true;return false},isEditable:function(b){var a=this.getName();if(this.isReadOnly()||this.getComputedStyle("display")=="none"||this.getComputedStyle("visibility")=="hidden"||CKEDITOR.dtd.$nonEditable[a]||CKEDITOR.dtd.$empty[a]||this.is("a")&&
(this.data("cke-saved-name")||this.hasAttribute("name"))&&!this.getChildCount())return false;if(b!==false){b=CKEDITOR.dtd[a]||CKEDITOR.dtd.span;return!(!b||!b["#"])}return true},isIdentical:function(b){var a=this.clone(0,1),b=b.clone(0,1);a.removeAttributes(["_moz_dirty","data-cke-expando","data-cke-saved-href","data-cke-saved-name"]);b.removeAttributes(["_moz_dirty","data-cke-expando","data-cke-saved-href","data-cke-saved-name"]);if(a.$.isEqualNode){a.$.style.cssText=CKEDITOR.tools.normalizeCssText(a.$.style.cssText);
b.$.style.cssText=CKEDITOR.tools.normalizeCssText(b.$.style.cssText);return a.$.isEqualNode(b.$)}a=a.getOuterHtml();b=b.getOuterHtml();if(CKEDITOR.env.ie&&CKEDITOR.env.version<9&&this.is("a")){var c=this.getParent();if(c.type==CKEDITOR.NODE_ELEMENT){c=c.clone();c.setHtml(a);a=c.getHtml();c.setHtml(b);b=c.getHtml()}}return a==b},isVisible:function(){var b=(this.$.offsetHeight||this.$.offsetWidth)&&this.getComputedStyle("visibility")!="hidden",a,c;if(b&&(CKEDITOR.env.webkit||CKEDITOR.env.opera)){a=
this.getWindow();if(!a.equals(CKEDITOR.document.getWindow())&&(c=a.$.frameElement))b=(new CKEDITOR.dom.element(c)).isVisible()}return!!b},isEmptyInlineRemoveable:function(){if(!CKEDITOR.dtd.$removeEmpty[this.getName()])return false;for(var b=this.getChildren(),a=0,c=b.count();a<c;a++){var d=b.getItem(a);if(!(d.type==CKEDITOR.NODE_ELEMENT&&d.data("cke-bookmark"))&&(d.type==CKEDITOR.NODE_ELEMENT&&!d.isEmptyInlineRemoveable()||d.type==CKEDITOR.NODE_TEXT&&CKEDITOR.tools.trim(d.getText())))return false}return true},
hasAttributes:CKEDITOR.env.ie&&(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat)?function(){for(var b=this.$.attributes,a=0;a<b.length;a++){var c=b[a];switch(c.nodeName){case "class":if(this.getAttribute("class"))return true;case "data-cke-expando":continue;default:if(c.specified)return true}}return false}:function(){var b=this.$.attributes,a=b.length,c={"data-cke-expando":1,_moz_dirty:1};return a>0&&(a>2||!c[b[0].nodeName]||a==2&&!c[b[1].nodeName])},hasAttribute:function(){function b(b){b=this.$.attributes.getNamedItem(b);
return!(!b||!b.specified)}return CKEDITOR.env.ie&&CKEDITOR.env.version<8?function(a){return a=="name"?!!this.$.name:b.call(this,a)}:b}(),hide:function(){this.setStyle("display","none")},moveChildren:function(b,a){var c=this.$,b=b.$;if(c!=b){var d;if(a)for(;d=c.lastChild;)b.insertBefore(c.removeChild(d),b.firstChild);else for(;d=c.firstChild;)b.appendChild(c.removeChild(d))}},mergeSiblings:function(){function b(b,a,c){if(a&&a.type==CKEDITOR.NODE_ELEMENT){for(var j=[];a.data("cke-bookmark")||a.isEmptyInlineRemoveable();){j.push(a);
a=c?a.getNext():a.getPrevious();if(!a||a.type!=CKEDITOR.NODE_ELEMENT)return}if(b.isIdentical(a)){for(var l=c?b.getLast():b.getFirst();j.length;)j.shift().move(b,!c);a.moveChildren(b,!c);a.remove();l&&l.type==CKEDITOR.NODE_ELEMENT&&l.mergeSiblings()}}}return function(a){if(a===false||CKEDITOR.dtd.$removeEmpty[this.getName()]||this.is("a")){b(this,this.getNext(),true);b(this,this.getPrevious())}}}(),show:function(){this.setStyles({display:"",visibility:""})},setAttribute:function(){var b=function(b,
a){this.$.setAttribute(b,a);return this};return CKEDITOR.env.ie&&(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat)?function(a,c){a=="class"?this.$.className=c:a=="style"?this.$.style.cssText=c:a=="tabindex"?this.$.tabIndex=c:a=="checked"?this.$.checked=c:a=="contenteditable"?b.call(this,"contentEditable",c):b.apply(this,arguments);return this}:CKEDITOR.env.ie8Compat&&CKEDITOR.env.secure?function(a,c){if(a=="src"&&c.match(/^http:\/\//))try{b.apply(this,arguments)}catch(d){}else b.apply(this,arguments);
return this}:b}(),setAttributes:function(b){for(var a in b)this.setAttribute(a,b[a]);return this},setValue:function(b){this.$.value=b;return this},removeAttribute:function(){var b=function(b){this.$.removeAttribute(b)};return CKEDITOR.env.ie&&(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat)?function(b){b=="class"?b="className":b=="tabindex"?b="tabIndex":b=="contenteditable"&&(b="contentEditable");this.$.removeAttribute(b)}:b}(),removeAttributes:function(b){if(CKEDITOR.tools.isArray(b))for(var a=0;a<
b.length;a++)this.removeAttribute(b[a]);else for(a in b)b.hasOwnProperty(a)&&this.removeAttribute(a)},removeStyle:function(b){var a=this.$.style;if(!a.removeProperty&&(b=="border"||b=="margin"||b=="padding")){var c=["top","left","right","bottom"],d;b=="border"&&(d=["color","style","width"]);for(var a=[],j=0;j<c.length;j++)if(d)for(var l=0;l<d.length;l++)a.push([b,c[j],d[l]].join("-"));else a.push([b,c[j]].join("-"));for(b=0;b<a.length;b++)this.removeStyle(a[b])}else{a.removeProperty?a.removeProperty(b):
a.removeAttribute(CKEDITOR.tools.cssStyleToDomStyle(b));this.$.style.cssText||this.removeAttribute("style")}},setStyle:function(b,a){this.$.style[CKEDITOR.tools.cssStyleToDomStyle(b)]=a;return this},setStyles:function(b){for(var a in b)this.setStyle(a,b[a]);return this},setOpacity:function(b){if(CKEDITOR.env.ie&&CKEDITOR.env.version<9){b=Math.round(b*100);this.setStyle("filter",b>=100?"":"progid:DXImageTransform.Microsoft.Alpha(opacity="+b+")")}else this.setStyle("opacity",b)},unselectable:function(){this.setStyles(CKEDITOR.tools.cssVendorPrefix("user-select",
"none"));if(CKEDITOR.env.ie||CKEDITOR.env.opera){this.setAttribute("unselectable","on");for(var b,a=this.getElementsByTag("*"),c=0,d=a.count();c<d;c++){b=a.getItem(c);b.setAttribute("unselectable","on")}}},getPositionedAncestor:function(){for(var b=this;b.getName()!="html";){if(b.getComputedStyle("position")!="static")return b;b=b.getParent()}return null},getDocumentPosition:function(b){var a=0,c=0,d=this.getDocument(),j=d.getBody(),l=d.$.compatMode=="BackCompat";if(document.documentElement.getBoundingClientRect){var i=
this.$.getBoundingClientRect(),m=d.$.documentElement,n=m.clientTop||j.$.clientTop||0,r=m.clientLeft||j.$.clientLeft||0,p=true;if(CKEDITOR.env.ie){p=d.getDocumentElement().contains(this);d=d.getBody().contains(this);p=l&&d||!l&&p}if(p){a=i.left+(!l&&m.scrollLeft||j.$.scrollLeft);a=a-r;c=i.top+(!l&&m.scrollTop||j.$.scrollTop);c=c-n}}else{j=this;for(d=null;j&&!(j.getName()=="body"||j.getName()=="html");){a=a+(j.$.offsetLeft-j.$.scrollLeft);c=c+(j.$.offsetTop-j.$.scrollTop);if(!j.equals(this)){a=a+(j.$.clientLeft||
0);c=c+(j.$.clientTop||0)}for(;d&&!d.equals(j);){a=a-d.$.scrollLeft;c=c-d.$.scrollTop;d=d.getParent()}d=j;j=(i=j.$.offsetParent)?new CKEDITOR.dom.element(i):null}}if(b){j=this.getWindow();d=b.getWindow();if(!j.equals(d)&&j.$.frameElement){b=(new CKEDITOR.dom.element(j.$.frameElement)).getDocumentPosition(b);a=a+b.x;c=c+b.y}}if(!document.documentElement.getBoundingClientRect&&CKEDITOR.env.gecko&&!l){a=a+(this.$.clientLeft?1:0);c=c+(this.$.clientTop?1:0)}return{x:a,y:c}},scrollIntoView:function(b){var a=
this.getParent();if(a){do{(a.$.clientWidth&&a.$.clientWidth<a.$.scrollWidth||a.$.clientHeight&&a.$.clientHeight<a.$.scrollHeight)&&!a.is("body")&&this.scrollIntoParent(a,b,1);if(a.is("html")){var c=a.getWindow();try{var d=c.$.frameElement;d&&(a=new CKEDITOR.dom.element(d))}catch(j){}}}while(a=a.getParent())}},scrollIntoParent:function(b,a,c){var d,j,l,i;function m(a,c){if(/body|html/.test(b.getName()))b.getWindow().$.scrollBy(a,c);else{b.$.scrollLeft=b.$.scrollLeft+a;b.$.scrollTop=b.$.scrollTop+c}}
function n(b,a){var c={x:0,y:0};if(!b.is(p?"body":"html")){var g=b.$.getBoundingClientRect();c.x=g.left;c.y=g.top}g=b.getWindow();if(!g.equals(a)){g=n(CKEDITOR.dom.element.get(g.$.frameElement),a);c.x=c.x+g.x;c.y=c.y+g.y}return c}function r(b,a){return parseInt(b.getComputedStyle("margin-"+a)||0,10)||0}!b&&(b=this.getWindow());l=b.getDocument();var p=l.$.compatMode=="BackCompat";b instanceof CKEDITOR.dom.window&&(b=p?l.getBody():l.getDocumentElement());l=b.getWindow();j=n(this,l);var g=n(b,l),h=this.$.offsetHeight;
d=this.$.offsetWidth;var u=b.$.clientHeight,w=b.$.clientWidth;l=j.x-r(this,"left")-g.x||0;i=j.y-r(this,"top")-g.y||0;d=j.x+d+r(this,"right")-(g.x+w)||0;j=j.y+h+r(this,"bottom")-(g.y+u)||0;if(i<0||j>0)m(0,a===true?i:a===false?j:i<0?i:j);if(c&&(l<0||d>0))m(l<0?l:d,0)},setState:function(b,a,c){a=a||"cke";switch(b){case CKEDITOR.TRISTATE_ON:this.addClass(a+"_on");this.removeClass(a+"_off");this.removeClass(a+"_disabled");c&&this.setAttribute("aria-pressed",true);c&&this.removeAttribute("aria-disabled");
break;case CKEDITOR.TRISTATE_DISABLED:this.addClass(a+"_disabled");this.removeClass(a+"_off");this.removeClass(a+"_on");c&&this.setAttribute("aria-disabled",true);c&&this.removeAttribute("aria-pressed");break;default:this.addClass(a+"_off");this.removeClass(a+"_on");this.removeClass(a+"_disabled");c&&this.removeAttribute("aria-pressed");c&&this.removeAttribute("aria-disabled")}},getFrameDocument:function(){var b=this.$;try{b.contentWindow.document}catch(a){b.src=b.src}return b&&new CKEDITOR.dom.document(b.contentWindow.document)},
copyAttributes:function(b,a){for(var c=this.$.attributes,a=a||{},d=0;d<c.length;d++){var j=c[d],l=j.nodeName.toLowerCase(),i;if(!(l in a))if(l=="checked"&&(i=this.getAttribute(l)))b.setAttribute(l,i);else if(j.specified||CKEDITOR.env.ie&&j.nodeValue&&l=="value"){i=this.getAttribute(l);if(i===null)i=j.nodeValue;b.setAttribute(l,i)}}if(this.$.style.cssText!=="")b.$.style.cssText=this.$.style.cssText},renameNode:function(b){if(this.getName()!=b){var a=this.getDocument(),b=new CKEDITOR.dom.element(b,
a);this.copyAttributes(b);this.moveChildren(b);this.getParent()&&this.$.parentNode.replaceChild(b.$,this.$);b.$["data-cke-expando"]=this.$["data-cke-expando"];this.$=b.$}},getChild:function(){function b(b,a){var c=b.childNodes;if(a>=0&&a<c.length)return c[a]}return function(a){var c=this.$;if(a.slice)for(;a.length>0&&c;)c=b(c,a.shift());else c=b(c,a);return c?new CKEDITOR.dom.node(c):null}}(),getChildCount:function(){return this.$.childNodes.length},disableContextMenu:function(){this.on("contextmenu",
function(b){b.data.getTarget().hasClass("cke_enable_context_menu")||b.data.preventDefault()})},getDirection:function(b){return b?this.getComputedStyle("direction")||this.getDirection()||this.getParent()&&this.getParent().getDirection(1)||this.getDocument().$.dir||"ltr":this.getStyle("direction")||this.getAttribute("dir")},data:function(b,a){b="data-"+b;if(a===void 0)return this.getAttribute(b);a===false?this.removeAttribute(b):this.setAttribute(b,a);return null},getEditor:function(){var b=CKEDITOR.instances,
a,c;for(a in b){c=b[a];if(c.element.equals(this)&&c.elementMode!=CKEDITOR.ELEMENT_MODE_APPENDTO)return c}return null}});var c={width:["border-left-width","border-right-width","padding-left","padding-right"],height:["border-top-width","border-bottom-width","padding-top","padding-bottom"]};CKEDITOR.dom.element.prototype.setSize=function(b,c,e){if(typeof c=="number"){if(e&&(!CKEDITOR.env.ie||!CKEDITOR.env.quirks))c=c-a.call(this,b);this.setStyle(b,c+"px")}};CKEDITOR.dom.element.prototype.getSize=function(b,
c){var e=Math.max(this.$["offset"+CKEDITOR.tools.capitalize(b)],this.$["client"+CKEDITOR.tools.capitalize(b)])||0;c&&(e=e-a.call(this,b));return e}})();CKEDITOR.dom.documentFragment=function(a){a=a||CKEDITOR.document;this.$=a.type==CKEDITOR.NODE_DOCUMENT?a.$.createDocumentFragment():a};
CKEDITOR.tools.extend(CKEDITOR.dom.documentFragment.prototype,CKEDITOR.dom.element.prototype,{type:CKEDITOR.NODE_DOCUMENT_FRAGMENT,insertAfterNode:function(a){a=a.$;a.parentNode.insertBefore(this.$,a.nextSibling)}},!0,{append:1,appendBogus:1,getFirst:1,getLast:1,getParent:1,getNext:1,getPrevious:1,appendTo:1,moveChildren:1,insertBefore:1,insertAfterNode:1,replace:1,trim:1,type:1,ltrim:1,rtrim:1,getDocument:1,getChildCount:1,getChild:1,getChildren:1});
(function(){function a(a,b){var c=this.range;if(this._.end)return null;if(!this._.start){this._.start=1;if(c.collapsed){this.end();return null}c.optimize()}var d,n=c.startContainer;d=c.endContainer;var r=c.startOffset,p=c.endOffset,g,h=this.guard,u=this.type,f=a?"getPreviousSourceNode":"getNextSourceNode";if(!a&&!this._.guardLTR){var k=d.type==CKEDITOR.NODE_ELEMENT?d:d.getParent(),e=d.type==CKEDITOR.NODE_ELEMENT?d.getChild(p):d.getNext();this._.guardLTR=function(a,b){return(!b||!k.equals(a))&&(!e||
!a.equals(e))&&(a.type!=CKEDITOR.NODE_ELEMENT||!b||!a.equals(c.root))}}if(a&&!this._.guardRTL){var F=n.type==CKEDITOR.NODE_ELEMENT?n:n.getParent(),D=n.type==CKEDITOR.NODE_ELEMENT?r?n.getChild(r-1):null:n.getPrevious();this._.guardRTL=function(a,b){return(!b||!F.equals(a))&&(!D||!a.equals(D))&&(a.type!=CKEDITOR.NODE_ELEMENT||!b||!a.equals(c.root))}}var B=a?this._.guardRTL:this._.guardLTR;g=h?function(a,b){return B(a,b)===false?false:h(a,b)}:B;if(this.current)d=this.current[f](false,u,g);else{if(a)d.type==
CKEDITOR.NODE_ELEMENT&&(d=p>0?d.getChild(p-1):g(d,true)===false?null:d.getPreviousSourceNode(true,u,g));else{d=n;if(d.type==CKEDITOR.NODE_ELEMENT&&!(d=d.getChild(r)))d=g(n,true)===false?null:n.getNextSourceNode(true,u,g)}d&&g(d)===false&&(d=null)}for(;d&&!this._.end;){this.current=d;if(!this.evaluator||this.evaluator(d)!==false){if(!b)return d}else if(b&&this.evaluator)return false;d=d[f](false,u,g)}this.end();return this.current=null}function c(b){for(var c,d=null;c=a.call(this,b);)d=c;return d}
CKEDITOR.dom.walker=CKEDITOR.tools.createClass({$:function(a){this.range=a;this._={}},proto:{end:function(){this._.end=1},next:function(){return a.call(this)},previous:function(){return a.call(this,1)},checkForward:function(){return a.call(this,0,1)!==false},checkBackward:function(){return a.call(this,1,1)!==false},lastForward:function(){return c.call(this)},lastBackward:function(){return c.call(this,1)},reset:function(){delete this.current;this._={}}}});var b={block:1,"list-item":1,table:1,"table-row-group":1,
"table-header-group":1,"table-footer-group":1,"table-row":1,"table-column-group":1,"table-column":1,"table-cell":1,"table-caption":1};CKEDITOR.dom.element.prototype.isBlockBoundary=function(a){a=a?CKEDITOR.tools.extend({},CKEDITOR.dtd.$block,a||{}):CKEDITOR.dtd.$block;return this.getComputedStyle("float")=="none"&&b[this.getComputedStyle("display")]||a[this.getName()]};CKEDITOR.dom.walker.blockBoundary=function(a){return function(b){return!(b.type==CKEDITOR.NODE_ELEMENT&&b.isBlockBoundary(a))}};CKEDITOR.dom.walker.listItemBoundary=
function(){return this.blockBoundary({br:1})};CKEDITOR.dom.walker.bookmark=function(a,b){function c(a){return a&&a.getName&&a.getName()=="span"&&a.data("cke-bookmark")}return function(d){var n,r;n=d&&d.type!=CKEDITOR.NODE_ELEMENT&&(r=d.getParent())&&c(r);n=a?n:n||c(d);return!!(b^n)}};CKEDITOR.dom.walker.whitespaces=function(a){return function(b){var c;b&&b.type==CKEDITOR.NODE_TEXT&&(c=!CKEDITOR.tools.trim(b.getText())||CKEDITOR.env.webkit&&b.getText()=="​");return!!(a^c)}};CKEDITOR.dom.walker.invisible=
function(a){var b=CKEDITOR.dom.walker.whitespaces();return function(c){if(b(c))c=1;else{c.type==CKEDITOR.NODE_TEXT&&(c=c.getParent());c=!c.$.offsetHeight}return!!(a^c)}};CKEDITOR.dom.walker.nodeType=function(a,b){return function(c){return!!(b^c.type==a)}};CKEDITOR.dom.walker.bogus=function(a){function b(a){return!e(a)&&!d(a)}return function(c){var d=!CKEDITOR.env.ie?c.is&&c.is("br"):c.getText&&f.test(c.getText());if(d){d=c.getParent();c=c.getNext(b);d=d.isBlockBoundary()&&(!c||c.type==CKEDITOR.NODE_ELEMENT&&
c.isBlockBoundary())}return!!(a^d)}};var f=/^[\t\r\n ]*(?:&nbsp;|\xa0)$/,e=CKEDITOR.dom.walker.whitespaces(),d=CKEDITOR.dom.walker.bookmark();CKEDITOR.dom.element.prototype.getBogus=function(){var a=this;do a=a.getPreviousSourceNode();while(d(a)||e(a)||a.type==CKEDITOR.NODE_ELEMENT&&a.getName()in CKEDITOR.dtd.$inline&&!(a.getName()in CKEDITOR.dtd.$empty));return a&&(!CKEDITOR.env.ie?a.is&&a.is("br"):a.getText&&f.test(a.getText()))?a:false}})();
CKEDITOR.dom.range=function(a){this.endOffset=this.endContainer=this.startOffset=this.startContainer=null;this.collapsed=true;var c=a instanceof CKEDITOR.dom.document;this.document=c?a:a.getDocument();this.root=c?a.getBody():a};
(function(){function a(){var a=false,b=CKEDITOR.dom.walker.whitespaces(),c=CKEDITOR.dom.walker.bookmark(true),g=CKEDITOR.dom.walker.bogus();return function(h){if(c(h)||b(h))return true;if(g(h)&&!a)return a=true;return h.type==CKEDITOR.NODE_TEXT&&(h.hasAscendant("pre")||CKEDITOR.tools.trim(h.getText()).length)||h.type==CKEDITOR.NODE_ELEMENT&&!h.is(d)?false:true}}function c(a){var b=CKEDITOR.dom.walker.whitespaces(),c=CKEDITOR.dom.walker.bookmark(1);return function(g){return c(g)||b(g)?true:!a&&j(g)||
g.type==CKEDITOR.NODE_ELEMENT&&g.is(CKEDITOR.dtd.$removeEmpty)}}function b(a){return!l(a)&&!i(a)}var f=function(a){a.collapsed=a.startContainer&&a.endContainer&&a.startContainer.equals(a.endContainer)&&a.startOffset==a.endOffset},e=function(a,b,c,g){a.optimizeBookmark();var h=a.startContainer,d=a.endContainer,f=a.startOffset,k=a.endOffset,e,j;if(d.type==CKEDITOR.NODE_TEXT)d=d.split(k);else if(d.getChildCount()>0)if(k>=d.getChildCount()){d=d.append(a.document.createText(""));j=true}else d=d.getChild(k);
if(h.type==CKEDITOR.NODE_TEXT){h.split(f);h.equals(d)&&(d=h.getNext())}else if(f)if(f>=h.getChildCount()){h=h.append(a.document.createText(""));e=true}else h=h.getChild(f).getPrevious();else{h=h.append(a.document.createText(""),1);e=true}var f=h.getParents(),k=d.getParents(),l,i,q;for(l=0;l<f.length;l++){i=f[l];q=k[l];if(!i.equals(q))break}for(var m=c,s,A,v,o=l;o<f.length;o++){s=f[o];m&&!s.equals(h)&&(A=m.append(s.clone()));for(s=s.getNext();s;){if(s.equals(k[o])||s.equals(d))break;v=s.getNext();
if(b==2)m.append(s.clone(true));else{s.remove();b==1&&m.append(s)}s=v}m&&(m=A)}m=c;for(c=l;c<k.length;c++){s=k[c];b>0&&!s.equals(d)&&(A=m.append(s.clone()));if(!f[c]||s.$.parentNode!=f[c].$.parentNode)for(s=s.getPrevious();s;){if(s.equals(f[c])||s.equals(h))break;v=s.getPrevious();if(b==2)m.$.insertBefore(s.$.cloneNode(true),m.$.firstChild);else{s.remove();b==1&&m.$.insertBefore(s.$,m.$.firstChild)}s=v}m&&(m=A)}if(b==2){i=a.startContainer;if(i.type==CKEDITOR.NODE_TEXT){i.$.data=i.$.data+i.$.nextSibling.data;
i.$.parentNode.removeChild(i.$.nextSibling)}a=a.endContainer;if(a.type==CKEDITOR.NODE_TEXT&&a.$.nextSibling){a.$.data=a.$.data+a.$.nextSibling.data;a.$.parentNode.removeChild(a.$.nextSibling)}}else{if(i&&q&&(h.$.parentNode!=i.$.parentNode||d.$.parentNode!=q.$.parentNode)){b=q.getIndex();e&&q.$.parentNode==h.$.parentNode&&b--;if(g&&i.type==CKEDITOR.NODE_ELEMENT){g=CKEDITOR.dom.element.createFromHtml('<span data-cke-bookmark="1" style="display:none">&nbsp;</span>',a.document);g.insertAfter(i);i.mergeSiblings(false);
a.moveToBookmark({startNode:g})}else a.setStart(q.getParent(),b)}a.collapse(true)}e&&h.remove();j&&d.$.parentNode&&d.remove()},d={abbr:1,acronym:1,b:1,bdo:1,big:1,cite:1,code:1,del:1,dfn:1,em:1,font:1,i:1,ins:1,label:1,kbd:1,q:1,samp:1,small:1,span:1,strike:1,strong:1,sub:1,sup:1,tt:1,u:1,"var":1},j=CKEDITOR.dom.walker.bogus(),l=new CKEDITOR.dom.walker.whitespaces,i=new CKEDITOR.dom.walker.bookmark,m=/^[\t\r\n ]*(?:&nbsp;|\xa0)$/;CKEDITOR.dom.range.prototype={clone:function(){var a=new CKEDITOR.dom.range(this.root);
a.startContainer=this.startContainer;a.startOffset=this.startOffset;a.endContainer=this.endContainer;a.endOffset=this.endOffset;a.collapsed=this.collapsed;return a},collapse:function(a){if(a){this.endContainer=this.startContainer;this.endOffset=this.startOffset}else{this.startContainer=this.endContainer;this.startOffset=this.endOffset}this.collapsed=true},cloneContents:function(){var a=new CKEDITOR.dom.documentFragment(this.document);this.collapsed||e(this,2,a);return a},deleteContents:function(a){this.collapsed||
e(this,0,null,a)},extractContents:function(a){var b=new CKEDITOR.dom.documentFragment(this.document);this.collapsed||e(this,1,b,a);return b},createBookmark:function(a){var b,c,g,h,d=this.collapsed;b=this.document.createElement("span");b.data("cke-bookmark",1);b.setStyle("display","none");b.setHtml("&nbsp;");if(a){g="cke_bm_"+CKEDITOR.tools.getNextNumber();b.setAttribute("id",g+(d?"C":"S"))}if(!d){c=b.clone();c.setHtml("&nbsp;");a&&c.setAttribute("id",g+"E");h=this.clone();h.collapse();h.insertNode(c)}h=
this.clone();h.collapse(true);h.insertNode(b);if(c){this.setStartAfter(b);this.setEndBefore(c)}else this.moveToPosition(b,CKEDITOR.POSITION_AFTER_END);return{startNode:a?g+(d?"C":"S"):b,endNode:a?g+"E":c,serializable:a,collapsed:d}},createBookmark2:function(a){var b=this.startContainer,c=this.endContainer,g=this.startOffset,h=this.endOffset,d=this.collapsed,f,k;if(!b||!c)return{start:0,end:0};if(a){if(b.type==CKEDITOR.NODE_ELEMENT){if((f=b.getChild(g))&&f.type==CKEDITOR.NODE_TEXT&&g>0&&f.getPrevious().type==
CKEDITOR.NODE_TEXT){b=f;g=0}f&&f.type==CKEDITOR.NODE_ELEMENT&&(g=f.getIndex(1))}for(;b.type==CKEDITOR.NODE_TEXT&&(k=b.getPrevious())&&k.type==CKEDITOR.NODE_TEXT;){b=k;g=g+k.getLength()}if(!d){if(c.type==CKEDITOR.NODE_ELEMENT){if((f=c.getChild(h))&&f.type==CKEDITOR.NODE_TEXT&&h>0&&f.getPrevious().type==CKEDITOR.NODE_TEXT){c=f;h=0}f&&f.type==CKEDITOR.NODE_ELEMENT&&(h=f.getIndex(1))}for(;c.type==CKEDITOR.NODE_TEXT&&(k=c.getPrevious())&&k.type==CKEDITOR.NODE_TEXT;){c=k;h=h+k.getLength()}}}return{start:b.getAddress(a),
end:d?null:c.getAddress(a),startOffset:g,endOffset:h,normalized:a,collapsed:d,is2:true}},moveToBookmark:function(a){if(a.is2){var b=this.document.getByAddress(a.start,a.normalized),c=a.startOffset,g=a.end&&this.document.getByAddress(a.end,a.normalized),a=a.endOffset;this.setStart(b,c);g?this.setEnd(g,a):this.collapse(true)}else{b=(c=a.serializable)?this.document.getById(a.startNode):a.startNode;a=c?this.document.getById(a.endNode):a.endNode;this.setStartBefore(b);b.remove();if(a){this.setEndBefore(a);
a.remove()}else this.collapse(true)}},getBoundaryNodes:function(){var a=this.startContainer,b=this.endContainer,c=this.startOffset,g=this.endOffset,h;if(a.type==CKEDITOR.NODE_ELEMENT){h=a.getChildCount();if(h>c)a=a.getChild(c);else if(h<1)a=a.getPreviousSourceNode();else{for(a=a.$;a.lastChild;)a=a.lastChild;a=new CKEDITOR.dom.node(a);a=a.getNextSourceNode()||a}}if(b.type==CKEDITOR.NODE_ELEMENT){h=b.getChildCount();if(h>g)b=b.getChild(g).getPreviousSourceNode(true);else if(h<1)b=b.getPreviousSourceNode();
else{for(b=b.$;b.lastChild;)b=b.lastChild;b=new CKEDITOR.dom.node(b)}}a.getPosition(b)&CKEDITOR.POSITION_FOLLOWING&&(a=b);return{startNode:a,endNode:b}},getCommonAncestor:function(a,b){var c=this.startContainer,g=this.endContainer,c=c.equals(g)?a&&c.type==CKEDITOR.NODE_ELEMENT&&this.startOffset==this.endOffset-1?c.getChild(this.startOffset):c:c.getCommonAncestor(g);return b&&!c.is?c.getParent():c},optimize:function(){var a=this.startContainer,b=this.startOffset;a.type!=CKEDITOR.NODE_ELEMENT&&(b?b>=
a.getLength()&&this.setStartAfter(a):this.setStartBefore(a));a=this.endContainer;b=this.endOffset;a.type!=CKEDITOR.NODE_ELEMENT&&(b?b>=a.getLength()&&this.setEndAfter(a):this.setEndBefore(a))},optimizeBookmark:function(){var a=this.startContainer,b=this.endContainer;a.is&&(a.is("span")&&a.data("cke-bookmark"))&&this.setStartAt(a,CKEDITOR.POSITION_BEFORE_START);b&&(b.is&&b.is("span")&&b.data("cke-bookmark"))&&this.setEndAt(b,CKEDITOR.POSITION_AFTER_END)},trim:function(a,b){var c=this.startContainer,
g=this.startOffset,h=this.collapsed;if((!a||h)&&c&&c.type==CKEDITOR.NODE_TEXT){if(g)if(g>=c.getLength()){g=c.getIndex()+1;c=c.getParent()}else{var d=c.split(g),g=c.getIndex()+1,c=c.getParent();if(this.startContainer.equals(this.endContainer))this.setEnd(d,this.endOffset-this.startOffset);else if(c.equals(this.endContainer))this.endOffset=this.endOffset+1}else{g=c.getIndex();c=c.getParent()}this.setStart(c,g);if(h){this.collapse(true);return}}c=this.endContainer;g=this.endOffset;if(!b&&!h&&c&&c.type==
CKEDITOR.NODE_TEXT){if(g){g>=c.getLength()||c.split(g);g=c.getIndex()+1}else g=c.getIndex();c=c.getParent();this.setEnd(c,g)}},enlarge:function(a,b){switch(a){case CKEDITOR.ENLARGE_INLINE:var c=1;case CKEDITOR.ENLARGE_ELEMENT:if(this.collapsed)break;var g=this.getCommonAncestor(),h=this.root,d,f,k,e,j,l=false,i,q;i=this.startContainer;q=this.startOffset;if(i.type==CKEDITOR.NODE_TEXT){if(q){i=!CKEDITOR.tools.trim(i.substring(0,q)).length&&i;l=!!i}if(i&&!(e=i.getPrevious()))k=i.getParent()}else{q&&
(e=i.getChild(q-1)||i.getLast());e||(k=i)}for(;k||e;){if(k&&!e){!j&&k.equals(g)&&(j=true);if(c?k.isBlockBoundary():!h.contains(k))break;if(!l||k.getComputedStyle("display")!="inline"){l=false;j?d=k:this.setStartBefore(k)}e=k.getPrevious()}for(;e;){i=false;if(e.type==CKEDITOR.NODE_COMMENT)e=e.getPrevious();else{if(e.type==CKEDITOR.NODE_TEXT){q=e.getText();/[^\s\ufeff]/.test(q)&&(e=null);i=/[\s\ufeff]$/.test(q)}else if((e.$.offsetWidth>0||b&&e.is("br"))&&!e.data("cke-bookmark"))if(l&&CKEDITOR.dtd.$removeEmpty[e.getName()]){q=
e.getText();if(/[^\s\ufeff]/.test(q))e=null;else for(var m=e.$.getElementsByTagName("*"),s=0,A;A=m[s++];)if(!CKEDITOR.dtd.$removeEmpty[A.nodeName.toLowerCase()]){e=null;break}e&&(i=!!q.length)}else e=null;i&&(l?j?d=k:k&&this.setStartBefore(k):l=true);if(e){i=e.getPrevious();if(!k&&!i){k=e;e=null;break}e=i}else k=null}}k&&(k=k.getParent())}i=this.endContainer;q=this.endOffset;k=e=null;j=l=false;if(i.type==CKEDITOR.NODE_TEXT){i=!CKEDITOR.tools.trim(i.substring(q)).length&&i;l=!(i&&i.getLength());if(i&&
!(e=i.getNext()))k=i.getParent()}else(e=i.getChild(q))||(k=i);for(;k||e;){if(k&&!e){!j&&k.equals(g)&&(j=true);if(c?k.isBlockBoundary():!h.contains(k))break;if(!l||k.getComputedStyle("display")!="inline"){l=false;j?f=k:k&&this.setEndAfter(k)}e=k.getNext()}for(;e;){i=false;if(e.type==CKEDITOR.NODE_TEXT){q=e.getText();/[^\s\ufeff]/.test(q)&&(e=null);i=/^[\s\ufeff]/.test(q)}else if(e.type==CKEDITOR.NODE_ELEMENT){if((e.$.offsetWidth>0||b&&e.is("br"))&&!e.data("cke-bookmark"))if(l&&CKEDITOR.dtd.$removeEmpty[e.getName()]){q=
e.getText();if(/[^\s\ufeff]/.test(q))e=null;else{m=e.$.getElementsByTagName("*");for(s=0;A=m[s++];)if(!CKEDITOR.dtd.$removeEmpty[A.nodeName.toLowerCase()]){e=null;break}}e&&(i=!!q.length)}else e=null}else i=1;i&&l&&(j?f=k:this.setEndAfter(k));if(e){i=e.getNext();if(!k&&!i){k=e;e=null;break}e=i}else k=null}k&&(k=k.getParent())}if(d&&f){g=d.contains(f)?f:d;this.setStartBefore(g);this.setEndAfter(g)}break;case CKEDITOR.ENLARGE_BLOCK_CONTENTS:case CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS:k=new CKEDITOR.dom.range(this.root);
h=this.root;k.setStartAt(h,CKEDITOR.POSITION_AFTER_START);k.setEnd(this.startContainer,this.startOffset);k=new CKEDITOR.dom.walker(k);var v,o,x=CKEDITOR.dom.walker.blockBoundary(a==CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS?{br:1}:null),I=function(a){var b=x(a);b||(v=a);return b},c=function(a){var b=I(a);!b&&(a.is&&a.is("br"))&&(o=a);return b};k.guard=I;k=k.lastBackward();v=v||h;this.setStartAt(v,!v.is("br")&&(!k&&this.checkStartOfBlock()||k&&v.contains(k))?CKEDITOR.POSITION_AFTER_START:CKEDITOR.POSITION_AFTER_END);
if(a==CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS){k=this.clone();k=new CKEDITOR.dom.walker(k);var G=CKEDITOR.dom.walker.whitespaces(),C=CKEDITOR.dom.walker.bookmark();k.evaluator=function(a){return!G(a)&&!C(a)};if((k=k.previous())&&k.type==CKEDITOR.NODE_ELEMENT&&k.is("br"))break}k=this.clone();k.collapse();k.setEndAt(h,CKEDITOR.POSITION_BEFORE_END);k=new CKEDITOR.dom.walker(k);k.guard=a==CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS?c:I;v=null;k=k.lastForward();v=v||h;this.setEndAt(v,!k&&this.checkEndOfBlock()||k&&
v.contains(k)?CKEDITOR.POSITION_BEFORE_END:CKEDITOR.POSITION_BEFORE_START);o&&this.setEndAfter(o)}},shrink:function(a,b,c){if(!this.collapsed){var a=a||CKEDITOR.SHRINK_TEXT,g=this.clone(),h=this.startContainer,d=this.endContainer,e=this.startOffset,f=this.endOffset,j=1,i=1;if(h&&h.type==CKEDITOR.NODE_TEXT)if(e)if(e>=h.getLength())g.setStartAfter(h);else{g.setStartBefore(h);j=0}else g.setStartBefore(h);if(d&&d.type==CKEDITOR.NODE_TEXT)if(f)if(f>=d.getLength())g.setEndAfter(d);else{g.setEndAfter(d);
i=0}else g.setEndBefore(d);var g=new CKEDITOR.dom.walker(g),l=CKEDITOR.dom.walker.bookmark();g.evaluator=function(b){return b.type==(a==CKEDITOR.SHRINK_ELEMENT?CKEDITOR.NODE_ELEMENT:CKEDITOR.NODE_TEXT)};var m;g.guard=function(b,g){if(l(b))return true;if(a==CKEDITOR.SHRINK_ELEMENT&&b.type==CKEDITOR.NODE_TEXT||g&&b.equals(m)||c===false&&b.type==CKEDITOR.NODE_ELEMENT&&b.isBlockBoundary())return false;!g&&b.type==CKEDITOR.NODE_ELEMENT&&(m=b);return true};if(j)(h=g[a==CKEDITOR.SHRINK_ELEMENT?"lastForward":
"next"]())&&this.setStartAt(h,b?CKEDITOR.POSITION_AFTER_START:CKEDITOR.POSITION_BEFORE_START);if(i){g.reset();(g=g[a==CKEDITOR.SHRINK_ELEMENT?"lastBackward":"previous"]())&&this.setEndAt(g,b?CKEDITOR.POSITION_BEFORE_END:CKEDITOR.POSITION_AFTER_END)}return!(!j&&!i)}},insertNode:function(a){this.optimizeBookmark();this.trim(false,true);var b=this.startContainer,c=b.getChild(this.startOffset);c?a.insertBefore(c):b.append(a);a.getParent()&&a.getParent().equals(this.endContainer)&&this.endOffset++;this.setStartBefore(a)},
moveToPosition:function(a,b){this.setStartAt(a,b);this.collapse(true)},moveToRange:function(a){this.setStart(a.startContainer,a.startOffset);this.setEnd(a.endContainer,a.endOffset)},selectNodeContents:function(a){this.setStart(a,0);this.setEnd(a,a.type==CKEDITOR.NODE_TEXT?a.getLength():a.getChildCount())},setStart:function(a,b){if(a.type==CKEDITOR.NODE_ELEMENT&&CKEDITOR.dtd.$empty[a.getName()]){b=a.getIndex();a=a.getParent()}this.startContainer=a;this.startOffset=b;if(!this.endContainer){this.endContainer=
a;this.endOffset=b}f(this)},setEnd:function(a,b){if(a.type==CKEDITOR.NODE_ELEMENT&&CKEDITOR.dtd.$empty[a.getName()]){b=a.getIndex()+1;a=a.getParent()}this.endContainer=a;this.endOffset=b;if(!this.startContainer){this.startContainer=a;this.startOffset=b}f(this)},setStartAfter:function(a){this.setStart(a.getParent(),a.getIndex()+1)},setStartBefore:function(a){this.setStart(a.getParent(),a.getIndex())},setEndAfter:function(a){this.setEnd(a.getParent(),a.getIndex()+1)},setEndBefore:function(a){this.setEnd(a.getParent(),
a.getIndex())},setStartAt:function(a,b){switch(b){case CKEDITOR.POSITION_AFTER_START:this.setStart(a,0);break;case CKEDITOR.POSITION_BEFORE_END:a.type==CKEDITOR.NODE_TEXT?this.setStart(a,a.getLength()):this.setStart(a,a.getChildCount());break;case CKEDITOR.POSITION_BEFORE_START:this.setStartBefore(a);break;case CKEDITOR.POSITION_AFTER_END:this.setStartAfter(a)}f(this)},setEndAt:function(a,b){switch(b){case CKEDITOR.POSITION_AFTER_START:this.setEnd(a,0);break;case CKEDITOR.POSITION_BEFORE_END:a.type==
CKEDITOR.NODE_TEXT?this.setEnd(a,a.getLength()):this.setEnd(a,a.getChildCount());break;case CKEDITOR.POSITION_BEFORE_START:this.setEndBefore(a);break;case CKEDITOR.POSITION_AFTER_END:this.setEndAfter(a)}f(this)},fixBlock:function(a,b){var c=this.createBookmark(),g=this.document.createElement(b);this.collapse(a);this.enlarge(CKEDITOR.ENLARGE_BLOCK_CONTENTS);this.extractContents().appendTo(g);g.trim();CKEDITOR.env.ie||g.appendBogus();this.insertNode(g);this.moveToBookmark(c);return g},splitBlock:function(a){var b=
new CKEDITOR.dom.elementPath(this.startContainer,this.root),c=new CKEDITOR.dom.elementPath(this.endContainer,this.root),g=b.block,h=c.block,d=null;if(!b.blockLimit.equals(c.blockLimit))return null;if(a!="br"){if(!g){g=this.fixBlock(true,a);h=(new CKEDITOR.dom.elementPath(this.endContainer,this.root)).block}h||(h=this.fixBlock(false,a))}a=g&&this.checkStartOfBlock();b=h&&this.checkEndOfBlock();this.deleteContents();if(g&&g.equals(h))if(b){d=new CKEDITOR.dom.elementPath(this.startContainer,this.root);
this.moveToPosition(h,CKEDITOR.POSITION_AFTER_END);h=null}else if(a){d=new CKEDITOR.dom.elementPath(this.startContainer,this.root);this.moveToPosition(g,CKEDITOR.POSITION_BEFORE_START);g=null}else{h=this.splitElement(g);!CKEDITOR.env.ie&&!g.is("ul","ol")&&g.appendBogus()}return{previousBlock:g,nextBlock:h,wasStartOfBlock:a,wasEndOfBlock:b,elementPath:d}},splitElement:function(a){if(!this.collapsed)return null;this.setEndAt(a,CKEDITOR.POSITION_BEFORE_END);var b=this.extractContents(),c=a.clone(false);
b.appendTo(c);c.insertAfter(a);this.moveToPosition(a,CKEDITOR.POSITION_AFTER_END);return c},removeEmptyBlocksAtEnd:function(){function a(g){return function(a){return b(a)||(c(a)||a.type==CKEDITOR.NODE_ELEMENT&&a.isEmptyInlineRemoveable())||g.is("table")&&a.is("caption")?false:true}}var b=CKEDITOR.dom.walker.whitespaces(),c=CKEDITOR.dom.walker.bookmark(false);return function(b){for(var c=this.createBookmark(),d=this[b?"endPath":"startPath"](),e=d.block||d.blockLimit,f;e&&!e.equals(d.root)&&!e.getFirst(a(e));){f=
e.getParent();this[b?"setEndAt":"setStartAt"](e,CKEDITOR.POSITION_AFTER_END);e.remove(1);e=f}this.moveToBookmark(c)}}(),startPath:function(){return new CKEDITOR.dom.elementPath(this.startContainer,this.root)},endPath:function(){return new CKEDITOR.dom.elementPath(this.endContainer,this.root)},checkBoundaryOfElement:function(a,b){var d=b==CKEDITOR.START,g=this.clone();g.collapse(d);g[d?"setStartAt":"setEndAt"](a,d?CKEDITOR.POSITION_AFTER_START:CKEDITOR.POSITION_BEFORE_END);g=new CKEDITOR.dom.walker(g);
g.evaluator=c(d);return g[d?"checkBackward":"checkForward"]()},checkStartOfBlock:function(){var b=this.startContainer,c=this.startOffset;if(CKEDITOR.env.ie&&c&&b.type==CKEDITOR.NODE_TEXT){b=CKEDITOR.tools.ltrim(b.substring(0,c));m.test(b)&&this.trim(0,1)}this.trim();b=new CKEDITOR.dom.elementPath(this.startContainer,this.root);c=this.clone();c.collapse(true);c.setStartAt(b.block||b.blockLimit,CKEDITOR.POSITION_AFTER_START);b=new CKEDITOR.dom.walker(c);b.evaluator=a();return b.checkBackward()},checkEndOfBlock:function(){var b=
this.endContainer,c=this.endOffset;if(CKEDITOR.env.ie&&b.type==CKEDITOR.NODE_TEXT){b=CKEDITOR.tools.rtrim(b.substring(c));m.test(b)&&this.trim(1,0)}this.trim();b=new CKEDITOR.dom.elementPath(this.endContainer,this.root);c=this.clone();c.collapse(false);c.setEndAt(b.block||b.blockLimit,CKEDITOR.POSITION_BEFORE_END);b=new CKEDITOR.dom.walker(c);b.evaluator=a();return b.checkForward()},getPreviousNode:function(a,b,c){var d=this.clone();d.collapse(1);d.setStartAt(c||this.root,CKEDITOR.POSITION_AFTER_START);
c=new CKEDITOR.dom.walker(d);c.evaluator=a;c.guard=b;return c.previous()},getNextNode:function(a,b,c){var d=this.clone();d.collapse();d.setEndAt(c||this.root,CKEDITOR.POSITION_BEFORE_END);c=new CKEDITOR.dom.walker(d);c.evaluator=a;c.guard=b;return c.next()},checkReadOnly:function(){function a(b,c){for(;b;){if(b.type==CKEDITOR.NODE_ELEMENT){if(b.getAttribute("contentEditable")=="false"&&!b.data("cke-editable"))return 0;if(b.is("html")||b.getAttribute("contentEditable")=="true"&&(b.contains(c)||b.equals(c)))break}b=
b.getParent()}return 1}return function(){var b=this.startContainer,c=this.endContainer;return!(a(b,c)&&a(c,b))}}(),moveToElementEditablePosition:function(a,c){if(a.type==CKEDITOR.NODE_ELEMENT&&!a.isEditable(false)){this.moveToPosition(a,c?CKEDITOR.POSITION_AFTER_END:CKEDITOR.POSITION_BEFORE_START);return true}for(var d=0;a;){if(a.type==CKEDITOR.NODE_TEXT){c&&this.checkEndOfBlock()&&m.test(a.getText())?this.moveToPosition(a,CKEDITOR.POSITION_BEFORE_START):this.moveToPosition(a,c?CKEDITOR.POSITION_AFTER_END:
CKEDITOR.POSITION_BEFORE_START);d=1;break}if(a.type==CKEDITOR.NODE_ELEMENT)if(a.isEditable()){this.moveToPosition(a,c?CKEDITOR.POSITION_BEFORE_END:CKEDITOR.POSITION_AFTER_START);d=1}else c&&(a.is("br")&&this.checkEndOfBlock())&&this.moveToPosition(a,CKEDITOR.POSITION_BEFORE_START);var g=a,h=d,e=void 0;g.type==CKEDITOR.NODE_ELEMENT&&g.isEditable(false)&&(e=g[c?"getLast":"getFirst"](b));!h&&!e&&(e=g[c?"getPrevious":"getNext"](b));a=e}return!!d},moveToElementEditStart:function(a){return this.moveToElementEditablePosition(a)},
moveToElementEditEnd:function(a){return this.moveToElementEditablePosition(a,true)},getEnclosedNode:function(){var a=this.clone();a.optimize();if(a.startContainer.type!=CKEDITOR.NODE_ELEMENT||a.endContainer.type!=CKEDITOR.NODE_ELEMENT)return null;var a=new CKEDITOR.dom.walker(a),b=CKEDITOR.dom.walker.bookmark(false,true),c=CKEDITOR.dom.walker.whitespaces(true);a.evaluator=function(a){return c(a)&&b(a)};var d=a.next();a.reset();return d&&d.equals(a.previous())?d:null},getTouchedStartNode:function(){var a=
this.startContainer;return this.collapsed||a.type!=CKEDITOR.NODE_ELEMENT?a:a.getChild(this.startOffset)||a},getTouchedEndNode:function(){var a=this.endContainer;return this.collapsed||a.type!=CKEDITOR.NODE_ELEMENT?a:a.getChild(this.endOffset-1)||a},scrollIntoView:function(){var a=new CKEDITOR.dom.element.createFromHtml("<span>&nbsp;</span>",this.document),b,c,d,h=this.clone();h.optimize();if(d=h.startContainer.type==CKEDITOR.NODE_TEXT){c=h.startContainer.getText();b=h.startContainer.split(h.startOffset);
a.insertAfter(h.startContainer)}else h.insertNode(a);a.scrollIntoView();if(d){h.startContainer.setText(c);b.remove()}a.remove()}}})();CKEDITOR.POSITION_AFTER_START=1;CKEDITOR.POSITION_BEFORE_END=2;CKEDITOR.POSITION_BEFORE_START=3;CKEDITOR.POSITION_AFTER_END=4;CKEDITOR.ENLARGE_ELEMENT=1;CKEDITOR.ENLARGE_BLOCK_CONTENTS=2;CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS=3;CKEDITOR.ENLARGE_INLINE=4;CKEDITOR.START=1;CKEDITOR.END=2;CKEDITOR.SHRINK_ELEMENT=1;CKEDITOR.SHRINK_TEXT=2;
(function(){function a(a){if(!(arguments.length<1)){this.range=a;this.forceBrBreak=0;this.enlargeBr=1;this.enforceRealBlocks=0;this._||(this._={})}}function c(a,b,c){for(a=a.getNextSourceNode(b,null,c);!f(a);)a=a.getNextSourceNode(b,null,c);return a}var b=/^[\r\n\t ]+$/,f=CKEDITOR.dom.walker.bookmark(false,true),e=CKEDITOR.dom.walker.whitespaces(true),d=function(a){return f(a)&&e(a)};a.prototype={getNextParagraph:function(a){a=a||"p";if(!CKEDITOR.dtd[this.range.root.getName()][a])return null;var e,
i,m,n,r,p;if(!this._.started){i=this.range.clone();i.shrink(CKEDITOR.NODE_ELEMENT,true);n=i.endContainer.hasAscendant("pre",true)||i.startContainer.hasAscendant("pre",true);i.enlarge(this.forceBrBreak&&!n||!this.enlargeBr?CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS:CKEDITOR.ENLARGE_BLOCK_CONTENTS);if(!i.collapsed){n=new CKEDITOR.dom.walker(i.clone());var g=CKEDITOR.dom.walker.bookmark(true,true);n.evaluator=g;this._.nextNode=n.next();n=new CKEDITOR.dom.walker(i.clone());n.evaluator=g;n=n.previous();this._.lastNode=
n.getNextSourceNode(true);if(this._.lastNode&&this._.lastNode.type==CKEDITOR.NODE_TEXT&&!CKEDITOR.tools.trim(this._.lastNode.getText())&&this._.lastNode.getParent().isBlockBoundary()){g=this.range.clone();g.moveToPosition(this._.lastNode,CKEDITOR.POSITION_AFTER_END);if(g.checkEndOfBlock()){g=new CKEDITOR.dom.elementPath(g.endContainer,g.root);this._.lastNode=(g.block||g.blockLimit).getNextSourceNode(true)}}if(!this._.lastNode){this._.lastNode=this._.docEndMarker=i.document.createText("");this._.lastNode.insertAfter(n)}i=
null}this._.started=1}g=this._.nextNode;n=this._.lastNode;for(this._.nextNode=null;g;){var h=0,u=g.hasAscendant("pre"),w=g.type!=CKEDITOR.NODE_ELEMENT,k=0;if(w)g.type==CKEDITOR.NODE_TEXT&&b.test(g.getText())&&(w=0);else{var t=g.getName();if(g.isBlockBoundary(this.forceBrBreak&&!u&&{br:1})){if(t=="br")w=1;else if(!i&&!g.getChildCount()&&t!="hr"){e=g;m=g.equals(n);break}if(i){i.setEndAt(g,CKEDITOR.POSITION_BEFORE_START);if(t!="br")this._.nextNode=g}h=1}else{if(g.getFirst()){if(!i){i=this.range.clone();
i.setStartAt(g,CKEDITOR.POSITION_BEFORE_START)}g=g.getFirst();continue}w=1}}if(w&&!i){i=this.range.clone();i.setStartAt(g,CKEDITOR.POSITION_BEFORE_START)}m=(!h||w)&&g.equals(n);if(i&&!h)for(;!g.getNext(d)&&!m;){t=g.getParent();if(t.isBlockBoundary(this.forceBrBreak&&!u&&{br:1})){h=1;w=0;m||t.equals(n);i.setEndAt(t,CKEDITOR.POSITION_BEFORE_END);break}g=t;w=1;m=g.equals(n);k=1}w&&i.setEndAt(g,CKEDITOR.POSITION_AFTER_END);g=c(g,k,n);if((m=!g)||h&&i)break}if(!e){if(!i){this._.docEndMarker&&this._.docEndMarker.remove();
return this._.nextNode=null}e=new CKEDITOR.dom.elementPath(i.startContainer,i.root);g=e.blockLimit;h={div:1,th:1,td:1};e=e.block;if(!e&&g&&!this.enforceRealBlocks&&h[g.getName()]&&i.checkStartOfBlock()&&i.checkEndOfBlock()&&!g.equals(i.root))e=g;else if(!e||this.enforceRealBlocks&&e.getName()=="li"){e=this.range.document.createElement(a);i.extractContents().appendTo(e);e.trim();i.insertNode(e);r=p=true}else if(e.getName()!="li"){if(!i.checkStartOfBlock()||!i.checkEndOfBlock()){e=e.clone(false);i.extractContents().appendTo(e);
e.trim();p=i.splitBlock();r=!p.wasStartOfBlock;p=!p.wasEndOfBlock;i.insertNode(e)}}else if(!m)this._.nextNode=e.equals(n)?null:c(i.getBoundaryNodes().endNode,1,n)}if(r)(i=e.getPrevious())&&i.type==CKEDITOR.NODE_ELEMENT&&(i.getName()=="br"?i.remove():i.getLast()&&i.getLast().$.nodeName.toLowerCase()=="br"&&i.getLast().remove());if(p)(i=e.getLast())&&i.type==CKEDITOR.NODE_ELEMENT&&i.getName()=="br"&&(CKEDITOR.env.ie||i.getPrevious(f)||i.getNext(f))&&i.remove();if(!this._.nextNode)this._.nextNode=m||
e.equals(n)||!n?null:c(e,1,n);return e}};CKEDITOR.dom.range.prototype.createIterator=function(){return new a(this)}})();
CKEDITOR.command=function(a,c){this.uiItems=[];this.exec=function(b){if(this.state==CKEDITOR.TRISTATE_DISABLED||!this.checkAllowed())return false;this.editorFocus&&a.focus();return this.fire("exec")===false?true:c.exec.call(this,a,b)!==false};this.refresh=function(a,b){if(!this.readOnly&&a.readOnly)return true;if(this.context&&!b.isContextFor(this.context)){this.disable();return true}this.enable();return this.fire("refresh",{editor:a,path:b})===false?true:c.refresh&&c.refresh.apply(this,arguments)!==
false};var b;this.checkAllowed=function(){return typeof b=="boolean"?b:b=a.filter.checkFeature(this)};CKEDITOR.tools.extend(this,c,{modes:{wysiwyg:1},editorFocus:1,contextSensitive:!!c.context,state:CKEDITOR.TRISTATE_DISABLED});CKEDITOR.event.call(this)};
CKEDITOR.command.prototype={enable:function(){this.state==CKEDITOR.TRISTATE_DISABLED&&this.checkAllowed()&&this.setState(!this.preserveState||typeof this.previousState=="undefined"?CKEDITOR.TRISTATE_OFF:this.previousState)},disable:function(){this.setState(CKEDITOR.TRISTATE_DISABLED)},setState:function(a){if(this.state==a||!this.checkAllowed())return false;this.previousState=this.state;this.state=a;this.fire("state");return true},toggleState:function(){this.state==CKEDITOR.TRISTATE_OFF?this.setState(CKEDITOR.TRISTATE_ON):
this.state==CKEDITOR.TRISTATE_ON&&this.setState(CKEDITOR.TRISTATE_OFF)}};CKEDITOR.event.implementOn(CKEDITOR.command.prototype);CKEDITOR.ENTER_P=1;CKEDITOR.ENTER_BR=2;CKEDITOR.ENTER_DIV=3;
CKEDITOR.config={customConfig:"config.js",autoUpdateElement:!0,language:"",defaultLanguage:"en",contentsLangDirection:"",enterMode:CKEDITOR.ENTER_P,forceEnterMode:!1,shiftEnterMode:CKEDITOR.ENTER_BR,docType:"<!DOCTYPE html>",bodyId:"",bodyClass:"",fullPage:!1,height:200,extraPlugins:"",removePlugins:"",protectedSource:[],tabIndex:0,width:"",baseFloatZIndex:1E4,blockedKeystrokes:[CKEDITOR.CTRL+66,CKEDITOR.CTRL+73,CKEDITOR.CTRL+85]};
(function(){function a(a,b,d,g,h){var f=b.name;if((g||typeof a.elements!="function"||a.elements(f))&&(!a.match||a.match(b))){if(g=!h){a:if(a.nothingRequired)g=true;else{if(h=a.requiredClasses){f=b.classes;for(g=0;g<h.length;++g)if(CKEDITOR.tools.indexOf(f,h[g])==-1){g=false;break a}}g=e(b.styles,a.requiredStyles)&&e(b.attributes,a.requiredAttributes)}g=!g}if(!g){if(!a.propertiesOnly)d.valid=true;if(!d.allAttributes)d.allAttributes=c(a.attributes,b.attributes,d.validAttributes);if(!d.allStyles)d.allStyles=
c(a.styles,b.styles,d.validStyles);if(!d.allClasses){a=a.classes;b=b.classes;g=d.validClasses;if(a)if(a===true)b=true;else{for(var h=0,f=b.length,k;h<f;++h){k=b[h];g[k]||(g[k]=a(k))}b=false}else b=false;d.allClasses=b}}}}function c(a,b,c){if(!a)return false;if(a===true)return true;for(var d in b)c[d]||(c[d]=a(d,b[d]));return false}function b(a,b){if(!a)return false;if(a===true)return a;if(typeof a=="string"){a=q(a);return a=="*"?true:CKEDITOR.tools.convertArrayToObject(a.split(b))}if(CKEDITOR.tools.isArray(a))return a.length?
CKEDITOR.tools.convertArrayToObject(a):false;var c={},d=0,g;for(g in a){c[g]=a[g];d++}return d?c:false}function f(b){if(b._.filterFunction)return b._.filterFunction;var c=/^cke:(object|embed|param)$/,d=/^(object|embed|param)$/;return b._.filterFunction=function(g,h,e,f,k,j,p){var o=g.name,r,l=false;if(k)g.name=o=o.replace(c,"$1");if(e=e&&e[o]){i(g);for(o=0;o<e.length;++o)u(b,g,e[o]);m(g)}if(h){var o=g.name,e=h.elements[o],w=h.generic,h={valid:false,validAttributes:{},validClasses:{},validStyles:{},
allAttributes:false,allClasses:false,allStyles:false};if(!e&&!w){f.push(g);return true}i(g);if(e){o=0;for(r=e.length;o<r;++o)a(e[o],g,h,true,j)}if(w){o=0;for(r=w.length;o<r;++o)a(w[o],g,h,false,j)}if(!h.valid){f.push(g);return true}j=h.validAttributes;o=h.validStyles;e=h.validClasses;r=g.attributes;var w=g.styles,q=r["class"],x=r.style,t,B,D=[],s=[],F=/^data-cke-/,z=false;delete r.style;delete r["class"];if(!h.allAttributes)for(t in r)if(!j[t])if(F.test(t)){if(t!=(B=t.replace(/^data-cke-saved-/,""))&&
!j[B]){delete r[t];z=true}}else{delete r[t];z=true}if(h.allStyles){if(x)r.style=x}else{for(t in w)o[t]?D.push(t+":"+w[t]):z=true;if(D.length)r.style=D.sort().join("; ")}if(h.allClasses)q&&(r["class"]=q);else{for(t in e)e[t]&&s.push(t);s.length&&(r["class"]=s.sort().join(" "));q&&s.length<q.split(/\s+/).length&&(z=true)}z&&(l=true);if(!p&&!n(g)){f.push(g);return true}}if(k)g.name=g.name.replace(d,"cke:$1");return l}}function e(a,b){if(!b)return true;for(var c=0;c<b.length;++c)if(!(b[c]in a))return false;
return true}function d(a){if(!a)return{};for(var a=a.split(/\s*,\s*/).sort(),b={};a.length;)b[a.shift()]=z;return b}function j(a){for(var b,c,d,g,h={},e=1,a=q(a);b=a.match(v);){if(c=b[2]){d=l(c,"styles");g=l(c,"attrs");c=l(c,"classes")}else d=g=c=null;h["$"+e++]={elements:b[1],classes:c,styles:d,attributes:g};a=a.slice(b[0].length)}return h}function l(a,b){var c=a.match(o[b]);return c?q(c[1]):null}function i(a){if(!a.styles)a.styles=CKEDITOR.tools.parseCssText(a.attributes.style||"",1);if(!a.classes)a.classes=
a.attributes["class"]?a.attributes["class"].split(/\s+/):[]}function m(a){var b=a.attributes,c;delete b.style;delete b["class"];if(c=CKEDITOR.tools.writeCssText(a.styles,true))b.style=c;a.classes.length&&(b["class"]=a.classes.sort().join(" "))}function n(a){switch(a.name){case "a":if(!a.children.length&&!a.attributes.name)return false;break;case "img":if(!a.attributes.src)return false}return true}function r(a){return!a?false:a===true?true:function(b){return b in a}}function p(){return new CKEDITOR.htmlParser.element("br")}
function g(a){return a.type==CKEDITOR.NODE_ELEMENT&&(a.name=="br"||D.$block[a.name])}function h(a,b,c){var d=a.name;if(D.$empty[d]||!a.children.length)if(d=="hr"&&b=="br")a.replaceWith(p());else{a.parent&&c.push({check:"it",el:a.parent});a.remove()}else if(D.$block[d]||d=="tr")if(b=="br"){if(a.previous&&!g(a.previous)){b=p();b.insertBefore(a)}if(a.next&&!g(a.next)){b=p();b.insertAfter(a)}a.replaceWithChildren()}else{var d=a.children,h;b:{h=D[b];for(var e=0,f=d.length,k;e<f;++e){k=d[e];if(k.type==
CKEDITOR.NODE_ELEMENT&&!h[k.name]){h=false;break b}}h=true}if(h){a.name=b;a.attributes={};c.push({check:"parent-down",el:a})}else{h=a.parent;for(var e=h.type==CKEDITOR.NODE_DOCUMENT_FRAGMENT||h.name=="body",j,f=d.length;f>0;){k=d[--f];if(e&&(k.type==CKEDITOR.NODE_TEXT||k.type==CKEDITOR.NODE_ELEMENT&&D.$inline[k.name])){if(!j){j=new CKEDITOR.htmlParser.element(b);j.insertAfter(a);c.push({check:"parent-down",el:j})}j.add(k,0)}else{j=null;k.insertAfter(a);h.type!=CKEDITOR.NODE_DOCUMENT_FRAGMENT&&(k.type==
CKEDITOR.NODE_ELEMENT&&!D[h.name][k.name])&&c.push({check:"el-up",el:k})}}a.remove()}}else if(d=="style")a.remove();else{a.parent&&c.push({check:"it",el:a.parent});a.replaceWithChildren()}}function u(a,b,c){var d,g;for(d=0;d<c.length;++d){g=c[d];if((!g.check||a.check(g.check,false))&&(!g.left||g.left(b))){g.right(b,x);break}}}function w(a,b){var c=b.getDefinition(),d=c.attributes,g=c.styles,h,e,f,k;if(a.name!=c.element)return false;for(h in d)if(h=="class"){c=d[h].split(/\s+/);for(f=a.classes.join("|");k=
c.pop();)if(f.indexOf(k)==-1)return false}else if(a.attributes[h]!=d[h])return false;for(e in g)if(a.styles[e]!=g[e])return false;return true}function k(a,b){var c,d;if(typeof a=="string")c=a;else if(a instanceof CKEDITOR.style)d=a;else{c=a[0];d=a[1]}return[{element:c,left:d,right:function(a,c){c.transform(a,b)}}]}function t(a){return function(b){return w(b,a)}}function F(a){return function(b,c){c[a](b)}}var D=CKEDITOR.dtd,B=CKEDITOR.tools.copy,q=CKEDITOR.tools.trim,z="cke-test";CKEDITOR.filter=function(a){this.allowedContent=
[];this.disabled=false;this.editor=null;this.enterMode=CKEDITOR.ENTER_P;this._={rules:{},transformations:{},cachedTests:{}};if(a instanceof CKEDITOR.editor){var b=this.editor=a;this.customConfig=true;var a=b.config.allowedContent,c;if(a===true)this.disabled=true;else{if(!a)this.customConfig=false;this.enterMode=c=b.blockless?CKEDITOR.ENTER_BR:b.config.enterMode;this.allow("br "+(c==CKEDITOR.ENTER_P?"p":c==CKEDITOR.ENTER_DIV?"div":""),"default",1);this.allow(a,"config",1);this.allow(b.config.extraAllowedContent,
"extra",1);this._.toHtmlListener=b.on("toHtml",function(a){this.applyTo(a.data.dataValue,true,a.data.dontFilter)&&b.fire("dataFiltered")},this,null,6);this._.toDataFormatListener=b.on("toDataFormat",function(a){this.applyTo(a.data.dataValue,false,true)},this,null,11)}}else{this.customConfig=false;this.allow(a,"default",1)}};CKEDITOR.filter.prototype={allow:function(a,c,d){if(this.disabled||this.customConfig&&!d||!a)return false;this._.cachedChecks={};var g,h;if(typeof a=="string")a=j(a);else if(a instanceof
CKEDITOR.style){h=a.getDefinition();d={};a=h.attributes;d[h.element]=h={styles:h.styles,requiredStyles:h.styles&&CKEDITOR.tools.objectKeys(h.styles)};if(a){a=B(a);h.classes=a["class"]?a["class"].split(/\s+/):null;h.requiredClasses=h.classes;delete a["class"];h.attributes=a;h.requiredAttributes=a&&CKEDITOR.tools.objectKeys(a)}a=d}else if(CKEDITOR.tools.isArray(a)){for(g=0;g<a.length;++g)h=this.allow(a[g],c,d);return h}var e,d=[];for(e in a){h=a[e];h=typeof h=="boolean"?{}:typeof h=="function"?{match:h}:
B(h);if(e.charAt(0)!="$")h.elements=e;if(c)h.featureName=c.toLowerCase();var f=h;f.elements=b(f.elements,/\s+/)||null;f.propertiesOnly=f.propertiesOnly||f.elements===true;var k=/\s*,\s*/,u=void 0;for(u in s){f[u]=b(f[u],k)||null;var o=f,p=A[u],i=b(f[A[u]],k),l=f[u],w=[],m=true,q=void 0;i?m=false:i={};for(q in l)if(q.charAt(0)=="!"){q=q.slice(1);w.push(q);i[q]=true;m=false}for(;q=w.pop();){l[q]=l["!"+q];delete l["!"+q]}o[p]=(m?false:i)||null}f.match=f.match||null;this.allowedContent.push(h);d.push(h)}c=
this._.rules;e=c.elements||{};a=c.generic||[];h=0;for(f=d.length;h<f;++h){k=B(d[h]);u=k.classes===true||k.styles===true||k.attributes===true;o=k;p=void 0;for(p in s)o[p]=r(o[p]);i=true;for(p in A){p=A[p];o[p]=CKEDITOR.tools.objectKeys(o[p]);o[p]&&(i=false)}o.nothingRequired=i;if(k.elements===true||k.elements===null){k.elements=r(k.elements);a[u?"unshift":"push"](k)}else{o=k.elements;delete k.elements;for(g in o)if(e[g])e[g][u?"unshift":"push"](k);else e[g]=[k]}}c.elements=e;c.generic=a.length?a:null;
return true},applyTo:function(a,b,c){var d=[],g=!c&&this._.rules,e=this._.transformations,k=f(this),j=this.editor&&this.editor.config.protectedSource,u=false;a.forEach(function(a){if(a.type==CKEDITOR.NODE_ELEMENT){if(!b||!(a.name=="span"&&~CKEDITOR.tools.objectKeys(a.attributes).join("|").indexOf("data-cke-")))k(a,g,e,d,b)&&(u=true)}else if(a.type==CKEDITOR.NODE_COMMENT&&a.value.match(/^\{cke_protected\}(?!\{C\})/)){var c;a:{var h=decodeURIComponent(a.value.replace(/^\{cke_protected\}/,""));c=[];
var f,o,p;if(j)for(o=0;o<j.length;++o)if((p=h.match(j[o]))&&p[0].length==h.length){c=true;break a}h=CKEDITOR.htmlParser.fragment.fromHtml(h);h.children.length==1&&(f=h.children[0]).type==CKEDITOR.NODE_ELEMENT&&k(f,g,e,c,b);c=!c.length}c||d.push(a)}},null,true);d.length&&(u=true);for(var o,p,a=[],c=["p","br","div"][this.enterMode-1];o=d.pop();)o.type==CKEDITOR.NODE_ELEMENT?h(o,c,a):o.remove();for(;p=a.pop();){o=p.el;if(o.parent)switch(p.check){case "it":D.$removeEmpty[o.name]&&!o.children.length?h(o,
c,a):n(o)||h(o,c,a);break;case "el-up":o.parent.type!=CKEDITOR.NODE_DOCUMENT_FRAGMENT&&!D[o.parent.name][o.name]&&h(o,c,a);break;case "parent-down":o.parent.type!=CKEDITOR.NODE_DOCUMENT_FRAGMENT&&!D[o.parent.name][o.name]&&h(o.parent,c,a)}}return u},checkFeature:function(a){if(this.disabled||!a)return true;a.toFeature&&(a=a.toFeature(this.editor));return!a.requiredContent||this.check(a.requiredContent)},disable:function(){this.disabled=true;this._.toHtmlListener&&this._.toHtmlListener.removeListener();
this._.toDataFormatListener&&this._.toDataFormatListener.removeListener()},addContentForms:function(a){if(!this.disabled&&a){var b,c,d=[],h;for(b=0;b<a.length&&!h;++b){c=a[b];if((typeof c=="string"||c instanceof CKEDITOR.style)&&this.check(c))h=c}if(h){for(b=0;b<a.length;++b)d.push(k(a[b],h));this.addTransformations(d)}}},addFeature:function(a){if(this.disabled||!a)return true;a.toFeature&&(a=a.toFeature(this.editor));this.allow(a.allowedContent,a.name);this.addTransformations(a.contentTransformations);
this.addContentForms(a.contentForms);return this.customConfig&&a.requiredContent?this.check(a.requiredContent):true},addTransformations:function(a){var b,c;if(!this.disabled&&a){var d=this._.transformations,h;for(h=0;h<a.length;++h){b=a[h];var g=void 0,e=void 0,f=void 0,k=void 0,o=void 0,j=void 0;c=[];for(e=0;e<b.length;++e){f=b[e];if(typeof f=="string"){f=f.split(/\s*:\s*/);k=f[0];o=null;j=f[1]}else{k=f.check;o=f.left;j=f.right}if(!g){g=f;g=g.element?g.element:k?k.match(/^([a-z0-9]+)/i)[0]:g.left.getDefinition().element}o instanceof
CKEDITOR.style&&(o=t(o));c.push({check:k==g?null:k,left:o,right:typeof j=="string"?F(j):j})}b=g;d[b]||(d[b]=[]);d[b].push(c)}}},check:function(a,b,c){if(this.disabled)return true;if(CKEDITOR.tools.isArray(a)){for(var h=a.length;h--;)if(this.check(a[h],b,c))return true;return false}var g,e;if(typeof a=="string"){e=a+"<"+(b===false?"0":"1")+(c?"1":"0")+">";if(e in this._.cachedChecks)return this._.cachedChecks[e];h=j(a).$1;g=h.styles;var k=h.classes;h.name=h.elements;h.classes=k=k?k.split(/\s*,\s*/):
[];h.styles=d(g);h.attributes=d(h.attributes);h.children=[];k.length&&(h.attributes["class"]=k.join(" "));if(g)h.attributes.style=CKEDITOR.tools.writeCssText(h.styles);g=h}else{h=a.getDefinition();g=h.styles;k=h.attributes||{};if(g){g=B(g);k.style=CKEDITOR.tools.writeCssText(g,true)}else g={};g={name:h.element,attributes:k,classes:k["class"]?k["class"].split(/\s+/):[],styles:g,children:[]}}var k=CKEDITOR.tools.clone(g),o=[],p;if(b!==false&&(p=this._.transformations[g.name])){for(h=0;h<p.length;++h)u(this,
g,p[h]);m(g)}f(this)(k,this._.rules,b===false?false:this._.transformations,o,false,!c,!c);b=o.length>0?false:CKEDITOR.tools.objectCompare(g.attributes,k.attributes,true)?true:false;typeof a=="string"&&(this._.cachedChecks[e]=b);return b}};var s={styles:1,attributes:1,classes:1},A={styles:"requiredStyles",attributes:"requiredAttributes",classes:"requiredClasses"},v=/^([a-z0-9*\s]+)((?:\s*\{[!\w\-,\s\*]+\}\s*|\s*\[[!\w\-,\s\*]+\]\s*|\s*\([!\w\-,\s\*]+\)\s*){0,3})(?:;\s*|$)/i,o={styles:/{([^}]+)}/,attrs:/\[([^\]]+)\]/,
classes:/\(([^\)]+)\)/},x=CKEDITOR.filter.transformationsTools={sizeToStyle:function(a){this.lengthToStyle(a,"width");this.lengthToStyle(a,"height")},sizeToAttribute:function(a){this.lengthToAttribute(a,"width");this.lengthToAttribute(a,"height")},lengthToStyle:function(a,b,c){c=c||b;if(!(c in a.styles)){var d=a.attributes[b];if(d){/^\d+$/.test(d)&&(d=d+"px");a.styles[c]=d}}delete a.attributes[b]},lengthToAttribute:function(a,b,c){c=c||b;if(!(c in a.attributes)){var d=a.styles[b],h=d&&d.match(/^(\d+)(?:\.\d*)?px$/);
h?a.attributes[c]=h[1]:d==z&&(a.attributes[c]=z)}delete a.styles[b]},alignmentToStyle:function(a){if(!("float"in a.styles)){var b=a.attributes.align;if(b=="left"||b=="right")a.styles["float"]=b}delete a.attributes.align},alignmentToAttribute:function(a){if(!("align"in a.attributes)){var b=a.styles["float"];if(b=="left"||b=="right")a.attributes.align=b}delete a.styles["float"]},matchesStyle:w,transform:function(a,b){if(typeof b=="string")a.name=b;else{var c=b.getDefinition(),d=c.styles,h=c.attributes,
g,e,k,f;a.name=c.element;for(g in h)if(g=="class"){c=a.classes.join("|");for(k=h[g].split(/\s+/);f=k.pop();)c.indexOf(f)==-1&&a.classes.push(f)}else a.attributes[g]=h[g];for(e in d)a.styles[e]=d[e]}}}})();
(function(){CKEDITOR.focusManager=function(a){if(a.focusManager)return a.focusManager;this.hasFocus=false;this.currentActive=null;this._={editor:a};return this};CKEDITOR.focusManager._={blurDelay:200};CKEDITOR.focusManager.prototype={focus:function(){this._.timer&&clearTimeout(this._.timer);if(!this.hasFocus&&!this._.locked){var a=CKEDITOR.currentInstance;a&&a.focusManager.blur(1);this.hasFocus=true;(a=this._.editor.container)&&a.addClass("cke_focus");this._.editor.fire("focus")}},lock:function(){this._.locked=
1},unlock:function(){delete this._.locked},blur:function(a){function c(){if(this.hasFocus){this.hasFocus=false;var a=this._.editor.container;a&&a.removeClass("cke_focus");this._.editor.fire("blur")}}if(!this._.locked){this._.timer&&clearTimeout(this._.timer);var b=CKEDITOR.focusManager._.blurDelay;a||!b?c.call(this):this._.timer=CKEDITOR.tools.setTimeout(function(){delete this._.timer;c.call(this)},b,this)}},add:function(a,c){var b=a.getCustomData("focusmanager");if(!b||b!=this){b&&b.remove(a);var b=
"focus",f="blur";if(c)if(CKEDITOR.env.ie){b="focusin";f="focusout"}else CKEDITOR.event.useCapture=1;var e={blur:function(){a.equals(this.currentActive)&&this.blur()},focus:function(){this.currentActive=a;this.focus()}};a.on(b,e.focus,this);a.on(f,e.blur,this);if(c)CKEDITOR.event.useCapture=0;a.setCustomData("focusmanager",this);a.setCustomData("focusmanager_handlers",e)}},remove:function(a){a.removeCustomData("focusmanager");var c=a.removeCustomData("focusmanager_handlers");a.removeListener("blur",
c.blur);a.removeListener("focus",c.focus)}}})();CKEDITOR.keystrokeHandler=function(a){if(a.keystrokeHandler)return a.keystrokeHandler;this.keystrokes={};this.blockedKeystrokes={};this._={editor:a};return this};
(function(){var a,c=function(b){var b=b.data,c=b.getKeystroke(),d=this.keystrokes[c],j=this._.editor;a=j.fire("key",{keyCode:c})===false;if(!a){d&&(a=j.execCommand(d,{from:"keystrokeHandler"})!==false);a||(a=!!this.blockedKeystrokes[c])}a&&b.preventDefault(true);return!a},b=function(b){if(a){a=false;b.data.preventDefault(true)}};CKEDITOR.keystrokeHandler.prototype={attach:function(a){a.on("keydown",c,this);if(CKEDITOR.env.opera||CKEDITOR.env.gecko&&CKEDITOR.env.mac)a.on("keypress",b,this)}}})();
(function(){CKEDITOR.lang={languages:{af:1,ar:1,bg:1,bn:1,bs:1,ca:1,cs:1,cy:1,da:1,de:1,el:1,"en-au":1,"en-ca":1,"en-gb":1,en:1,eo:1,es:1,et:1,eu:1,fa:1,fi:1,fo:1,"fr-ca":1,fr:1,gl:1,gu:1,he:1,hi:1,hr:1,hu:1,is:1,it:1,ja:1,ka:1,km:1,ko:1,ku:1,lt:1,lv:1,mk:1,mn:1,ms:1,nb:1,nl:1,no:1,pl:1,"pt-br":1,pt:1,ro:1,ru:1,sk:1,sl:1,sq:1,"sr-latn":1,sr:1,sv:1,th:1,tr:1,ug:1,uk:1,vi:1,"zh-cn":1,zh:1},load:function(a,c,b){if(!a||!CKEDITOR.lang.languages[a])a=this.detect(c,a);this[a]?b(a,this[a]):CKEDITOR.scriptLoader.load(CKEDITOR.getUrl("lang/"+
a+".js"),function(){b(a,this[a])},this)},detect:function(a,c){var b=this.languages,c=c||navigator.userLanguage||navigator.language||a,f=c.toLowerCase().match(/([a-z]+)(?:-([a-z]+))?/),e=f[1],f=f[2];b[e+"-"+f]?e=e+"-"+f:b[e]||(e=null);CKEDITOR.lang.detect=e?function(){return e}:function(a){return a};return e||a}}})();
CKEDITOR.scriptLoader=function(){var a={},c={};return{load:function(b,f,e,d){var j=typeof b=="string";j&&(b=[b]);e||(e=CKEDITOR);var l=b.length,i=[],m=[],n=function(a){f&&(j?f.call(e,a):f.call(e,i,m))};if(l===0)n(true);else{var r=function(a,b){(b?i:m).push(a);if(--l<=0){d&&CKEDITOR.document.getDocumentElement().removeStyle("cursor");n(b)}},p=function(b,d){a[b]=1;var h=c[b];delete c[b];for(var g=0;g<h.length;g++)h[g](b,d)},g=function(b){if(a[b])r(b,true);else{var d=c[b]||(c[b]=[]);d.push(r);if(!(d.length>
1)){var h=new CKEDITOR.dom.element("script");h.setAttributes({type:"text/javascript",src:b});if(f)if(CKEDITOR.env.ie)h.$.onreadystatechange=function(){if(h.$.readyState=="loaded"||h.$.readyState=="complete"){h.$.onreadystatechange=null;p(b,true)}};else{h.$.onload=function(){setTimeout(function(){p(b,true)},0)};h.$.onerror=function(){p(b,false)}}h.appendTo(CKEDITOR.document.getHead())}}};d&&CKEDITOR.document.getDocumentElement().setStyle("cursor","wait");for(var h=0;h<l;h++)g(b[h])}}}}();
CKEDITOR.resourceManager=function(a,c){this.basePath=a;this.fileName=c;this.registered={};this.loaded={};this.externals={};this._={waitingList:{}}};
CKEDITOR.resourceManager.prototype={add:function(a,c){if(this.registered[a])throw'[CKEDITOR.resourceManager.add] The resource name "'+a+'" is already registered.';var b=this.registered[a]=c||{};b.name=a;b.path=this.getPath(a);CKEDITOR.fire(a+CKEDITOR.tools.capitalize(this.fileName)+"Ready",b);return this.get(a)},get:function(a){return this.registered[a]||null},getPath:function(a){var c=this.externals[a];return CKEDITOR.getUrl(c&&c.dir||this.basePath+a+"/")},getFilePath:function(a){var c=this.externals[a];
return CKEDITOR.getUrl(this.getPath(a)+(c&&typeof c.file=="string"?c.file:this.fileName+".js"))},addExternal:function(a,c,b){for(var a=a.split(","),f=0;f<a.length;f++)this.externals[a[f]]={dir:c,file:b}},load:function(a,c,b){CKEDITOR.tools.isArray(a)||(a=a?[a]:[]);for(var f=this.loaded,e=this.registered,d=[],j={},l={},i=0;i<a.length;i++){var m=a[i];if(m)if(!f[m]&&!e[m]){var n=this.getFilePath(m);d.push(n);n in j||(j[n]=[]);j[n].push(m)}else l[m]=this.get(m)}CKEDITOR.scriptLoader.load(d,function(a,
d){if(d.length)throw'[CKEDITOR.resourceManager.load] Resource name "'+j[d[0]].join(",")+'" was not found at "'+d[0]+'".';for(var g=0;g<a.length;g++)for(var h=j[a[g]],e=0;e<h.length;e++){var i=h[e];l[i]=this.get(i);f[i]=1}c.call(b,l)},this)}};CKEDITOR.plugins=new CKEDITOR.resourceManager("plugins/","plugin");
CKEDITOR.plugins.load=CKEDITOR.tools.override(CKEDITOR.plugins.load,function(a){var c={};return function(b,f,e){var d={},j=function(b){a.call(this,b,function(a){CKEDITOR.tools.extend(d,a);var b=[],l;for(l in a){var r=a[l],p=r&&r.requires;if(!c[l]){if(r.icons)for(var g=r.icons.split(","),h=0;h<g.length;h++)CKEDITOR.skin.addIcon(g[h],r.path+"icons/"+g[h]+".png");c[l]=1}if(p){p.split&&(p=p.split(","));for(r=0;r<p.length;r++)d[p[r]]||b.push(p[r])}}if(b.length)j.call(this,b);else{for(l in d){r=d[l];if(r.onLoad&&
!r.onLoad._called){r.onLoad()===false&&delete d[l];r.onLoad._called=1}}f&&f.call(e||window,d)}},this)};j.call(this,b)}});CKEDITOR.plugins.setLang=function(a,c,b){var f=this.get(a),a=f.langEntries||(f.langEntries={}),f=f.lang||(f.lang=[]);f.split&&(f=f.split(","));CKEDITOR.tools.indexOf(f,c)==-1&&f.push(c);a[c]=b};CKEDITOR.ui=function(a){if(a.ui)return a.ui;this.items={};this.instances={};this.editor=a;this._={handlers:{}};return this};
CKEDITOR.ui.prototype={add:function(a,c,b){b.name=a.toLowerCase();var f=this.items[a]={type:c,command:b.command||null,args:Array.prototype.slice.call(arguments,2)};CKEDITOR.tools.extend(f,b)},get:function(a){return this.instances[a]},create:function(a){var c=this.items[a],b=c&&this._.handlers[c.type],f=c&&c.command&&this.editor.getCommand(c.command),b=b&&b.create.apply(this,c.args);this.instances[a]=b;f&&f.uiItems.push(b);if(b&&!b.type)b.type=c.type;return b},addHandler:function(a,c){this._.handlers[a]=
c},space:function(a){return CKEDITOR.document.getById(this.spaceId(a))},spaceId:function(a){return this.editor.id+"_"+a}};CKEDITOR.event.implementOn(CKEDITOR.ui);
(function(){function a(a,d,g){CKEDITOR.event.call(this);a=a&&CKEDITOR.tools.clone(a);if(d!==void 0){if(d instanceof CKEDITOR.dom.element){if(!g)throw Error("One of the element modes must be specified.");}else throw Error("Expect element of type CKEDITOR.dom.element.");if(CKEDITOR.env.ie&&CKEDITOR.env.quirks&&g==CKEDITOR.ELEMENT_MODE_INLINE)throw Error("Inline element mode is not supported on IE quirks.");if(g==CKEDITOR.ELEMENT_MODE_INLINE&&!d.is(CKEDITOR.dtd.$editable)||g==CKEDITOR.ELEMENT_MODE_REPLACE&&
d.is(CKEDITOR.dtd.$nonBodyContent))throw Error('The specified element mode is not supported on element: "'+d.getName()+'".');this.element=d;this.elementMode=g;this.name=this.elementMode!=CKEDITOR.ELEMENT_MODE_APPENDTO&&(d.getId()||d.getNameAtt())}else this.elementMode=CKEDITOR.ELEMENT_MODE_NONE;this._={};this.commands={};this.templates={};this.name=this.name||c();this.id=CKEDITOR.tools.getNextId();this.status="unloaded";this.config=CKEDITOR.tools.prototypedCopy(CKEDITOR.config);this.ui=new CKEDITOR.ui(this);
this.focusManager=new CKEDITOR.focusManager(this);this.keystrokeHandler=new CKEDITOR.keystrokeHandler(this);this.on("readOnly",b);this.on("selectionChange",e);this.on("mode",b);this.on("instanceReady",function(){this.config.startupFocus&&this.focus()});CKEDITOR.fire("instanceCreated",null,this);CKEDITOR.add(this);CKEDITOR.tools.setTimeout(function(){j(this,a)},0,this)}function c(){do var a="editor"+ ++p;while(CKEDITOR.instances[a]);return a}function b(){var a=this.commands,b;for(b in a)f(this,a[b])}
function f(a,b){b[b.startDisabled?"disable":a.readOnly&&!b.readOnly?"disable":b.modes[a.mode]?"enable":"disable"]()}function e(a){var b=this.commands,c=a.editor,d=a.data.path,g;for(g in b){a=b[g];a.contextSensitive&&a.refresh(c,d)}}function d(a){var b=a.config.customConfig;if(!b)return false;var b=CKEDITOR.getUrl(b),c=g[b]||(g[b]={});if(c.fn){c.fn.call(a,a.config);(CKEDITOR.getUrl(a.config.customConfig)==b||!d(a))&&a.fireOnce("customConfigLoaded")}else CKEDITOR.scriptLoader.load(b,function(){c.fn=
CKEDITOR.editorConfig?CKEDITOR.editorConfig:function(){};d(a)});return true}function j(a,b){a.on("customConfigLoaded",function(){if(b){if(b.on)for(var c in b.on)a.on(c,b.on[c]);CKEDITOR.tools.extend(a.config,b,true);delete a.config.on}a.readOnly=!(!a.config.readOnly&&!(a.elementMode==CKEDITOR.ELEMENT_MODE_INLINE?a.element.isReadOnly():a.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE&&a.element.getAttribute("disabled")));a.blockless=a.elementMode==CKEDITOR.ELEMENT_MODE_INLINE&&!CKEDITOR.dtd[a.element.getName()].p;
a.tabIndex=a.config.tabIndex||a.element&&a.element.getAttribute("tabindex")||0;if(a.config.skin)CKEDITOR.skinName=a.config.skin;a.fireOnce("configLoaded");a.dataProcessor=new CKEDITOR.htmlDataProcessor(a);a.filter=new CKEDITOR.filter(a);l(a)});if(b&&b.customConfig!=void 0)a.config.customConfig=b.customConfig;d(a)||a.fireOnce("customConfigLoaded")}function l(a){CKEDITOR.skin.loadPart("editor",function(){i(a)})}function i(a){CKEDITOR.lang.load(a.config.language,a.config.defaultLanguage,function(b,c){a.langCode=
b;a.lang=CKEDITOR.tools.prototypedCopy(c);if(CKEDITOR.env.gecko&&CKEDITOR.env.version<10900&&a.lang.dir=="rtl")a.lang.dir="ltr";if(!a.config.contentsLangDirection)a.config.contentsLangDirection=a.elementMode==CKEDITOR.ELEMENT_MODE_INLINE?a.element.getDirection(1):a.lang.dir;a.fire("langLoaded");m(a)})}function m(a){a.getStylesSet(function(b){a.once("loaded",function(){a.fire("stylesSet",{styles:b})},null,null,1);n(a)})}function n(a){var b=a.config,c=b.plugins,d=b.extraPlugins,g=b.removePlugins;if(d)var e=
RegExp("(?:^|,)(?:"+d.replace(/\s*,\s*/g,"|")+")(?=,|$)","g"),c=c.replace(e,""),c=c+(","+d);if(g)var f=RegExp("(?:^|,)(?:"+g.replace(/\s*,\s*/g,"|")+")(?=,|$)","g"),c=c.replace(f,"");CKEDITOR.env.air&&(c=c+",adobeair");CKEDITOR.plugins.load(c.split(","),function(c){var d=[],g=[],e=[];a.plugins=c;for(var k in c){var j=c[k],o=j.lang,p=null,i=j.requires,r;CKEDITOR.tools.isArray(i)&&(i=i.join(","));if(i&&(r=i.match(f)))for(;i=r.pop();)CKEDITOR.tools.setTimeout(function(a,b){throw Error('Plugin "'+a.replace(",",
"")+'" cannot be removed from the plugins list, because it\'s required by "'+b+'" plugin.');},0,null,[i,k]);if(o&&!a.lang[k]){o.split&&(o=o.split(","));if(CKEDITOR.tools.indexOf(o,a.langCode)>=0)p=a.langCode;else{p=a.langCode.replace(/-.*/,"");p=p!=a.langCode&&CKEDITOR.tools.indexOf(o,p)>=0?p:CKEDITOR.tools.indexOf(o,"en")>=0?"en":o[0]}if(!j.langEntries||!j.langEntries[p])e.push(CKEDITOR.getUrl(j.path+"lang/"+p+".js"));else{a.lang[k]=j.langEntries[p];p=null}}g.push(p);d.push(j)}CKEDITOR.scriptLoader.load(e,
function(){for(var c=["beforeInit","init","afterInit"],e=0;e<c.length;e++)for(var k=0;k<d.length;k++){var f=d[k];e===0&&(g[k]&&f.lang&&f.langEntries)&&(a.lang[f.name]=f.langEntries[g[k]]);if(f[c[e]])f[c[e]](a)}a.fireOnce("pluginsLoaded");b.keystrokes&&a.setKeystroke(a.config.keystrokes);for(k=0;k<a.config.blockedKeystrokes.length;k++)a.keystrokeHandler.blockedKeystrokes[a.config.blockedKeystrokes[k]]=1;a.status="loaded";a.fireOnce("loaded");CKEDITOR.fire("instanceLoaded",null,a)})})}function r(){var a=
this.element;if(a&&this.elementMode!=CKEDITOR.ELEMENT_MODE_APPENDTO){var b=this.getData();this.config.htmlEncodeOutput&&(b=CKEDITOR.tools.htmlEncode(b));a.is("textarea")?a.setValue(b):a.setHtml(b);return true}return false}a.prototype=CKEDITOR.editor.prototype;CKEDITOR.editor=a;var p=0,g={};CKEDITOR.tools.extend(CKEDITOR.editor.prototype,{addCommand:function(a,b){b.name=a.toLowerCase();var c=new CKEDITOR.command(this,b);this.mode&&f(this,c);return this.commands[a]=c},destroy:function(a){this.fire("beforeDestroy");
!a&&r.call(this);this.editable(null);this.status="destroyed";this.fire("destroy");this.removeAllListeners();CKEDITOR.remove(this);CKEDITOR.fire("instanceDestroyed",null,this)},elementPath:function(a){return(a=a||this.getSelection().getStartElement())?new CKEDITOR.dom.elementPath(a,this.editable()):null},createRange:function(){var a=this.editable();return a?new CKEDITOR.dom.range(a):null},execCommand:function(a,b){var c=this.getCommand(a),d={name:a,commandData:b,command:c};if(c&&c.state!=CKEDITOR.TRISTATE_DISABLED&&
this.fire("beforeCommandExec",d)!==true){d.returnValue=c.exec(d.commandData);if(!c.async&&this.fire("afterCommandExec",d)!==true)return d.returnValue}return false},getCommand:function(a){return this.commands[a]},getData:function(a){!a&&this.fire("beforeGetData");var b=this._.data;if(typeof b!="string")b=(b=this.element)&&this.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE?b.is("textarea")?b.getValue():b.getHtml():"";b={dataValue:b};!a&&this.fire("getData",b);return b.dataValue},getSnapshot:function(){var a=
this.fire("getSnapshot");if(typeof a!="string"){var b=this.element;b&&this.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE&&(a=b.is("textarea")?b.getValue():b.getHtml())}return a},loadSnapshot:function(a){this.fire("loadSnapshot",a)},setData:function(a,b,c){if(b)this.on("dataReady",function(a){a.removeListener();b.call(a.editor)});a={dataValue:a};!c&&this.fire("setData",a);this._.data=a.dataValue;!c&&this.fire("afterSetData",a)},setReadOnly:function(a){a=a==void 0||a;if(this.readOnly!=a){this.readOnly=
a;this.editable().setReadOnly(a);this.fire("readOnly")}},insertHtml:function(a,b){this.fire("insertHtml",{dataValue:a,mode:b})},insertText:function(a){this.fire("insertText",a)},insertElement:function(a){this.fire("insertElement",a)},focus:function(){this.fire("beforeFocus")},checkDirty:function(){return this.status=="ready"&&this._.previousValue!==this.getSnapshot()},resetDirty:function(){this._.previousValue=this.getSnapshot()},updateElement:function(){return r.call(this)},setKeystroke:function(){for(var a=
this.keystrokeHandler.keystrokes,b=CKEDITOR.tools.isArray(arguments[0])?arguments[0]:[[].slice.call(arguments,0)],c,d,g=b.length;g--;){c=b[g];d=0;if(CKEDITOR.tools.isArray(c)){d=c[1];c=c[0]}d?a[c]=d:delete a[c]}},addFeature:function(a){return this.filter.addFeature(a)}})})();CKEDITOR.ELEMENT_MODE_NONE=0;CKEDITOR.ELEMENT_MODE_REPLACE=1;CKEDITOR.ELEMENT_MODE_APPENDTO=2;CKEDITOR.ELEMENT_MODE_INLINE=3;
CKEDITOR.htmlParser=function(){this._={htmlPartsRegex:RegExp("<(?:(?:\\/([^>]+)>)|(?:!--([\\S|\\s]*?)--\>)|(?:([^\\s>]+)\\s*((?:(?:\"[^\"]*\")|(?:'[^']*')|[^\"'>])*)\\/?>))","g")}};
(function(){var a=/([\w\-:.]+)(?:(?:\s*=\s*(?:(?:"([^"]*)")|(?:'([^']*)')|([^\s>]+)))|(?=\s|$))/g,c={checked:1,compact:1,declare:1,defer:1,disabled:1,ismap:1,multiple:1,nohref:1,noresize:1,noshade:1,nowrap:1,readonly:1,selected:1};CKEDITOR.htmlParser.prototype={onTagOpen:function(){},onTagClose:function(){},onText:function(){},onCDATA:function(){},onComment:function(){},parse:function(b){for(var f,e,d=0,j;f=this._.htmlPartsRegex.exec(b);){e=f.index;if(e>d){d=b.substring(d,e);if(j)j.push(d);else this.onText(d)}d=
this._.htmlPartsRegex.lastIndex;if(e=f[1]){e=e.toLowerCase();if(j&&CKEDITOR.dtd.$cdata[e]){this.onCDATA(j.join(""));j=null}if(!j){this.onTagClose(e);continue}}if(j)j.push(f[0]);else if(e=f[3]){e=e.toLowerCase();if(!/="/.test(e)){var l={},i;f=f[4];var m=!!(f&&f.charAt(f.length-1)=="/");if(f)for(;i=a.exec(f);){var n=i[1].toLowerCase();i=i[2]||i[3]||i[4]||"";l[n]=!i&&c[n]?n:i}this.onTagOpen(e,l,m);!j&&CKEDITOR.dtd.$cdata[e]&&(j=[])}}else if(e=f[2])this.onComment(e)}if(b.length>d)this.onText(b.substring(d,
b.length))}}})();
CKEDITOR.htmlParser.basicWriter=CKEDITOR.tools.createClass({$:function(){this._={output:[]}},proto:{openTag:function(a){this._.output.push("<",a)},openTagClose:function(a,c){c?this._.output.push(" />"):this._.output.push(">")},attribute:function(a,c){typeof c=="string"&&(c=CKEDITOR.tools.htmlEncodeAttr(c));this._.output.push(" ",a,'="',c,'"')},closeTag:function(a){this._.output.push("</",a,">")},text:function(a){this._.output.push(a)},comment:function(a){this._.output.push("<\!--",a,"--\>")},write:function(a){this._.output.push(a)},
reset:function(){this._.output=[];this._.indent=false},getHtml:function(a){var c=this._.output.join("");a&&this.reset();return c}}});"use strict";
(function(){CKEDITOR.htmlParser.node=function(){};CKEDITOR.htmlParser.node.prototype={remove:function(){var a=this.parent.children,c=CKEDITOR.tools.indexOf(a,this),b=this.previous,f=this.next;b&&(b.next=f);f&&(f.previous=b);a.splice(c,1);this.parent=null},replaceWith:function(a){var c=this.parent.children,b=CKEDITOR.tools.indexOf(c,this),f=a.previous=this.previous,e=a.next=this.next;f&&(f.next=a);e&&(e.previous=a);c[b]=a;a.parent=this.parent;this.parent=null},insertAfter:function(a){var c=a.parent.children,
b=CKEDITOR.tools.indexOf(c,a),f=a.next;c.splice(b+1,0,this);this.next=a.next;this.previous=a;a.next=this;f&&(f.previous=this);this.parent=a.parent},insertBefore:function(a){var c=a.parent.children,b=CKEDITOR.tools.indexOf(c,a);c.splice(b,0,this);this.next=a;(this.previous=a.previous)&&(a.previous.next=this);a.previous=this;this.parent=a.parent}}})();"use strict";CKEDITOR.htmlParser.comment=function(a){this.value=a;this._={isBlockLike:false}};
CKEDITOR.htmlParser.comment.prototype=CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node,{type:CKEDITOR.NODE_COMMENT,filter:function(a){var c=this.value;if(!(c=a.onComment(c,this))){this.remove();return false}if(typeof c!="string"){this.replaceWith(c);return false}this.value=c;return true},writeHtml:function(a,c){c&&this.filter(c);a.comment(this.value)}});"use strict";
(function(){CKEDITOR.htmlParser.text=function(a){this.value=a;this._={isBlockLike:false}};CKEDITOR.htmlParser.text.prototype=CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node,{type:CKEDITOR.NODE_TEXT,filter:function(a){if(!(this.value=a.onText(this.value,this))){this.remove();return false}},writeHtml:function(a,c){c&&this.filter(c);a.text(this.value)}})})();"use strict";
(function(){CKEDITOR.htmlParser.cdata=function(a){this.value=a};CKEDITOR.htmlParser.cdata.prototype=CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node,{type:CKEDITOR.NODE_TEXT,filter:function(){},writeHtml:function(a){a.write(this.value)}})})();"use strict";CKEDITOR.htmlParser.fragment=function(){this.children=[];this.parent=null;this._={isBlockLike:true,hasInlineStarted:false}};
(function(){function a(a){return a.name=="a"&&a.attributes.href||CKEDITOR.dtd.$removeEmpty[a.name]}var c=CKEDITOR.tools.extend({table:1,ul:1,ol:1,dl:1},CKEDITOR.dtd.table,CKEDITOR.dtd.ul,CKEDITOR.dtd.ol,CKEDITOR.dtd.dl),b={ol:1,ul:1},f=CKEDITOR.tools.extend({},{html:1},CKEDITOR.dtd.html,CKEDITOR.dtd.body,CKEDITOR.dtd.head,{style:1,script:1});CKEDITOR.htmlParser.fragment.fromHtml=function(e,d,j){function l(a){var b;if(u.length>0)for(var c=0;c<u.length;c++){var d=u[c],g=d.name,e=CKEDITOR.dtd[g],h=k.name&&
CKEDITOR.dtd[k.name];if((!h||h[g])&&(!a||!e||e[a]||!CKEDITOR.dtd[a])){if(!b){i();b=1}d=d.clone();d.parent=k;k=d;u.splice(c,1);c--}else if(g==k.name){n(k,k.parent,1);c--}}}function i(){for(;w.length;)n(w.shift(),k)}function m(a){if(a._.isBlockLike&&a.name!="pre"&&a.name!="textarea"){var b=a.children.length,c=a.children[b-1],d;if(c&&c.type==CKEDITOR.NODE_TEXT)(d=CKEDITOR.tools.rtrim(c.value))?c.value=d:a.children.length=b-1}}function n(b,c,d){var c=c||k||h,e=k;if(b.previous===void 0){if(r(c,b)){k=c;
g.onTagOpen(j,{});b.returnPoint=c=k}m(b);(!a(b)||b.children.length)&&c.add(b);b.name=="pre"&&(F=false);b.name=="textarea"&&(t=false)}if(b.returnPoint){k=b.returnPoint;delete b.returnPoint}else k=d?c:e}function r(a,b){if((a==h||a.name=="body")&&j&&(!a.name||CKEDITOR.dtd[a.name][j])){var c,d;return(c=b.attributes&&(d=b.attributes["data-cke-real-element-type"])?d:b.name)&&c in CKEDITOR.dtd.$inline&&!(c in CKEDITOR.dtd.head)&&!b.isOrphan||b.type==CKEDITOR.NODE_TEXT}}function p(a,b){return a in CKEDITOR.dtd.$listItem||
a in CKEDITOR.dtd.$tableContent?a==b||a=="dt"&&b=="dd"||a=="dd"&&b=="dt":false}var g=new CKEDITOR.htmlParser,h=d instanceof CKEDITOR.htmlParser.element?d:typeof d=="string"?new CKEDITOR.htmlParser.element(d):new CKEDITOR.htmlParser.fragment,u=[],w=[],k=h,t=h.name=="textarea",F=h.name=="pre";g.onTagOpen=function(d,e,h,j){e=new CKEDITOR.htmlParser.element(d,e);if(e.isUnknown&&h)e.isEmpty=true;e.isOptionalClose=j;if(a(e))u.push(e);else{if(d=="pre")F=true;else{if(d=="br"&&F){k.add(new CKEDITOR.htmlParser.text("\n"));
return}d=="textarea"&&(t=true)}if(d=="br")w.push(e);else{for(;;){j=(h=k.name)?CKEDITOR.dtd[h]||(k._.isBlockLike?CKEDITOR.dtd.div:CKEDITOR.dtd.span):f;if(!e.isUnknown&&!k.isUnknown&&!j[d])if(k.isOptionalClose)g.onTagClose(h);else if(d in b&&h in b){h=k.children;(h=h[h.length-1])&&h.name=="li"||n(h=new CKEDITOR.htmlParser.element("li"),k);!e.returnPoint&&(e.returnPoint=k);k=h}else if(d in CKEDITOR.dtd.$listItem&&!p(d,h))g.onTagOpen(d=="li"?"ul":"dl",{},0,1);else if(h in c&&!p(d,h)){!e.returnPoint&&
(e.returnPoint=k);k=k.parent}else{h in CKEDITOR.dtd.$inline&&u.unshift(k);if(k.parent)n(k,k.parent,1);else{e.isOrphan=1;break}}else break}l(d);i();e.parent=k;e.isEmpty?n(e):k=e}}};g.onTagClose=function(a){for(var b=u.length-1;b>=0;b--)if(a==u[b].name){u.splice(b,1);return}for(var c=[],d=[],g=k;g!=h&&g.name!=a;){g._.isBlockLike||d.unshift(g);c.push(g);g=g.returnPoint||g.parent}if(g!=h){for(b=0;b<c.length;b++){var e=c[b];n(e,e.parent)}k=g;g._.isBlockLike&&i();n(g,g.parent);if(g==k)k=k.parent;u=u.concat(d)}a==
"body"&&(j=false)};g.onText=function(a){if((!k._.hasInlineStarted||w.length)&&!F&&!t){a=CKEDITOR.tools.ltrim(a);if(a.length===0)return}var d=k.name,e=d?CKEDITOR.dtd[d]||(k._.isBlockLike?CKEDITOR.dtd.div:CKEDITOR.dtd.span):f;if(!t&&!e["#"]&&d in c){g.onTagOpen(d in b?"li":d=="dl"?"dd":d=="table"?"tr":d=="tr"?"td":"");g.onText(a)}else{i();l();!F&&!t&&(a=a.replace(/[\t\r\n ]{2,}|[\t\r\n]/g," "));a=new CKEDITOR.htmlParser.text(a);if(r(k,a))this.onTagOpen(j,{},0,1);k.add(a)}};g.onCDATA=function(a){k.add(new CKEDITOR.htmlParser.cdata(a))};
g.onComment=function(a){i();l();k.add(new CKEDITOR.htmlParser.comment(a))};g.parse(e);for(i(!CKEDITOR.env.ie&&1);k!=h;)n(k,k.parent,1);m(h);return h};CKEDITOR.htmlParser.fragment.prototype={type:CKEDITOR.NODE_DOCUMENT_FRAGMENT,add:function(a,b){isNaN(b)&&(b=this.children.length);var c=b>0?this.children[b-1]:null;if(c){if(a._.isBlockLike&&c.type==CKEDITOR.NODE_TEXT){c.value=CKEDITOR.tools.rtrim(c.value);if(c.value.length===0){this.children.pop();this.add(a);return}}c.next=a}a.previous=c;a.parent=this;
this.children.splice(b,0,a);if(!this._.hasInlineStarted)this._.hasInlineStarted=a.type==CKEDITOR.NODE_TEXT||a.type==CKEDITOR.NODE_ELEMENT&&!a._.isBlockLike},filter:function(a){a.onRoot(this);this.filterChildren(a)},filterChildren:function(a,b){if(this.childrenFilteredBy!=a.id){if(b&&!this.parent)a.onRoot(this);this.childrenFilteredBy=a.id;for(var c=0;c<this.children.length;c++)this.children[c].filter(a)===false&&c--}},writeHtml:function(a,b){b&&this.filter(b);this.writeChildrenHtml(a)},writeChildrenHtml:function(a,
b,c){if(c&&!this.parent&&b)b.onRoot(this);b&&this.filterChildren(b);for(var b=0,c=this.children,f=c.length;b<f;b++)c[b].writeHtml(a)},forEach:function(a,b,c){!c&&(!b||this.type==b)&&a(this);for(var c=this.children,f,i=0,m=c.length;i<m;i++){f=c[i];f.type==CKEDITOR.NODE_ELEMENT?f.forEach(a,b):(!b||f.type==b)&&a(f)}}}})();
(function(){function a(a,b){for(var c=0;a&&c<b.length;c++)var e=b[c],a=a.replace(e[0],e[1]);return a}function c(a,b,c){typeof b=="function"&&(b=[b]);var e,f;f=a.length;var n=b&&b.length;if(n){for(e=0;e<f&&a[e].pri<=c;e++);for(f=n-1;f>=0;f--)if(n=b[f]){n.pri=c;a.splice(e,0,n)}}}function b(a,b,c){if(b)for(var e in b){var m=a[e];a[e]=f(m,b[e],c);m||a.$length++}}function f(a,b,f){if(b){b.pri=f;if(a){if(a.splice)c(a,b,f);else{a=a.pri>f?[b,a]:[a,b];a.filter=e}return a}return b.filter=b}}function e(a){for(var b=
a.type||a instanceof CKEDITOR.htmlParser.fragment,c=0;c<this.length;c++){if(b)var e=a.type,f=a.name;var n=this[c].apply(window,arguments);if(n===false)return n;if(b){if(n&&(n.name!=f||n.type!=e))return n}else if(typeof n!="string")return n;n!=void 0&&(a=n)}return a}CKEDITOR.htmlParser.filter=CKEDITOR.tools.createClass({$:function(a){this.id=CKEDITOR.tools.getNextNumber();this._={elementNames:[],attributeNames:[],elements:{$length:0},attributes:{$length:0}};a&&this.addRules(a,10)},proto:{addRules:function(a,
e){typeof e!="number"&&(e=10);c(this._.elementNames,a.elementNames,e);c(this._.attributeNames,a.attributeNames,e);b(this._.elements,a.elements,e);b(this._.attributes,a.attributes,e);this._.text=f(this._.text,a.text,e)||this._.text;this._.comment=f(this._.comment,a.comment,e)||this._.comment;this._.root=f(this._.root,a.root,e)||this._.root},applyTo:function(a){a.filter(this)},onElementName:function(b){return a(b,this._.elementNames)},onAttributeName:function(b){return a(b,this._.attributeNames)},onText:function(a){var b=
this._.text;return b?b.filter(a):a},onComment:function(a,b){var c=this._.comment;return c?c.filter(a,b):a},onRoot:function(a){var b=this._.root;return b?b.filter(a):a},onElement:function(a){for(var b=[this._.elements["^"],this._.elements[a.name],this._.elements.$],c,e=0;e<3;e++)if(c=b[e]){c=c.filter(a,this);if(c===false)return null;if(c&&c!=a)return this.onNode(c);if(a.parent&&!a.name)break}return a},onNode:function(a){var b=a.type;return b==CKEDITOR.NODE_ELEMENT?this.onElement(a):b==CKEDITOR.NODE_TEXT?
new CKEDITOR.htmlParser.text(this.onText(a.value)):b==CKEDITOR.NODE_COMMENT?new CKEDITOR.htmlParser.comment(this.onComment(a.value)):null},onAttribute:function(a,b,c){if(b=this._.attributes[b]){a=b.filter(c,a,this);if(a===false)return false;if(typeof a!="undefined")return a}return c}}})})();
(function(){function a(a,c){function g(a){return a||CKEDITOR.env.ie?new CKEDITOR.htmlParser.text(" "):new CKEDITOR.htmlParser.element("br",{"data-cke-bogus":1})}function h(a,c){return function(e){if(e.type!=CKEDITOR.NODE_DOCUMENT_FRAGMENT){var h=[],o=b(e),r,j;if(o)for(k(o,1)&&h.push(o);o;){if(d(o)&&(r=f(o))&&k(r))if((j=f(r))&&!d(j))h.push(r);else{var u=r,l=g(p),y=u.parent.children,m=CKEDITOR.tools.indexOf(y,u);y.splice(m+1,0,l);y=u.next;u.next=l;l.previous=u;l.parent=u.parent;l.next=y;i(r)}o=o.previous}for(o=
0;o<h.length;o++)i(h[o]);if(h=CKEDITOR.env.opera&&!a||(typeof c=="function"?c(e)!==false:c))if(!p&&CKEDITOR.env.ie&&e.type==CKEDITOR.NODE_DOCUMENT_FRAGMENT)h=false;else if(!p&&CKEDITOR.env.ie&&(document.documentMode>7||e.name in CKEDITOR.dtd.tr||e.name in CKEDITOR.dtd.$listItem))h=false;else{h=b(e);h=!h||e.name=="form"&&h.name=="input"}h&&e.add(g(a))}}}function k(a,b){if((!p||!CKEDITOR.env.ie)&&a.type==CKEDITOR.NODE_ELEMENT&&a.name=="br"&&!a.attributes["data-cke-eol"])return true;var c;if(a.type==
CKEDITOR.NODE_TEXT&&(c=a.value.match(F))){if(c.index){j(a,new CKEDITOR.htmlParser.text(a.value.substring(0,c.index)));a.value=c[0]}if(CKEDITOR.env.ie&&p&&(!b||a.parent.name in r))return true;if(!p)if((c=a.previous)&&c.name=="br"||!c||d(c))return true}return false}var o={elements:{}},p=c=="html",r=CKEDITOR.tools.extend({},z),u;for(u in r)"#"in B[u]||delete r[u];for(u in r)o.elements[u]=h(p,a.config.fillEmptyBlocks!==false);o.root=h(p);o.elements.br=function(a){return function(b){if(b.parent.type!=
CKEDITOR.NODE_DOCUMENT_FRAGMENT){var c=b.attributes;if("data-cke-bogus"in c||"data-cke-eol"in c)delete c["data-cke-bogus"];else{for(c=b.next;c&&e(c);)c=c.next;var h=f(b);!c&&d(b.parent)?l(b.parent,g(a)):d(c)&&(h&&!d(h))&&j(c,g(a))}}}}(p);return o}function c(a){return a.enterMode!=CKEDITOR.ENTER_BR&&a.autoParagraph!==false?a.enterMode==CKEDITOR.ENTER_DIV?"div":"p":false}function b(a){for(a=a.children[a.children.length-1];a&&e(a);)a=a.previous;return a}function f(a){for(a=a.previous;a&&e(a);)a=a.previous;
return a}function e(a){return a.type==CKEDITOR.NODE_TEXT&&!CKEDITOR.tools.trim(a.value)||a.type==CKEDITOR.NODE_ELEMENT&&a.attributes["data-cke-bookmark"]}function d(a){return a&&(a.type==CKEDITOR.NODE_ELEMENT&&a.name in z||a.type==CKEDITOR.NODE_DOCUMENT_FRAGMENT)}function j(a,b){var c=a.parent.children,g=CKEDITOR.tools.indexOf(c,a);c.splice(g,0,b);c=a.previous;a.previous=b;b.next=a;b.parent=a.parent;if(c){b.previous=c;c.next=b}}function l(a,b){var c=a.children[a.children.length-1];a.children.push(b);
b.parent=a;if(c){c.next=b;b.previous=c}}function i(a){var b=a.parent.children,c=CKEDITOR.tools.indexOf(b,a),g=a.previous,a=a.next;g&&(g.next=a);a&&(a.previous=g);b.splice(c,1)}function m(a){var b=a.parent;return b?CKEDITOR.tools.indexOf(b.children,a):-1}function n(a){a=a.attributes;a.contenteditable!="false"&&(a["data-cke-editable"]=a.contenteditable?"true":1);a.contenteditable="false"}function r(a){a=a.attributes;switch(a["data-cke-editable"]){case "true":a.contenteditable="true";break;case "1":delete a.contenteditable}}
function p(a){return a.replace(o,function(a,b,c){return"<"+b+c.replace(x,function(a,b){return!/^on/.test(b)&&c.indexOf("data-cke-saved-"+b)==-1?" data-cke-saved-"+a+" data-cke-"+CKEDITOR.rnd+"-"+a:a})+">"})}function g(a,b){return a.replace(b,function(a,b,c){a.indexOf("<textarea")==0&&(a=b+w(c).replace(/</g,"&lt;").replace(/>/g,"&gt;")+"</textarea>");return"<cke:encoded>"+encodeURIComponent(a)+"</cke:encoded>"})}function h(a){return a.replace(C,function(a,b){return decodeURIComponent(b)})}function u(a){return a.replace(/<\!--(?!{cke_protected})[\s\S]+?--\>/g,
function(a){return"<\!--"+D+"{C}"+encodeURIComponent(a).replace(/--/g,"%2D%2D")+"--\>"})}function w(a){return a.replace(/<\!--\{cke_protected\}\{C\}([\s\S]+?)--\>/g,function(a,b){return decodeURIComponent(b)})}function k(a,b){var c=b._.dataStore;return a.replace(/<\!--\{cke_protected\}([\s\S]+?)--\>/g,function(a,b){return decodeURIComponent(b)}).replace(/\{cke_protected_(\d+)\}/g,function(a,b){return c&&c[b]||""})}function t(a,b){for(var c=[],g=b.config.protectedSource,d=b._.dataStore||(b._.dataStore=
{id:1}),e=/<\!--\{cke_temp(comment)?\}(\d*?)--\>/g,g=[/<script[\s\S]*?<\/script>/gi,/<noscript[\s\S]*?<\/noscript>/gi].concat(g),a=a.replace(/<\!--[\s\S]*?--\>/g,function(a){return"<\!--{cke_tempcomment}"+(c.push(a)-1)+"--\>"}),h=0;h<g.length;h++)a=a.replace(g[h],function(a){a=a.replace(e,function(a,b,g){return c[g]});return/cke_temp(comment)?/.test(a)?a:"<\!--{cke_temp}"+(c.push(a)-1)+"--\>"});a=a.replace(e,function(a,b,g){return"<\!--"+D+(b?"{C}":"")+encodeURIComponent(c[g]).replace(/--/g,"%2D%2D")+
"--\>"});return a.replace(/(['"]).*?\1/g,function(a){return a.replace(/<\!--\{cke_protected\}([\s\S]+?)--\>/g,function(a,b){d[d.id]=decodeURIComponent(b);return"{cke_protected_"+d.id++ +"}"})})}CKEDITOR.htmlDataProcessor=function(b){var d,e,f=this;this.editor=b;this.dataFilter=d=new CKEDITOR.htmlParser.filter;this.htmlFilter=e=new CKEDITOR.htmlParser.filter;this.writer=new CKEDITOR.htmlParser.basicWriter;d.addRules(s);d.addRules(a(b,"data"));e.addRules(A);e.addRules(a(b,"html"));b.on("toHtml",function(a){var a=
a.data,d=a.dataValue,d=t(d,b),d=g(d,G),d=p(d),d=g(d,I),d=d.replace(Q,"$1cke:$2"),d=d.replace(E,"<cke:$1$2></cke:$1>"),d=CKEDITOR.env.opera?d:d.replace(/(<pre\b[^>]*>)(\r\n|\n)/g,"$1$2$2"),e=a.context||b.editable().getName(),f;if(CKEDITOR.env.ie&&CKEDITOR.env.version<9&&e=="pre"){e="div";d="<pre>"+d+"</pre>";f=1}e=b.document.createElement(e);e.setHtml("a"+d);d=e.getHtml().substr(1);d=d.replace(RegExp(" data-cke-"+CKEDITOR.rnd+"-","ig")," ");f&&(d=d.replace(/^<pre>|<\/pre>$/gi,""));d=d.replace(L,"$1$2");
d=h(d);d=w(d);a.dataValue=CKEDITOR.htmlParser.fragment.fromHtml(d,a.context,a.fixForBody===false?false:c(b.config))},null,null,5);b.on("toHtml",function(a){a.data.dataValue.filterChildren(f.dataFilter,true)},null,null,10);b.on("toHtml",function(a){var a=a.data,b=a.dataValue,c=new CKEDITOR.htmlParser.basicWriter;b.writeChildrenHtml(c);b=c.getHtml(true);a.dataValue=u(b)},null,null,15);b.on("toDataFormat",function(a){a.data.dataValue=CKEDITOR.htmlParser.fragment.fromHtml(a.data.dataValue,b.editable().getName(),
c(b.config))},null,null,5);b.on("toDataFormat",function(a){a.data.dataValue.filterChildren(f.htmlFilter,true)},null,null,10);b.on("toDataFormat",function(a){var c=a.data.dataValue,g=f.writer;g.reset();c.writeChildrenHtml(g);c=g.getHtml(true);c=w(c);c=k(c,b);a.data.dataValue=c},null,null,15)};CKEDITOR.htmlDataProcessor.prototype={toHtml:function(a,b,c,g){var d=this.editor;!b&&b!==null&&(b=d.editable().getName());return d.fire("toHtml",{dataValue:a,context:b,fixForBody:c,dontFilter:!!g}).dataValue},
toDataFormat:function(a){return this.editor.fire("toDataFormat",{dataValue:a}).dataValue}};var F=/(?:&nbsp;|\xa0)$/,D="{cke_protected}",B=CKEDITOR.dtd,q=["caption","colgroup","col","thead","tfoot","tbody"],z=CKEDITOR.tools.extend({},B.$blockLimit,B.$block),s={elements:{},attributeNames:[[/^on/,"data-cke-pa-on"]]},A={elementNames:[[/^cke:/,""],[/^\?xml:namespace$/,""]],attributeNames:[[/^data-cke-(saved|pa)-/,""],[/^data-cke-.*/,""],["hidefocus",""]],elements:{$:function(a){var b=a.attributes;if(b){if(b["data-cke-temp"])return false;
for(var c=["name","href","src"],g,d=0;d<c.length;d++){g="data-cke-saved-"+c[d];g in b&&delete b[c[d]]}}return a},table:function(a){a.children.slice(0).sort(function(a,b){var c,g;if(a.type==CKEDITOR.NODE_ELEMENT&&b.type==a.type){c=CKEDITOR.tools.indexOf(q,a.name);g=CKEDITOR.tools.indexOf(q,b.name)}if(!(c>-1&&g>-1&&c!=g)){c=m(a);g=m(b)}return c>g?1:-1})},embed:function(a){var b=a.parent;if(b&&b.name=="object"){var c=b.attributes.width,b=b.attributes.height;c&&(a.attributes.width=c);b&&(a.attributes.height=
b)}},param:function(a){a.children=[];a.isEmpty=true;return a},a:function(a){if(!a.children.length&&!a.attributes.name&&!a.attributes["data-cke-saved-name"])return false},span:function(a){a.attributes["class"]=="Apple-style-span"&&delete a.name},html:function(a){delete a.attributes.contenteditable;delete a.attributes["class"]},body:function(a){delete a.attributes.spellcheck;delete a.attributes.contenteditable},style:function(a){var b=a.children[0];b&&b.value&&(b.value=CKEDITOR.tools.trim(b.value));
if(!a.attributes.type)a.attributes.type="text/css"},title:function(a){var b=a.children[0];!b&&l(a,b=new CKEDITOR.htmlParser.text);b.value=a.attributes["data-cke-title"]||""}},attributes:{"class":function(a){return CKEDITOR.tools.ltrim(a.replace(/(?:^|\s+)cke_[^\s]*/g,""))||false}}};if(CKEDITOR.env.ie)A.attributes.style=function(a){return a.replace(/(^|;)([^\:]+)/g,function(a){return a.toLowerCase()})};for(var v in{input:1,textarea:1}){s.elements[v]=n;A.elements[v]=r}var o=/<(a|area|img|input|source)\b([^>]*)>/gi,
x=/\b(on\w+|href|src|name)\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|(?:[^ "'>]+))/gi,I=/(?:<style(?=[ >])[^>]*>[\s\S]*?<\/style>)|(?:<(:?link|meta|base)[^>]*>)/gi,G=/(<textarea(?=[ >])[^>]*>)([\s\S]*?)(?:<\/textarea>)/gi,C=/<cke:encoded>([^<]*)<\/cke:encoded>/gi,Q=/(<\/?)((?:object|embed|param|html|body|head|title)[^>]*>)/gi,L=/(<\/?)cke:((?:html|body|head|title)[^>]*>)/gi,E=/<cke:(param|embed)([^>]*?)\/?>(?!\s*<\/cke:\1)/gi})();"use strict";
CKEDITOR.htmlParser.element=function(a,c){this.name=a;this.attributes=c||{};this.children=[];var b=a||"",f=b.match(/^cke:(.*)/);f&&(b=f[1]);b=!(!CKEDITOR.dtd.$nonBodyContent[b]&&!CKEDITOR.dtd.$block[b]&&!CKEDITOR.dtd.$listItem[b]&&!CKEDITOR.dtd.$tableContent[b]&&!(CKEDITOR.dtd.$nonEditable[b]||b=="br"));this.isEmpty=!!CKEDITOR.dtd.$empty[a];this.isUnknown=!CKEDITOR.dtd[a];this._={isBlockLike:b,hasInlineStarted:this.isEmpty||!b}};
CKEDITOR.htmlParser.cssStyle=function(a){var c={};((a instanceof CKEDITOR.htmlParser.element?a.attributes.style:a)||"").replace(/&quot;/g,'"').replace(/\s*([^ :;]+)\s*:\s*([^;]+)\s*(?=;|$)/g,function(a,f,e){f=="font-family"&&(e=e.replace(/["']/g,""));c[f.toLowerCase()]=e});return{rules:c,populate:function(a){var c=this.toString();if(c)a instanceof CKEDITOR.dom.element?a.setAttribute("style",c):a instanceof CKEDITOR.htmlParser.element?a.attributes.style=c:a.style=c},toString:function(){var a=[],f;
for(f in c)c[f]&&a.push(f,":",c[f],";");return a.join("")}}};
(function(){var a=function(a,c){a=a[0];c=c[0];return a<c?-1:a>c?1:0},c=CKEDITOR.htmlParser.fragment.prototype;CKEDITOR.htmlParser.element.prototype=CKEDITOR.tools.extend(new CKEDITOR.htmlParser.node,{type:CKEDITOR.NODE_ELEMENT,add:c.add,clone:function(){return new CKEDITOR.htmlParser.element(this.name,this.attributes)},filter:function(a){var c=this,e,d;if(!c.parent)a.onRoot(c);for(;;){e=c.name;if(!(d=a.onElementName(e))){this.remove();return false}c.name=d;if(!(c=a.onElement(c))){this.remove();return false}if(c!==
this){this.replaceWith(c);return false}if(c.name==e)break;if(c.type!=CKEDITOR.NODE_ELEMENT){this.replaceWith(c);return false}if(!c.name){this.replaceWithChildren();return false}}e=c.attributes;var j,l;for(j in e){l=j;for(d=e[j];;)if(l=a.onAttributeName(j))if(l!=j){delete e[j];j=l}else break;else{delete e[j];break}l&&((d=a.onAttribute(c,l,d))===false?delete e[l]:e[l]=d)}c.isEmpty||this.filterChildren(a);return true},filterChildren:c.filterChildren,writeHtml:function(b,c){c&&this.filter(c);var e=this.name,
d=[],j=this.attributes,l,i;b.openTag(e,j);for(l in j)d.push([l,j[l]]);b.sortAttributes&&d.sort(a);l=0;for(i=d.length;l<i;l++){j=d[l];b.attribute(j[0],j[1])}b.openTagClose(e,this.isEmpty);this.writeChildrenHtml(b);this.isEmpty||b.closeTag(e)},writeChildrenHtml:c.writeChildrenHtml,replaceWithChildren:function(){for(var a=this.children,c=a.length;c;)a[--c].insertAfter(this);this.remove()},forEach:c.forEach})})();
(function(){var a={};CKEDITOR.template=function(c){if(a[c])this.output=a[c];else{var b=c.replace(/'/g,"\\'").replace(/{([^}]+)}/g,function(a,b){return"',data['"+b+"']==undefined?'{"+b+"}':data['"+b+"'],'"});this.output=a[c]=Function("data","buffer","return buffer?buffer.push('"+b+"'):['"+b+"'].join('');")}}})();delete CKEDITOR.loadFullCore;CKEDITOR.instances={};CKEDITOR.document=new CKEDITOR.dom.document(document);
CKEDITOR.add=function(a){CKEDITOR.instances[a.name]=a;a.on("focus",function(){if(CKEDITOR.currentInstance!=a){CKEDITOR.currentInstance=a;CKEDITOR.fire("currentInstance")}});a.on("blur",function(){if(CKEDITOR.currentInstance==a){CKEDITOR.currentInstance=null;CKEDITOR.fire("currentInstance")}});CKEDITOR.fire("instance",null,a)};CKEDITOR.remove=function(a){delete CKEDITOR.instances[a.name]};
(function(){var a={};CKEDITOR.addTemplate=function(c,b){var f=a[c];if(f)return f;f={name:c,source:b};CKEDITOR.fire("template",f);return a[c]=new CKEDITOR.template(f.source)};CKEDITOR.getTemplate=function(c){return a[c]}})();(function(){var a=[];CKEDITOR.addCss=function(c){a.push(c)};CKEDITOR.getCss=function(){return a.join("\n")}})();CKEDITOR.on("instanceDestroyed",function(){CKEDITOR.tools.isEmpty(this.instances)&&CKEDITOR.fire("reset")});CKEDITOR.TRISTATE_ON=1;CKEDITOR.TRISTATE_OFF=2;
CKEDITOR.TRISTATE_DISABLED=0;
(function(){CKEDITOR.inline=function(a,c){if(!CKEDITOR.env.isCompatible)return null;a=CKEDITOR.dom.element.get(a);if(a.getEditor())throw'The editor instance "'+a.getEditor().name+'" is already attached to the provided element.';var b=new CKEDITOR.editor(c,a,CKEDITOR.ELEMENT_MODE_INLINE);b.setData(a.getHtml(),null,true);b.on("loaded",function(){b.fire("uiReady");b.editable(a);b.container=a;b.setData(b.getData(1));b.resetDirty();b.fire("contentDom");b.mode="wysiwyg";b.fire("mode");b.status="ready";
b.fireOnce("instanceReady");CKEDITOR.fire("instanceReady",null,b)},null,null,1E4);b.on("destroy",function(){b.element.clearCustomData();delete b.element});return b};CKEDITOR.inlineAll=function(){var a,c,b;for(b in CKEDITOR.dtd.$editable)for(var f=CKEDITOR.document.getElementsByTag(b),e=0,d=f.count();e<d;e++){a=f.getItem(e);if(a.getAttribute("contenteditable")=="true"){c={element:a,config:{}};CKEDITOR.fire("inline",c)!==false&&CKEDITOR.inline(a,c.config)}}};CKEDITOR.domReady(function(){!CKEDITOR.disableAutoInline&&
CKEDITOR.inlineAll()})})();CKEDITOR.replaceClass="ckeditor";
(function(){function a(a,e,l,i){if(!CKEDITOR.env.isCompatible)return null;a=CKEDITOR.dom.element.get(a);if(a.getEditor())throw'The editor instance "'+a.getEditor().name+'" is already attached to the provided element.';var m=new CKEDITOR.editor(e,a,i);i==CKEDITOR.ELEMENT_MODE_REPLACE&&a.setStyle("visibility","hidden");l&&m.setData(l,null,true);m.on("loaded",function(){b(m);i==CKEDITOR.ELEMENT_MODE_REPLACE&&m.config.autoUpdateElement&&f(m);m.setMode(m.config.startupMode,function(){m.resetDirty();m.status=
"ready";m.fireOnce("instanceReady");CKEDITOR.fire("instanceReady",null,m)})});m.on("destroy",c);return m}function c(){var a=this.container,b=this.element;if(a){a.clearCustomData();a.remove()}if(b){b.clearCustomData();this.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE&&b.show();delete this.element}}function b(a){var b=a.name,c=a.element,f=a.elementMode,m=a.fire("uiSpace",{space:"top",html:""}).html,n=a.fire("uiSpace",{space:"bottom",html:""}).html;e||(e=CKEDITOR.addTemplate("maincontainer",'<{outerEl} id="cke_{name}" class="{id} cke cke_reset cke_chrome cke_editor_{name} cke_{langDir} '+
CKEDITOR.env.cssClass+'"  dir="{langDir}" lang="{langCode}" role="application" aria-labelledby="cke_{name}_arialbl"><span id="cke_{name}_arialbl" class="cke_voice_label">{voiceLabel}</span><{outerEl} class="cke_inner cke_reset" role="presentation">{topHtml}<{outerEl} id="{contentId}" class="cke_contents cke_reset" role="presentation"></{outerEl}>{bottomHtml}</{outerEl}></{outerEl}>'));b=CKEDITOR.dom.element.createFromHtml(e.output({id:a.id,name:b,langDir:a.lang.dir,langCode:a.langCode,voiceLabel:a.lang.editor,
topHtml:m?'<span id="'+a.ui.spaceId("top")+'" class="cke_top cke_reset_all" role="presentation" style="height:auto">'+m+"</span>":"",contentId:a.ui.spaceId("contents"),bottomHtml:n?'<span id="'+a.ui.spaceId("bottom")+'" class="cke_bottom cke_reset_all" role="presentation">'+n+"</span>":"",outerEl:CKEDITOR.env.ie?"span":"div"}));if(f==CKEDITOR.ELEMENT_MODE_REPLACE){c.hide();b.insertAfter(c)}else c.append(b);a.container=b;m&&a.ui.space("top").unselectable();n&&a.ui.space("bottom").unselectable();c=
a.config.width;f=a.config.height;c&&b.setStyle("width",CKEDITOR.tools.cssLength(c));f&&a.ui.space("contents").setStyle("height",CKEDITOR.tools.cssLength(f));b.disableContextMenu();CKEDITOR.env.webkit&&b.on("focus",function(){a.focus()});a.fireOnce("uiReady")}function f(a){var b=a.element;if(a.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE&&b.is("textarea")){var c=b.$.form&&new CKEDITOR.dom.element(b.$.form);if(c){var e=function(){a.updateElement()};c.on("submit",e);if(!c.$.submit.nodeName&&!c.$.submit.length)c.$.submit=
CKEDITOR.tools.override(c.$.submit,function(b){return function(){a.updateElement();b.apply?b.apply(this,arguments):b()}});a.on("destroy",function(){c.removeListener("submit",e)})}}}CKEDITOR.replace=function(b,c){return a(b,c,null,CKEDITOR.ELEMENT_MODE_REPLACE)};CKEDITOR.appendTo=function(b,c,e){return a(b,c,e,CKEDITOR.ELEMENT_MODE_APPENDTO)};CKEDITOR.replaceAll=function(){for(var a=document.getElementsByTagName("textarea"),b=0;b<a.length;b++){var c=null,e=a[b];if(e.name||e.id){if(typeof arguments[0]==
"string"){if(!RegExp("(?:^|\\s)"+arguments[0]+"(?:$|\\s)").test(e.className))continue}else if(typeof arguments[0]=="function"){c={};if(arguments[0](e,c)===false)continue}this.replace(e,c)}}};CKEDITOR.editor.prototype.addMode=function(a,b){(this._.modes||(this._.modes={}))[a]=b};CKEDITOR.editor.prototype.setMode=function(a,b){var c=this,e=this._.modes;if(!(a==c.mode||!e||!e[a])){c.fire("beforeSetMode",a);if(c.mode){var f=c.checkDirty();c._.previousMode=c.mode;c.fire("beforeModeUnload");c.editable(0);
c.ui.space("contents").setHtml("");c.mode=""}this._.modes[a](function(){c.mode=a;f!==void 0&&!f&&c.resetDirty();setTimeout(function(){c.fire("mode");b&&b.call(c)},0)})}};CKEDITOR.editor.prototype.resize=function(a,b,c,e){var f=this.container,n=this.ui.space("contents"),r=CKEDITOR.env.webkit&&this.document&&this.document.getWindow().$.frameElement,e=e?f.getChild(1):f;e.setSize("width",a,true);r&&(r.style.width="1%");n.setStyle("height",Math.max(b-(c?0:(e.$.offsetHeight||0)-(n.$.clientHeight||0)),0)+
"px");r&&(r.style.width="100%");this.fire("resize")};CKEDITOR.editor.prototype.getResizable=function(a){return a?this.ui.space("contents"):this.container};var e;CKEDITOR.domReady(function(){CKEDITOR.replaceClass&&CKEDITOR.replaceAll(CKEDITOR.replaceClass)})})();CKEDITOR.config.startupMode="wysiwyg";
(function(){function a(a){var c=a.editor,g=c.editable(),d=a.data.path,e=d.blockLimit,f=a.data.selection.getRanges()[0],k=c.config.enterMode;if(CKEDITOR.env.gecko){var i=d.block||d.blockLimit||d.root,j=i&&i.getLast(b);i&&(i.isBlockBoundary()&&(!j||!(j.type==CKEDITOR.NODE_ELEMENT&&j.isBlockBoundary()))&&!i.is("pre")&&!i.getBogus())&&i.appendBogus()}if(c.config.autoParagraph!==false&&k!=CKEDITOR.ENTER_BR&&f.collapsed&&g.equals(e)&&!d.block){g=f.clone();g.enlarge(CKEDITOR.ENLARGE_BLOCK_CONTENTS);d=new CKEDITOR.dom.walker(g);
d.guard=function(a){return!b(a)||a.type==CKEDITOR.NODE_COMMENT||a.isReadOnly()};if(!d.checkForward()||g.checkStartOfBlock()&&g.checkEndOfBlock()){c=f.fixBlock(true,c.config.enterMode==CKEDITOR.ENTER_DIV?"div":"p");if(CKEDITOR.env.ie)(c=c.getFirst(b))&&(c.type==CKEDITOR.NODE_TEXT&&CKEDITOR.tools.trim(c.getText()).match(/^(?:&nbsp;|\xa0)$/))&&c.remove();f.select();a.cancel()}}}function c(a){var b=a.data.getTarget();if(b.is("input")){b=b.getAttribute("type");(b=="submit"||b=="reset")&&a.data.preventDefault()}}
function b(a){return i(a)&&m(a)}function f(a,b){return function(c){var d=CKEDITOR.dom.element.get(c.data.$.toElement||c.data.$.fromElement||c.data.$.relatedTarget);(!d||!b.equals(d)&&!b.contains(d))&&a.call(this,c)}}function e(a){var c,g=a.getRanges()[0],a=a.root,d=g.startPath(),e={table:1,ul:1,ol:1,dl:1},f=CKEDITOR.dom.walker.bogus();if(d.contains(e)){var k=g.clone();k.collapse(1);k.setStartAt(a,CKEDITOR.POSITION_AFTER_START);k=new CKEDITOR.dom.walker(k);d=function(a,g){return function(a,d){d&&(a.type==
CKEDITOR.NODE_ELEMENT&&a.is(e))&&(c=a);if(b(a)&&!d&&(!g||!f(a)))return false}};k.guard=d(k);k.checkBackward();if(c){k=g.clone();k.collapse();k.setEndAt(a,CKEDITOR.POSITION_BEFORE_END);k=new CKEDITOR.dom.walker(k);k.guard=d(k,1);c=0;k.checkForward();return c}}return null}function d(a){a.editor.focus();a.editor.fire("saveSnapshot")}function j(a,b){var c=a.editor;!b&&c.getSelection().scrollIntoView();setTimeout(function(){c.fire("saveSnapshot")},0)}CKEDITOR.editable=CKEDITOR.tools.createClass({base:CKEDITOR.dom.element,
$:function(a,b){this.base(b.$||b);this.editor=a;this.hasFocus=false;this.setup()},proto:{focus:function(){this.$[CKEDITOR.env.ie&&this.getDocument().equals(CKEDITOR.document)?"setActive":"focus"]();CKEDITOR.env.safari&&!this.isInline()&&(CKEDITOR.document.getActive().equals(this.getWindow().getFrame())||this.getWindow().focus())},on:function(a,b){var c=Array.prototype.slice.call(arguments,0);if(CKEDITOR.env.ie&&/^focus|blur$/.exec(a)){a=a=="focus"?"focusin":"focusout";b=f(b,this);c[0]=a;c[1]=b}return CKEDITOR.dom.element.prototype.on.apply(this,
c)},attachListener:function(a,b,c,d,e,f){!this._.listeners&&(this._.listeners=[]);var k=Array.prototype.slice.call(arguments,1);this._.listeners.push(a.on.apply(a,k))},clearListeners:function(){var a=this._.listeners;try{for(;a.length;)a.pop().removeListener()}catch(b){}},restoreAttrs:function(){var a=this._.attrChanges,b,c;for(c in a)if(a.hasOwnProperty(c)){b=a[c];b!==null?this.setAttribute(c,b):this.removeAttribute(c)}},attachClass:function(a){var b=this.getCustomData("classes");if(!this.hasClass(a)){!b&&
(b=[]);b.push(a);this.setCustomData("classes",b);this.addClass(a)}},changeAttr:function(a,b){var c=this.getAttribute(a);if(b!==c){!this._.attrChanges&&(this._.attrChanges={});a in this._.attrChanges||(this._.attrChanges[a]=c);this.setAttribute(a,b)}},insertHtml:function(a,b){d(this);n(this,b||"html",a)},insertText:function(a){d(this);var b=this.editor,c=b.getSelection().getStartElement().hasAscendant("pre",true)?CKEDITOR.ENTER_BR:b.config.enterMode,b=c==CKEDITOR.ENTER_BR,e=CKEDITOR.tools,a=e.htmlEncode(a.replace(/\r\n/g,
"\n")),a=a.replace(/\t/g,"&nbsp;&nbsp; &nbsp;"),c=c==CKEDITOR.ENTER_P?"p":"div";if(!b){var f=/\n{2}/g;if(f.test(a))var i="<"+c+">",k="</"+c+">",a=i+a.replace(f,function(){return k+i})+k}a=a.replace(/\n/g,"<br>");b||(a=a.replace(RegExp("<br>(?=</"+c+">)"),function(a){return e.repeat(a,2)}));a=a.replace(/^ | $/g,"&nbsp;");a=a.replace(/(>|\s) /g,function(a,b){return b+"&nbsp;"}).replace(/ (?=<)/g,"&nbsp;");n(this,"text",a)},insertElement:function(a){d(this);for(var c=this.editor,g=c.config.enterMode,
e=c.getSelection(),f=e.getRanges(),i=a.getName(),k=CKEDITOR.dtd.$block[i],m,n,l,B=f.length-1;B>=0;B--){m=f[B];if(!m.checkReadOnly()){m.deleteContents(1);n=!B&&a||a.clone(1);var q,z;if(k)for(;(q=m.getCommonAncestor(0,1))&&(z=CKEDITOR.dtd[q.getName()])&&(!z||!z[i]);)if(q.getName()in CKEDITOR.dtd.span)m.splitElement(q);else if(m.checkStartOfBlock()&&m.checkEndOfBlock()){m.setStartBefore(q);m.collapse(true);q.remove()}else m.splitBlock(g==CKEDITOR.ENTER_DIV?"div":"p",c.editable());m.insertNode(n);l||
(l=n)}}if(l){m.moveToPosition(l,CKEDITOR.POSITION_AFTER_END);if(k)if((a=l.getNext(b))&&a.type==CKEDITOR.NODE_ELEMENT&&a.is(CKEDITOR.dtd.$block))a.getDtd()["#"]?m.moveToElementEditStart(a):m.moveToElementEditEnd(l);else if(!a&&g!=CKEDITOR.ENTER_BR){a=m.fixBlock(true,g==CKEDITOR.ENTER_DIV?"div":"p");m.moveToElementEditStart(a)}}e.selectRanges([m]);j(this,CKEDITOR.env.opera)},setData:function(a,b){!b&&this.editor.dataProcessor&&(a=this.editor.dataProcessor.toHtml(a));this.setHtml(a);this.editor.fire("dataReady")},
getData:function(a){var b=this.getHtml();!a&&this.editor.dataProcessor&&(b=this.editor.dataProcessor.toDataFormat(b));return b},setReadOnly:function(a){this.setAttribute("contenteditable",!a)},detach:function(){this.removeClass("cke_editable");var a=this.editor;this._.detach();delete a.document;delete a.window},isInline:function(){return this.getDocument().equals(CKEDITOR.document)},setup:function(){var a=this.editor;this.attachListener(a,"beforeGetData",function(){var b=this.getData();this.is("textarea")||
a.config.ignoreEmptyParagraph!==false&&(b=b.replace(l,function(a,b){return b}));a.setData(b,null,1)},this);this.attachListener(a,"getSnapshot",function(a){a.data=this.getData(1)},this);this.attachListener(a,"afterSetData",function(){this.setData(a.getData(1))},this);this.attachListener(a,"loadSnapshot",function(a){this.setData(a.data,1)},this);this.attachListener(a,"beforeFocus",function(){var b=a.getSelection();(b=b&&b.getNative())&&b.type=="Control"||this.focus()},this);this.attachListener(a,"insertHtml",
function(a){this.insertHtml(a.data.dataValue,a.data.mode)},this);this.attachListener(a,"insertElement",function(a){this.insertElement(a.data)},this);this.attachListener(a,"insertText",function(a){this.insertText(a.data)},this);this.setReadOnly(a.readOnly);this.attachClass("cke_editable");this.attachClass(a.elementMode==CKEDITOR.ELEMENT_MODE_INLINE?"cke_editable_inline":a.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE||a.elementMode==CKEDITOR.ELEMENT_MODE_APPENDTO?"cke_editable_themed":"");this.attachClass("cke_contents_"+
a.config.contentsLangDirection);a.keystrokeHandler.blockedKeystrokes[8]=a.readOnly;a.keystrokeHandler.attach(this);this.on("blur",function(a){CKEDITOR.env.opera&&CKEDITOR.document.getActive().equals(this.isInline()?this:this.getWindow().getFrame())?a.cancel():this.hasFocus=false},null,null,-1);this.on("focus",function(){this.hasFocus=true},null,null,-1);a.focusManager.add(this);if(this.equals(CKEDITOR.document.getActive())){this.hasFocus=true;a.once("contentDom",function(){a.focusManager.focus()})}this.isInline()&&
this.changeAttr("tabindex",a.tabIndex);if(!this.is("textarea")){a.document=this.getDocument();a.window=this.getWindow();var b=a.document;this.changeAttr("spellcheck",!a.config.disableNativeSpellChecker);var g=a.config.contentsLangDirection;this.getDirection(1)!=g&&this.changeAttr("dir",g);var d=CKEDITOR.getCss();if(d){g=b.getHead();if(!g.getCustomData("stylesheet")){d=b.appendStyleText(d);d=new CKEDITOR.dom.element(d.ownerNode||d.owningElement);g.setCustomData("stylesheet",d);d.data("cke-temp",1)}}g=
b.getCustomData("stylesheet_ref")||0;b.setCustomData("stylesheet_ref",g+1);this.setCustomData("cke_includeReadonly",!a.config.disableReadonlyStyling);this.attachListener(this,"click",function(a){var a=a.data,b=a.getTarget();b.is("a")&&(a.$.button!=2&&b.isReadOnly())&&a.preventDefault()});this.attachListener(a,"key",function(b){if(a.readOnly)return true;var c=b.data.keyCode,g;if(c in{8:1,46:1}){var d=a.getSelection(),b=d.getRanges()[0],h=b.startPath(),f,p,j,c=c==8;if(d=e(d)){a.fire("saveSnapshot");
b.moveToPosition(d,CKEDITOR.POSITION_BEFORE_START);d.remove();b.select();a.fire("saveSnapshot");g=1}else if(b.collapsed)if((f=h.block)&&b[c?"checkStartOfBlock":"checkEndOfBlock"]()&&(j=f[c?"getPrevious":"getNext"](i))&&j.is("table")){a.fire("saveSnapshot");b[c?"checkEndOfBlock":"checkStartOfBlock"]()&&f.remove();b["moveToElementEdit"+(c?"End":"Start")](j);b.select();a.fire("saveSnapshot");g=1}else if(h.blockLimit&&h.blockLimit.is("td")&&(p=h.blockLimit.getAscendant("table"))&&b.checkBoundaryOfElement(p,
c?CKEDITOR.START:CKEDITOR.END)&&(j=p[c?"getPrevious":"getNext"](i))){a.fire("saveSnapshot");b["moveToElementEdit"+(c?"End":"Start")](j);b.checkStartOfBlock()&&b.checkEndOfBlock()?j.remove():b.select();a.fire("saveSnapshot");g=1}else if((p=h.contains(["td","th","caption"]))&&b.checkBoundaryOfElement(p,c?CKEDITOR.START:CKEDITOR.END))g=1}return!g});CKEDITOR.env.ie&&this.attachListener(this,"click",c);!CKEDITOR.env.ie&&!CKEDITOR.env.opera&&this.attachListener(this,"mousedown",function(b){var c=b.data.getTarget();
if(c.is("img","hr","input","textarea","select")){a.getSelection().selectElement(c);c.is("input","textarea","select")&&b.data.preventDefault()}});CKEDITOR.env.gecko&&this.attachListener(this,"mouseup",function(b){if(b.data.$.button==2){b=b.data.getTarget();if(!b.getOuterHtml().replace(l,"")){var c=a.createRange();c.moveToElementEditStart(b);c.select(true)}}});if(CKEDITOR.env.webkit){this.attachListener(this,"click",function(a){a.data.getTarget().is("input","select")&&a.data.preventDefault()});this.attachListener(this,
"mouseup",function(a){a.data.getTarget().is("input","textarea")&&a.data.preventDefault()})}}}},_:{detach:function(){this.editor.setData(this.editor.getData(),0,1);this.clearListeners();this.restoreAttrs();var a;if(a=this.removeCustomData("classes"))for(;a.length;)this.removeClass(a.pop());a=this.getDocument();var b=a.getHead();if(b.getCustomData("stylesheet")){var c=a.getCustomData("stylesheet_ref");if(--c)a.setCustomData("stylesheet_ref",c);else{a.removeCustomData("stylesheet_ref");b.removeCustomData("stylesheet").remove()}}delete this.editor}}});
CKEDITOR.editor.prototype.editable=function(a){var b=this._.editable;if(b&&a)return 0;if(arguments.length)b=this._.editable=a?a instanceof CKEDITOR.editable?a:new CKEDITOR.editable(this,a):(b&&b.detach(),null);return b};var l=/(^|<body\b[^>]*>)\s*<(p|div|address|h\d|center|pre)[^>]*>\s*(?:<br[^>]*>|&nbsp;|\u00A0|&#160;)?\s*(:?<\/\2>)?\s*(?=$|<\/body>)/gi,i=CKEDITOR.dom.walker.whitespaces(true),m=CKEDITOR.dom.walker.bookmark(false,true);CKEDITOR.on("instanceLoaded",function(b){var c=b.editor;c.on("insertElement",
function(a){a=a.data;if(a.type==CKEDITOR.NODE_ELEMENT&&(a.is("input")||a.is("textarea"))){a.getAttribute("contentEditable")!="false"&&a.data("cke-editable",a.hasAttribute("contenteditable")?"true":"1");a.setAttribute("contentEditable",false)}});c.on("selectionChange",function(b){if(!c.readOnly){var d=c.getSelection();if(d&&!d.isLocked){d=c.checkDirty();c.fire("lockSnapshot");a(b);c.fire("unlockSnapshot");!d&&c.resetDirty()}}})});CKEDITOR.on("instanceCreated",function(a){var b=a.editor;b.on("mode",
function(){var a=b.editable();if(a&&a.isInline()){var c=this.lang.editor+", "+this.name;a.changeAttr("role","textbox");a.changeAttr("aria-label",c);a.changeAttr("title",c);if(c=this.ui.space(this.elementMode==CKEDITOR.ELEMENT_MODE_INLINE?"top":"contents")){var d=CKEDITOR.tools.getNextId(),e=CKEDITOR.dom.element.createFromHtml('<span id="'+d+'" class="cke_voice_label">'+this.lang.common.editorHelp+"</span>");c.append(e);a.changeAttr("aria-describedby",d)}}})});CKEDITOR.addCss(".cke_editable{cursor:text}.cke_editable img,.cke_editable input,.cke_editable textarea{cursor:default}");
var n=function(){function a(b){return b.type==CKEDITOR.NODE_ELEMENT}function c(b,d){var g,e,h,f,o=[],i=d.range.startContainer;g=d.range.startPath();for(var i=k[i.getName()],j=0,m=b.getChildren(),n=m.count(),l=-1,u=-1,t=0,w=g.contains(k.$list);j<n;++j){g=m.getItem(j);if(a(g)){h=g.getName();if(w&&h in CKEDITOR.dtd.$list)o=o.concat(c(g,d));else{f=!!i[h];if(h=="br"&&g.data("cke-eol")&&(!j||j==n-1)){t=(e=j?o[j-1].node:m.getItem(j+1))&&(!a(e)||!e.is("br"));e=e&&a(e)&&k.$block[e.getName()]}l==-1&&!f&&(l=
j);f||(u=j);o.push({isElement:1,isLineBreak:t,isBlock:g.isBlockBoundary(),hasBlockSibling:e,node:g,name:h,allowed:f});e=t=0}}else o.push({isElement:0,node:g,allowed:1})}if(l>-1)o[l].firstNotAllowed=1;if(u>-1)o[u].lastNotAllowed=1;return o}function d(b,c){var e=[],h=b.getChildren(),f=h.count(),i,o=0,j=k[c],p=!b.is(k.$inline)||b.is("br");for(p&&e.push(" ");o<f;o++){i=h.getItem(o);a(i)&&!i.is(j)?e=e.concat(d(i,c)):e.push(i)}p&&e.push(" ");return e}function e(b){return b&&a(b)&&(b.is(k.$removeEmpty)||
b.is("a")&&!b.isBlockBoundary())}function f(b,c,d,g){var e=b.clone(),h,k;e.setEndAt(c,CKEDITOR.POSITION_BEFORE_END);if((h=(new CKEDITOR.dom.walker(e)).next())&&a(h)&&m[h.getName()]&&(k=h.getPrevious())&&a(k)&&!k.getParent().equals(b.startContainer)&&d.contains(k)&&g.contains(h)&&h.isIdentical(k)){h.moveChildren(k);h.remove();f(b,c,d,g)}}function i(b,c){function d(b,c){if(c.isBlock&&c.isElement&&!c.node.is("br")&&a(b)&&b.is("br")){b.remove();return 1}}var g=c.endContainer.getChild(c.endOffset),e=c.endContainer.getChild(c.endOffset-
1);g&&d(g,b[b.length-1]);if(e&&d(e,b[0])){c.setEnd(c.endContainer,c.endOffset-1);c.collapse()}}var k=CKEDITOR.dtd,m={p:1,div:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,ul:1,ol:1,li:1,pre:1,dl:1,blockquote:1},l={p:1,div:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1},n=CKEDITOR.tools.extend({},k.$inline);delete n.br;return function(m,q,t){var s=m.editor;m.getDocument();var A=s.getSelection().getRanges()[0],v=false;if(q=="unfiltered_html"){q="html";v=true}if(!A.checkReadOnly()){var o=(new CKEDITOR.dom.elementPath(A.startContainer,
A.root)).blockLimit||A.root,q={type:q,dontFilter:v,editable:m,editor:s,range:A,blockLimit:o,mergeCandidates:[],zombies:[]},s=q.range,v=q.mergeCandidates,x,I,G,C;if(q.type=="text"&&s.shrink(CKEDITOR.SHRINK_ELEMENT,true,false)){x=CKEDITOR.dom.element.createFromHtml("<span>&nbsp;</span>",s.document);s.insertNode(x);s.setStartAfter(x)}I=new CKEDITOR.dom.elementPath(s.startContainer);q.endPath=G=new CKEDITOR.dom.elementPath(s.endContainer);if(!s.collapsed){var o=G.block||G.blockLimit,Q=s.getCommonAncestor();
o&&(!o.equals(Q)&&!o.contains(Q)&&s.checkEndOfBlock())&&q.zombies.push(o);s.deleteContents()}for(;(C=a(s.startContainer)&&s.startContainer.getChild(s.startOffset-1))&&a(C)&&C.isBlockBoundary()&&I.contains(C);)s.moveToPosition(C,CKEDITOR.POSITION_BEFORE_END);f(s,q.blockLimit,I,G);if(x){s.setEndBefore(x);s.collapse();x.remove()}x=s.startPath();if(o=x.contains(e,false,1)){s.splitElement(o);q.inlineStylesRoot=o;q.inlineStylesPeak=x.lastElement}x=s.createBookmark();(o=x.startNode.getPrevious(b))&&a(o)&&
e(o)&&v.push(o);(o=x.startNode.getNext(b))&&a(o)&&e(o)&&v.push(o);for(o=x.startNode;(o=o.getParent())&&e(o);)v.push(o);s.moveToBookmark(x);if(t){C=t;t=q.range;if(q.type=="text"&&q.inlineStylesRoot){x=C;C=q.inlineStylesPeak;s=C.getDocument().createText("{cke-peak}");for(v=q.inlineStylesRoot.getParent();!C.equals(v);){s=s.appendTo(C.clone());C=C.getParent()}C=s.getOuterHtml().replace("{cke-peak}",x)}x=q.blockLimit.getName();if(/^\s+|\s+$/.test(C)&&"span"in CKEDITOR.dtd[x]){var L='<span data-cke-marker="1">&nbsp;</span>';
C=L+C+L}C=q.editor.dataProcessor.toHtml(C,null,false,q.dontFilter);x=t.document.createElement("body");x.setHtml(C);if(L){x.getFirst().remove();x.getLast().remove()}if((L=t.startPath().block)&&!(L.getChildCount()==1&&L.getBogus()))a:{var E;if(x.getChildCount()==1&&a(E=x.getFirst())&&E.is(l)){L=E.getElementsByTag("*");t=0;for(s=L.count();t<s;t++){C=L.getItem(t);if(!C.is(n))break a}E.moveChildren(E.getParent(1));E.remove()}}q.dataWrapper=x;E=q.range;var L=E.document,y,t=q.blockLimit;x=0;var J;C=[];var H,
N,v=s=0,K,O;I=E.startContainer;var o=q.endPath.elements[0],P;G=o.getPosition(I);Q=!!o.getCommonAncestor(I)&&G!=CKEDITOR.POSITION_IDENTICAL&&!(G&CKEDITOR.POSITION_CONTAINS+CKEDITOR.POSITION_IS_CONTAINED);I=c(q.dataWrapper,q);for(i(I,E);x<I.length;x++){G=I[x];if(y=G.isLineBreak){y=E;K=t;var M=void 0,R=void 0;if(G.hasBlockSibling)y=1;else{M=y.startContainer.getAscendant(k.$block,1);if(!M||!M.is({div:1,p:1}))y=0;else{R=M.getPosition(K);if(R==CKEDITOR.POSITION_IDENTICAL||R==CKEDITOR.POSITION_CONTAINS)y=
0;else{K=y.splitElement(M);y.moveToPosition(K,CKEDITOR.POSITION_AFTER_START);y=1}}}}if(y)v=x>0;else{y=E.startPath();if(!G.isBlock&&(N=q.editor.config.enterMode!=CKEDITOR.ENTER_BR&&q.editor.config.autoParagraph!==false?q.editor.config.enterMode==CKEDITOR.ENTER_DIV?"div":"p":false)&&!y.block&&y.blockLimit&&y.blockLimit.equals(E.root)){N=L.createElement(N);!CKEDITOR.env.ie&&N.appendBogus();E.insertNode(N);!CKEDITOR.env.ie&&(J=N.getBogus())&&J.remove();E.moveToPosition(N,CKEDITOR.POSITION_BEFORE_END)}if((y=
E.startPath().block)&&!y.equals(H)){if(J=y.getBogus()){J.remove();C.push(y)}H=y}G.firstNotAllowed&&(s=1);if(s&&G.isElement){y=E.startContainer;for(K=null;y&&!k[y.getName()][G.name];){if(y.equals(t)){y=null;break}K=y;y=y.getParent()}if(y){if(K){O=E.splitElement(K);q.zombies.push(O);q.zombies.push(K)}}else{K=t.getName();P=!x;y=x==I.length-1;K=d(G.node,K);for(var M=[],R=K.length,T=0,U=void 0,V=0,W=-1;T<R;T++){U=K[T];if(U==" "){if(!V&&(!P||T)){M.push(new CKEDITOR.dom.text(" "));W=M.length}V=1}else{M.push(U);
V=0}}y&&W==M.length&&M.pop();P=M}}if(P){for(;y=P.pop();)E.insertNode(y);P=0}else E.insertNode(G.node);if(G.lastNotAllowed&&x<I.length-1){(O=Q?o:O)&&E.setEndAt(O,CKEDITOR.POSITION_AFTER_START);s=0}E.collapse()}}q.dontMoveCaret=v;q.bogusNeededBlocks=C}J=q.range;var S;O=q.bogusNeededBlocks;for(P=J.createBookmark();H=q.zombies.pop();)if(H.getParent()){N=J.clone();N.moveToElementEditStart(H);N.removeEmptyBlocksAtEnd()}if(O)for(;H=O.pop();)H.append(CKEDITOR.env.ie?J.document.createText(" "):J.document.createElement("br"));
for(;H=q.mergeCandidates.pop();)H.mergeSiblings();J.moveToBookmark(P);if(!q.dontMoveCaret){for(H=a(J.startContainer)&&J.startContainer.getChild(J.startOffset-1);H&&a(H)&&!H.is(k.$empty);){if(H.isBlockBoundary())J.moveToPosition(H,CKEDITOR.POSITION_BEFORE_END);else{if(e(H)&&H.getHtml().match(/(\s|&nbsp;)$/g)){S=null;break}S=J.clone();S.moveToPosition(H,CKEDITOR.POSITION_BEFORE_END)}H=H.getLast(b)}S&&J.moveToRange(S)}A.select();j(m)}}}()})();
(function(){function a(){var a=this.getSelection(1);if(a.getType()!=CKEDITOR.SELECTION_NONE){this.fire("selectionCheck",a);var b=this.elementPath();if(!b.compare(this._.selectionPreviousPath)){this._.selectionPreviousPath=b;this.fire("selectionChange",{selection:a,path:b})}}}function c(){i=true;if(!l){b.call(this);l=CKEDITOR.tools.setTimeout(b,200,this)}}function b(){l=null;if(i){CKEDITOR.tools.setTimeout(a,0,this);i=false}}function f(a){function b(c,d){return!c||c.type==CKEDITOR.NODE_TEXT?false:
a.clone()["moveToElementEdit"+(d?"End":"Start")](c)}if(!(a.root instanceof CKEDITOR.editable))return false;var c=a.startContainer,d=a.getPreviousNode(m,null,c),e=a.getNextNode(m,null,c);return b(d)||b(e,1)||!d&&!e&&!(c.type==CKEDITOR.NODE_ELEMENT&&c.isBlockBoundary()&&c.getBogus())?true:false}function e(a){return a.getCustomData("cke-fillingChar")}function d(a,b){var c=a&&a.removeCustomData("cke-fillingChar");if(c){if(b!==false){var d,e=a.getDocument().getSelection().getNative(),f=e&&e.type!="None"&&
e.getRangeAt(0);if(c.getLength()>1&&f&&f.intersectsNode(c.$)){d=[e.anchorOffset,e.focusOffset];f=e.focusNode==c.$&&e.focusOffset>0;e.anchorNode==c.$&&e.anchorOffset>0&&d[0]--;f&&d[1]--;var i;f=e;if(!f.isCollapsed){i=f.getRangeAt(0);i.setStart(f.anchorNode,f.anchorOffset);i.setEnd(f.focusNode,f.focusOffset);i=i.collapsed}i&&d.unshift(d.pop())}}c.setText(j(c.getText()));if(d){c=e.getRangeAt(0);c.setStart(c.startContainer,d[0]);c.setEnd(c.startContainer,d[1]);e.removeAllRanges();e.addRange(c)}}}function j(a){return a.replace(/\u200B( )?/g,
function(a){return a[1]?" ":""})}var l,i,m=CKEDITOR.dom.walker.invisible(1);CKEDITOR.on("instanceCreated",function(b){function g(){var a=e.getSelection();a&&a.removeAllRanges()}var e=b.editor;e.define("selectionChange",{errorProof:1});e.on("contentDom",function(){var b=e.document,g=CKEDITOR.document,f=e.editable(),i=b.getBody(),j=b.getDocumentElement(),p=f.isInline(),m;CKEDITOR.env.gecko&&f.attachListener(f,"focus",function(a){a.removeListener();if(m!==0){a=e.getSelection().getNative();if(a.isCollapsed&&
a.anchorNode==f.$){a=e.createRange();a.moveToElementEditStart(f);a.select()}}},null,null,-2);f.attachListener(f,"focus",function(){e.unlockSelection(m);m=0},null,null,-1);f.attachListener(f,"mousedown",function(){m=0});if(CKEDITOR.env.ie||CKEDITOR.env.opera||p){var l,r=function(){l=e.getSelection(1);l.lock()};n?f.attachListener(f,"beforedeactivate",r,null,null,-1):f.attachListener(e,"selectionCheck",r,null,null,-1);f.attachListener(f,"blur",function(){e.lockSelection(l);m=1},null,null,-1)}if(CKEDITOR.env.ie&&
!p){var s;f.attachListener(f,"mousedown",function(a){a.data.$.button==2&&e.document.$.selection.type=="None"&&(s=e.window.getScrollPosition())});f.attachListener(f,"mouseup",function(a){if(a.data.$.button==2&&s){e.document.$.documentElement.scrollLeft=s.x;e.document.$.documentElement.scrollTop=s.y}s=null});if(b.$.compatMode!="BackCompat"){if(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat)j.on("mousedown",function(a){function b(a){a=a.data.$;if(d){var c=i.$.createTextRange();try{c.moveToPoint(a.x,
a.y)}catch(e){}d.setEndPoint(f.compareEndPoints("StartToStart",c)<0?"EndToEnd":"StartToStart",c);d.select()}}function c(){j.removeListener("mousemove",b);g.removeListener("mouseup",c);j.removeListener("mouseup",c);d.select()}a=a.data;if(a.getTarget().is("html")&&a.$.y<j.$.clientHeight&&a.$.x<j.$.clientWidth){var d=i.$.createTextRange();try{d.moveToPoint(a.$.x,a.$.y)}catch(e){}var f=d.duplicate();j.on("mousemove",b);g.on("mouseup",c);j.on("mouseup",c)}});if(CKEDITOR.env.version>7){j.on("mousedown",
function(a){if(a.data.getTarget().is("html")){g.on("mouseup",A);j.on("mouseup",A)}});var A=function(){g.removeListener("mouseup",A);j.removeListener("mouseup",A);var a=CKEDITOR.document.$.selection,c=a.createRange();a.type!="None"&&c.parentElement().ownerDocument==b.$&&c.select()}}}}f.attachListener(f,"selectionchange",a,e);f.attachListener(f,"keyup",c,e);f.attachListener(f,"focus",function(){e.forceNextSelectionCheck();e.selectionChange(1)});if(p?CKEDITOR.env.webkit||CKEDITOR.env.gecko:CKEDITOR.env.opera){var v;
f.attachListener(f,"mousedown",function(){v=1});f.attachListener(b.getDocumentElement(),"mouseup",function(){v&&c.call(e);v=0})}else f.attachListener(CKEDITOR.env.ie?f:b.getDocumentElement(),"mouseup",c,e);CKEDITOR.env.webkit&&f.attachListener(b,"keydown",function(a){switch(a.data.getKey()){case 13:case 33:case 34:case 35:case 36:case 37:case 39:case 8:case 45:case 46:d(f)}},null,null,-1)});e.on("contentDomUnload",e.forceNextSelectionCheck,e);e.on("dataReady",function(){e.selectionChange(1)});CKEDITOR.env.ie9Compat&&
e.on("beforeDestroy",g,null,null,9);CKEDITOR.env.webkit&&e.on("setData",g);e.on("contentDomUnload",function(){e.unlockSelection()})});CKEDITOR.on("instanceReady",function(a){var b=a.editor;if(CKEDITOR.env.webkit){b.on("selectionChange",function(){var a=b.editable(),c=e(a);c&&(c.getCustomData("ready")?d(a):c.setCustomData("ready",1))},null,null,-1);b.on("beforeSetMode",function(){d(b.editable())},null,null,-1);var c,f,a=function(){var a=b.editable();if(a)if(a=e(a)){var d=b.document.$.defaultView.getSelection();
d.type=="Caret"&&d.anchorNode==a.$&&(f=1);c=a.getText();a.setText(j(c))}},i=function(){var a=b.editable();if(a)if(a=e(a)){a.setText(c);if(f){b.document.$.defaultView.getSelection().setPosition(a.$,a.getLength());f=0}}};b.on("beforeUndoImage",a);b.on("afterUndoImage",i);b.on("beforeGetData",a,null,null,0);b.on("getData",i)}});CKEDITOR.editor.prototype.selectionChange=function(b){(b?a:c).call(this)};CKEDITOR.editor.prototype.getSelection=function(a){if(this._.savedSelection&&!a)return this._.savedSelection;
return(a=this.editable())?new CKEDITOR.dom.selection(a):null};CKEDITOR.editor.prototype.lockSelection=function(a){a=a||this.getSelection(1);if(a.getType()!=CKEDITOR.SELECTION_NONE){!a.isLocked&&a.lock();this._.savedSelection=a;return true}return false};CKEDITOR.editor.prototype.unlockSelection=function(a){var b=this._.savedSelection;if(b){b.unlock(a);delete this._.savedSelection;return true}return false};CKEDITOR.editor.prototype.forceNextSelectionCheck=function(){delete this._.selectionPreviousPath};
CKEDITOR.dom.document.prototype.getSelection=function(){return new CKEDITOR.dom.selection(this)};CKEDITOR.dom.range.prototype.select=function(){var a=this.root instanceof CKEDITOR.editable?this.root.editor.getSelection():new CKEDITOR.dom.selection(this.root);a.selectRanges([this]);return a};CKEDITOR.SELECTION_NONE=1;CKEDITOR.SELECTION_TEXT=2;CKEDITOR.SELECTION_ELEMENT=3;var n=typeof window.getSelection!="function";CKEDITOR.dom.selection=function(a){var b=a instanceof CKEDITOR.dom.element;this.document=
a instanceof CKEDITOR.dom.document?a:a.getDocument();this.root=b?a:this.document.getBody();this.isLocked=0;this._={cache:{}};if(CKEDITOR.env.webkit){a=this.document.getWindow().$.getSelection();if(a.type=="None"&&this.document.getActive().equals(this.root)||a.type=="Caret"&&a.anchorNode.nodeType==CKEDITOR.NODE_DOCUMENT){var c=new CKEDITOR.dom.range(this.root);c.moveToPosition(this.root,CKEDITOR.POSITION_AFTER_START);b=this.document.$.createRange();b.setStart(c.startContainer.$,c.startOffset);b.collapse(1);
var d=this.root.on("focus",function(a){a.cancel()},null,null,-100);a.addRange(b);d.removeListener()}}var a=this.getNative(),e;if(a)if(a.getRangeAt)e=(c=a.rangeCount&&a.getRangeAt(0))&&new CKEDITOR.dom.node(c.commonAncestorContainer);else{try{c=a.createRange()}catch(f){}e=c&&CKEDITOR.dom.element.get(c.item&&c.item(0)||c.parentElement())}if(!e||!this.root.equals(e)&&!this.root.contains(e)){this._.cache.type=CKEDITOR.SELECTION_NONE;this._.cache.startElement=null;this._.cache.selectedElement=null;this._.cache.selectedText=
"";this._.cache.ranges=new CKEDITOR.dom.rangeList}return this};var r={img:1,hr:1,li:1,table:1,tr:1,td:1,th:1,embed:1,object:1,ol:1,ul:1,a:1,input:1,form:1,select:1,textarea:1,button:1,fieldset:1,thead:1,tfoot:1};CKEDITOR.dom.selection.prototype={getNative:function(){return this._.cache.nativeSel!==void 0?this._.cache.nativeSel:this._.cache.nativeSel=n?this.document.$.selection:this.document.getWindow().$.getSelection()},getType:n?function(){var a=this._.cache;if(a.type)return a.type;var b=CKEDITOR.SELECTION_NONE;
try{var c=this.getNative(),d=c.type;if(d=="Text")b=CKEDITOR.SELECTION_TEXT;if(d=="Control")b=CKEDITOR.SELECTION_ELEMENT;if(c.createRange().parentElement())b=CKEDITOR.SELECTION_TEXT}catch(e){}return a.type=b}:function(){var a=this._.cache;if(a.type)return a.type;var b=CKEDITOR.SELECTION_TEXT,c=this.getNative();if(!c||!c.rangeCount)b=CKEDITOR.SELECTION_NONE;else if(c.rangeCount==1){var c=c.getRangeAt(0),d=c.startContainer;if(d==c.endContainer&&d.nodeType==1&&c.endOffset-c.startOffset==1&&r[d.childNodes[c.startOffset].nodeName.toLowerCase()])b=
CKEDITOR.SELECTION_ELEMENT}return a.type=b},getRanges:function(){var a=n?function(){function a(b){return(new CKEDITOR.dom.node(b)).getIndex()}var b=function(b,c){b=b.duplicate();b.collapse(c);var d=b.parentElement(),e=d.ownerDocument;if(!d.hasChildNodes())return{container:d,offset:0};for(var f=d.children,h,i,j=b.duplicate(),m=0,p=f.length-1,l=-1,n,o;m<=p;){l=Math.floor((m+p)/2);h=f[l];j.moveToElementText(h);n=j.compareEndPoints("StartToStart",b);if(n>0)p=l-1;else if(n<0)m=l+1;else{if(CKEDITOR.env.ie9Compat&&
h.tagName=="BR"){f=e.defaultView.getSelection();return{container:f[c?"anchorNode":"focusNode"],offset:f[c?"anchorOffset":"focusOffset"]}}return{container:d,offset:a(h)}}}if(l==-1||l==f.length-1&&n<0){j.moveToElementText(d);j.setEndPoint("StartToStart",b);e=j.text.replace(/(\r\n|\r)/g,"\n").length;f=d.childNodes;if(!e){h=f[f.length-1];return h.nodeType!=CKEDITOR.NODE_TEXT?{container:d,offset:f.length}:{container:h,offset:h.nodeValue.length}}for(d=f.length;e>0&&d>0;){i=f[--d];if(i.nodeType==CKEDITOR.NODE_TEXT){o=
i;e=e-i.nodeValue.length}}return{container:o,offset:-e}}j.collapse(n>0?true:false);j.setEndPoint(n>0?"StartToStart":"EndToStart",b);e=j.text.replace(/(\r\n|\r)/g,"\n").length;if(!e)return{container:d,offset:a(h)+(n>0?0:1)};for(;e>0;)try{i=h[n>0?"previousSibling":"nextSibling"];if(i.nodeType==CKEDITOR.NODE_TEXT){e=e-i.nodeValue.length;o=i}h=i}catch(x){return{container:d,offset:a(h)}}return{container:o,offset:n>0?-e:o.nodeValue.length+e}};return function(){var a=this.getNative(),c=a&&a.createRange(),
d=this.getType();if(!a)return[];if(d==CKEDITOR.SELECTION_TEXT){a=new CKEDITOR.dom.range(this.root);d=b(c,true);a.setStart(new CKEDITOR.dom.node(d.container),d.offset);d=b(c);a.setEnd(new CKEDITOR.dom.node(d.container),d.offset);a.endContainer.getPosition(a.startContainer)&CKEDITOR.POSITION_PRECEDING&&a.endOffset<=a.startContainer.getIndex()&&a.collapse();return[a]}if(d==CKEDITOR.SELECTION_ELEMENT){for(var d=[],e=0;e<c.length;e++){for(var g=c.item(e),f=g.parentNode,i=0,a=new CKEDITOR.dom.range(this.root);i<
f.childNodes.length&&f.childNodes[i]!=g;i++);a.setStart(new CKEDITOR.dom.node(f),i);a.setEnd(new CKEDITOR.dom.node(f),i+1);d.push(a)}return d}return[]}}():function(){var a=[],b,c=this.getNative();if(!c)return a;for(var d=0;d<c.rangeCount;d++){var e=c.getRangeAt(d);b=new CKEDITOR.dom.range(this.root);b.setStart(new CKEDITOR.dom.node(e.startContainer),e.startOffset);b.setEnd(new CKEDITOR.dom.node(e.endContainer),e.endOffset);a.push(b)}return a};return function(b){var c=this._.cache;if(c.ranges&&!b)return c.ranges;
if(!c.ranges)c.ranges=new CKEDITOR.dom.rangeList(a.call(this));if(b)for(var d=c.ranges,e=0;e<d.length;e++){var f=d[e];f.getCommonAncestor().isReadOnly()&&d.splice(e,1);if(!f.collapsed){if(f.startContainer.isReadOnly())for(var b=f.startContainer,i;b;){if((i=b.type==CKEDITOR.NODE_ELEMENT)&&b.is("body")||!b.isReadOnly())break;i&&b.getAttribute("contentEditable")=="false"&&f.setStartAfter(b);b=b.getParent()}b=f.startContainer;i=f.endContainer;var j=f.startOffset,m=f.endOffset,l=f.clone();b&&b.type==CKEDITOR.NODE_TEXT&&
(j>=b.getLength()?l.setStartAfter(b):l.setStartBefore(b));i&&i.type==CKEDITOR.NODE_TEXT&&(m?l.setEndAfter(i):l.setEndBefore(i));b=new CKEDITOR.dom.walker(l);b.evaluator=function(a){if(a.type==CKEDITOR.NODE_ELEMENT&&a.isReadOnly()){var b=f.clone();f.setEndBefore(a);f.collapsed&&d.splice(e--,1);if(!(a.getPosition(l.endContainer)&CKEDITOR.POSITION_CONTAINS)){b.setStartAfter(a);b.collapsed||d.splice(e+1,0,b)}return true}return false};b.next()}}return c.ranges}}(),getStartElement:function(){var a=this._.cache;
if(a.startElement!==void 0)return a.startElement;var b;switch(this.getType()){case CKEDITOR.SELECTION_ELEMENT:return this.getSelectedElement();case CKEDITOR.SELECTION_TEXT:var c=this.getRanges()[0];if(c){if(c.collapsed){b=c.startContainer;b.type!=CKEDITOR.NODE_ELEMENT&&(b=b.getParent())}else{for(c.optimize();;){b=c.startContainer;if(c.startOffset==(b.getChildCount?b.getChildCount():b.getLength())&&!b.isBlockBoundary())c.setStartAfter(b);else break}b=c.startContainer;if(b.type!=CKEDITOR.NODE_ELEMENT)return b.getParent();
b=b.getChild(c.startOffset);if(!b||b.type!=CKEDITOR.NODE_ELEMENT)b=c.startContainer;else for(c=b.getFirst();c&&c.type==CKEDITOR.NODE_ELEMENT;){b=c;c=c.getFirst()}}b=b.$}}return a.startElement=b?new CKEDITOR.dom.element(b):null},getSelectedElement:function(){var a=this._.cache;if(a.selectedElement!==void 0)return a.selectedElement;var b=this,c=CKEDITOR.tools.tryThese(function(){return b.getNative().createRange().item(0)},function(){for(var a=b.getRanges()[0],c,d,e=2;e&&(!(c=a.getEnclosedNode())||!(c.type==
CKEDITOR.NODE_ELEMENT&&r[c.getName()]&&(d=c)));e--)a.shrink(CKEDITOR.SHRINK_ELEMENT);return d.$});return a.selectedElement=c?new CKEDITOR.dom.element(c):null},getSelectedText:function(){var a=this._.cache;if(a.selectedText!==void 0)return a.selectedText;var b=this.getNative(),b=n?b.type=="Control"?"":b.createRange().text:b.toString();return a.selectedText=b},lock:function(){this.getRanges();this.getStartElement();this.getSelectedElement();this.getSelectedText();this._.cache.nativeSel=null;this.isLocked=
1},unlock:function(a){if(this.isLocked){if(a)var b=this.getSelectedElement(),c=!b&&this.getRanges();this.isLocked=0;this.reset();if(a)(a=b||c[0]&&c[0].getCommonAncestor())&&a.getAscendant("body",1)&&(b?this.selectElement(b):this.selectRanges(c))}},reset:function(){this._.cache={}},selectElement:function(a){var b=new CKEDITOR.dom.range(this.root);b.setStartBefore(a);b.setEndAfter(a);this.selectRanges([b])},selectRanges:function(a){if(a.length)if(this.isLocked){var b=CKEDITOR.document.getActive();this.unlock();
this.selectRanges(a);this.lock();!b.equals(this.root)&&b.focus()}else{if(n){var c=CKEDITOR.dom.walker.whitespaces(true),e=/\ufeff|\u00a0/,i={table:1,tbody:1,tr:1};if(a.length>1){b=a[a.length-1];a[0].setEnd(b.endContainer,b.endOffset)}var b=a[0],a=b.collapsed,k,j,m,l=b.getEnclosedNode();if(l&&l.type==CKEDITOR.NODE_ELEMENT&&l.getName()in r&&(!l.is("a")||!l.getText()))try{m=l.$.createControlRange();m.addElement(l.$);m.select();return}catch(B){}(b.startContainer.type==CKEDITOR.NODE_ELEMENT&&b.startContainer.getName()in
i||b.endContainer.type==CKEDITOR.NODE_ELEMENT&&b.endContainer.getName()in i)&&b.shrink(CKEDITOR.NODE_ELEMENT,true);m=b.createBookmark();var i=m.startNode,q;if(!a)q=m.endNode;m=b.document.$.body.createTextRange();m.moveToElementText(i.$);m.moveStart("character",1);if(q){e=b.document.$.body.createTextRange();e.moveToElementText(q.$);m.setEndPoint("EndToEnd",e);m.moveEnd("character",-1)}else{k=i.getNext(c);j=i.hasAscendant("pre");k=!(k&&k.getText&&k.getText().match(e))&&(j||!i.hasPrevious()||i.getPrevious().is&&
i.getPrevious().is("br"));j=b.document.createElement("span");j.setHtml("&#65279;");j.insertBefore(i);k&&b.document.createText("﻿").insertBefore(i)}b.setStartBefore(i);i.remove();if(a){if(k){m.moveStart("character",-1);m.select();b.document.$.selection.clear()}else m.select();b.moveToPosition(j,CKEDITOR.POSITION_BEFORE_START);j.remove()}else{b.setEndBefore(q);q.remove();m.select()}}else{q=this.getNative();if(!q)return;if(CKEDITOR.env.opera){b=this.document.$.createRange();b.selectNodeContents(this.root.$);
q.addRange(b)}this.removeAllRanges();for(e=0;e<a.length;e++){if(e<a.length-1){b=a[e];m=a[e+1];j=b.clone();j.setStart(b.endContainer,b.endOffset);j.setEnd(m.startContainer,m.startOffset);if(!j.collapsed){j.shrink(CKEDITOR.NODE_ELEMENT,true);k=j.getCommonAncestor();j=j.getEnclosedNode();if(k.isReadOnly()||j&&j.isReadOnly()){m.setStart(b.startContainer,b.startOffset);a.splice(e--,1);continue}}}b=a[e];m=this.document.$.createRange();k=b.startContainer;if(CKEDITOR.env.opera&&b.collapsed&&k.type==CKEDITOR.NODE_ELEMENT){j=
k.getChild(b.startOffset-1);c=k.getChild(b.startOffset);if(!j&&!c&&k.is(CKEDITOR.dtd.$removeEmpty)||j&&j.type==CKEDITOR.NODE_ELEMENT||c&&c.type==CKEDITOR.NODE_ELEMENT){b.insertNode(this.document.createText(""));b.collapse(1)}}if(b.collapsed&&CKEDITOR.env.webkit&&f(b)){k=this.root;d(k,false);j=k.getDocument().createText("​");k.setCustomData("cke-fillingChar",j);b.insertNode(j);if((k=j.getNext())&&!j.getPrevious()&&k.type==CKEDITOR.NODE_ELEMENT&&k.getName()=="br"){d(this.root);b.moveToPosition(k,CKEDITOR.POSITION_BEFORE_START)}else b.moveToPosition(j,
CKEDITOR.POSITION_AFTER_END)}m.setStart(b.startContainer.$,b.startOffset);try{m.setEnd(b.endContainer.$,b.endOffset)}catch(z){if(z.toString().indexOf("NS_ERROR_ILLEGAL_VALUE")>=0){b.collapse(1);m.setEnd(b.endContainer.$,b.endOffset)}else throw z;}q.addRange(m)}}this.reset();this.root.fire("selectionchange")}},createBookmarks:function(a){return this.getRanges().createBookmarks(a)},createBookmarks2:function(a){return this.getRanges().createBookmarks2(a)},selectBookmarks:function(a){for(var b=[],c=0;c<
a.length;c++){var d=new CKEDITOR.dom.range(this.root);d.moveToBookmark(a[c]);b.push(d)}this.selectRanges(b);return this},getCommonAncestor:function(){var a=this.getRanges();return a[0].startContainer.getCommonAncestor(a[a.length-1].endContainer)},scrollIntoView:function(){this.type!=CKEDITOR.SELECTION_NONE&&this.getRanges()[0].scrollIntoView()},removeAllRanges:function(){var a=this.getNative();try{a&&a[n?"empty":"removeAllRanges"]()}catch(b){}this.reset()}}})();
CKEDITOR.editor.prototype.attachStyleStateChange=function(a,c){var b=this._.styleStateChangeCallbacks;if(!b){b=this._.styleStateChangeCallbacks=[];this.on("selectionChange",function(a){for(var c=0;c<b.length;c++){var d=b[c],j=d.style.checkActive(a.data.path)?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF;d.fn.call(this,j)}})}b.push({style:a,fn:c})};CKEDITOR.STYLE_BLOCK=1;CKEDITOR.STYLE_INLINE=2;CKEDITOR.STYLE_OBJECT=3;
(function(){function a(a,b){for(var c,d;a=a.getParent();){if(a.equals(b))break;if(a.getAttribute("data-nostyle"))c=a;else if(!d){var e=a.getAttribute("contentEditable");e=="false"?c=a:e=="true"&&(d=1)}}return c}function c(b){var c=b.document;if(b.collapsed){c=u(this,c);b.insertNode(c);b.moveToPosition(c,CKEDITOR.POSITION_BEFORE_END)}else{var d=this.element,e=this._.definition,f,g=e.ignoreReadonly,h=g||e.includeReadonly;h==void 0&&(h=b.root.getCustomData("cke_includeReadonly"));var i=CKEDITOR.dtd[d]||
(f=true,CKEDITOR.dtd.span);b.enlarge(CKEDITOR.ENLARGE_INLINE,1);b.trim();var j=b.createBookmark(),k=j.startNode,m=j.endNode,l=k,n;if(!g){var r=b.getCommonAncestor(),g=a(k,r),r=a(m,r);g&&(l=g.getNextSourceNode(true));r&&(m=r)}for(l.getPosition(m)==CKEDITOR.POSITION_FOLLOWING&&(l=0);l;){g=false;if(l.equals(m)){l=null;g=true}else{var q=l.type,s=q==CKEDITOR.NODE_ELEMENT?l.getName():null,r=s&&l.getAttribute("contentEditable")=="false",t=s&&l.getAttribute("data-nostyle");if(s&&l.data("cke-bookmark")){l=
l.getNextSourceNode(true);continue}if(!s||i[s]&&!t&&(!r||h)&&(l.getPosition(m)|CKEDITOR.POSITION_PRECEDING|CKEDITOR.POSITION_IDENTICAL|CKEDITOR.POSITION_IS_CONTAINED)==CKEDITOR.POSITION_PRECEDING+CKEDITOR.POSITION_IDENTICAL+CKEDITOR.POSITION_IS_CONTAINED&&(!e.childRule||e.childRule(l))){var v=l.getParent();if(v&&((v.getDtd()||CKEDITOR.dtd.span)[d]||f)&&(!e.parentRule||e.parentRule(v))){if(!n&&(!s||!CKEDITOR.dtd.$removeEmpty[s]||(l.getPosition(m)|CKEDITOR.POSITION_PRECEDING|CKEDITOR.POSITION_IDENTICAL|
CKEDITOR.POSITION_IS_CONTAINED)==CKEDITOR.POSITION_PRECEDING+CKEDITOR.POSITION_IDENTICAL+CKEDITOR.POSITION_IS_CONTAINED)){n=b.clone();n.setStartBefore(l)}if(q==CKEDITOR.NODE_TEXT||r||q==CKEDITOR.NODE_ELEMENT&&!l.getChildCount()){for(var q=l,w;(g=!q.getNext(A))&&(w=q.getParent(),i[w.getName()])&&(w.getPosition(k)|CKEDITOR.POSITION_FOLLOWING|CKEDITOR.POSITION_IDENTICAL|CKEDITOR.POSITION_IS_CONTAINED)==CKEDITOR.POSITION_FOLLOWING+CKEDITOR.POSITION_IDENTICAL+CKEDITOR.POSITION_IS_CONTAINED&&(!e.childRule||
e.childRule(w));)q=w;n.setEndAfter(q)}}else g=true}else g=true;l=l.getNextSourceNode(t||r&&!h)}if(g&&n&&!n.collapsed){for(var g=u(this,c),r=g.hasAttributes(),t=n.getCommonAncestor(),q={},s={},v={},D={},B,z,F;g&&t;){if(t.getName()==d){for(B in e.attributes)if(!D[B]&&(F=t.getAttribute(z)))g.getAttribute(B)==F?s[B]=1:D[B]=1;for(z in e.styles)if(!v[z]&&(F=t.getStyle(z)))g.getStyle(z)==F?q[z]=1:v[z]=1}t=t.getParent()}for(B in s)g.removeAttribute(B);for(z in q)g.removeStyle(z);r&&!g.hasAttributes()&&(g=
null);if(g){n.extractContents().appendTo(g);p.call(this,g);n.insertNode(g);g.mergeSiblings();CKEDITOR.env.ie||g.$.normalize()}else{g=new CKEDITOR.dom.element("span");n.extractContents().appendTo(g);n.insertNode(g);p.call(this,g);g.remove(true)}n=null}}b.moveToBookmark(j);b.shrink(CKEDITOR.SHRINK_TEXT)}}function b(a){a.enlarge(CKEDITOR.ENLARGE_INLINE,1);var b=a.createBookmark(),c=b.startNode;if(a.collapsed){for(var d=new CKEDITOR.dom.elementPath(c.getParent(),a.root),e,f=0,h;f<d.elements.length&&(h=
d.elements[f]);f++){if(h==d.block||h==d.blockLimit)break;if(this.checkElementRemovable(h)){var i;if(a.collapsed&&(a.checkBoundaryOfElement(h,CKEDITOR.END)||(i=a.checkBoundaryOfElement(h,CKEDITOR.START)))){e=h;e.match=i?"start":"end"}else{h.mergeSiblings();h.getName()==this.element?r.call(this,h):g(h,t(this)[h.getName()])}}}if(e){h=c;for(f=0;;f++){i=d.elements[f];if(i.equals(e))break;else if(i.match)continue;else i=i.clone();i.append(h);h=i}h[e.match=="start"?"insertBefore":"insertAfter"](e)}}else{var j=
b.endNode,k=this,d=function(){for(var a=new CKEDITOR.dom.elementPath(c.getParent()),b=new CKEDITOR.dom.elementPath(j.getParent()),e=null,d=null,f=0;f<a.elements.length;f++){var g=a.elements[f];if(g==a.block||g==a.blockLimit)break;k.checkElementRemovable(g)&&(e=g)}for(f=0;f<b.elements.length;f++){g=b.elements[f];if(g==b.block||g==b.blockLimit)break;k.checkElementRemovable(g)&&(d=g)}d&&j.breakParent(d);e&&c.breakParent(e)};d();for(e=c;!e.equals(j);){f=e.getNextSourceNode();if(e.type==CKEDITOR.NODE_ELEMENT&&
this.checkElementRemovable(e)){e.getName()==this.element?r.call(this,e):g(e,t(this)[e.getName()]);if(f.type==CKEDITOR.NODE_ELEMENT&&f.contains(c)){d();f=c.getNext()}}e=f}}a.moveToBookmark(b)}function f(a){var b=a.getEnclosedNode()||a.getCommonAncestor(false,true);(a=(new CKEDITOR.dom.elementPath(b,a.root)).contains(this.element,1))&&!a.isReadOnly()&&w(a,this)}function e(a){var b=a.getCommonAncestor(true,true);if(a=(new CKEDITOR.dom.elementPath(b,a.root)).contains(this.element,1)){var b=this._.definition,
c=b.attributes;if(c)for(var e in c)a.removeAttribute(e,c[e]);if(b.styles)for(var d in b.styles)b.styles.hasOwnProperty(d)&&a.removeStyle(d)}}function d(a){var b=a.createBookmark(true),c=a.createIterator();c.enforceRealBlocks=true;if(this._.enterMode)c.enlargeBr=this._.enterMode!=CKEDITOR.ENTER_BR;for(var e,d=a.document;e=c.getNextParagraph();)if(!e.isReadOnly()){var f=u(this,d,e);l(e,f)}a.moveToBookmark(b)}function j(a){var b=a.createBookmark(1),c=a.createIterator();c.enforceRealBlocks=true;c.enlargeBr=
this._.enterMode!=CKEDITOR.ENTER_BR;for(var e;e=c.getNextParagraph();)if(this.checkElementRemovable(e))if(e.is("pre")){var d=this._.enterMode==CKEDITOR.ENTER_BR?null:a.document.createElement(this._.enterMode==CKEDITOR.ENTER_P?"p":"div");d&&e.copyAttributes(d);l(e,d)}else r.call(this,e);a.moveToBookmark(b)}function l(a,b){var c=!b;if(c){b=a.getDocument().createElement("div");a.copyAttributes(b)}var e=b&&b.is("pre"),d=a.is("pre"),f=!e&&d;if(e&&!d){d=b;(f=a.getBogus())&&f.remove();f=a.getHtml();f=m(f,
/(?:^[ \t\n\r]+)|(?:[ \t\n\r]+$)/g,"");f=f.replace(/[ \t\r\n]*(<br[^>]*>)[ \t\r\n]*/gi,"$1");f=f.replace(/([ \t\n\r]+|&nbsp;)/g," ");f=f.replace(/<br\b[^>]*>/gi,"\n");if(CKEDITOR.env.ie){var g=a.getDocument().createElement("div");g.append(d);d.$.outerHTML="<pre>"+f+"</pre>";d.copyAttributes(g.getFirst());d=g.getFirst().remove()}else d.setHtml(f);b=d}else f?b=n(c?[a.getHtml()]:i(a),b):a.moveChildren(b);b.replace(a);if(e){var c=b,j;if((j=c.getPrevious(v))&&j.is&&j.is("pre")){e=m(j.getHtml(),/\n$/,"")+
"\n\n"+m(c.getHtml(),/^\n/,"");CKEDITOR.env.ie?c.$.outerHTML="<pre>"+e+"</pre>":c.setHtml(e);j.remove()}}else c&&h(b)}function i(a){a.getName();var b=[];m(a.getOuterHtml(),/(\S\s*)\n(?:\s|(<span[^>]+data-cke-bookmark.*?\/span>))*\n(?!$)/gi,function(a,b,c){return b+"</pre>"+c+"<pre>"}).replace(/<pre\b.*?>([\s\S]*?)<\/pre>/gi,function(a,c){b.push(c)});return b}function m(a,b,c){var e="",d="",a=a.replace(/(^<span[^>]+data-cke-bookmark.*?\/span>)|(<span[^>]+data-cke-bookmark.*?\/span>$)/gi,function(a,
b,c){b&&(e=b);c&&(d=c);return""});return e+a.replace(b,c)+d}function n(a,b){var c;a.length>1&&(c=new CKEDITOR.dom.documentFragment(b.getDocument()));for(var e=0;e<a.length;e++){var d=a[e],d=d.replace(/(\r\n|\r)/g,"\n"),d=m(d,/^[ \t]*\n/,""),d=m(d,/\n$/,""),d=m(d,/^[ \t]+|[ \t]+$/g,function(a,b){return a.length==1?"&nbsp;":b?" "+CKEDITOR.tools.repeat("&nbsp;",a.length-1):CKEDITOR.tools.repeat("&nbsp;",a.length-1)+" "}),d=d.replace(/\n/g,"<br>"),d=d.replace(/[ \t]{2,}/g,function(a){return CKEDITOR.tools.repeat("&nbsp;",
a.length-1)+" "});if(c){var f=b.clone();f.setHtml(d);c.append(f)}else b.setHtml(d)}return c||b}function r(a){var b=this._.definition,c=b.attributes,b=b.styles,d=t(this)[a.getName()],e=CKEDITOR.tools.isEmpty(c)&&CKEDITOR.tools.isEmpty(b),f;for(f in c)if(!((f=="class"||this._.definition.fullMatch)&&a.getAttribute(f)!=F(f,c[f]))){e=a.hasAttribute(f);a.removeAttribute(f)}for(var i in b)if(!(this._.definition.fullMatch&&a.getStyle(i)!=F(i,b[i],true))){e=e||!!a.getStyle(i);a.removeStyle(i)}g(a,d,B[a.getName()]);
e&&(this._.definition.alwaysRemoveElement?h(a,1):!CKEDITOR.dtd.$block[a.getName()]||this._.enterMode==CKEDITOR.ENTER_BR&&!a.hasAttributes()?h(a):a.renameNode(this._.enterMode==CKEDITOR.ENTER_P?"p":"div"))}function p(a){for(var b=t(this),c=a.getElementsByTag(this.element),d=c.count();--d>=0;)r.call(this,c.getItem(d));for(var e in b)if(e!=this.element){c=a.getElementsByTag(e);for(d=c.count()-1;d>=0;d--){var f=c.getItem(d);g(f,b[e])}}}function g(a,b,c){if(b=b&&b.attributes)for(var d=0;d<b.length;d++){var e=
b[d][0],f;if(f=a.getAttribute(e)){var g=b[d][1];(g===null||g.test&&g.test(f)||typeof g=="string"&&f==g)&&a.removeAttribute(e)}}c||h(a)}function h(a,b){if(!a.hasAttributes()||b)if(CKEDITOR.dtd.$block[a.getName()]){var c=a.getPrevious(v),d=a.getNext(v);c&&(c.type==CKEDITOR.NODE_TEXT||!c.isBlockBoundary({br:1}))&&a.append("br",1);d&&(d.type==CKEDITOR.NODE_TEXT||!d.isBlockBoundary({br:1}))&&a.append("br");a.remove(true)}else{c=a.getFirst();d=a.getLast();a.remove(true);if(c){c.type==CKEDITOR.NODE_ELEMENT&&
c.mergeSiblings();d&&(!c.equals(d)&&d.type==CKEDITOR.NODE_ELEMENT)&&d.mergeSiblings()}}}function u(a,b,c){var d;d=a.element;d=="*"&&(d="span");d=new CKEDITOR.dom.element(d,b);c&&c.copyAttributes(d);d=w(d,a);b.getCustomData("doc_processing_style")&&d.hasAttribute("id")?d.removeAttribute("id"):b.setCustomData("doc_processing_style",1);return d}function w(a,b){var c=b._.definition,d=c.attributes,c=CKEDITOR.style.getStyleText(c);if(d)for(var e in d)a.setAttribute(e,d[e]);c&&a.setAttribute("style",c);
return a}function k(a,b){for(var c in a)a[c]=a[c].replace(s,function(a,c){return b[c]})}function t(a){if(a._.overrides)return a._.overrides;var b=a._.overrides={},c=a._.definition.overrides;if(c){CKEDITOR.tools.isArray(c)||(c=[c]);for(var d=0;d<c.length;d++){var e=c[d],f,g;if(typeof e=="string")f=e.toLowerCase();else{f=e.element?e.element.toLowerCase():a.element;g=e.attributes}e=b[f]||(b[f]={});if(g){var e=e.attributes=e.attributes||[],h;for(h in g)e.push([h.toLowerCase(),g[h]])}}}return b}function F(a,
b,c){var d=new CKEDITOR.dom.element("span");d[c?"setStyle":"setAttribute"](a,b);return d[c?"getStyle":"getAttribute"](a)}function D(a,b){for(var c=a.document,d=a.getRanges(),e=b?this.removeFromRange:this.applyToRange,f,g=d.createIterator();f=g.getNextRange();)e.call(this,f);a.selectRanges(d);c.removeCustomData("doc_processing_style")}var B={address:1,div:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,p:1,pre:1,section:1,header:1,footer:1,nav:1,article:1,aside:1,figure:1,dialog:1,hgroup:1,time:1,meter:1,menu:1,command:1,
keygen:1,output:1,progress:1,details:1,datagrid:1,datalist:1},q={a:1,embed:1,hr:1,img:1,li:1,object:1,ol:1,table:1,td:1,tr:1,th:1,ul:1,dl:1,dt:1,dd:1,form:1,audio:1,video:1},z=/\s*(?:;\s*|$)/,s=/#\((.+?)\)/g,A=CKEDITOR.dom.walker.bookmark(0,1),v=CKEDITOR.dom.walker.whitespaces(1);CKEDITOR.style=function(a,b){var c=a.attributes;if(c&&c.style){a.styles=CKEDITOR.tools.extend({},a.styles,CKEDITOR.tools.parseCssText(c.style));delete c.style}if(b){a=CKEDITOR.tools.clone(a);k(a.attributes,b);k(a.styles,
b)}c=this.element=a.element?typeof a.element=="string"?a.element.toLowerCase():a.element:"*";this.type=a.type||(B[c]?CKEDITOR.STYLE_BLOCK:q[c]?CKEDITOR.STYLE_OBJECT:CKEDITOR.STYLE_INLINE);if(typeof this.element=="object")this.type=CKEDITOR.STYLE_OBJECT;this._={definition:a}};CKEDITOR.editor.prototype.applyStyle=function(a){D.call(a,this.getSelection())};CKEDITOR.editor.prototype.removeStyle=function(a){D.call(a,this.getSelection(),1)};CKEDITOR.style.prototype={apply:function(a){D.call(this,a.getSelection())},
remove:function(a){D.call(this,a.getSelection(),1)},applyToRange:function(a){return(this.applyToRange=this.type==CKEDITOR.STYLE_INLINE?c:this.type==CKEDITOR.STYLE_BLOCK?d:this.type==CKEDITOR.STYLE_OBJECT?f:null).call(this,a)},removeFromRange:function(a){return(this.removeFromRange=this.type==CKEDITOR.STYLE_INLINE?b:this.type==CKEDITOR.STYLE_BLOCK?j:this.type==CKEDITOR.STYLE_OBJECT?e:null).call(this,a)},applyToObject:function(a){w(a,this)},checkActive:function(a){switch(this.type){case CKEDITOR.STYLE_BLOCK:return this.checkElementRemovable(a.block||
a.blockLimit,true);case CKEDITOR.STYLE_OBJECT:case CKEDITOR.STYLE_INLINE:for(var b=a.elements,c=0,d;c<b.length;c++){d=b[c];if(!(this.type==CKEDITOR.STYLE_INLINE&&(d==a.block||d==a.blockLimit))){if(this.type==CKEDITOR.STYLE_OBJECT){var e=d.getName();if(!(typeof this.element=="string"?e==this.element:e in this.element))continue}if(this.checkElementRemovable(d,true))return true}}}return false},checkApplicable:function(a){switch(this.type){case CKEDITOR.STYLE_OBJECT:return a.contains(this.element)}return true},
checkElementMatch:function(a,b){var c=this._.definition;if(!a||!c.ignoreReadonly&&a.isReadOnly())return false;var d=a.getName();if(typeof this.element=="string"?d==this.element:d in this.element){if(!b&&!a.hasAttributes())return true;if(d=c._AC)c=d;else{var d={},e=0,f=c.attributes;if(f)for(var g in f){e++;d[g]=f[g]}if(g=CKEDITOR.style.getStyleText(c)){d.style||e++;d.style=g}d._length=e;c=c._AC=d}if(c._length){for(var h in c)if(h!="_length"){e=a.getAttribute(h)||"";if(h=="style")a:{d=c[h];typeof d==
"string"&&(d=CKEDITOR.tools.parseCssText(d));typeof e=="string"&&(e=CKEDITOR.tools.parseCssText(e,true));g=void 0;for(g in d)if(!(g in e&&(e[g]==d[g]||d[g]=="inherit"||e[g]=="inherit"))){d=false;break a}d=true}else d=c[h]==e;if(d){if(!b)return true}else if(b)return false}if(b)return true}else return true}return false},checkElementRemovable:function(a,b){if(this.checkElementMatch(a,b))return true;var c=t(this)[a.getName()];if(c){var d;if(!(c=c.attributes))return true;for(var e=0;e<c.length;e++){d=
c[e][0];if(d=a.getAttribute(d)){var f=c[e][1];if(f===null||typeof f=="string"&&d==f||f.test(d))return true}}}return false},buildPreview:function(a){var b=this._.definition,c=[],d=b.element;d=="bdo"&&(d="span");var c=["<",d],e=b.attributes;if(e)for(var f in e)c.push(" ",f,'="',e[f],'"');(e=CKEDITOR.style.getStyleText(b))&&c.push(' style="',e,'"');c.push(">",a||b.name,"</",d,">");return c.join("")},getDefinition:function(){return this._.definition}};CKEDITOR.style.getStyleText=function(a){var b=a._ST;
if(b)return b;var b=a.styles,c=a.attributes&&a.attributes.style||"",d="";c.length&&(c=c.replace(z,";"));for(var e in b){var f=b[e],g=(e+":"+f).replace(z,";");f=="inherit"?d=d+g:c=c+g}c.length&&(c=CKEDITOR.tools.normalizeCssText(c,true));return a._ST=c+d}})();CKEDITOR.styleCommand=function(a,c){this.requiredContent=this.allowedContent=this.style=a;CKEDITOR.tools.extend(this,c,true)};
CKEDITOR.styleCommand.prototype.exec=function(a){a.focus();this.state==CKEDITOR.TRISTATE_OFF?a.applyStyle(this.style):this.state==CKEDITOR.TRISTATE_ON&&a.removeStyle(this.style)};CKEDITOR.stylesSet=new CKEDITOR.resourceManager("","stylesSet");CKEDITOR.addStylesSet=CKEDITOR.tools.bind(CKEDITOR.stylesSet.add,CKEDITOR.stylesSet);CKEDITOR.loadStylesSet=function(a,c,b){CKEDITOR.stylesSet.addExternal(a,c,"");CKEDITOR.stylesSet.load(a,b)};
CKEDITOR.editor.prototype.getStylesSet=function(a){if(this._.stylesDefinitions)a(this._.stylesDefinitions);else{var c=this,b=c.config.stylesCombo_stylesSet||c.config.stylesSet;if(b===false)a(null);else if(b instanceof Array){c._.stylesDefinitions=b;a(b)}else{b||(b="default");var b=b.split(":"),f=b[0];CKEDITOR.stylesSet.addExternal(f,b[1]?b.slice(1).join(":"):CKEDITOR.getUrl("styles.js"),"");CKEDITOR.stylesSet.load(f,function(b){c._.stylesDefinitions=b[f];a(c._.stylesDefinitions)})}}};
CKEDITOR.dom.comment=function(a,c){typeof a=="string"&&(a=(c?c.$:document).createComment(a));CKEDITOR.dom.domObject.call(this,a)};CKEDITOR.dom.comment.prototype=new CKEDITOR.dom.node;CKEDITOR.tools.extend(CKEDITOR.dom.comment.prototype,{type:CKEDITOR.NODE_COMMENT,getOuterHtml:function(){return"<\!--"+this.$.nodeValue+"--\>"}});
(function(){var a={},c;for(c in CKEDITOR.dtd.$blockLimit)c in CKEDITOR.dtd.$list||(a[c]=1);var b={};for(c in CKEDITOR.dtd.$block)c in CKEDITOR.dtd.$blockLimit||c in CKEDITOR.dtd.$empty||(b[c]=1);CKEDITOR.dom.elementPath=function(c,e){var d=null,j=null,l=[],e=e||c.getDocument().getBody(),i=c;do if(i.type==CKEDITOR.NODE_ELEMENT){l.push(i);if(!this.lastElement){this.lastElement=i;if(i.is(CKEDITOR.dtd.$object))continue}var m=i.getName();if(!j){!d&&b[m]&&(d=i);if(a[m]){var n;if(n=!d){if(m=m=="div"){a:{m=
i.getChildren();n=0;for(var r=m.count();n<r;n++){var p=m.getItem(n);if(p.type==CKEDITOR.NODE_ELEMENT&&CKEDITOR.dtd.$block[p.getName()]){m=true;break a}}m=false}m=!m&&!i.equals(e)}n=m}n?d=i:j=i}}if(i.equals(e))break}while(i=i.getParent());this.block=d;this.blockLimit=j;this.root=e;this.elements=l}})();
CKEDITOR.dom.elementPath.prototype={compare:function(a){var c=this.elements,a=a&&a.elements;if(!a||c.length!=a.length)return false;for(var b=0;b<c.length;b++)if(!c[b].equals(a[b]))return false;return true},contains:function(a,c,b){var f;typeof a=="string"&&(f=function(b){return b.getName()==a});a instanceof CKEDITOR.dom.element?f=function(b){return b.equals(a)}:CKEDITOR.tools.isArray(a)?f=function(b){return CKEDITOR.tools.indexOf(a,b.getName())>-1}:typeof a=="function"?f=a:typeof a=="object"&&(f=
function(b){return b.getName()in a});var e=this.elements,d=e.length;c&&d--;if(b){e=Array.prototype.slice.call(e,0);e.reverse()}for(c=0;c<d;c++)if(f(e[c]))return e[c];return null},isContextFor:function(a){var c;if(a in CKEDITOR.dtd.$block){c=this.contains(CKEDITOR.dtd.$intermediate)||this.root.equals(this.block)&&this.block||this.blockLimit;return!!c.getDtd()[a]}return true},direction:function(){return(this.block||this.blockLimit||this.root).getDirection(1)}};
CKEDITOR.dom.text=function(a,c){typeof a=="string"&&(a=(c?c.$:document).createTextNode(a));this.$=a};CKEDITOR.dom.text.prototype=new CKEDITOR.dom.node;
CKEDITOR.tools.extend(CKEDITOR.dom.text.prototype,{type:CKEDITOR.NODE_TEXT,getLength:function(){return this.$.nodeValue.length},getText:function(){return this.$.nodeValue},setText:function(a){this.$.nodeValue=a},split:function(a){var c=this.$.parentNode,b=c.childNodes.length,f=this.getLength(),e=this.getDocument(),d=new CKEDITOR.dom.text(this.$.splitText(a),e);if(c.childNodes.length==b)if(a>=f){d=e.createText("");d.insertAfter(this)}else{a=e.createText("");a.insertAfter(d);a.remove()}return d},substring:function(a,
c){return typeof c!="number"?this.$.nodeValue.substr(a):this.$.nodeValue.substring(a,c)}});
(function(){function a(a,c,e){var d=a.serializable,j=c[e?"endContainer":"startContainer"],l=e?"endOffset":"startOffset",i=d?c.document.getById(a.startNode):a.startNode,a=d?c.document.getById(a.endNode):a.endNode;if(j.equals(i.getPrevious())){c.startOffset=c.startOffset-j.getLength()-a.getPrevious().getLength();j=a.getNext()}else if(j.equals(a.getPrevious())){c.startOffset=c.startOffset-j.getLength();j=a.getNext()}j.equals(i.getParent())&&c[l]++;j.equals(a.getParent())&&c[l]++;c[e?"endContainer":"startContainer"]=
j;return c}CKEDITOR.dom.rangeList=function(a){if(a instanceof CKEDITOR.dom.rangeList)return a;a?a instanceof CKEDITOR.dom.range&&(a=[a]):a=[];return CKEDITOR.tools.extend(a,c)};var c={createIterator:function(){var a=this,c=CKEDITOR.dom.walker.bookmark(),e=[],d;return{getNextRange:function(j){d=d==void 0?0:d+1;var l=a[d];if(l&&a.length>1){if(!d)for(var i=a.length-1;i>=0;i--)e.unshift(a[i].createBookmark(true));if(j)for(var m=0;a[d+m+1];){for(var n=l.document,j=0,i=n.getById(e[m].endNode),n=n.getById(e[m+
1].startNode);;){i=i.getNextSourceNode(false);if(n.equals(i))j=1;else if(c(i)||i.type==CKEDITOR.NODE_ELEMENT&&i.isBlockBoundary())continue;break}if(!j)break;m++}for(l.moveToBookmark(e.shift());m--;){i=a[++d];i.moveToBookmark(e.shift());l.setEnd(i.endContainer,i.endOffset)}}return l}}},createBookmarks:function(b){for(var c=[],e,d=0;d<this.length;d++){c.push(e=this[d].createBookmark(b,true));for(var j=d+1;j<this.length;j++){this[j]=a(e,this[j]);this[j]=a(e,this[j],true)}}return c},createBookmarks2:function(a){for(var c=
[],e=0;e<this.length;e++)c.push(this[e].createBookmark2(a));return c},moveToBookmarks:function(a){for(var c=0;c<this.length;c++)this[c].moveToBookmark(a[c])}}})();
(function(){function a(){return CKEDITOR.getUrl(CKEDITOR.skinName.split(",")[1]||"skins/"+CKEDITOR.skinName.split(",")[0]+"/")}function c(b){var c=CKEDITOR.skin["ua_"+b],d=CKEDITOR.env;if(c)for(var c=c.split(",").sort(function(a,b){return a>b?-1:1}),e=0,f;e<c.length;e++){f=c[e];if(d.ie&&(f.replace(/^ie/,"")==d.version||d.quirks&&f=="iequirks"))f="ie";if(d[f]){b=b+("_"+c[e]);break}}return CKEDITOR.getUrl(a()+b+".css")}function b(a,b){if(!d[a]){CKEDITOR.document.appendStyleSheet(c(a));d[a]=1}b&&b()}
function f(a){var b=a.getById(j);if(!b){b=a.getHead().append("style");b.setAttribute("id",j);b.setAttribute("type","text/css")}return b}function e(a,b,c){var d,e,f;if(CKEDITOR.env.webkit){b=b.split("}").slice(0,-1);for(e=0;e<b.length;e++)b[e]=b[e].split("{")}for(var i=0;i<a.length;i++)if(CKEDITOR.env.webkit)for(e=0;e<b.length;e++){f=b[e][1];for(d=0;d<c.length;d++)f=f.replace(c[d][0],c[d][1]);a[i].$.sheet.addRule(b[e][0],f)}else{f=b;for(d=0;d<c.length;d++)f=f.replace(c[d][0],c[d][1]);CKEDITOR.env.ie?
a[i].$.styleSheet.cssText=a[i].$.styleSheet.cssText+f:a[i].$.innerHTML=a[i].$.innerHTML+f}}var d={};CKEDITOR.skin={path:a,loadPart:function(c,d){CKEDITOR.skin.name!=CKEDITOR.skinName.split(",")[0]?CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(a()+"skin.js"),function(){b(c,d)}):b(c,d)},getPath:function(a){return CKEDITOR.getUrl(c(a))},icons:{},addIcon:function(a,b,c){a=a.toLowerCase();this.icons[a]||(this.icons[a]={path:b,offset:c||0})},getIconStyle:function(a,b,c,d){var e;if(a){a=a.toLowerCase();b&&
(e=this.icons[a+"-rtl"]);e||(e=this.icons[a])}a=c||e&&e.path||"";d=d||e&&e.offset;return a&&"background-image:url("+CKEDITOR.getUrl(a)+");background-position:0 "+d+"px;"}};CKEDITOR.tools.extend(CKEDITOR.editor.prototype,{getUiColor:function(){return this.uiColor},setUiColor:function(a){var b=f(CKEDITOR.document);return(this.setUiColor=function(a){var c=CKEDITOR.skin.chameleon,d=[[i,a]];this.uiColor=a;e([b],c(this,"editor"),d);e(l,c(this,"panel"),d)}).call(this,a)}});var j="cke_ui_color",l=[],i=/\$color/g;
CKEDITOR.on("instanceLoaded",function(a){if(!CKEDITOR.env.ie||!CKEDITOR.env.quirks){var b=a.editor,a=function(a){a=(a.data[0]||a.data).element.getElementsByTag("iframe").getItem(0).getFrameDocument();if(!a.getById("cke_ui_color")){a=f(a);l.push(a);var c=b.getUiColor();c&&e([a],CKEDITOR.skin.chameleon(b,"panel"),[[i,c]])}};b.on("panelShow",a);b.on("menuShow",a);b.config.uiColor&&b.setUiColor(b.config.uiColor)}})})();
(function(){if(CKEDITOR.env.webkit)CKEDITOR.env.hc=false;else{var a=CKEDITOR.dom.element.createFromHtml('<div style="width:0px;height:0px;position:absolute;left:-10000px;border: 1px solid;border-color: red blue;"></div>',CKEDITOR.document);a.appendTo(CKEDITOR.document.getHead());try{CKEDITOR.env.hc=a.getComputedStyle("border-top-color")==a.getComputedStyle("border-right-color")}catch(c){CKEDITOR.env.hc=false}a.remove()}if(CKEDITOR.env.hc)CKEDITOR.env.cssClass=CKEDITOR.env.cssClass+" cke_hc";CKEDITOR.document.appendStyleText(".cke{visibility:hidden;}");
CKEDITOR.status="loaded";CKEDITOR.fireOnce("loaded");if(a=CKEDITOR._.pending){delete CKEDITOR._.pending;for(var b=0;b<a.length;b++){CKEDITOR.editor.prototype.constructor.apply(a[b][0],a[b][1]);CKEDITOR.add(a[b][0])}}})();/*
 Copyright (c) 2003-2013, CKSource - Frederico Knabben. All rights reserved.
 For licensing, see LICENSE.html or http://ckeditor.com/license
*/
CKEDITOR.skin.name="moono";CKEDITOR.skin.ua_editor="ie,iequirks,ie7,ie8,gecko";CKEDITOR.skin.ua_dialog="ie,iequirks,ie7,ie8,opera";
CKEDITOR.skin.chameleon=function(){var b=function(){return function(b,e){for(var a=b.match(/[^#]./g),c=0;3>c;c++){var f=a,h=c,d;d=parseInt(a[c],16);d=("0"+(0>e?0|d*(1+e):0|d+(255-d)*e).toString(16)).slice(-2);f[h]=d}return"#"+a.join("")}}(),c=function(){var b=new CKEDITOR.template("background:#{to};background-image:-webkit-gradient(linear,lefttop,leftbottom,from({from}),to({to}));background-image:-moz-linear-gradient(top,{from},{to});background-image:-webkit-linear-gradient(top,{from},{to});background-image:-o-linear-gradient(top,{from},{to});background-image:-ms-linear-gradient(top,{from},{to});background-image:linear-gradient(top,{from},{to});filter:progid:DXImageTransform.Microsoft.gradient(gradientType=0,startColorstr='{from}',endColorstr='{to}');");return function(c,
a){return b.output({from:c,to:a})}}(),f={editor:new CKEDITOR.template("{id}.cke_chrome [border-color:{defaultBorder};] {id} .cke_top [ {defaultGradient}border-bottom-color:{defaultBorder};] {id} .cke_bottom [{defaultGradient}border-top-color:{defaultBorder};] {id} .cke_resizer [border-right-color:{ckeResizer}] {id} .cke_dialog_title [{defaultGradient}border-bottom-color:{defaultBorder};] {id} .cke_dialog_footer [{defaultGradient}outline-color:{defaultBorder};border-top-color:{defaultBorder};] {id} .cke_dialog_tab [{lightGradient}border-color:{defaultBorder};] {id} .cke_dialog_tab:hover [{mediumGradient}] {id} .cke_dialog_contents [border-top-color:{defaultBorder};] {id} .cke_dialog_tab_selected, {id} .cke_dialog_tab_selected:hover [background:{dialogTabSelected};border-bottom-color:{dialogTabSelectedBorder};] {id} .cke_dialog_body [background:{dialogBody};border-color:{defaultBorder};] {id} .cke_toolgroup [{lightGradient}border-color:{defaultBorder};] {id} a.cke_button_off:hover, {id} a.cke_button_off:focus, {id} a.cke_button_off:active [{mediumGradient}] {id} .cke_button_on [{ckeButtonOn}] {id} .cke_toolbar_separator [background-color: {ckeToolbarSeparator};] {id} .cke_combo_button [border-color:{defaultBorder};{lightGradient}] {id} a.cke_combo_button:hover, {id} a.cke_combo_button:focus, {id} .cke_combo_on a.cke_combo_button [border-color:{defaultBorder};{mediumGradient}] {id} .cke_path_item [color:{elementsPathColor};] {id} a.cke_path_item:hover, {id} a.cke_path_item:focus, {id} a.cke_path_item:active [background-color:{elementsPathBg};] {id}.cke_panel [border-color:{defaultBorder};] "),
panel:new CKEDITOR.template(".cke_panel_grouptitle [{lightGradient}border-color:{defaultBorder};] .cke_menubutton_icon [background-color:{menubuttonIcon};] .cke_menubutton:hover .cke_menubutton_icon, .cke_menubutton:focus .cke_menubutton_icon, .cke_menubutton:active .cke_menubutton_icon [background-color:{menubuttonIconHover};] .cke_menuseparator [background-color:{menubuttonIcon};] a:hover.cke_colorbox, a:focus.cke_colorbox, a:active.cke_colorbox [border-color:{defaultBorder};] a:hover.cke_colorauto, a:hover.cke_colormore, a:focus.cke_colorauto, a:focus.cke_colormore, a:active.cke_colorauto, a:active.cke_colormore [background-color:{ckeColorauto};border-color:{defaultBorder};] ")};
return function(g,e){var a=g.uiColor,a={id:"."+g.id,defaultBorder:b(a,-0.1),defaultGradient:c(b(a,0.9),a),lightGradient:c(b(a,1),b(a,0.7)),mediumGradient:c(b(a,0.8),b(a,0.5)),ckeButtonOn:c(b(a,0.6),b(a,0.7)),ckeResizer:b(a,-0.4),ckeToolbarSeparator:b(a,0.5),ckeColorauto:b(a,0.8),dialogBody:b(a,0.7),dialogTabSelected:c("#FFFFFF","#FFFFFF"),dialogTabSelectedBorder:"#FFF",elementsPathColor:b(a,-0.6),elementsPathBg:a,menubuttonIcon:b(a,0.5),menubuttonIconHover:b(a,0.3)};return f[e].output(a).replace(/\[/g,
"{").replace(/\]/g,"}")}}();CKEDITOR.plugins.add("dialogui",{onLoad:function(){var h=function(b){this._||(this._={});this._["default"]=this._.initValue=b["default"]||"";this._.required=b.required||!1;for(var a=[this._],d=1;d<arguments.length;d++)a.push(arguments[d]);a.push(!0);CKEDITOR.tools.extend.apply(CKEDITOR.tools,a);return this._},r={build:function(b,a,d){return new CKEDITOR.ui.dialog.textInput(b,a,d)}},l={build:function(b,a,d){return new CKEDITOR.ui.dialog[a.type](b,a,d)}},n={isChanged:function(){return this.getValue()!=
this.getInitValue()},reset:function(b){this.setValue(this.getInitValue(),b)},setInitValue:function(){this._.initValue=this.getValue()},resetInitValue:function(){this._.initValue=this._["default"]},getInitValue:function(){return this._.initValue}},o=CKEDITOR.tools.extend({},CKEDITOR.ui.dialog.uiElement.prototype.eventProcessors,{onChange:function(b,a){this._.domOnChangeRegistered||(b.on("load",function(){this.getInputElement().on("change",function(){b.parts.dialog.isVisible()&&this.fire("change",{value:this.getValue()})},
this)},this),this._.domOnChangeRegistered=!0);this.on("change",a)}},!0),s=/^on([A-Z]\w+)/,p=function(b){for(var a in b)(s.test(a)||"title"==a||"type"==a)&&delete b[a];return b};CKEDITOR.tools.extend(CKEDITOR.ui.dialog,{labeledElement:function(b,a,d,e){if(!(4>arguments.length)){var c=h.call(this,a);c.labelId=CKEDITOR.tools.getNextId()+"_label";this._.children=[];CKEDITOR.ui.dialog.uiElement.call(this,b,a,d,"div",null,{role:"presentation"},function(){var f=[],d=a.required?" cke_required":"";"horizontal"!=
a.labelLayout?f.push('<label class="cke_dialog_ui_labeled_label'+d+'" ',' id="'+c.labelId+'"',c.inputId?' for="'+c.inputId+'"':"",(a.labelStyle?' style="'+a.labelStyle+'"':"")+">",a.label,"</label>",'<div class="cke_dialog_ui_labeled_content"'+(a.controlStyle?' style="'+a.controlStyle+'"':"")+' role="presentation">',e.call(this,b,a),"</div>"):(d={type:"hbox",widths:a.widths,padding:0,children:[{type:"html",html:'<label class="cke_dialog_ui_labeled_label'+d+'" id="'+c.labelId+'" for="'+c.inputId+'"'+
(a.labelStyle?' style="'+a.labelStyle+'"':"")+">"+CKEDITOR.tools.htmlEncode(a.label)+"</span>"},{type:"html",html:'<span class="cke_dialog_ui_labeled_content"'+(a.controlStyle?' style="'+a.controlStyle+'"':"")+">"+e.call(this,b,a)+"</span>"}]},CKEDITOR.dialog._.uiElementBuilders.hbox.build(b,d,f));return f.join("")})}},textInput:function(b,a,d){if(!(3>arguments.length)){h.call(this,a);var e=this._.inputId=CKEDITOR.tools.getNextId()+"_textInput",c={"class":"cke_dialog_ui_input_"+a.type,id:e,type:a.type};
a.validate&&(this.validate=a.validate);a.maxLength&&(c.maxlength=a.maxLength);a.size&&(c.size=a.size);a.inputStyle&&(c.style=a.inputStyle);var f=this,i=!1;b.on("load",function(){f.getInputElement().on("keydown",function(a){a.data.getKeystroke()==13&&(i=true)});f.getInputElement().on("keyup",function(a){if(a.data.getKeystroke()==13&&i){b.getButton("ok")&&setTimeout(function(){b.getButton("ok").click()},0);i=false}},null,null,1E3)});CKEDITOR.ui.dialog.labeledElement.call(this,b,a,d,function(){var b=
['<div class="cke_dialog_ui_input_',a.type,'" role="presentation"'];a.width&&b.push('style="width:'+a.width+'" ');b.push("><input ");c["aria-labelledby"]=this._.labelId;this._.required&&(c["aria-required"]=this._.required);for(var f in c)b.push(f+'="'+c[f]+'" ');b.push(" /></div>");return b.join("")})}},textarea:function(b,a,d){if(!(3>arguments.length)){h.call(this,a);var e=this,c=this._.inputId=CKEDITOR.tools.getNextId()+"_textarea",f={};a.validate&&(this.validate=a.validate);f.rows=a.rows||5;f.cols=
a.cols||20;f["class"]="cke_dialog_ui_input_textarea "+(a["class"]||"");"undefined"!=typeof a.inputStyle&&(f.style=a.inputStyle);a.dir&&(f.dir=a.dir);CKEDITOR.ui.dialog.labeledElement.call(this,b,a,d,function(){f["aria-labelledby"]=this._.labelId;this._.required&&(f["aria-required"]=this._.required);var a=['<div class="cke_dialog_ui_input_textarea" role="presentation"><textarea id="',c,'" '],b;for(b in f)a.push(b+'="'+CKEDITOR.tools.htmlEncode(f[b])+'" ');a.push(">",CKEDITOR.tools.htmlEncode(e._["default"]),
"</textarea></div>");return a.join("")})}},checkbox:function(b,a,d){if(!(3>arguments.length)){var e=h.call(this,a,{"default":!!a["default"]});a.validate&&(this.validate=a.validate);CKEDITOR.ui.dialog.uiElement.call(this,b,a,d,"span",null,null,function(){var c=CKEDITOR.tools.extend({},a,{id:a.id?a.id+"_checkbox":CKEDITOR.tools.getNextId()+"_checkbox"},true),f=[],d=CKEDITOR.tools.getNextId()+"_label",g={"class":"cke_dialog_ui_checkbox_input",type:"checkbox","aria-labelledby":d};p(c);if(a["default"])g.checked=
"checked";if(typeof c.inputStyle!="undefined")c.style=c.inputStyle;e.checkbox=new CKEDITOR.ui.dialog.uiElement(b,c,f,"input",null,g);f.push(' <label id="',d,'" for="',g.id,'"'+(a.labelStyle?' style="'+a.labelStyle+'"':"")+">",CKEDITOR.tools.htmlEncode(a.label),"</label>");return f.join("")})}},radio:function(b,a,d){if(!(3>arguments.length)){h.call(this,a);this._["default"]||(this._["default"]=this._.initValue=a.items[0][1]);a.validate&&(this.validate=a.valdiate);var e=[],c=this;CKEDITOR.ui.dialog.labeledElement.call(this,
b,a,d,function(){for(var f=[],d=[],g=a.id?a.id+"_radio":CKEDITOR.tools.getNextId()+"_radio",k=0;k<a.items.length;k++){var j=a.items[k],h=j[2]!==void 0?j[2]:j[0],l=j[1]!==void 0?j[1]:j[0],m=CKEDITOR.tools.getNextId()+"_radio_input",n=m+"_label",m=CKEDITOR.tools.extend({},a,{id:m,title:null,type:null},true),h=CKEDITOR.tools.extend({},m,{title:h},true),o={type:"radio","class":"cke_dialog_ui_radio_input",name:g,value:l,"aria-labelledby":n},q=[];if(c._["default"]==l)o.checked="checked";p(m);p(h);if(typeof m.inputStyle!=
"undefined")m.style=m.inputStyle;e.push(new CKEDITOR.ui.dialog.uiElement(b,m,q,"input",null,o));q.push(" ");new CKEDITOR.ui.dialog.uiElement(b,h,q,"label",null,{id:n,"for":o.id},j[0]);f.push(q.join(""))}new CKEDITOR.ui.dialog.hbox(b,e,f,d);return d.join("")});this._.children=e}},button:function(b,a,d){if(arguments.length){"function"==typeof a&&(a=a(b.getParentEditor()));h.call(this,a,{disabled:a.disabled||!1});CKEDITOR.event.implementOn(this);var e=this;b.on("load",function(){var a=this.getElement();
(function(){a.on("click",e.click,e);a.on("keydown",function(a){a.data.getKeystroke()in{32:1}&&(e.click(),a.data.preventDefault())})})();a.unselectable()},this);var c=CKEDITOR.tools.extend({},a);delete c.style;var f=CKEDITOR.tools.getNextId()+"_label";CKEDITOR.ui.dialog.uiElement.call(this,b,c,d,"a",null,{style:a.style,href:"javascript:void(0)",title:a.label,hidefocus:"true","class":a["class"],role:"button","aria-labelledby":f},'<span id="'+f+'" class="cke_dialog_ui_button">'+CKEDITOR.tools.htmlEncode(a.label)+
"</span>")}},select:function(b,a,d){if(!(3>arguments.length)){var e=h.call(this,a);a.validate&&(this.validate=a.validate);e.inputId=CKEDITOR.tools.getNextId()+"_select";CKEDITOR.ui.dialog.labeledElement.call(this,b,a,d,function(){var c=CKEDITOR.tools.extend({},a,{id:a.id?a.id+"_select":CKEDITOR.tools.getNextId()+"_select"},true),d=[],i=[],g={id:e.inputId,"class":"cke_dialog_ui_input_select","aria-labelledby":this._.labelId};d.push('<div class="cke_dialog_ui_input_',a.type,'" role="presentation"');
a.width&&d.push('style="width:'+a.width+'" ');d.push(">");if(a.size!=void 0)g.size=a.size;if(a.multiple!=void 0)g.multiple=a.multiple;p(c);for(var k=0,j;k<a.items.length&&(j=a.items[k]);k++)i.push('<option value="',CKEDITOR.tools.htmlEncode(j[1]!==void 0?j[1]:j[0]).replace(/"/g,"&quot;"),'" /> ',CKEDITOR.tools.htmlEncode(j[0]));if(typeof c.inputStyle!="undefined")c.style=c.inputStyle;e.select=new CKEDITOR.ui.dialog.uiElement(b,c,d,"select",null,g,i.join(""));d.push("</div>");return d.join("")})}},
file:function(b,a,d){if(!(3>arguments.length)){void 0===a["default"]&&(a["default"]="");var e=CKEDITOR.tools.extend(h.call(this,a),{definition:a,buttons:[]});a.validate&&(this.validate=a.validate);b.on("load",function(){CKEDITOR.document.getById(e.frameId).getParent().addClass("cke_dialog_ui_input_file")});CKEDITOR.ui.dialog.labeledElement.call(this,b,a,d,function(){e.frameId=CKEDITOR.tools.getNextId()+"_fileInput";var b=CKEDITOR.env.isCustomDomain(),d=['<iframe frameborder="0" allowtransparency="0" class="cke_dialog_ui_input_file" role="presentation" id="',
e.frameId,'" title="',a.label,'" src="javascript:void('];d.push(b?"(function(){document.open();document.domain='"+document.domain+"';document.close();})()":"0");d.push(')"></iframe>');return d.join("")})}},fileButton:function(b,a,d){if(!(3>arguments.length)){h.call(this,a);var e=this;a.validate&&(this.validate=a.validate);var c=CKEDITOR.tools.extend({},a),f=c.onClick;c.className=(c.className?c.className+" ":"")+"cke_dialog_ui_button";c.onClick=function(c){var d=a["for"];if(!f||f.call(this,c)!==false){b.getContentElement(d[0],
d[1]).submit();this.disable()}};b.on("load",function(){b.getContentElement(a["for"][0],a["for"][1])._.buttons.push(e)});CKEDITOR.ui.dialog.button.call(this,b,c,d)}},html:function(){var b=/^\s*<[\w:]+\s+([^>]*)?>/,a=/^(\s*<[\w:]+(?:\s+[^>]*)?)((?:.|\r|\n)+)$/,d=/\/$/;return function(e,c,f){if(!(3>arguments.length)){var i=[],g=c.html;"<"!=g.charAt(0)&&(g="<span>"+g+"</span>");var k=c.focus;if(k){var j=this.focus;this.focus=function(){("function"==typeof k?k:j).call(this);this.fire("focus")};c.isFocusable&&
(this.isFocusable=this.isFocusable);this.keyboardFocusable=!0}CKEDITOR.ui.dialog.uiElement.call(this,e,c,i,"span",null,null,"");i=i.join("").match(b);g=g.match(a)||["","",""];d.test(g[1])&&(g[1]=g[1].slice(0,-1),g[2]="/"+g[2]);f.push([g[1]," ",i[1]||"",g[2]].join(""))}}}(),fieldset:function(b,a,d,e,c){var f=c.label;this._={children:a};CKEDITOR.ui.dialog.uiElement.call(this,b,c,e,"fieldset",null,null,function(){var a=[];f&&a.push("<legend"+(c.labelStyle?' style="'+c.labelStyle+'"':"")+">"+f+"</legend>");
for(var b=0;b<d.length;b++)a.push(d[b]);return a.join("")})}},!0);CKEDITOR.ui.dialog.html.prototype=new CKEDITOR.ui.dialog.uiElement;CKEDITOR.ui.dialog.labeledElement.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement,{setLabel:function(b){var a=CKEDITOR.document.getById(this._.labelId);1>a.getChildCount()?(new CKEDITOR.dom.text(b,CKEDITOR.document)).appendTo(a):a.getChild(0).$.nodeValue=b;return this},getLabel:function(){var b=CKEDITOR.document.getById(this._.labelId);return!b||1>b.getChildCount()?
"":b.getChild(0).getText()},eventProcessors:o},!0);CKEDITOR.ui.dialog.button.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement,{click:function(){return!this._.disabled?this.fire("click",{dialog:this._.dialog}):!1},enable:function(){this._.disabled=!1;var b=this.getElement();b&&b.removeClass("cke_disabled")},disable:function(){this._.disabled=!0;this.getElement().addClass("cke_disabled")},isVisible:function(){return this.getElement().getFirst().isVisible()},isEnabled:function(){return!this._.disabled},
eventProcessors:CKEDITOR.tools.extend({},CKEDITOR.ui.dialog.uiElement.prototype.eventProcessors,{onClick:function(b,a){this.on("click",function(){a.apply(this,arguments)})}},!0),accessKeyUp:function(){this.click()},accessKeyDown:function(){this.focus()},keyboardFocusable:!0},!0);CKEDITOR.ui.dialog.textInput.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.labeledElement,{getInputElement:function(){return CKEDITOR.document.getById(this._.inputId)},focus:function(){var b=this.selectParentTab();
setTimeout(function(){var a=b.getInputElement();a&&a.$.focus()},0)},select:function(){var b=this.selectParentTab();setTimeout(function(){var a=b.getInputElement();a&&(a.$.focus(),a.$.select())},0)},accessKeyUp:function(){this.select()},setValue:function(b){!b&&(b="");return CKEDITOR.ui.dialog.uiElement.prototype.setValue.apply(this,arguments)},keyboardFocusable:!0},n,!0);CKEDITOR.ui.dialog.textarea.prototype=new CKEDITOR.ui.dialog.textInput;CKEDITOR.ui.dialog.select.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.labeledElement,
{getInputElement:function(){return this._.select.getElement()},add:function(b,a,d){var e=new CKEDITOR.dom.element("option",this.getDialog().getParentEditor().document),c=this.getInputElement().$;e.$.text=b;e.$.value=void 0===a||null===a?b:a;void 0===d||null===d?CKEDITOR.env.ie?c.add(e.$):c.add(e.$,null):c.add(e.$,d);return this},remove:function(b){this.getInputElement().$.remove(b);return this},clear:function(){for(var b=this.getInputElement().$;0<b.length;)b.remove(0);return this},keyboardFocusable:!0},
n,!0);CKEDITOR.ui.dialog.checkbox.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement,{getInputElement:function(){return this._.checkbox.getElement()},setValue:function(b,a){this.getInputElement().$.checked=b;!a&&this.fire("change",{value:b})},getValue:function(){return this.getInputElement().$.checked},accessKeyUp:function(){this.setValue(!this.getValue())},eventProcessors:{onChange:function(b,a){if(!CKEDITOR.env.ie||8<CKEDITOR.env.version)return o.onChange.apply(this,arguments);b.on("load",
function(){var a=this._.checkbox.getElement();a.on("propertychange",function(b){b=b.data.$;"checked"==b.propertyName&&this.fire("change",{value:a.$.checked})},this)},this);this.on("change",a);return null}},keyboardFocusable:!0},n,!0);CKEDITOR.ui.dialog.radio.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement,{setValue:function(b,a){for(var d=this._.children,e,c=0;c<d.length&&(e=d[c]);c++)e.getElement().$.checked=e.getValue()==b;!a&&this.fire("change",{value:b})},getValue:function(){for(var b=
this._.children,a=0;a<b.length;a++)if(b[a].getElement().$.checked)return b[a].getValue();return null},accessKeyUp:function(){var b=this._.children,a;for(a=0;a<b.length;a++)if(b[a].getElement().$.checked){b[a].getElement().focus();return}b[0].getElement().focus()},eventProcessors:{onChange:function(b,a){if(CKEDITOR.env.ie)b.on("load",function(){for(var a=this._.children,b=this,c=0;c<a.length;c++)a[c].getElement().on("propertychange",function(a){a=a.data.$;"checked"==a.propertyName&&this.$.checked&&
b.fire("change",{value:this.getAttribute("value")})})},this),this.on("change",a);else return o.onChange.apply(this,arguments);return null}},keyboardFocusable:!0},n,!0);CKEDITOR.ui.dialog.file.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.labeledElement,n,{getInputElement:function(){var b=CKEDITOR.document.getById(this._.frameId).getFrameDocument();return 0<b.$.forms.length?new CKEDITOR.dom.element(b.$.forms[0].elements[0]):this.getElement()},submit:function(){this.getInputElement().getParent().$.submit();
return this},getAction:function(){return this.getInputElement().getParent().$.action},registerEvents:function(b){var a=/^on([A-Z]\w+)/,d,e=function(a,b,c,d){a.on("formLoaded",function(){a.getInputElement().on(c,d,a)})},c;for(c in b)if(d=c.match(a))this.eventProcessors[c]?this.eventProcessors[c].call(this,this._.dialog,b[c]):e(this,this._.dialog,d[1].toLowerCase(),b[c]);return this},reset:function(){function b(){d.$.open();CKEDITOR.env.isCustomDomain()&&(d.$.domain=document.domain);var b="";e.size&&
(b=e.size-(CKEDITOR.env.ie?7:0));var h=a.frameId+"_input";d.$.write(['<html dir="'+g+'" lang="'+k+'"><head><title></title></head><body style="margin: 0; overflow: hidden; background: transparent;">','<form enctype="multipart/form-data" method="POST" dir="'+g+'" lang="'+k+'" action="',CKEDITOR.tools.htmlEncode(e.action),'"><label id="',a.labelId,'" for="',h,'" style="display:none">',CKEDITOR.tools.htmlEncode(e.label),'</label><input id="',h,'" aria-labelledby="',a.labelId,'" type="file" name="',CKEDITOR.tools.htmlEncode(e.id||
"cke_upload"),'" size="',CKEDITOR.tools.htmlEncode(0<b?b:""),'" /></form></body></html>',"<script>window.parent.CKEDITOR.tools.callFunction("+f+");","window.onbeforeunload = function() {window.parent.CKEDITOR.tools.callFunction("+i+")}<\/script>"].join(""));d.$.close();for(b=0;b<c.length;b++)c[b].enable()}var a=this._,d=CKEDITOR.document.getById(a.frameId).getFrameDocument(),e=a.definition,c=a.buttons,f=this.formLoadedNumber,i=this.formUnloadNumber,g=a.dialog._.editor.lang.dir,k=a.dialog._.editor.langCode;
f||(f=this.formLoadedNumber=CKEDITOR.tools.addFunction(function(){this.fire("formLoaded")},this),i=this.formUnloadNumber=CKEDITOR.tools.addFunction(function(){this.getInputElement().clearCustomData()},this),this.getDialog()._.editor.on("destroy",function(){CKEDITOR.tools.removeFunction(f);CKEDITOR.tools.removeFunction(i)}));CKEDITOR.env.gecko?setTimeout(b,500):b()},getValue:function(){return this.getInputElement().$.value||""},setInitValue:function(){this._.initValue=""},eventProcessors:{onChange:function(b,
a){this._.domOnChangeRegistered||(this.on("formLoaded",function(){this.getInputElement().on("change",function(){this.fire("change",{value:this.getValue()})},this)},this),this._.domOnChangeRegistered=!0);this.on("change",a)}},keyboardFocusable:!0},!0);CKEDITOR.ui.dialog.fileButton.prototype=new CKEDITOR.ui.dialog.button;CKEDITOR.ui.dialog.fieldset.prototype=CKEDITOR.tools.clone(CKEDITOR.ui.dialog.hbox.prototype);CKEDITOR.dialog.addUIElement("text",r);CKEDITOR.dialog.addUIElement("password",r);CKEDITOR.dialog.addUIElement("textarea",
l);CKEDITOR.dialog.addUIElement("checkbox",l);CKEDITOR.dialog.addUIElement("radio",l);CKEDITOR.dialog.addUIElement("button",l);CKEDITOR.dialog.addUIElement("select",l);CKEDITOR.dialog.addUIElement("file",l);CKEDITOR.dialog.addUIElement("fileButton",l);CKEDITOR.dialog.addUIElement("html",l);CKEDITOR.dialog.addUIElement("fieldset",{build:function(b,a,d){for(var e=a.children,c,f=[],i=[],g=0;g<e.length&&(c=e[g]);g++){var h=[];f.push(h);i.push(CKEDITOR.dialog._.uiElementBuilders[c.type].build(b,c,h))}return new CKEDITOR.ui.dialog[a.type](b,
i,f,d,a)}})}});CKEDITOR.DIALOG_RESIZE_NONE=0;CKEDITOR.DIALOG_RESIZE_WIDTH=1;CKEDITOR.DIALOG_RESIZE_HEIGHT=2;CKEDITOR.DIALOG_RESIZE_BOTH=3;
(function(){function p(){for(var a=this._.tabIdList.length,b=CKEDITOR.tools.indexOf(this._.tabIdList,this._.currentTabId)+a,c=b-1;c>b-a;c--)if(this._.tabs[this._.tabIdList[c%a]][0].$.offsetHeight)return this._.tabIdList[c%a];return null}function u(){for(var a=this._.tabIdList.length,b=CKEDITOR.tools.indexOf(this._.tabIdList,this._.currentTabId),c=b+1;c<b+a;c++)if(this._.tabs[this._.tabIdList[c%a]][0].$.offsetHeight)return this._.tabIdList[c%a];return null}function q(a,b){for(var c=a.$.getElementsByTagName("input"),
e=0,d=c.length;e<d;e++){var g=new CKEDITOR.dom.element(c[e]);"text"==g.getAttribute("type").toLowerCase()&&(b?(g.setAttribute("value",g.getCustomData("fake_value")||""),g.removeCustomData("fake_value")):(g.setCustomData("fake_value",g.getAttribute("value")),g.setAttribute("value","")))}}function P(a,b){var c=this.getInputElement();c&&(a?c.removeAttribute("aria-invalid"):c.setAttribute("aria-invalid",!0));a||(this.select?this.select():this.focus());b&&alert(b);this.fire("validated",{valid:a,msg:b})}
function Q(){var a=this.getInputElement();a&&a.removeAttribute("aria-invalid")}function R(a){var a=CKEDITOR.dom.element.createFromHtml(CKEDITOR.addTemplate("dialog",S).output({id:CKEDITOR.tools.getNextNumber(),editorId:a.id,langDir:a.lang.dir,langCode:a.langCode,editorDialogClass:"cke_editor_"+a.name.replace(/\./g,"\\.")+"_dialog",closeTitle:a.lang.common.close})),b=a.getChild([0,0,0,0,0]),c=b.getChild(0),e=b.getChild(1);if(CKEDITOR.env.ie&&!CKEDITOR.env.ie6Compat){var d=CKEDITOR.env.isCustomDomain(),
d="javascript:void(function(){"+encodeURIComponent("document.open();"+(d?'document.domain="'+document.domain+'";':"")+"document.close();")+"}())";CKEDITOR.dom.element.createFromHtml('<iframe frameBorder="0" class="cke_iframe_shim" src="'+d+'" tabIndex="-1"></iframe>').appendTo(b.getParent())}c.unselectable();e.unselectable();return{element:a,parts:{dialog:a.getChild(0),title:c,close:e,tabs:b.getChild(2),contents:b.getChild([3,0,0,0]),footer:b.getChild([3,0,1,0])}}}function H(a,b,c){this.element=b;
this.focusIndex=c;this.tabIndex=0;this.isFocusable=function(){return!b.getAttribute("disabled")&&b.isVisible()};this.focus=function(){a._.currentFocusIndex=this.focusIndex;this.element.focus()};b.on("keydown",function(a){a.data.getKeystroke()in{32:1,13:1}&&this.fire("click")});b.on("focus",function(){this.fire("mouseover")});b.on("blur",function(){this.fire("mouseout")})}function T(a){function b(){a.layout()}var c=CKEDITOR.document.getWindow();c.on("resize",b);a.on("hide",function(){c.removeListener("resize",
b)})}function I(a,b){this._={dialog:a};CKEDITOR.tools.extend(this,b)}function U(a){function b(b){var c=a.getSize(),h=CKEDITOR.document.getWindow().getViewPaneSize(),o=b.data.$.screenX,i=b.data.$.screenY,n=o-e.x,l=i-e.y;e={x:o,y:i};d.x+=n;d.y+=l;a.move(d.x+k[3]<f?-k[3]:d.x-k[1]>h.width-c.width-f?h.width-c.width+("rtl"==g.lang.dir?0:k[1]):d.x,d.y+k[0]<f?-k[0]:d.y-k[2]>h.height-c.height-f?h.height-c.height+k[2]:d.y,1);b.data.preventDefault()}function c(){CKEDITOR.document.removeListener("mousemove",
b);CKEDITOR.document.removeListener("mouseup",c);if(CKEDITOR.env.ie6Compat){var a=r.getChild(0).getFrameDocument();a.removeListener("mousemove",b);a.removeListener("mouseup",c)}}var e=null,d=null;a.getElement().getFirst();var g=a.getParentEditor(),f=g.config.dialog_magnetDistance,k=CKEDITOR.skin.margins||[0,0,0,0];"undefined"==typeof f&&(f=20);a.parts.title.on("mousedown",function(f){e={x:f.data.$.screenX,y:f.data.$.screenY};CKEDITOR.document.on("mousemove",b);CKEDITOR.document.on("mouseup",c);d=
a.getPosition();if(CKEDITOR.env.ie6Compat){var g=r.getChild(0).getFrameDocument();g.on("mousemove",b);g.on("mouseup",c)}f.data.preventDefault()},a)}function V(a){var b,c;function e(d){var e="rtl"==k.lang.dir,i=o.width,D=o.height,E=i+(d.data.$.screenX-b)*(e?-1:1)*(a._.moved?1:2),n=D+(d.data.$.screenY-c)*(a._.moved?1:2),x=a._.element.getFirst(),x=e&&x.getComputedStyle("right"),y=a.getPosition();y.y+n>h.height&&(n=h.height-y.y);if((e?x:y.x)+E>h.width)E=h.width-(e?x:y.x);if(f==CKEDITOR.DIALOG_RESIZE_WIDTH||
f==CKEDITOR.DIALOG_RESIZE_BOTH)i=Math.max(g.minWidth||0,E-m);if(f==CKEDITOR.DIALOG_RESIZE_HEIGHT||f==CKEDITOR.DIALOG_RESIZE_BOTH)D=Math.max(g.minHeight||0,n-j);a.resize(i,D);a._.moved||a.layout();d.data.preventDefault()}function d(){CKEDITOR.document.removeListener("mouseup",d);CKEDITOR.document.removeListener("mousemove",e);i&&(i.remove(),i=null);if(CKEDITOR.env.ie6Compat){var a=r.getChild(0).getFrameDocument();a.removeListener("mouseup",d);a.removeListener("mousemove",e)}}var g=a.definition,f=g.resizable;
if(f!=CKEDITOR.DIALOG_RESIZE_NONE){var k=a.getParentEditor(),m,j,h,o,i,n=CKEDITOR.tools.addFunction(function(f){o=a.getSize();var g=a.parts.contents;g.$.getElementsByTagName("iframe").length&&(i=CKEDITOR.dom.element.createFromHtml('<div class="cke_dialog_resize_cover" style="height: 100%; position: absolute; width: 100%;"></div>'),g.append(i));j=o.height-a.parts.contents.getSize("height",!(CKEDITOR.env.gecko||CKEDITOR.env.opera||CKEDITOR.env.ie&&CKEDITOR.env.quirks));m=o.width-a.parts.contents.getSize("width",
1);b=f.screenX;c=f.screenY;h=CKEDITOR.document.getWindow().getViewPaneSize();CKEDITOR.document.on("mousemove",e);CKEDITOR.document.on("mouseup",d);CKEDITOR.env.ie6Compat&&(g=r.getChild(0).getFrameDocument(),g.on("mousemove",e),g.on("mouseup",d));f.preventDefault&&f.preventDefault()});a.on("load",function(){var b="";f==CKEDITOR.DIALOG_RESIZE_WIDTH?b=" cke_resizer_horizontal":f==CKEDITOR.DIALOG_RESIZE_HEIGHT&&(b=" cke_resizer_vertical");b=CKEDITOR.dom.element.createFromHtml('<div class="cke_resizer'+
b+" cke_resizer_"+k.lang.dir+'" title="'+CKEDITOR.tools.htmlEncode(k.lang.common.resize)+'" onmousedown="CKEDITOR.tools.callFunction('+n+', event )">'+("ltr"==k.lang.dir?"◢":"◣")+"</div>");a.parts.footer.append(b,1)});k.on("destroy",function(){CKEDITOR.tools.removeFunction(n)})}}function F(a){a.data.preventDefault(1)}function J(a){var b=CKEDITOR.document.getWindow(),c=a.config,e=c.dialog_backgroundCoverColor||"white",d=c.dialog_backgroundCoverOpacity,g=c.baseFloatZIndex,c=CKEDITOR.tools.genKey(e,
d,g),f=w[c];if(f)f.show();else{g=['<div tabIndex="-1" style="position: ',CKEDITOR.env.ie6Compat?"absolute":"fixed","; z-index: ",g,"; top: 0px; left: 0px; ",!CKEDITOR.env.ie6Compat?"background-color: "+e:"",'" class="cke_dialog_background_cover">'];if(CKEDITOR.env.ie6Compat){var k=CKEDITOR.env.isCustomDomain(),e="<html><body style=\\'background-color:"+e+";\\'></body></html>";g.push('<iframe hidefocus="true" frameborder="0" id="cke_dialog_background_iframe" src="javascript:');g.push("void((function(){document.open();"+
(k?"document.domain='"+document.domain+"';":"")+"document.write( '"+e+"' );document.close();})())");g.push('" style="position:absolute;left:0;top:0;width:100%;height: 100%;filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0)"></iframe>')}g.push("</div>");f=CKEDITOR.dom.element.createFromHtml(g.join(""));f.setOpacity(void 0!=d?d:0.5);f.on("keydown",F);f.on("keypress",F);f.on("keyup",F);f.appendTo(CKEDITOR.document.getBody());w[c]=f}a.focusManager.add(f);r=f;var a=function(){var a=b.getViewPaneSize();
f.setStyles({width:a.width+"px",height:a.height+"px"})},m=function(){var a=b.getScrollPosition(),c=CKEDITOR.dialog._.currentTop;f.setStyles({left:a.x+"px",top:a.y+"px"});if(c){do a=c.getPosition(),c.move(a.x,a.y);while(c=c._.parentDialog)}};G=a;b.on("resize",a);a();(!CKEDITOR.env.mac||!CKEDITOR.env.webkit)&&f.focus();if(CKEDITOR.env.ie6Compat){var j=function(){m();arguments.callee.prevScrollHandler.apply(this,arguments)};b.$.setTimeout(function(){j.prevScrollHandler=window.onscroll||function(){};
window.onscroll=j},0);m()}}function K(a){r&&(a.focusManager.remove(r),a=CKEDITOR.document.getWindow(),r.hide(),a.removeListener("resize",G),CKEDITOR.env.ie6Compat&&a.$.setTimeout(function(){window.onscroll=window.onscroll&&window.onscroll.prevScrollHandler||null},0),G=null)}var s=CKEDITOR.tools.cssLength,S='<div class="cke cke_reset_all {editorId} {editorDialogClass}" dir="{langDir}" lang="{langCode}" role="application"><table class="cke_dialog '+CKEDITOR.env.cssClass+' cke_{langDir}" aria-labelledby="cke_dialog_title_{id}" style="position:absolute" role="dialog"><tr><td role="presentation"><div class="cke_dialog_body" role="presentation"><div id="cke_dialog_title_{id}" class="cke_dialog_title" role="presentation"></div><a id="cke_dialog_close_button_{id}" class="cke_dialog_close_button" href="javascript:void(0)" title="{closeTitle}" role="button"><span class="cke_label">X</span></a><div id="cke_dialog_tabs_{id}" class="cke_dialog_tabs" role="tablist"></div><table class="cke_dialog_contents" role="presentation"><tr><td id="cke_dialog_contents_{id}" class="cke_dialog_contents_body" role="presentation"></td></tr><tr><td id="cke_dialog_footer_{id}" class="cke_dialog_footer" role="presentation"></td></tr></table></div></td></tr></table></div>';
CKEDITOR.dialog=function(a,b){function c(){var a=l._.focusList;a.sort(function(a,b){return a.tabIndex!=b.tabIndex?b.tabIndex-a.tabIndex:a.focusIndex-b.focusIndex});for(var b=a.length,c=0;c<b;c++)a[c].focusIndex=c}function e(a){var b=l._.focusList,a=a||0;if(!(1>b.length)){var c=l._.currentFocusIndex;try{b[c].getInputElement().$.blur()}catch(f){}for(var d=c=(c+a+b.length)%b.length;a&&!b[d].isFocusable()&&!(d=(d+a+b.length)%b.length,d==c););b[d].focus();"text"==b[d].type&&b[d].select()}}function d(b){if(l==
CKEDITOR.dialog._.currentTop){var c=b.data.getKeystroke(),d="rtl"==a.lang.dir;o=i=0;if(9==c||c==CKEDITOR.SHIFT+9)c=c==CKEDITOR.SHIFT+9,l._.tabBarMode?(c=c?p.call(l):u.call(l),l.selectPage(c),l._.tabs[c][0].focus()):e(c?-1:1),o=1;else if(c==CKEDITOR.ALT+121&&!l._.tabBarMode&&1<l.getPageCount())l._.tabBarMode=!0,l._.tabs[l._.currentTabId][0].focus(),o=1;else if((37==c||39==c)&&l._.tabBarMode)c=c==(d?39:37)?p.call(l):u.call(l),l.selectPage(c),l._.tabs[c][0].focus(),o=1;else if((13==c||32==c)&&l._.tabBarMode)this.selectPage(this._.currentTabId),
this._.tabBarMode=!1,this._.currentFocusIndex=-1,e(1),o=1;else if(13==c){c=b.data.getTarget();if(!c.is("a","button","select","textarea")&&(!c.is("input")||"button"!=c.$.type))(c=this.getButton("ok"))&&CKEDITOR.tools.setTimeout(c.click,0,c),o=1;i=1}else if(27==c)(c=this.getButton("cancel"))?CKEDITOR.tools.setTimeout(c.click,0,c):!1!==this.fire("cancel",{hide:!0}).hide&&this.hide(),i=1;else return;g(b)}}function g(a){o?a.data.preventDefault(1):i&&a.data.stopPropagation()}var f=CKEDITOR.dialog._.dialogDefinitions[b],
k=CKEDITOR.tools.clone(W),m=a.config.dialog_buttonsOrder||"OS",j=a.lang.dir,h={},o,i;("OS"==m&&CKEDITOR.env.mac||"rtl"==m&&"ltr"==j||"ltr"==m&&"rtl"==j)&&k.buttons.reverse();f=CKEDITOR.tools.extend(f(a),k);f=CKEDITOR.tools.clone(f);f=new L(this,f);k=R(a);this._={editor:a,element:k.element,name:b,contentSize:{width:0,height:0},size:{width:0,height:0},contents:{},buttons:{},accessKeyMap:{},tabs:{},tabIdList:[],currentTabId:null,currentTabIndex:null,pageCount:0,lastTab:null,tabBarMode:!1,focusList:[],
currentFocusIndex:0,hasFocus:!1};this.parts=k.parts;CKEDITOR.tools.setTimeout(function(){a.fire("ariaWidget",this.parts.contents)},0,this);k={position:CKEDITOR.env.ie6Compat?"absolute":"fixed",top:0,visibility:"hidden"};k["rtl"==j?"right":"left"]=0;this.parts.dialog.setStyles(k);CKEDITOR.event.call(this);this.definition=f=CKEDITOR.fire("dialogDefinition",{name:b,definition:f},a).definition;if(!("removeDialogTabs"in a._)&&a.config.removeDialogTabs){k=a.config.removeDialogTabs.split(";");for(j=0;j<
k.length;j++)if(m=k[j].split(":"),2==m.length){var n=m[0];h[n]||(h[n]=[]);h[n].push(m[1])}a._.removeDialogTabs=h}if(a._.removeDialogTabs&&(h=a._.removeDialogTabs[b]))for(j=0;j<h.length;j++)f.removeContents(h[j]);if(f.onLoad)this.on("load",f.onLoad);if(f.onShow)this.on("show",f.onShow);if(f.onHide)this.on("hide",f.onHide);if(f.onOk)this.on("ok",function(b){a.fire("saveSnapshot");setTimeout(function(){a.fire("saveSnapshot")},0);!1===f.onOk.call(this,b)&&(b.data.hide=!1)});if(f.onCancel)this.on("cancel",
function(a){!1===f.onCancel.call(this,a)&&(a.data.hide=!1)});var l=this,C=function(a){var b=l._.contents,c=!1,d;for(d in b)for(var f in b[d])if(c=a.call(this,b[d][f]))return};this.on("ok",function(a){C(function(b){if(b.validate){var c=b.validate(this),d="string"==typeof c||!1===c;d&&(a.data.hide=!1,a.stop());P.call(b,!d,"string"==typeof c?c:void 0);return d}})},this,null,0);this.on("cancel",function(b){C(function(c){if(c.isChanged())return confirm(a.lang.common.confirmCancel)||(b.data.hide=!1),!0})},
this,null,0);this.parts.close.on("click",function(a){!1!==this.fire("cancel",{hide:!0}).hide&&this.hide();a.data.preventDefault()},this);this.changeFocus=e;var v=this._.element;a.focusManager.add(v,1);this.on("show",function(){v.on("keydown",d,this);if(CKEDITOR.env.opera||CKEDITOR.env.gecko)v.on("keypress",g,this)});this.on("hide",function(){v.removeListener("keydown",d);(CKEDITOR.env.opera||CKEDITOR.env.gecko)&&v.removeListener("keypress",g);C(function(a){Q.apply(a)})});this.on("iframeAdded",function(a){(new CKEDITOR.dom.document(a.data.iframe.$.contentWindow.document)).on("keydown",
d,this,null,0)});this.on("show",function(){c();if(a.config.dialog_startupFocusTab&&1<l._.pageCount)l._.tabBarMode=!0,l._.tabs[l._.currentTabId][0].focus();else if(!this._.hasFocus)if(this._.currentFocusIndex=-1,f.onFocus){var b=f.onFocus.call(this);b&&b.focus()}else e(1)},this,null,4294967295);if(CKEDITOR.env.ie6Compat)this.on("load",function(){var a=this.getElement(),b=a.getFirst();b.remove();b.appendTo(a)},this);U(this);V(this);(new CKEDITOR.dom.text(f.title,CKEDITOR.document)).appendTo(this.parts.title);
for(j=0;j<f.contents.length;j++)(h=f.contents[j])&&this.addPage(h);this.parts.tabs.on("click",function(a){var b=a.data.getTarget();b.hasClass("cke_dialog_tab")&&(b=b.$.id,this.selectPage(b.substring(4,b.lastIndexOf("_"))),this._.tabBarMode&&(this._.tabBarMode=!1,this._.currentFocusIndex=-1,e(1)),a.data.preventDefault())},this);j=[];h=CKEDITOR.dialog._.uiElementBuilders.hbox.build(this,{type:"hbox",className:"cke_dialog_footer_buttons",widths:[],children:f.buttons},j).getChild();this.parts.footer.setHtml(j.join(""));
for(j=0;j<h.length;j++)this._.buttons[h[j].id]=h[j]};CKEDITOR.dialog.prototype={destroy:function(){this.hide();this._.element.remove()},resize:function(){return function(a,b){if(!this._.contentSize||!(this._.contentSize.width==a&&this._.contentSize.height==b))CKEDITOR.dialog.fire("resize",{dialog:this,width:a,height:b},this._.editor),this.fire("resize",{width:a,height:b},this._.editor),this.parts.contents.setStyles({width:a+"px",height:b+"px"}),"rtl"==this._.editor.lang.dir&&this._.position&&(this._.position.x=
CKEDITOR.document.getWindow().getViewPaneSize().width-this._.contentSize.width-parseInt(this._.element.getFirst().getStyle("right"),10)),this._.contentSize={width:a,height:b}}}(),getSize:function(){var a=this._.element.getFirst();return{width:a.$.offsetWidth||0,height:a.$.offsetHeight||0}},move:function(a,b,c){var e=this._.element.getFirst(),d="rtl"==this._.editor.lang.dir,g="fixed"==e.getComputedStyle("position");CKEDITOR.env.ie&&e.setStyle("zoom","100%");if(!g||!this._.position||!(this._.position.x==
a&&this._.position.y==b))this._.position={x:a,y:b},g||(g=CKEDITOR.document.getWindow().getScrollPosition(),a+=g.x,b+=g.y),d&&(g=this.getSize(),a=CKEDITOR.document.getWindow().getViewPaneSize().width-g.width-a),b={top:(0<b?b:0)+"px"},b[d?"right":"left"]=(0<a?a:0)+"px",e.setStyles(b),c&&(this._.moved=1)},getPosition:function(){return CKEDITOR.tools.extend({},this._.position)},show:function(){var a=this._.element,b=this.definition;!a.getParent()||!a.getParent().equals(CKEDITOR.document.getBody())?a.appendTo(CKEDITOR.document.getBody()):
a.setStyle("display","block");if(CKEDITOR.env.gecko&&10900>CKEDITOR.env.version){var c=this.parts.dialog;c.setStyle("position","absolute");setTimeout(function(){c.setStyle("position","fixed")},0)}this.resize(this._.contentSize&&this._.contentSize.width||b.width||b.minWidth,this._.contentSize&&this._.contentSize.height||b.height||b.minHeight);this.reset();this.selectPage(this.definition.contents[0].id);null===CKEDITOR.dialog._.currentZIndex&&(CKEDITOR.dialog._.currentZIndex=this._.editor.config.baseFloatZIndex);
this._.element.getFirst().setStyle("z-index",CKEDITOR.dialog._.currentZIndex+=10);null===CKEDITOR.dialog._.currentTop?(CKEDITOR.dialog._.currentTop=this,this._.parentDialog=null,J(this._.editor)):(this._.parentDialog=CKEDITOR.dialog._.currentTop,this._.parentDialog.getElement().getFirst().$.style.zIndex-=Math.floor(this._.editor.config.baseFloatZIndex/2),CKEDITOR.dialog._.currentTop=this);a.on("keydown",M);a.on(CKEDITOR.env.opera?"keypress":"keyup",N);this._.hasFocus=!1;CKEDITOR.tools.setTimeout(function(){this.layout();
T(this);this.parts.dialog.setStyle("visibility","");this.fireOnce("load",{});CKEDITOR.ui.fire("ready",this);this.fire("show",{});this._.editor.fire("dialogShow",this);this._.parentDialog||this._.editor.focusManager.lock();this.foreach(function(a){a.setInitValue&&a.setInitValue()})},100,this)},layout:function(){var a=this.parts.dialog,b=this.getSize(),c=CKEDITOR.document.getWindow().getViewPaneSize(),e=(c.width-b.width)/2,d=(c.height-b.height)/2;CKEDITOR.env.ie6Compat||(b.height+(0<d?d:0)>c.height||
b.width+(0<e?e:0)>c.width?a.setStyle("position","absolute"):a.setStyle("position","fixed"));this.move(this._.moved?this._.position.x:e,this._.moved?this._.position.y:d)},foreach:function(a){for(var b in this._.contents)for(var c in this._.contents[b])a.call(this,this._.contents[b][c]);return this},reset:function(){var a=function(a){a.reset&&a.reset(1)};return function(){this.foreach(a);return this}}(),setupContent:function(){var a=arguments;this.foreach(function(b){b.setup&&b.setup.apply(b,a)})},
commitContent:function(){var a=arguments;this.foreach(function(b){CKEDITOR.env.ie&&this._.currentFocusIndex==b.focusIndex&&b.getInputElement().$.blur();b.commit&&b.commit.apply(b,a)})},hide:function(){if(this.parts.dialog.isVisible()){this.fire("hide",{});this._.editor.fire("dialogHide",this);this.selectPage(this._.tabIdList[0]);var a=this._.element;a.setStyle("display","none");this.parts.dialog.setStyle("visibility","hidden");for(X(this);CKEDITOR.dialog._.currentTop!=this;)CKEDITOR.dialog._.currentTop.hide();
if(this._.parentDialog){var b=this._.parentDialog.getElement().getFirst();b.setStyle("z-index",parseInt(b.$.style.zIndex,10)+Math.floor(this._.editor.config.baseFloatZIndex/2))}else K(this._.editor);if(CKEDITOR.dialog._.currentTop=this._.parentDialog)CKEDITOR.dialog._.currentZIndex-=10;else{CKEDITOR.dialog._.currentZIndex=null;a.removeListener("keydown",M);a.removeListener(CKEDITOR.env.opera?"keypress":"keyup",N);var c=this._.editor;c.focus();setTimeout(function(){c.focusManager.unlock()},0)}delete this._.parentDialog;
this.foreach(function(a){a.resetInitValue&&a.resetInitValue()})}},addPage:function(a){if(!a.requiredContent||this._.editor.filter.check(a.requiredContent)){for(var b=[],c=a.label?' title="'+CKEDITOR.tools.htmlEncode(a.label)+'"':"",e=CKEDITOR.dialog._.uiElementBuilders.vbox.build(this,{type:"vbox",className:"cke_dialog_page_contents",children:a.elements,expand:!!a.expand,padding:a.padding,style:a.style||"width: 100%;"},b),d=this._.contents[a.id]={},g=e.getChild(),f=0;e=g.shift();)!e.notAllowed&&("hbox"!=
e.type&&"vbox"!=e.type)&&f++,d[e.id]=e,"function"==typeof e.getChild&&g.push.apply(g,e.getChild());f||(a.hidden=!0);b=CKEDITOR.dom.element.createFromHtml(b.join(""));b.setAttribute("role","tabpanel");e=CKEDITOR.env;d="cke_"+a.id+"_"+CKEDITOR.tools.getNextNumber();c=CKEDITOR.dom.element.createFromHtml(['<a class="cke_dialog_tab"',0<this._.pageCount?" cke_last":"cke_first",c,a.hidden?' style="display:none"':"",' id="',d,'"',e.gecko&&10900<=e.version&&!e.hc?"":' href="javascript:void(0)"',' tabIndex="-1" hidefocus="true" role="tab">',
a.label,"</a>"].join(""));b.setAttribute("aria-labelledby",d);this._.tabs[a.id]=[c,b];this._.tabIdList.push(a.id);!a.hidden&&this._.pageCount++;this._.lastTab=c;this.updateStyle();b.setAttribute("name",a.id);b.appendTo(this.parts.contents);c.unselectable();this.parts.tabs.append(c);a.accessKey&&(O(this,this,"CTRL+"+a.accessKey,Y,Z),this._.accessKeyMap["CTRL+"+a.accessKey]=a.id)}},selectPage:function(a){if(this._.currentTabId!=a&&!0!==this.fire("selectPage",{page:a,currentPage:this._.currentTabId})){for(var b in this._.tabs){var c=
this._.tabs[b][0],e=this._.tabs[b][1];b!=a&&(c.removeClass("cke_dialog_tab_selected"),e.hide());e.setAttribute("aria-hidden",b!=a)}var d=this._.tabs[a];d[0].addClass("cke_dialog_tab_selected");CKEDITOR.env.ie6Compat||CKEDITOR.env.ie7Compat?(q(d[1]),d[1].show(),setTimeout(function(){q(d[1],1)},0)):d[1].show();this._.currentTabId=a;this._.currentTabIndex=CKEDITOR.tools.indexOf(this._.tabIdList,a)}},updateStyle:function(){this.parts.dialog[(1===this._.pageCount?"add":"remove")+"Class"]("cke_single_page")},
hidePage:function(a){var b=this._.tabs[a]&&this._.tabs[a][0];b&&(1!=this._.pageCount&&b.isVisible())&&(a==this._.currentTabId&&this.selectPage(p.call(this)),b.hide(),this._.pageCount--,this.updateStyle())},showPage:function(a){if(a=this._.tabs[a]&&this._.tabs[a][0])a.show(),this._.pageCount++,this.updateStyle()},getElement:function(){return this._.element},getName:function(){return this._.name},getContentElement:function(a,b){var c=this._.contents[a];return c&&c[b]},getValueOf:function(a,b){return this.getContentElement(a,
b).getValue()},setValueOf:function(a,b,c){return this.getContentElement(a,b).setValue(c)},getButton:function(a){return this._.buttons[a]},click:function(a){return this._.buttons[a].click()},disableButton:function(a){return this._.buttons[a].disable()},enableButton:function(a){return this._.buttons[a].enable()},getPageCount:function(){return this._.pageCount},getParentEditor:function(){return this._.editor},getSelectedElement:function(){return this.getParentEditor().getSelection().getSelectedElement()},
addFocusable:function(a,b){if("undefined"==typeof b)b=this._.focusList.length,this._.focusList.push(new H(this,a,b));else{this._.focusList.splice(b,0,new H(this,a,b));for(var c=b+1;c<this._.focusList.length;c++)this._.focusList[c].focusIndex++}}};CKEDITOR.tools.extend(CKEDITOR.dialog,{add:function(a,b){if(!this._.dialogDefinitions[a]||"function"==typeof b)this._.dialogDefinitions[a]=b},exists:function(a){return!!this._.dialogDefinitions[a]},getCurrent:function(){return CKEDITOR.dialog._.currentTop},
isTabEnabled:function(a,b,c){a=a.config.removeDialogTabs;return!(a&&a.match(RegExp("(?:^|;)"+b+":"+c+"(?:$|;)","i")))},okButton:function(){var a=function(a,c){c=c||{};return CKEDITOR.tools.extend({id:"ok",type:"button",label:a.lang.common.ok,"class":"cke_dialog_ui_button_ok",onClick:function(a){a=a.data.dialog;!1!==a.fire("ok",{hide:!0}).hide&&a.hide()}},c,!0)};a.type="button";a.override=function(b){return CKEDITOR.tools.extend(function(c){return a(c,b)},{type:"button"},!0)};return a}(),cancelButton:function(){var a=
function(a,c){c=c||{};return CKEDITOR.tools.extend({id:"cancel",type:"button",label:a.lang.common.cancel,"class":"cke_dialog_ui_button_cancel",onClick:function(a){a=a.data.dialog;!1!==a.fire("cancel",{hide:!0}).hide&&a.hide()}},c,!0)};a.type="button";a.override=function(b){return CKEDITOR.tools.extend(function(c){return a(c,b)},{type:"button"},!0)};return a}(),addUIElement:function(a,b){this._.uiElementBuilders[a]=b}});CKEDITOR.dialog._={uiElementBuilders:{},dialogDefinitions:{},currentTop:null,currentZIndex:null};
CKEDITOR.event.implementOn(CKEDITOR.dialog);CKEDITOR.event.implementOn(CKEDITOR.dialog.prototype);var W={resizable:CKEDITOR.DIALOG_RESIZE_BOTH,minWidth:600,minHeight:400,buttons:[CKEDITOR.dialog.okButton,CKEDITOR.dialog.cancelButton]},z=function(a,b,c){for(var e=0,d;d=a[e];e++)if(d.id==b||c&&d[c]&&(d=z(d[c],b,c)))return d;return null},A=function(a,b,c,e,d){if(c){for(var g=0,f;f=a[g];g++){if(f.id==c)return a.splice(g,0,b),b;if(e&&f[e]&&(f=A(f[e],b,c,e,!0)))return f}if(d)return null}a.push(b);return b},
B=function(a,b,c){for(var e=0,d;d=a[e];e++){if(d.id==b)return a.splice(e,1);if(c&&d[c]&&(d=B(d[c],b,c)))return d}return null},L=function(a,b){this.dialog=a;for(var c=b.contents,e=0,d;d=c[e];e++)c[e]=d&&new I(a,d);CKEDITOR.tools.extend(this,b)};L.prototype={getContents:function(a){return z(this.contents,a)},getButton:function(a){return z(this.buttons,a)},addContents:function(a,b){return A(this.contents,a,b)},addButton:function(a,b){return A(this.buttons,a,b)},removeContents:function(a){B(this.contents,
a)},removeButton:function(a){B(this.buttons,a)}};I.prototype={get:function(a){return z(this.elements,a,"children")},add:function(a,b){return A(this.elements,a,b,"children")},remove:function(a){B(this.elements,a,"children")}};var G,w={},r,t={},M=function(a){var b=a.data.$.ctrlKey||a.data.$.metaKey,c=a.data.$.altKey,e=a.data.$.shiftKey,d=String.fromCharCode(a.data.$.keyCode);if((b=t[(b?"CTRL+":"")+(c?"ALT+":"")+(e?"SHIFT+":"")+d])&&b.length)b=b[b.length-1],b.keydown&&b.keydown.call(b.uiElement,b.dialog,
b.key),a.data.preventDefault()},N=function(a){var b=a.data.$.ctrlKey||a.data.$.metaKey,c=a.data.$.altKey,e=a.data.$.shiftKey,d=String.fromCharCode(a.data.$.keyCode);if((b=t[(b?"CTRL+":"")+(c?"ALT+":"")+(e?"SHIFT+":"")+d])&&b.length)b=b[b.length-1],b.keyup&&(b.keyup.call(b.uiElement,b.dialog,b.key),a.data.preventDefault())},O=function(a,b,c,e,d){(t[c]||(t[c]=[])).push({uiElement:a,dialog:b,key:c,keyup:d||a.accessKeyUp,keydown:e||a.accessKeyDown})},X=function(a){for(var b in t){for(var c=t[b],e=c.length-
1;0<=e;e--)(c[e].dialog==a||c[e].uiElement==a)&&c.splice(e,1);0===c.length&&delete t[b]}},Z=function(a,b){a._.accessKeyMap[b]&&a.selectPage(a._.accessKeyMap[b])},Y=function(){};(function(){CKEDITOR.ui.dialog={uiElement:function(a,b,c,e,d,g,f){if(!(4>arguments.length)){var k=(e.call?e(b):e)||"div",m=["<",k," "],j=(d&&d.call?d(b):d)||{},h=(g&&g.call?g(b):g)||{},o=(f&&f.call?f.call(this,a,b):f)||"",i=this.domId=h.id||CKEDITOR.tools.getNextId()+"_uiElement";this.id=b.id;b.requiredContent&&!a.getParentEditor().filter.check(b.requiredContent)&&
(j.display="none",this.notAllowed=!0);h.id=i;var n={};b.type&&(n["cke_dialog_ui_"+b.type]=1);b.className&&(n[b.className]=1);b.disabled&&(n.cke_disabled=1);for(var l=h["class"]&&h["class"].split?h["class"].split(" "):[],i=0;i<l.length;i++)l[i]&&(n[l[i]]=1);l=[];for(i in n)l.push(i);h["class"]=l.join(" ");b.title&&(h.title=b.title);n=(b.style||"").split(";");b.align&&(l=b.align,j["margin-left"]="left"==l?0:"auto",j["margin-right"]="right"==l?0:"auto");for(i in j)n.push(i+":"+j[i]);b.hidden&&n.push("display:none");
for(i=n.length-1;0<=i;i--)""===n[i]&&n.splice(i,1);0<n.length&&(h.style=(h.style?h.style+"; ":"")+n.join("; "));for(i in h)m.push(i+'="'+CKEDITOR.tools.htmlEncode(h[i])+'" ');m.push(">",o,"</",k,">");c.push(m.join(""));(this._||(this._={})).dialog=a;"boolean"==typeof b.isChanged&&(this.isChanged=function(){return b.isChanged});"function"==typeof b.isChanged&&(this.isChanged=b.isChanged);"function"==typeof b.setValue&&(this.setValue=CKEDITOR.tools.override(this.setValue,function(a){return function(c){a.call(this,
b.setValue.call(this,c))}}));"function"==typeof b.getValue&&(this.getValue=CKEDITOR.tools.override(this.getValue,function(a){return function(){return b.getValue.call(this,a.call(this))}}));CKEDITOR.event.implementOn(this);this.registerEvents(b);this.accessKeyUp&&(this.accessKeyDown&&b.accessKey)&&O(this,a,"CTRL+"+b.accessKey);var p=this;a.on("load",function(){var b=p.getInputElement();if(b){var c=p.type in{checkbox:1,ratio:1}&&CKEDITOR.env.ie&&CKEDITOR.env.version<8?"cke_dialog_ui_focused":"";b.on("focus",
function(){a._.tabBarMode=false;a._.hasFocus=true;p.fire("focus");c&&this.addClass(c)});b.on("blur",function(){p.fire("blur");c&&this.removeClass(c)})}});this.keyboardFocusable&&(this.tabIndex=b.tabIndex||0,this.focusIndex=a._.focusList.push(this)-1,this.on("focus",function(){a._.currentFocusIndex=p.focusIndex}));CKEDITOR.tools.extend(this,b)}},hbox:function(a,b,c,e,d){if(!(4>arguments.length)){this._||(this._={});var g=this._.children=b,f=d&&d.widths||null,k=d&&d.height||null,m,j={role:"presentation"};
d&&d.align&&(j.align=d.align);CKEDITOR.ui.dialog.uiElement.call(this,a,d||{type:"hbox"},e,"table",{},j,function(){var a=['<tbody><tr class="cke_dialog_ui_hbox">'];for(m=0;m<c.length;m++){var b="cke_dialog_ui_hbox_child",e=[];0===m&&(b="cke_dialog_ui_hbox_first");m==c.length-1&&(b="cke_dialog_ui_hbox_last");a.push('<td class="',b,'" role="presentation" ');f?f[m]&&e.push("width:"+s(f[m])):e.push("width:"+Math.floor(100/c.length)+"%");k&&e.push("height:"+s(k));d&&void 0!=d.padding&&e.push("padding:"+
s(d.padding));CKEDITOR.env.ie&&(CKEDITOR.env.quirks&&g[m].align)&&e.push("text-align:"+g[m].align);0<e.length&&a.push('style="'+e.join("; ")+'" ');a.push(">",c[m],"</td>")}a.push("</tr></tbody>");return a.join("")})}},vbox:function(a,b,c,e,d){if(!(3>arguments.length)){this._||(this._={});var g=this._.children=b,f=d&&d.width||null,k=d&&d.heights||null;CKEDITOR.ui.dialog.uiElement.call(this,a,d||{type:"vbox"},e,"div",null,{role:"presentation"},function(){var b=['<table role="presentation" cellspacing="0" border="0" '];
b.push('style="');d&&d.expand&&b.push("height:100%;");b.push("width:"+s(f||"100%"),";");CKEDITOR.env.webkit&&b.push("float:none;");b.push('"');b.push('align="',CKEDITOR.tools.htmlEncode(d&&d.align||("ltr"==a.getParentEditor().lang.dir?"left":"right")),'" ');b.push("><tbody>");for(var e=0;e<c.length;e++){var h=[];b.push('<tr><td role="presentation" ');f&&h.push("width:"+s(f||"100%"));k?h.push("height:"+s(k[e])):d&&d.expand&&h.push("height:"+Math.floor(100/c.length)+"%");d&&void 0!=d.padding&&h.push("padding:"+
s(d.padding));CKEDITOR.env.ie&&(CKEDITOR.env.quirks&&g[e].align)&&h.push("text-align:"+g[e].align);0<h.length&&b.push('style="',h.join("; "),'" ');b.push(' class="cke_dialog_ui_vbox_child">',c[e],"</td></tr>")}b.push("</tbody></table>");return b.join("")})}}}})();CKEDITOR.ui.dialog.uiElement.prototype={getElement:function(){return CKEDITOR.document.getById(this.domId)},getInputElement:function(){return this.getElement()},getDialog:function(){return this._.dialog},setValue:function(a,b){this.getInputElement().setValue(a);
!b&&this.fire("change",{value:a});return this},getValue:function(){return this.getInputElement().getValue()},isChanged:function(){return!1},selectParentTab:function(){for(var a=this.getInputElement();(a=a.getParent())&&-1==a.$.className.search("cke_dialog_page_contents"););if(!a)return this;a=a.getAttribute("name");this._.dialog._.currentTabId!=a&&this._.dialog.selectPage(a);return this},focus:function(){this.selectParentTab().getInputElement().focus();return this},registerEvents:function(a){var b=
/^on([A-Z]\w+)/,c,e=function(a,b,c,d){b.on("load",function(){a.getInputElement().on(c,d,a)})},d;for(d in a)if(c=d.match(b))this.eventProcessors[d]?this.eventProcessors[d].call(this,this._.dialog,a[d]):e(this,this._.dialog,c[1].toLowerCase(),a[d]);return this},eventProcessors:{onLoad:function(a,b){a.on("load",b,this)},onShow:function(a,b){a.on("show",b,this)},onHide:function(a,b){a.on("hide",b,this)}},accessKeyDown:function(){this.focus()},accessKeyUp:function(){},disable:function(){var a=this.getElement();
this.getInputElement().setAttribute("disabled","true");a.addClass("cke_disabled")},enable:function(){var a=this.getElement();this.getInputElement().removeAttribute("disabled");a.removeClass("cke_disabled")},isEnabled:function(){return!this.getElement().hasClass("cke_disabled")},isVisible:function(){return this.getInputElement().isVisible()},isFocusable:function(){return!this.isEnabled()||!this.isVisible()?!1:!0}};CKEDITOR.ui.dialog.hbox.prototype=CKEDITOR.tools.extend(new CKEDITOR.ui.dialog.uiElement,
{getChild:function(a){if(1>arguments.length)return this._.children.concat();a.splice||(a=[a]);return 2>a.length?this._.children[a[0]]:this._.children[a[0]]&&this._.children[a[0]].getChild?this._.children[a[0]].getChild(a.slice(1,a.length)):null}},!0);CKEDITOR.ui.dialog.vbox.prototype=new CKEDITOR.ui.dialog.hbox;(function(){var a={build:function(a,c,e){for(var d=c.children,g,f=[],k=[],m=0;m<d.length&&(g=d[m]);m++){var j=[];f.push(j);k.push(CKEDITOR.dialog._.uiElementBuilders[g.type].build(a,g,j))}return new CKEDITOR.ui.dialog[c.type](a,
k,f,e,c)}};CKEDITOR.dialog.addUIElement("hbox",a);CKEDITOR.dialog.addUIElement("vbox",a)})();CKEDITOR.dialogCommand=function(a,b){this.dialogName=a;CKEDITOR.tools.extend(this,b,!0)};CKEDITOR.dialogCommand.prototype={exec:function(a){CKEDITOR.env.opera?CKEDITOR.tools.setTimeout(function(){a.openDialog(this.dialogName)},0,this):a.openDialog(this.dialogName)},canUndo:!1,editorFocus:1};(function(){var a=/^([a]|[^a])+$/,b=/^\d*$/,c=/^\d*(?:\.\d+)?$/,e=/^(((\d*(\.\d+))|(\d*))(px|\%)?)?$/,d=/^(((\d*(\.\d+))|(\d*))(px|em|ex|in|cm|mm|pt|pc|\%)?)?$/i,
g=/^(\s*[\w-]+\s*:\s*[^:;]+(?:;|$))*$/;CKEDITOR.VALIDATE_OR=1;CKEDITOR.VALIDATE_AND=2;CKEDITOR.dialog.validate={functions:function(){var a=arguments;return function(){var b=this&&this.getValue?this.getValue():a[0],c=void 0,d=CKEDITOR.VALIDATE_AND,e=[],g;for(g=0;g<a.length;g++)if("function"==typeof a[g])e.push(a[g]);else break;g<a.length&&"string"==typeof a[g]&&(c=a[g],g++);g<a.length&&"number"==typeof a[g]&&(d=a[g]);var i=d==CKEDITOR.VALIDATE_AND?!0:!1;for(g=0;g<e.length;g++)i=d==CKEDITOR.VALIDATE_AND?
i&&e[g](b):i||e[g](b);return!i?c:!0}},regex:function(a,b){return function(c){c=this&&this.getValue?this.getValue():c;return!a.test(c)?b:!0}},notEmpty:function(b){return this.regex(a,b)},integer:function(a){return this.regex(b,a)},number:function(a){return this.regex(c,a)},cssLength:function(a){return this.functions(function(a){return d.test(CKEDITOR.tools.trim(a))},a)},htmlLength:function(a){return this.functions(function(a){return e.test(CKEDITOR.tools.trim(a))},a)},inlineStyle:function(a){return this.functions(function(a){return g.test(CKEDITOR.tools.trim(a))},
a)},equals:function(a,b){return this.functions(function(b){return b==a},b)},notEqual:function(a,b){return this.functions(function(b){return b!=a},b)}};CKEDITOR.on("instanceDestroyed",function(a){if(CKEDITOR.tools.isEmpty(CKEDITOR.instances)){for(var b;b=CKEDITOR.dialog._.currentTop;)b.hide();for(var c in w)w[c].remove();w={}}var a=a.editor._.storedDialogs,d;for(d in a)a[d].destroy()})})();CKEDITOR.tools.extend(CKEDITOR.editor.prototype,{openDialog:function(a,b){var c=null,e=CKEDITOR.dialog._.dialogDefinitions[a];
null===CKEDITOR.dialog._.currentTop&&J(this);if("function"==typeof e)c=this._.storedDialogs||(this._.storedDialogs={}),c=c[a]||(c[a]=new CKEDITOR.dialog(this,a)),b&&b.call(c,c),c.show();else{if("failed"==e)throw K(this),Error('[CKEDITOR.dialog.openDialog] Dialog "'+a+'" failed when loading definition.');"string"==typeof e&&CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(e),function(){"function"!=typeof CKEDITOR.dialog._.dialogDefinitions[a]&&(CKEDITOR.dialog._.dialogDefinitions[a]="failed");this.openDialog(a,
b)},this,0,1)}CKEDITOR.skin.loadPart("dialog");return c}})})();CKEDITOR.plugins.add("dialog",{requires:"dialogui",init:function(p){p.on("contentDom",function(){var u=p.editable();u.attachListener(u,"dblclick",function(q){if(p.readOnly)return!1;q={element:q.data.getTarget()};p.fire("doubleclick",q);q.dialog&&p.openDialog(q.dialog);return 1})})}});CKEDITOR.plugins.add("about",{requires:"dialog",init:function(a){var b=a.addCommand("about",new CKEDITOR.dialogCommand("about"));b.modes={wysiwyg:1,source:1};b.canUndo=!1;b.readOnly=1;a.ui.addButton&&a.ui.addButton("About",{label:a.lang.about.title,command:"about",toolbar:"about"});CKEDITOR.dialog.add("about",this.path+"dialogs/about.js")}});(function(){CKEDITOR.plugins.add("a11yhelp",{requires:"dialog",availableLangs:{en:1,ar:1,bg:1,ca:1,et:1,cs:1,cy:1,da:1,de:1,el:1,eo:1,es:1,fa:1,fi:1,fr:1,"fr-ca":1,gu:1,he:1,hi:1,hr:1,hu:1,it:1,ja:1,km:1,ku:1,lt:1,lv:1,mk:1,mn:1,nb:1,nl:1,no:1,pl:1,pt:1,"pt-br":1,ro:1,ru:1,sk:1,sl:1,sq:1,sv:1,th:1,tr:1,ug:1,uk:1,vi:1,"zh-cn":1},init:function(b){var c=this;b.addCommand("a11yHelp",{exec:function(){var a=b.langCode,a=c.availableLangs[a]?a:c.availableLangs[a.replace(/-.*/,"")]?a.replace(/-.*/,""):"en";
CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(c.path+"dialogs/lang/"+a+".js"),function(){b.lang.a11yhelp=c.langEntries[a];b.openDialog("a11yHelp")})},modes:{wysiwyg:1,source:1},readOnly:1,canUndo:!1});b.setKeystroke(CKEDITOR.ALT+48,"a11yHelp");CKEDITOR.dialog.add("a11yHelp",this.path+"dialogs/a11yhelp.js")}})})();(function(){function f(c){var a=this.att,c=c&&c.hasAttribute(a)&&c.getAttribute(a)||"";void 0!==c&&this.setValue(c)}function g(){for(var c,a=0;a<arguments.length;a++)if(arguments[a]instanceof CKEDITOR.dom.element){c=arguments[a];break}if(c){var a=this.att,b=this.getValue();b?c.setAttribute(a,b):c.removeAttribute(a,b)}}var i={id:1,dir:1,classes:1,styles:1};CKEDITOR.plugins.add("dialogadvtab",{requires:"dialog",allowedContent:function(c){c||(c=i);var a=[];c.id&&a.push("id");c.dir&&a.push("dir");var b=
"";a.length&&(b+="["+a.join(",")+"]");c.classes&&(b+="(*)");c.styles&&(b+="{*}");return b},createAdvancedTab:function(c,a,b){a||(a=i);var d=c.lang.common,h={id:"advanced",label:d.advancedTab,title:d.advancedTab,elements:[{type:"vbox",padding:1,children:[]}]},e=[];if(a.id||a.dir)a.id&&e.push({id:"advId",att:"id",type:"text",requiredContent:b?b+"[id]":null,label:d.id,setup:f,commit:g}),a.dir&&e.push({id:"advLangDir",att:"dir",type:"select",requiredContent:b?b+"[dir]":null,label:d.langDir,"default":"",
style:"width:100%",items:[[d.notSet,""],[d.langDirLTR,"ltr"],[d.langDirRTL,"rtl"]],setup:f,commit:g}),h.elements[0].children.push({type:"hbox",widths:["50%","50%"],children:[].concat(e)});if(a.styles||a.classes)e=[],a.styles&&e.push({id:"advStyles",att:"style",type:"text",requiredContent:b?b+"{cke-xyz}":null,label:d.styles,"default":"",validate:CKEDITOR.dialog.validate.inlineStyle(d.invalidInlineStyle),onChange:function(){},getStyle:function(a,c){var b=this.getValue().match(RegExp("(?:^|;)\\s*"+a+
"\\s*:\\s*([^;]*)","i"));return b?b[1]:c},updateStyle:function(a,b){var d=this.getValue(),e=c.document.createElement("span");e.setAttribute("style",d);e.setStyle(a,b);d=CKEDITOR.tools.normalizeCssText(e.getAttribute("style"));this.setValue(d,1)},setup:f,commit:g}),a.classes&&e.push({type:"hbox",widths:["45%","55%"],children:[{id:"advCSSClasses",att:"class",type:"text",requiredContent:b?b+"(cke-xyz)":null,label:d.cssClasses,"default":"",setup:f,commit:g}]}),h.elements[0].children.push({type:"hbox",
widths:["50%","50%"],children:[].concat(e)});return h}})})();CKEDITOR.plugins.add("basicstyles",{init:function(c){var e=0,d=function(g,d,b,a){if(a){var a=new CKEDITOR.style(a),f=h[b];f.unshift(a);c.attachStyleStateChange(a,function(a){!c.readOnly&&c.getCommand(b).setState(a)});c.addCommand(b,new CKEDITOR.styleCommand(a,{contentForms:f}));c.ui.addButton&&c.ui.addButton(g,{label:d,command:b,toolbar:"basicstyles,"+(e+=10)})}},h={bold:["strong","b",["span",function(a){a=a.styles["font-weight"];return"bold"==a||700<=+a}]],italic:["em","i",["span",function(a){return"italic"==
a.styles["font-style"]}]],underline:["u",["span",function(a){return"underline"==a.styles["text-decoration"]}]],strike:["s","strike",["span",function(a){return"line-through"==a.styles["text-decoration"]}]],subscript:["sub"],superscript:["sup"]},b=c.config,a=c.lang.basicstyles;d("Bold",a.bold,"bold",b.coreStyles_bold);d("Italic",a.italic,"italic",b.coreStyles_italic);d("Underline",a.underline,"underline",b.coreStyles_underline);d("Strike",a.strike,"strike",b.coreStyles_strike);d("Subscript",a.subscript,
"subscript",b.coreStyles_subscript);d("Superscript",a.superscript,"superscript",b.coreStyles_superscript);c.setKeystroke([[CKEDITOR.CTRL+66,"bold"],[CKEDITOR.CTRL+73,"italic"],[CKEDITOR.CTRL+85,"underline"]])}});CKEDITOR.config.coreStyles_bold={element:"strong",overrides:"b"};CKEDITOR.config.coreStyles_italic={element:"em",overrides:"i"};CKEDITOR.config.coreStyles_underline={element:"u"};CKEDITOR.config.coreStyles_strike={element:"s",overrides:"strike"};CKEDITOR.config.coreStyles_subscript={element:"sub"};
CKEDITOR.config.coreStyles_superscript={element:"sup"};(function(){function n(a,f,d,b){if(!a.isReadOnly()&&!a.equals(d.editable())){CKEDITOR.dom.element.setMarker(b,a,"bidi_processed",1);for(var b=a,c=d.editable();(b=b.getParent())&&!b.equals(c);)if(b.getCustomData("bidi_processed")){a.removeStyle("direction");a.removeAttribute("dir");return}b="useComputedState"in d.config?d.config.useComputedState:1;if((b?a.getComputedStyle("direction"):a.getStyle("direction")||a.hasAttribute("dir"))!=f)a.removeStyle("direction"),b?(a.removeAttribute("dir"),f!=a.getComputedStyle("direction")&&
a.setAttribute("dir",f)):a.setAttribute("dir",f),d.forceNextSelectionCheck()}}function r(a,f,d){var b=a.getCommonAncestor(!1,!0),a=a.clone();a.enlarge(d==CKEDITOR.ENTER_BR?CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS:CKEDITOR.ENLARGE_BLOCK_CONTENTS);if(a.checkBoundaryOfElement(b,CKEDITOR.START)&&a.checkBoundaryOfElement(b,CKEDITOR.END)){for(var c;b&&b.type==CKEDITOR.NODE_ELEMENT&&(c=b.getParent())&&1==c.getChildCount()&&!(b.getName()in f);)b=c;return b.type==CKEDITOR.NODE_ELEMENT&&b.getName()in f&&b}}function m(a){return{context:"p",
allowedContent:{"h1 h2 h3 h4 h5 h6 table ul ol blockquote div tr p div li td":{propertiesOnly:!0,attributes:"dir"}},requiredContent:"p[dir]",refresh:function(a,d){var b=a.config.useComputedState,c,b=void 0===b||b;if(!b){c=d.lastElement;for(var h=a.editable();c&&!(c.getName()in q||c.equals(h));){var e=c.getParent();if(!e)break;c=e}}c=c||d.block||d.blockLimit;c.equals(a.editable())&&(h=a.getSelection().getRanges()[0].getEnclosedNode())&&h.type==CKEDITOR.NODE_ELEMENT&&(c=h);c&&(b=b?c.getComputedStyle("direction"):
c.getStyle("direction")||c.getAttribute("dir"),a.getCommand("bidirtl").setState("rtl"==b?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF),a.getCommand("bidiltr").setState("ltr"==b?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF));b=(d.block||d.blockLimit||a.editable()).getDirection(1);if(b!=(a._.selDir||a.lang.dir))a._.selDir=b,a.fire("contentDirChanged",b)},exec:function(f){var d=f.getSelection(),b=f.config.enterMode,c=d.getRanges();if(c&&c.length){for(var h={},e=d.createBookmarks(),c=c.createIterator(),g,
j=0;g=c.getNextRange(1);){var i=g.getEnclosedNode();if(!i||i&&!(i.type==CKEDITOR.NODE_ELEMENT&&i.getName()in o))i=r(g,p,b);i&&n(i,a,f,h);var k=new CKEDITOR.dom.walker(g),l=e[j].startNode,m=e[j++].endNode;k.evaluator=function(a){return!!(a.type==CKEDITOR.NODE_ELEMENT&&a.getName()in p&&!(a.getName()==(b==CKEDITOR.ENTER_P?"p":"div")&&a.getParent().type==CKEDITOR.NODE_ELEMENT&&"blockquote"==a.getParent().getName())&&a.getPosition(l)&CKEDITOR.POSITION_FOLLOWING&&(a.getPosition(m)&CKEDITOR.POSITION_PRECEDING+
CKEDITOR.POSITION_CONTAINS)==CKEDITOR.POSITION_PRECEDING)};for(;i=k.next();)n(i,a,f,h);g=g.createIterator();for(g.enlargeBr=b!=CKEDITOR.ENTER_BR;i=g.getNextParagraph(b==CKEDITOR.ENTER_P?"p":"div");)n(i,a,f,h)}CKEDITOR.dom.element.clearAllMarkers(h);f.forceNextSelectionCheck();d.selectBookmarks(e);f.focus()}}}}function s(a){var f=a==j.setAttribute,d=a==j.removeAttribute,b=/\bdirection\s*:\s*(.*?)\s*(:?$|;)/;return function(c,h){if(!this.isReadOnly()){var e;if(e=c==(f||d?"dir":"direction")||"style"==
c&&(d||b.test(h))){a:{e=this;for(var g=e.getDocument().getBody().getParent();e;){if(e.equals(g)){e=!1;break a}e=e.getParent()}e=!0}e=!e}if(e&&(e=this.getDirection(1),g=a.apply(this,arguments),e!=this.getDirection(1)))return this.getDocument().fire("dirChanged",this),g}return a.apply(this,arguments)}}var p={table:1,ul:1,ol:1,blockquote:1,div:1},o={},q={};CKEDITOR.tools.extend(o,p,{tr:1,p:1,div:1,li:1});CKEDITOR.tools.extend(q,o,{td:1});CKEDITOR.plugins.add("bidi",{init:function(a){function f(b,c,d,
e,f){a.addCommand(d,new CKEDITOR.command(a,e));a.ui.addButton&&a.ui.addButton(b,{label:c,command:d,toolbar:"bidi,"+f})}if(!a.blockless){var d=a.lang.bidi;a.ui.addToolbarGroup&&a.ui.addToolbarGroup("bidi","align","paragraph");f("BidiLtr",d.ltr,"bidiltr",m("ltr"),10);f("BidiRtl",d.rtl,"bidirtl",m("rtl"),20);a.on("contentDom",function(){a.document.on("dirChanged",function(b){a.fire("dirChanged",{node:b.data,dir:b.data.getDirection(1)})})});a.on("contentDirChanged",function(b){var b=(a.lang.dir!=b.data?
"add":"remove")+"Class",c=a.ui.space(a.config.toolbarLocation);if(c)c[b]("cke_mixed_dir_content")})}}});for(var j=CKEDITOR.dom.element.prototype,l=["setStyle","removeStyle","setAttribute","removeAttribute"],k=0;k<l.length;k++)j[l[k]]=CKEDITOR.tools.override(j[l[k]],s)})();(function(){var k={exec:function(g){var a=g.getCommand("blockquote").state,i=g.getSelection(),c=i&&i.getRanges(!0)[0];if(c){var h=i.createBookmarks();if(CKEDITOR.env.ie){var e=h[0].startNode,b=h[0].endNode,d;if(e&&"blockquote"==e.getParent().getName())for(d=e;d=d.getNext();)if(d.type==CKEDITOR.NODE_ELEMENT&&d.isBlockBoundary()){e.move(d,!0);break}if(b&&"blockquote"==b.getParent().getName())for(d=b;d=d.getPrevious();)if(d.type==CKEDITOR.NODE_ELEMENT&&d.isBlockBoundary()){b.move(d);break}}var f=c.createIterator();
f.enlargeBr=g.config.enterMode!=CKEDITOR.ENTER_BR;if(a==CKEDITOR.TRISTATE_OFF){for(e=[];a=f.getNextParagraph();)e.push(a);1>e.length&&(a=g.document.createElement(g.config.enterMode==CKEDITOR.ENTER_P?"p":"div"),b=h.shift(),c.insertNode(a),a.append(new CKEDITOR.dom.text("﻿",g.document)),c.moveToBookmark(b),c.selectNodeContents(a),c.collapse(!0),b=c.createBookmark(),e.push(a),h.unshift(b));d=e[0].getParent();c=[];for(b=0;b<e.length;b++)a=e[b],d=d.getCommonAncestor(a.getParent());for(a={table:1,tbody:1,
tr:1,ol:1,ul:1};a[d.getName()];)d=d.getParent();for(b=null;0<e.length;){for(a=e.shift();!a.getParent().equals(d);)a=a.getParent();a.equals(b)||c.push(a);b=a}for(;0<c.length;)if(a=c.shift(),"blockquote"==a.getName()){for(b=new CKEDITOR.dom.documentFragment(g.document);a.getFirst();)b.append(a.getFirst().remove()),e.push(b.getLast());b.replace(a)}else e.push(a);c=g.document.createElement("blockquote");for(c.insertBefore(e[0]);0<e.length;)a=e.shift(),c.append(a)}else if(a==CKEDITOR.TRISTATE_ON){b=[];
for(d={};a=f.getNextParagraph();){for(e=c=null;a.getParent();){if("blockquote"==a.getParent().getName()){c=a.getParent();e=a;break}a=a.getParent()}c&&(e&&!e.getCustomData("blockquote_moveout"))&&(b.push(e),CKEDITOR.dom.element.setMarker(d,e,"blockquote_moveout",!0))}CKEDITOR.dom.element.clearAllMarkers(d);a=[];e=[];for(d={};0<b.length;)f=b.shift(),c=f.getParent(),f.getPrevious()?f.getNext()?(f.breakParent(f.getParent()),e.push(f.getNext())):f.remove().insertAfter(c):f.remove().insertBefore(c),c.getCustomData("blockquote_processed")||
(e.push(c),CKEDITOR.dom.element.setMarker(d,c,"blockquote_processed",!0)),a.push(f);CKEDITOR.dom.element.clearAllMarkers(d);for(b=e.length-1;0<=b;b--){c=e[b];a:{d=c;for(var f=0,k=d.getChildCount(),j=void 0;f<k&&(j=d.getChild(f));f++)if(j.type==CKEDITOR.NODE_ELEMENT&&j.isBlockBoundary()){d=!1;break a}d=!0}d&&c.remove()}if(g.config.enterMode==CKEDITOR.ENTER_BR)for(c=!0;a.length;)if(f=a.shift(),"div"==f.getName()){b=new CKEDITOR.dom.documentFragment(g.document);c&&(f.getPrevious()&&!(f.getPrevious().type==
CKEDITOR.NODE_ELEMENT&&f.getPrevious().isBlockBoundary()))&&b.append(g.document.createElement("br"));for(c=f.getNext()&&!(f.getNext().type==CKEDITOR.NODE_ELEMENT&&f.getNext().isBlockBoundary());f.getFirst();)f.getFirst().remove().appendTo(b);c&&b.append(g.document.createElement("br"));b.replace(f);c=!1}}i.selectBookmarks(h);g.focus()}},refresh:function(g,a){this.setState(g.elementPath(a.block||a.blockLimit).contains("blockquote",1)?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF)},context:"blockquote",
allowedContent:"blockquote",requiredContent:"blockquote"};CKEDITOR.plugins.add("blockquote",{init:function(g){g.blockless||(g.addCommand("blockquote",k),g.ui.addButton&&g.ui.addButton("Blockquote",{label:g.lang.blockquote.toolbar,command:"blockquote",toolbar:"blocks,10"}))}})})();(function(){function w(a){function b(){var d=a.editable();d.on(q,function(a){(!CKEDITOR.env.ie||!m)&&u(a)});CKEDITOR.env.ie&&d.on("paste",function(d){r||(f(),d.data.preventDefault(),u(d),k("paste")||a.openDialog("paste"))});CKEDITOR.env.ie&&(d.on("contextmenu",h,null,null,0),d.on("beforepaste",function(a){a.data&&!a.data.$.ctrlKey&&h()},null,null,0));d.on("beforecut",function(){!m&&l(a)});var v;d.attachListener(CKEDITOR.env.ie?d:a.document.getDocumentElement(),"mouseup",function(){v=setTimeout(function(){s()},
0)});a.on("destroy",function(){clearTimeout(v)});d.on("keyup",s)}function e(d){return{type:d,canUndo:"cut"==d,startDisabled:!0,exec:function(){"cut"==this.type&&l();var d;var b=this.type;if(CKEDITOR.env.ie)d=k(b);else try{d=a.document.$.execCommand(b,!1,null)}catch(c){d=!1}d||alert(a.lang.clipboard[this.type+"Error"]);return d}}}function c(){return{canUndo:!1,async:!0,exec:function(a,b){var c=function(b,c){b&&g(b.type,b.dataValue,!!c);a.fire("afterCommandExec",{name:"paste",command:e,returnValue:!!b})},
e=this;"string"==typeof b?c({type:"auto",dataValue:b},1):a.getClipboardData(c)}}}function f(){r=1;setTimeout(function(){r=0},100)}function h(){m=1;setTimeout(function(){m=0},10)}function k(d){var b=a.document,c=b.getBody(),e=!1,l=function(){e=!0};c.on(d,l);(7<CKEDITOR.env.version?b.$:b.$.selection.createRange()).execCommand(d);c.removeListener(d,l);return e}function g(d,b,c){d={type:d};if(c&&!a.fire("beforePaste",d)||!b)return!1;d.dataValue=b;return a.fire("paste",d)}function l(){if(CKEDITOR.env.ie&&
!CKEDITOR.env.quirks){var d=a.getSelection(),b,c,e;if(d.getType()==CKEDITOR.SELECTION_ELEMENT&&(b=d.getSelectedElement()))c=d.getRanges()[0],e=a.document.createText(""),e.insertBefore(b),c.setStartBefore(e),c.setEndAfter(b),d.selectRanges([c]),setTimeout(function(){b.getParent()&&(e.remove(),d.selectElement(b))},0)}}function j(d,b){var c=a.document,e=a.editable(),l=function(a){a.cancel()},j=CKEDITOR.env.gecko&&10902>=CKEDITOR.env.version;if(!c.getById("cke_pastebin")){var f=a.getSelection(),h=f.createBookmarks(),
i=new CKEDITOR.dom.element(e.is("body")&&!CKEDITOR.env.ie&&!CKEDITOR.env.opera?"body":"div",c);i.setAttribute("id","cke_pastebin");CKEDITOR.env.opera&&i.appendBogus();var o=0,c=c.getWindow();j?(i.insertAfter(h[0].startNode),i.setStyle("display","inline")):(CKEDITOR.env.webkit?(e.append(i),i.addClass("cke_editable"),o=(e.is("body")?e:CKEDITOR.dom.element.get(i.$.offsetParent)).getDocumentPosition().y):e.getAscendant(CKEDITOR.env.ie||CKEDITOR.env.opera?"body":"html",1).append(i),i.setStyles({position:"absolute",
top:c.getScrollPosition().y-o+10+"px",width:"1px",height:Math.max(1,c.getViewPaneSize().height-20)+"px",overflow:"hidden",margin:0,padding:0}));(j=i.getParent().isReadOnly())?(i.setOpacity(0),i.setAttribute("contenteditable",!0)):i.setStyle("ltr"==a.config.contentsLangDirection?"left":"right","-1000px");a.on("selectionChange",l,null,null,0);j&&i.focus();j=new CKEDITOR.dom.range(i);j.selectNodeContents(i);var g=j.select();if(CKEDITOR.env.ie)var k=e.once("blur",function(){a.lockSelection(g)});var m=
CKEDITOR.document.getWindow().getScrollPosition().y;setTimeout(function(){if(CKEDITOR.env.webkit||CKEDITOR.env.opera)CKEDITOR.document[CKEDITOR.env.webkit?"getBody":"getDocumentElement"]().$.scrollTop=m;k&&k.removeListener();CKEDITOR.env.ie&&e.focus();f.selectBookmarks(h);i.remove();var d;if(CKEDITOR.env.webkit&&(d=i.getFirst())&&d.is&&d.hasClass("Apple-style-span"))i=d;a.removeListener("selectionChange",l);b(i.getHtml())},0)}}function o(){if(CKEDITOR.env.ie){a.focus();f();var d=a.focusManager;d.lock();
if(a.editable().fire(q)&&!k("paste"))return d.unlock(),!1;d.unlock()}else try{if(a.editable().fire(q)&&!a.document.$.execCommand("Paste",!1,null))throw 0;}catch(b){return!1}return!0}function p(d){if("wysiwyg"==a.mode)switch(d.data.keyCode){case CKEDITOR.CTRL+86:case CKEDITOR.SHIFT+45:d=a.editable();f();!CKEDITOR.env.ie&&d.fire("beforepaste");(CKEDITOR.env.opera||CKEDITOR.env.gecko&&10900>CKEDITOR.env.version)&&d.fire("paste");break;case CKEDITOR.CTRL+88:case CKEDITOR.SHIFT+46:a.fire("saveSnapshot"),
setTimeout(function(){a.fire("saveSnapshot")},0)}}function u(d){var b={type:"auto"},c=a.fire("beforePaste",b);j(d,function(a){a=a.replace(/<span[^>]+data-cke-bookmark[^<]*?<\/span>/ig,"");c&&g(b.type,a,0,1)})}function s(){if("wysiwyg"==a.mode){var b=n("Paste");a.getCommand("cut").setState(n("Cut"));a.getCommand("copy").setState(n("Copy"));a.getCommand("paste").setState(b);a.fire("pasteState",b)}}function n(b){var c;if(t&&b in{Paste:1,Cut:1})return CKEDITOR.TRISTATE_DISABLED;if("Paste"==b){CKEDITOR.env.ie&&
(m=1);try{c=a.document.$.queryCommandEnabled(b)||CKEDITOR.env.webkit}catch(e){}m=0}else b=a.getSelection(),c=b.getRanges(),c=b.getType()!=CKEDITOR.SELECTION_NONE&&!(1==c.length&&c[0].collapsed);return c?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED}var m=0,r=0,t=0,q=CKEDITOR.env.ie?"beforepaste":"paste";(function(){a.on("key",p);a.on("contentDom",b);a.on("selectionChange",function(a){t=a.data.selection.getRanges()[0].checkReadOnly();s()});a.contextMenu&&a.contextMenu.addListener(function(a,b){t=
b.getRanges()[0].checkReadOnly();return{cut:n("Cut"),copy:n("Copy"),paste:n("Paste")}})})();(function(){function b(c,d,e,l,j){var f=a.lang.clipboard[d];a.addCommand(d,e);a.ui.addButton&&a.ui.addButton(c,{label:f,command:d,toolbar:"clipboard,"+l});a.addMenuItems&&a.addMenuItem(d,{label:f,command:d,group:"clipboard",order:j})}b("Cut","cut",e("cut"),10,1);b("Copy","copy",e("copy"),20,4);b("Paste","paste",c(),30,8)})();a.getClipboardData=function(b,c){function e(a){a.removeListener();a.cancel();c(a.data)}
function l(a){a.removeListener();a.cancel();g=!0;c({type:h,dataValue:a.data})}function j(){this.customTitle=b&&b.title}var f=!1,h="auto",g=!1;c||(c=b,b=null);a.on("paste",e,null,null,0);a.on("beforePaste",function(a){a.removeListener();f=true;h=a.data.type},null,null,1E3);!1===o()&&(a.removeListener("paste",e),f&&a.fire("pasteDialog",j)?(a.on("pasteDialogCommit",l),a.on("dialogHide",function(a){a.removeListener();a.data.removeListener("pasteDialogCommit",l);setTimeout(function(){g||c(null)},10)})):
c(null))}}function x(a){if(CKEDITOR.env.webkit){if(!a.match(/^[^<]*$/g)&&!a.match(/^(<div><br( ?\/)?><\/div>|<div>[^<]*<\/div>)*$/gi))return"html"}else if(CKEDITOR.env.ie){if(!a.match(/^([^<]|<br( ?\/)?>)*$/gi)&&!a.match(/^(<p>([^<]|<br( ?\/)?>)*<\/p>|(\r\n))*$/gi))return"html"}else if(CKEDITOR.env.gecko||CKEDITOR.env.opera){if(!a.match(/^([^<]|<br( ?\/)?>)*$/gi))return"html"}else return"html";return"htmlifiedtext"}function y(a,b){function e(a){return CKEDITOR.tools.repeat("</p><p>",~~(a/2))+(1==
a%2?"<br>":"")}b=b.replace(/\s+/g," ").replace(/> +</g,"><").replace(/<br ?\/>/gi,"<br>");b=b.replace(/<\/?[A-Z]+>/g,function(a){return a.toLowerCase()});if(b.match(/^[^<]$/))return b;CKEDITOR.env.webkit&&-1<b.indexOf("<div>")&&(b=b.replace(/^(<div>(<br>|)<\/div>)(?!$|(<div>(<br>|)<\/div>))/g,"<br>").replace(/^(<div>(<br>|)<\/div>){2}(?!$)/g,"<div></div>"),b.match(/<div>(<br>|)<\/div>/)&&(b="<p>"+b.replace(/(<div>(<br>|)<\/div>)+/g,function(a){return e(a.split("</div><div>").length+1)})+"</p>"),b=
b.replace(/<\/div><div>/g,"<br>"),b=b.replace(/<\/?div>/g,""));if((CKEDITOR.env.gecko||CKEDITOR.env.opera)&&a.enterMode!=CKEDITOR.ENTER_BR)CKEDITOR.env.gecko&&(b=b.replace(/^<br><br>$/,"<br>")),-1<b.indexOf("<br><br>")&&(b="<p>"+b.replace(/(<br>){2,}/g,function(a){return e(a.length/4)})+"</p>");return p(a,b)}function z(){var a=new CKEDITOR.htmlParser.filter,b={blockquote:1,dl:1,fieldset:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,ol:1,p:1,table:1,ul:1},e=CKEDITOR.tools.extend({br:0},CKEDITOR.dtd.$inline),c={p:1,
br:1,"cke:br":1},f=CKEDITOR.dtd,h=CKEDITOR.tools.extend({area:1,basefont:1,embed:1,iframe:1,map:1,object:1,param:1},CKEDITOR.dtd.$nonBodyContent,CKEDITOR.dtd.$cdata),k=function(a){delete a.name;a.add(new CKEDITOR.htmlParser.text(" "))},g=function(a){for(var b=a,c;(b=b.next)&&b.name&&b.name.match(/^h\d$/);){c=new CKEDITOR.htmlParser.element("cke:br");c.isEmpty=!0;for(a.add(c);c=b.children.shift();)a.add(c)}};a.addRules({elements:{h1:g,h2:g,h3:g,h4:g,h5:g,h6:g,img:function(a){var a=CKEDITOR.tools.trim(a.attributes.alt||
""),b=" ";a&&!a.match(/(^http|\.(jpe?g|gif|png))/i)&&(b=" ["+a+"] ");return new CKEDITOR.htmlParser.text(b)},td:k,th:k,$:function(a){var j=a.name,g;if(h[j])return!1;delete a.attributes;if("br"==j)return a;if(b[j])a.name="p";else if(e[j])delete a.name;else if(f[j]){g=new CKEDITOR.htmlParser.element("cke:br");g.isEmpty=!0;if(CKEDITOR.dtd.$empty[j])return g;a.add(g,0);g=g.clone();g.isEmpty=!0;a.add(g);delete a.name}c[a.name]||delete a.name;return a}}});return a}function A(a,b,e){var b=new CKEDITOR.htmlParser.fragment.fromHtml(b),
c=new CKEDITOR.htmlParser.basicWriter;b.writeHtml(c,e);var b=c.getHtml(),b=b.replace(/\s*(<\/?[a-z:]+ ?\/?>)\s*/g,"$1").replace(/(<cke:br \/>){2,}/g,"<cke:br />").replace(/(<cke:br \/>)(<\/?p>|<br \/>)/g,"$2").replace(/(<\/?p>|<br \/>)(<cke:br \/>)/g,"$1").replace(/<(cke:)?br( \/)?>/g,"<br>").replace(/<p><\/p>/g,""),f=0,b=b.replace(/<\/?p>/g,function(a){if("<p>"==a){if(1<++f)return"</p><p>"}else if(0<--f)return"</p><p>";return a}).replace(/<p><\/p>/g,"");return p(a,b)}function p(a,b){a.enterMode==
CKEDITOR.ENTER_BR?b=b.replace(/(<\/p><p>)+/g,function(a){return CKEDITOR.tools.repeat("<br>",2*(a.length/7))}).replace(/<\/?p>/g,""):a.enterMode==CKEDITOR.ENTER_DIV&&(b=b.replace(/<(\/)?p>/g,"<$1div>"));return b}CKEDITOR.plugins.add("clipboard",{requires:"dialog",init:function(a){var b;w(a);CKEDITOR.dialog.add("paste",CKEDITOR.getUrl(this.path+"dialogs/paste.js"));a.on("paste",function(a){var b=a.data.dataValue,f=CKEDITOR.dtd.$block;-1<b.indexOf("Apple-")&&(b=b.replace(/<span class="Apple-converted-space">&nbsp;<\/span>/gi,
" "),"html"!=a.data.type&&(b=b.replace(/<span class="Apple-tab-span"[^>]*>([^<]*)<\/span>/gi,function(a,b){return b.replace(/\t/g,"&nbsp;&nbsp; &nbsp;")})),-1<b.indexOf('<br class="Apple-interchange-newline">')&&(a.data.startsWithEOL=1,a.data.preSniffing="html",b=b.replace(/<br class="Apple-interchange-newline">/,"")),b=b.replace(/(<[^>]+) class="Apple-[^"]*"/gi,"$1"));if(b.match(/^<[^<]+cke_(editable|contents)/i)){var h,k,g=new CKEDITOR.dom.element("div");for(g.setHtml(b);1==g.getChildCount()&&(h=
g.getFirst())&&h.type==CKEDITOR.NODE_ELEMENT&&(h.hasClass("cke_editable")||h.hasClass("cke_contents"));)g=k=h;k&&(b=k.getHtml().replace(/<br>$/i,""))}CKEDITOR.env.ie?b=b.replace(/^&nbsp;(?: |\r\n)?<(\w+)/g,function(b,c){if(c.toLowerCase()in f){a.data.preSniffing="html";return"<"+c}return b}):CKEDITOR.env.webkit?b=b.replace(/<\/(\w+)><div><br><\/div>$/,function(b,c){if(c in f){a.data.endsWithEOL=1;return"</"+c+">"}return b}):CKEDITOR.env.gecko&&(b=b.replace(/(\s)<br>$/,"$1"));a.data.dataValue=b},null,
null,3);a.on("paste",function(e){var e=e.data,c=e.type,f=e.dataValue,h,k=a.config.clipboard_defaultContentType||"html";h="html"==c||"html"==e.preSniffing?"html":x(f);"htmlifiedtext"==h?f=y(a.config,f):"text"==c&&"html"==h&&(f=A(a.config,f,b||(b=z(a))));e.startsWithEOL&&(f='<br data-cke-eol="1">'+f);e.endsWithEOL&&(f+='<br data-cke-eol="1">');"auto"==c&&(c="html"==h||"html"==k?"html":"text");e.type=c;e.dataValue=f;delete e.preSniffing;delete e.startsWithEOL;delete e.endsWithEOL},null,null,6);a.on("paste",
function(b){b=b.data;a.insertHtml(b.dataValue,b.type);setTimeout(function(){a.fire("afterPaste")},0)},null,null,1E3);a.on("pasteDialog",function(b){setTimeout(function(){a.openDialog("paste",b.data)},0)})}})})();(function(){var c='<a id="{id}" class="cke_button cke_button__{name} cke_button_{state} {cls}"'+(CKEDITOR.env.gecko&&10900<=CKEDITOR.env.version&&!CKEDITOR.env.hc?"":'" href="javascript:void(\'{titleJs}\')"')+' title="{title}" tabindex="-1" hidefocus="true" role="button" aria-labelledby="{id}_label" aria-haspopup="{hasArrow}"';if(CKEDITOR.env.opera||CKEDITOR.env.gecko&&CKEDITOR.env.mac)c+=' onkeypress="return false;"';CKEDITOR.env.gecko&&(c+=' onblur="this.style.cssText = this.style.cssText;"');var c=
c+(' onkeydown="return CKEDITOR.tools.callFunction({keydownFn},event);" onfocus="return CKEDITOR.tools.callFunction({focusFn},event);"  onmousedown="return CKEDITOR.tools.callFunction({mousedownFn},event);" '+(CKEDITOR.env.ie?'onclick="return false;" onmouseup':"onclick")+'="CKEDITOR.tools.callFunction({clickFn},this);return false;"><span class="cke_button_icon cke_button__{iconName}_icon" style="{style}"'),c=c+'>&nbsp;</span><span id="{id}_label" class="cke_button_label cke_button__{name}_label">{label}</span>{arrowHtml}</a>',
m=CKEDITOR.addTemplate("buttonArrow",'<span class="cke_button_arrow">'+(CKEDITOR.env.hc?"&#9660;":"")+"</span>"),n=CKEDITOR.addTemplate("button",c);CKEDITOR.plugins.add("button",{beforeInit:function(a){a.ui.addHandler(CKEDITOR.UI_BUTTON,CKEDITOR.ui.button.handler)}});CKEDITOR.UI_BUTTON="button";CKEDITOR.ui.button=function(a){CKEDITOR.tools.extend(this,a,{title:a.label,click:a.click||function(b){b.execCommand(a.command)}});this._={}};CKEDITOR.ui.button.handler={create:function(a){return new CKEDITOR.ui.button(a)}};
CKEDITOR.ui.button.prototype={render:function(a,b){var c=CKEDITOR.env,i=this._.id=CKEDITOR.tools.getNextId(),f="",e=this.command,l;this._.editor=a;var d={id:i,button:this,editor:a,focus:function(){CKEDITOR.document.getById(i).focus()},execute:function(){this.button.click(a)},attach:function(a){this.button.attach(a)}},o=CKEDITOR.tools.addFunction(function(a){if(d.onkey)return a=new CKEDITOR.dom.event(a),!1!==d.onkey(d,a.getKeystroke())}),p=CKEDITOR.tools.addFunction(function(a){var b;d.onfocus&&(b=
!1!==d.onfocus(d,new CKEDITOR.dom.event(a)));CKEDITOR.env.gecko&&10900>CKEDITOR.env.version&&a.preventBubble();return b}),j=0,q=CKEDITOR.tools.addFunction(function(){if(CKEDITOR.env.opera){var b=a.editable();b.isInline()&&b.hasFocus&&(a.lockSelection(),j=1)}});d.clickFn=l=CKEDITOR.tools.addFunction(function(){j&&(a.unlockSelection(1),j=0);d.execute()});if(this.modes){var k={},g=function(){var b=a.mode;b&&(b=this.modes[b]?void 0!=k[b]?k[b]:CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,this.setState(a.readOnly&&
!this.readOnly?CKEDITOR.TRISTATE_DISABLED:b))};a.on("beforeModeUnload",function(){a.mode&&this._.state!=CKEDITOR.TRISTATE_DISABLED&&(k[a.mode]=this._.state)},this);a.on("mode",g,this);!this.readOnly&&a.on("readOnly",g,this)}else if(e&&(e=a.getCommand(e)))e.on("state",function(){this.setState(e.state)},this),f+=e.state==CKEDITOR.TRISTATE_ON?"on":e.state==CKEDITOR.TRISTATE_DISABLED?"disabled":"off";if(this.directional)a.on("contentDirChanged",function(b){var c=CKEDITOR.document.getById(this._.id),d=
c.getFirst(),b=b.data;b!=a.lang.dir?c.addClass("cke_"+b):c.removeClass("cke_ltr").removeClass("cke_rtl");d.setAttribute("style",CKEDITOR.skin.getIconStyle(h,"rtl"==b,this.icon,this.iconOffset))},this);e||(f+="off");var h=g=this.name||this.command;this.icon&&!/\./.test(this.icon)&&(h=this.icon,this.icon=null);c={id:i,name:g,iconName:h,label:this.label,cls:this.className||"",state:f,title:this.title,titleJs:c.gecko&&10900<=c.version&&!c.hc?"":(this.title||"").replace("'",""),hasArrow:this.hasArrow?
"true":"false",keydownFn:o,mousedownFn:q,focusFn:p,clickFn:l,style:CKEDITOR.skin.getIconStyle(h,"rtl"==a.lang.dir,this.icon,this.iconOffset),arrowHtml:this.hasArrow?m.output():""};n.output(c,b);if(this.onRender)this.onRender();return d},setState:function(a){if(this._.state==a)return!1;this._.state=a;var b=CKEDITOR.document.getById(this._.id);return b?(b.setState(a,"cke_button"),a==CKEDITOR.TRISTATE_DISABLED?b.setAttribute("aria-disabled",!0):b.removeAttribute("aria-disabled"),a==CKEDITOR.TRISTATE_ON?
b.setAttribute("aria-pressed",!0):b.removeAttribute("aria-pressed"),!0):!1},toFeature:function(a){if(this._.feature)return this._.feature;var b=this;!this.allowedContent&&(!this.requiredContent&&this.command)&&(b=a.getCommand(this.command)||b);return this._.feature=b}};CKEDITOR.ui.prototype.addButton=function(a,b){this.add(a,CKEDITOR.UI_BUTTON,b)}})();CKEDITOR.plugins.add("panelbutton",{requires:"button",onLoad:function(){function e(c){var a=this._;a.state!=CKEDITOR.TRISTATE_DISABLED&&(this.createPanel(c),a.on?a.panel.hide():a.panel.showBlock(this._.id,this.document.getById(this._.id),4))}CKEDITOR.ui.panelButton=CKEDITOR.tools.createClass({base:CKEDITOR.ui.button,$:function(c){var a=c.panel||{};delete c.panel;this.base(c);this.document=a.parent&&a.parent.getDocument()||CKEDITOR.document;a.block={attributes:a.attributes};this.hasArrow=a.toolbarRelated=
!0;this.click=e;this._={panelDefinition:a}},statics:{handler:{create:function(c){return new CKEDITOR.ui.panelButton(c)}}},proto:{createPanel:function(c){var a=this._;if(!a.panel){var f=this._.panelDefinition,e=this._.panelDefinition.block,g=f.parent||CKEDITOR.document.getBody(),d=this._.panel=new CKEDITOR.ui.floatPanel(c,g,f),f=d.addBlock(a.id,e),b=this;d.onShow=function(){b.className&&this.element.addClass(b.className+"_panel");b.setState(CKEDITOR.TRISTATE_ON);a.on=1;b.editorFocus&&c.focus();if(b.onOpen)b.onOpen()};
d.onHide=function(d){b.className&&this.element.getFirst().removeClass(b.className+"_panel");b.setState(b.modes&&b.modes[c.mode]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED);a.on=0;if(!d&&b.onClose)b.onClose()};d.onEscape=function(){d.hide(1);b.document.getById(a.id).focus()};if(this.onBlock)this.onBlock(d,f);f.onHide=function(){a.on=0;b.setState(CKEDITOR.TRISTATE_OFF)}}}}})},beforeInit:function(e){e.ui.addHandler(CKEDITOR.UI_PANELBUTTON,CKEDITOR.ui.panelButton.handler)}});
CKEDITOR.UI_PANELBUTTON="panelbutton";(function(){CKEDITOR.plugins.add("panel",{beforeInit:function(a){a.ui.addHandler(CKEDITOR.UI_PANEL,CKEDITOR.ui.panel.handler)}});CKEDITOR.UI_PANEL="panel";CKEDITOR.ui.panel=function(a,b){b&&CKEDITOR.tools.extend(this,b);CKEDITOR.tools.extend(this,{className:"",css:[]});this.id=CKEDITOR.tools.getNextId();this.document=a;this.isFramed=this.forceIFrame||this.css.length;this._={blocks:{}}};CKEDITOR.ui.panel.handler={create:function(a){return new CKEDITOR.ui.panel(a)}};var e=CKEDITOR.addTemplate("panel",
'<div lang="{langCode}" id="{id}" dir={dir} class="cke cke_reset_all {editorId} cke_panel cke_panel {cls} cke_{dir}" style="z-index:{z-index}" role="presentation">{frame}</div>'),f=CKEDITOR.addTemplate("panel-frame",'<iframe id="{id}" class="cke_panel_frame" role="application" frameborder="0" src="{src}"></iframe>'),g=CKEDITOR.addTemplate("panel-frame-inner",'<!DOCTYPE html><html class="cke_panel_container {env}" dir="{dir}" lang="{langCode}"><head>{css}</head><body class="cke_{dir}" style="margin:0;padding:0" onload="{onload}"></body></html>');
CKEDITOR.ui.panel.prototype={render:function(a,b){this.getHolderElement=function(){var a=this._.holder;if(!a){if(this.isFramed){var a=this.document.getById(this.id+"_frame"),b=a.getParent(),a=a.getFrameDocument();CKEDITOR.env.iOS&&b.setStyles({overflow:"scroll","-webkit-overflow-scrolling":"touch"});b=CKEDITOR.tools.addFunction(CKEDITOR.tools.bind(function(){this.isLoaded=!0;if(this.onLoad)this.onLoad()},this));a.write(g.output(CKEDITOR.tools.extend({css:CKEDITOR.tools.buildStyleHtml(this.css),onload:"window.parent.CKEDITOR.tools.callFunction("+
b+");"},c)));a.getWindow().$.CKEDITOR=CKEDITOR;a.on("key"+(CKEDITOR.env.opera?"press":"down"),function(a){var b=a.data.getKeystroke(),c=this.document.getById(this.id).getAttribute("dir");this._.onKeyDown&&!1===this._.onKeyDown(b)?a.data.preventDefault():(27==b||b==("rtl"==c?39:37))&&this.onEscape&&!1===this.onEscape(b)&&a.data.preventDefault()},this);a=a.getBody();a.unselectable();CKEDITOR.env.air&&CKEDITOR.tools.callFunction(b)}else a=this.document.getById(this.id);this._.holder=a}return a};var c=
{editorId:a.id,id:this.id,langCode:a.langCode,dir:a.lang.dir,cls:this.className,frame:"",env:CKEDITOR.env.cssClass,"z-index":a.config.baseFloatZIndex+1};this.isFramed&&(c.frame=f.output({id:this.id+"_frame",src:"javascript:void(document.open(),"+(CKEDITOR.env.isCustomDomain()?"document.domain='"+document.domain+"',":"")+'document.close())">'}));var d=e.output(c);b&&b.push(d);return d},addBlock:function(a,b){b=this._.blocks[a]=b instanceof CKEDITOR.ui.panel.block?b:new CKEDITOR.ui.panel.block(this.getHolderElement(),
b);this._.currentBlock||this.showBlock(a);return b},getBlock:function(a){return this._.blocks[a]},showBlock:function(a){var a=this._.blocks[a],b=this._.currentBlock,c=!this.forceIFrame||CKEDITOR.env.ie?this._.holder:this.document.getById(this.id+"_frame");b&&(c.removeAttributes(b.attributes),b.hide());this._.currentBlock=a;c.setAttributes(a.attributes);CKEDITOR.fire("ariaWidget",c);a._.focusIndex=-1;this._.onKeyDown=a.onKeyDown&&CKEDITOR.tools.bind(a.onKeyDown,a);a.show();return a},destroy:function(){this.element&&
this.element.remove()}};CKEDITOR.ui.panel.block=CKEDITOR.tools.createClass({$:function(a,b){this.element=a.append(a.getDocument().createElement("div",{attributes:{tabIndex:-1,"class":"cke_panel_block",role:"presentation"},styles:{display:"none"}}));b&&CKEDITOR.tools.extend(this,b);this.attributes.title||(this.attributes.title=this.attributes["aria-label"]);this.keys={};this._.focusIndex=-1;this.element.disableContextMenu()},_:{markItem:function(a){-1!=a&&(a=this.element.getElementsByTag("a").getItem(this._.focusIndex=
a),(CKEDITOR.env.webkit||CKEDITOR.env.opera)&&a.getDocument().getWindow().focus(),a.focus(),this.onMark&&this.onMark(a))}},proto:{show:function(){this.element.setStyle("display","")},hide:function(){(!this.onHide||!0!==this.onHide.call(this))&&this.element.setStyle("display","none")},onKeyDown:function(a){var b=this.keys[a];switch(b){case "next":for(var a=this._.focusIndex,b=this.element.getElementsByTag("a"),c;c=b.getItem(++a);)if(c.getAttribute("_cke_focus")&&c.$.offsetWidth){this._.focusIndex=
a;c.focus();break}return!1;case "prev":a=this._.focusIndex;for(b=this.element.getElementsByTag("a");0<a&&(c=b.getItem(--a));)if(c.getAttribute("_cke_focus")&&c.$.offsetWidth){this._.focusIndex=a;c.focus();break}return!1;case "click":case "mouseup":return a=this._.focusIndex,(c=0<=a&&this.element.getElementsByTag("a").getItem(a))&&(c.$[b]?c.$[b]():c.$["on"+b]()),!1}return!0}}})})();CKEDITOR.plugins.add("floatpanel",{requires:"panel"});
(function(){function o(a,b,c,h,g){var g=CKEDITOR.tools.genKey(b.getUniqueId(),c.getUniqueId(),a.lang.dir,a.uiColor||"",h.css||"",g||""),e=i[g];e||(e=i[g]=new CKEDITOR.ui.panel(b,h),e.element=c.append(CKEDITOR.dom.element.createFromHtml(e.render(a),b)),e.element.setStyles({display:"none",position:"absolute"}));return e}var i={};CKEDITOR.ui.floatPanel=CKEDITOR.tools.createClass({$:function(a,b,c,h){function g(){j.hide()}c.forceIFrame=1;c.toolbarRelated&&a.elementMode==CKEDITOR.ELEMENT_MODE_INLINE&&
(b=CKEDITOR.document.getById("cke_"+a.name));var e=b.getDocument(),h=o(a,e,b,c,h||0),k=h.element,d=k.getFirst(),j=this;k.disableContextMenu();k.setAttribute("role","application");this.element=k;this._={editor:a,panel:h,parentElement:b,definition:c,document:e,iframe:d,children:[],dir:a.lang.dir};a.on("mode",g);a.on("resize",g);e.getWindow().on("resize",g)},proto:{addBlock:function(a,b){return this._.panel.addBlock(a,b)},addListBlock:function(a,b){return this._.panel.addListBlock(a,b)},getBlock:function(a){return this._.panel.getBlock(a)},
showBlock:function(a,b,c,h,g){var e=this._.panel,k=e.showBlock(a);this.allowBlur(!1);a=this._.editor.editable();this._.returnFocus=a.hasFocus?a:new CKEDITOR.dom.element(CKEDITOR.document.$.activeElement);var d=this.element,a=this._.iframe,a=CKEDITOR.env.ie?a:new CKEDITOR.dom.window(a.$.contentWindow),j=d.getDocument(),i=this._.parentElement.getPositionedAncestor(),n=b.getDocumentPosition(j),j=i?i.getDocumentPosition(j):{x:0,y:0},m="rtl"==this._.dir,f=n.x+(h||0)-j.x,l=n.y+(g||0)-j.y;if(m&&(1==c||4==
c))f+=b.$.offsetWidth;else if(!m&&(2==c||3==c))f+=b.$.offsetWidth-1;if(3==c||4==c)l+=b.$.offsetHeight-1;this._.panel._.offsetParentId=b.getId();d.setStyles({top:l+"px",left:0,display:""});d.setOpacity(0);d.getFirst().removeStyle("width");this._.editor.focusManager.add(a);this._.blurSet||(CKEDITOR.event.useCapture=!0,a.on("blur",function(a){this.allowBlur()&&a.data.getPhase()==CKEDITOR.EVENT_PHASE_AT_TARGET&&(this.visible&&!this._.activeChild)&&(delete this._.returnFocus,this.hide())},this),a.on("focus",
function(){this._.focused=!0;this.hideChild();this.allowBlur(!0)},this),CKEDITOR.event.useCapture=!1,this._.blurSet=1);e.onEscape=CKEDITOR.tools.bind(function(a){if(this.onEscape&&this.onEscape(a)===false)return false},this);CKEDITOR.tools.setTimeout(function(){var a=CKEDITOR.tools.bind(function(){d.removeStyle("width");if(k.autoSize){var a=k.element.getDocument(),a=(CKEDITOR.env.webkit?k.element:a.getBody()).$.scrollWidth;CKEDITOR.env.ie&&(CKEDITOR.env.quirks&&a>0)&&(a=a+((d.$.offsetWidth||0)-(d.$.clientWidth||
0)+3));d.setStyle("width",a+10+"px");a=k.element.$.scrollHeight;CKEDITOR.env.ie&&(CKEDITOR.env.quirks&&a>0)&&(a=a+((d.$.offsetHeight||0)-(d.$.clientHeight||0)+3));d.setStyle("height",a+"px");e._.currentBlock.element.setStyle("display","none").removeStyle("display")}else d.removeStyle("height");m&&(f=f-d.$.offsetWidth);d.setStyle("left",f+"px");var b=e.element.getWindow(),a=d.$.getBoundingClientRect(),b=b.getViewPaneSize(),c=a.width||a.right-a.left,g=a.height||a.bottom-a.top,h=m?a.right:b.width-a.left,
i=m?b.width-a.right:a.left;m?h<c&&(f=i>c?f+c:b.width>c?f-a.left:f-a.right+b.width):h<c&&(f=i>c?f-c:b.width>c?f-a.right+b.width:f-a.left);c=a.top;b.height-a.top<g&&(l=c>g?l-g:b.height>g?l-a.bottom+b.height:l-a.top);if(CKEDITOR.env.ie){b=a=new CKEDITOR.dom.element(d.$.offsetParent);b.getName()=="html"&&(b=b.getDocument().getBody());b.getComputedStyle("direction")=="rtl"&&(f=CKEDITOR.env.ie8Compat?f-d.getDocument().getDocumentElement().$.scrollLeft*2:f-(a.$.scrollWidth-a.$.clientWidth))}var a=d.getFirst(),
j;(j=a.getCustomData("activePanel"))&&j.onHide&&j.onHide.call(this,1);a.setCustomData("activePanel",this);d.setStyles({top:l+"px",left:f+"px"});d.setOpacity(1)},this);e.isLoaded?a():e.onLoad=a;CKEDITOR.tools.setTimeout(function(){this.focus();this.allowBlur(true);this._.editor.fire("panelShow",this)},0,this)},CKEDITOR.env.air?200:0,this);this.visible=1;this.onShow&&this.onShow.call(this)},focus:function(){if(CKEDITOR.env.webkit){var a=CKEDITOR.document.getActive();!a.equals(this._.iframe)&&a.$.blur()}(this._.lastFocused||
this._.iframe.getFrameDocument().getWindow()).focus()},blur:function(){var a=this._.iframe.getFrameDocument().getActive();a.is("a")&&(this._.lastFocused=a)},hide:function(a){if(this.visible&&(!this.onHide||!0!==this.onHide.call(this))){this.hideChild();CKEDITOR.env.gecko&&this._.iframe.getFrameDocument().$.activeElement.blur();this.element.setStyle("display","none");this.visible=0;this.element.getFirst().removeCustomData("activePanel");if(a=a&&this._.returnFocus)CKEDITOR.env.webkit&&a.type&&a.getWindow().$.focus(),
a.focus();delete this._.lastFocused;this._.editor.fire("panelHide",this)}},allowBlur:function(a){var b=this._.panel;void 0!=a&&(b.allowBlur=a);return b.allowBlur},showAsChild:function(a,b,c,h,g,e){this._.activeChild==a&&a._.panel._.offsetParentId==c.getId()||(this.hideChild(),a.onHide=CKEDITOR.tools.bind(function(){CKEDITOR.tools.setTimeout(function(){this._.focused||this.hide()},0,this)},this),this._.activeChild=a,this._.focused=!1,a.showBlock(b,c,h,g,e),this.blur(),(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat)&&
setTimeout(function(){a.element.getChild(0).$.style.cssText+=""},100))},hideChild:function(a){var b=this._.activeChild;b&&(delete b.onHide,delete this._.activeChild,b.hide(),a&&this.focus())}}});CKEDITOR.on("instanceDestroyed",function(){var a=CKEDITOR.tools.isEmpty(CKEDITOR.instances),b;for(b in i){var c=i[b];a?c.destroy():c.element.hide()}a&&(i={})})})();CKEDITOR.plugins.add("colorbutton",{requires:"panelbutton,floatpanel",init:function(c){function m(l,g,e,h){var k=new CKEDITOR.style(i["colorButton_"+g+"Style"]),j=CKEDITOR.tools.getNextId()+"_colorBox";c.ui.add(l,CKEDITOR.UI_PANELBUTTON,{label:e,title:e,modes:{wysiwyg:1},editorFocus:1,toolbar:"colors,"+h,allowedContent:k,requiredContent:k,panel:{css:CKEDITOR.skin.getPath("editor"),attributes:{role:"listbox","aria-label":f.panelTitle}},onBlock:function(a,b){b.autoSize=!0;b.element.addClass("cke_colorblock");
b.element.setHtml(o(a,g,j));b.element.getDocument().getBody().setStyle("overflow","hidden");CKEDITOR.ui.fire("ready",this);var d=b.keys,e="rtl"==c.lang.dir;d[e?37:39]="next";d[40]="next";d[9]="next";d[e?39:37]="prev";d[38]="prev";d[CKEDITOR.SHIFT+9]="prev";d[32]="click"},onOpen:function(){var a=c.getSelection(),a=a&&a.getStartElement(),a=c.elementPath(a),b,a=a.block||a.blockLimit||c.document.getBody();do b=a&&a.getComputedStyle("back"==g?"background-color":"color")||"transparent";while("back"==g&&
"transparent"==b&&a&&(a=a.getParent()));if(!b||"transparent"==b)b="#ffffff";this._.panel._.iframe.getFrameDocument().getById(j).setStyle("background-color",b);return b}})}function o(l,g,e){var h=[],k=i.colorButton_colors.split(","),j=CKEDITOR.tools.addFunction(function(a,b){if("?"==a){var e=arguments.callee,d=function(a){this.removeListener("ok",d);this.removeListener("cancel",d);"ok"==a.name&&e(this.getContentElement("picker","selectedColor").getValue(),b)};c.openDialog("colordialog",function(){this.on("ok",
d);this.on("cancel",d)})}else{c.focus();l.hide();c.fire("saveSnapshot");c.removeStyle(new CKEDITOR.style(i["colorButton_"+b+"Style"],{color:"inherit"}));if(a){var f=i["colorButton_"+b+"Style"];f.childRule="back"==b?function(a){return n(a)}:function(a){return!(a.is("a")||a.getElementsByTag("a").count())||n(a)};c.applyStyle(new CKEDITOR.style(f,{color:a}))}c.fire("saveSnapshot")}});h.push('<a class="cke_colorauto" _cke_focus=1 hidefocus=true title="',f.auto,'" onclick="CKEDITOR.tools.callFunction(',
j,",null,'",g,"');return false;\" href=\"javascript:void('",f.auto,'\')" role="option"><table role="presentation" cellspacing=0 cellpadding=0 width="100%"><tr><td><span class="cke_colorbox" id="',e,'"></span></td><td colspan=7 align=center>',f.auto,'</td></tr></table></a><table role="presentation" cellspacing=0 cellpadding=0 width="100%">');for(e=0;e<k.length;e++){0===e%8&&h.push("</tr><tr>");var a=k[e].split("/"),b=a[0],d=a[1]||b;a[1]||(b="#"+b.replace(/^(.)(.)(.)$/,"$1$1$2$2$3$3"));a=c.lang.colorbutton.colors[d]||
d;h.push('<td><a class="cke_colorbox" _cke_focus=1 hidefocus=true title="',a,'" onclick="CKEDITOR.tools.callFunction(',j,",'",b,"','",g,"'); return false;\" href=\"javascript:void('",a,'\')" role="option"><span class="cke_colorbox" style="background-color:#',d,'"></span></a></td>')}(c.plugins.colordialog&&void 0===i.colorButton_enableMore||i.colorButton_enableMore)&&h.push('</tr><tr><td colspan=8 align=center><a class="cke_colormore" _cke_focus=1 hidefocus=true title="',f.more,'" onclick="CKEDITOR.tools.callFunction(',
j,",'?','",g,"');return false;\" href=\"javascript:void('",f.more,"')\"",' role="option">',f.more,"</a></td>");h.push("</tr></table>");return h.join("")}function n(c){return"false"==c.getAttribute("contentEditable")||c.getAttribute("data-nostyle")}var i=c.config,f=c.lang.colorbutton;CKEDITOR.env.hc||(m("TextColor","fore",f.textColorTitle,10),m("BGColor","back",f.bgColorTitle,20))}});CKEDITOR.config.colorButton_colors="000,800000,8B4513,2F4F4F,008080,000080,4B0082,696969,B22222,A52A2A,DAA520,006400,40E0D0,0000CD,800080,808080,F00,FF8C00,FFD700,008000,0FF,00F,EE82EE,A9A9A9,FFA07A,FFA500,FFFF00,00FF00,AFEEEE,ADD8E6,DDA0DD,D3D3D3,FFF0F5,FAEBD7,FFFFE0,F0FFF0,F0FFFF,F0F8FF,E6E6FA,FFF";
CKEDITOR.config.colorButton_foreStyle={element:"span",styles:{color:"#(color)"},overrides:[{element:"font",attributes:{color:null}}]};CKEDITOR.config.colorButton_backStyle={element:"span",styles:{"background-color":"#(color)"}};CKEDITOR.plugins.colordialog={requires:"dialog",init:function(b){b.addCommand("colordialog",new CKEDITOR.dialogCommand("colordialog"));CKEDITOR.dialog.add("colordialog",this.path+"dialogs/colordialog.js");b.getColorFromDialog=function(e,f){var c=function(a){this.removeListener("ok",c);this.removeListener("cancel",c);a="ok"==a.name?this.getValueOf("picker","selectedColor"):null;e.call(f,a)},d=function(a){a.on("ok",c);a.on("cancel",c)};b.execCommand("colordialog");if(b._.storedDialogs&&b._.storedDialogs.colordialog)d(b._.storedDialogs.colordialog);
else CKEDITOR.on("dialogDefinition",function(a){if("colordialog"==a.data.name){var b=a.data.definition;a.removeListener();b.onLoad=CKEDITOR.tools.override(b.onLoad,function(a){return function(){d(this);b.onLoad=a;"function"==typeof a&&a.call(this)}})}})}}};CKEDITOR.plugins.add("colordialog",CKEDITOR.plugins.colordialog);(function(){CKEDITOR.plugins.add("templates",{requires:"dialog",init:function(a){CKEDITOR.dialog.add("templates",CKEDITOR.getUrl(this.path+"dialogs/templates.js"));a.addCommand("templates",new CKEDITOR.dialogCommand("templates"));a.ui.addButton&&a.ui.addButton("Templates",{label:a.lang.templates.button,command:"templates",toolbar:"doctools,10"})}});var c={},f={};CKEDITOR.addTemplates=function(a,d){c[a]=d};CKEDITOR.getTemplates=function(a){return c[a]};CKEDITOR.loadTemplates=function(a,d){for(var e=
[],b=0,c=a.length;b<c;b++)f[a[b]]||(e.push(a[b]),f[a[b]]=1);e.length?CKEDITOR.scriptLoader.load(e,d):setTimeout(d,0)}})();CKEDITOR.config.templates_files=[CKEDITOR.getUrl("plugins/templates/templates/default.js")];CKEDITOR.config.templates_replaceContent=!0;CKEDITOR.plugins.add("menu",{requires:"floatpanel",beforeInit:function(k){for(var g=k.config.menu_groups.split(","),m=k._.menuGroups={},l=k._.menuItems={},a=0;a<g.length;a++)m[g[a]]=a+1;k.addMenuGroup=function(b,a){m[b]=a||100};k.addMenuItem=function(a,c){m[c.group]&&(l[a]=new CKEDITOR.menuItem(this,a,c))};k.addMenuItems=function(a){for(var c in a)this.addMenuItem(c,a[c])};k.getMenuItem=function(a){return l[a]};k.removeMenuItem=function(a){delete l[a]}}});
(function(){function k(a){a.sort(function(a,c){return a.group<c.group?-1:a.group>c.group?1:a.order<c.order?-1:a.order>c.order?1:0})}var g='<span class="cke_menuitem"><a id="{id}" class="cke_menubutton cke_menubutton__{name} cke_menubutton_{state} {cls}" href="{href}" title="{title}" tabindex="-1"_cke_focus=1 hidefocus="true" role="menuitem" aria-haspopup="{hasPopup}" aria-disabled="{disabled}"';if(CKEDITOR.env.opera||CKEDITOR.env.gecko&&CKEDITOR.env.mac)g+=' onkeypress="return false;"';CKEDITOR.env.gecko&&
(g+=' onblur="this.style.cssText = this.style.cssText;"');var g=g+(' onmouseover="CKEDITOR.tools.callFunction({hoverFn},{index});" onmouseout="CKEDITOR.tools.callFunction({moveOutFn},{index});" '+(CKEDITOR.env.ie?'onclick="return false;" onmouseup':"onclick")+'="CKEDITOR.tools.callFunction({clickFn},{index}); return false;">'),m=CKEDITOR.addTemplate("menuItem",g+'<span class="cke_menubutton_inner"><span class="cke_menubutton_icon"><span class="cke_button_icon cke_button__{iconName}_icon" style="{iconStyle}"></span></span><span class="cke_menubutton_label">{label}</span>{arrowHtml}</span></a></span>'),
l=CKEDITOR.addTemplate("menuArrow",'<span class="cke_menuarrow"><span>{label}</span></span>');CKEDITOR.menu=CKEDITOR.tools.createClass({$:function(a,b){b=this._.definition=b||{};this.id=CKEDITOR.tools.getNextId();this.editor=a;this.items=[];this._.listeners=[];this._.level=b.level||1;var c=CKEDITOR.tools.extend({},b.panel,{css:[CKEDITOR.skin.getPath("editor")],level:this._.level-1,block:{}}),j=c.block.attributes=c.attributes||{};!j.role&&(j.role="menu");this._.panelDefinition=c},_:{onShow:function(){var a=
this.editor.getSelection(),b=a&&a.getStartElement(),c=this.editor.elementPath(),j=this._.listeners;this.removeAll();for(var e=0;e<j.length;e++){var i=j[e](b,a,c);if(i)for(var f in i){var h=this.editor.getMenuItem(f);if(h&&(!h.command||this.editor.getCommand(h.command).state))h.state=i[f],this.add(h)}}},onClick:function(a){this.hide();if(a.onClick)a.onClick();else a.command&&this.editor.execCommand(a.command)},onEscape:function(a){var b=this.parent;b?b._.panel.hideChild(1):27==a&&this.hide(1);return!1},
onHide:function(){this.onHide&&this.onHide()},showSubMenu:function(a){var b=this._.subMenu,c=this.items[a];if(c=c.getItems&&c.getItems()){b?b.removeAll():(b=this._.subMenu=new CKEDITOR.menu(this.editor,CKEDITOR.tools.extend({},this._.definition,{level:this._.level+1},!0)),b.parent=this,b._.onClick=CKEDITOR.tools.bind(this._.onClick,this));for(var j in c){var e=this.editor.getMenuItem(j);e&&(e.state=c[j],b.add(e))}var i=this._.panel.getBlock(this.id).element.getDocument().getById(this.id+(""+a));setTimeout(function(){b.show(i,
2)},0)}else this._.panel.hideChild(1)}},proto:{add:function(a){a.order||(a.order=this.items.length);this.items.push(a)},removeAll:function(){this.items=[]},show:function(a,b,c,j){if(!this.parent&&(this._.onShow(),!this.items.length))return;var b=b||("rtl"==this.editor.lang.dir?2:1),e=this.items,i=this.editor,f=this._.panel,h=this._.element;if(!f){f=this._.panel=new CKEDITOR.ui.floatPanel(this.editor,CKEDITOR.document.getBody(),this._.panelDefinition,this._.level);f.onEscape=CKEDITOR.tools.bind(function(a){if(!1===
this._.onEscape(a))return!1},this);f.onShow=function(){f._.panel.getHolderElement().getParent().addClass("cke cke_reset_all")};f.onHide=CKEDITOR.tools.bind(function(){this._.onHide&&this._.onHide()},this);h=f.addBlock(this.id,this._.panelDefinition.block);h.autoSize=!0;var d=h.keys;d[40]="next";d[9]="next";d[38]="prev";d[CKEDITOR.SHIFT+9]="prev";d["rtl"==i.lang.dir?37:39]=CKEDITOR.env.ie?"mouseup":"click";d[32]=CKEDITOR.env.ie?"mouseup":"click";CKEDITOR.env.ie&&(d[13]="mouseup");h=this._.element=
h.element;d=h.getDocument();d.getBody().setStyle("overflow","hidden");d.getElementsByTag("html").getItem(0).setStyle("overflow","hidden");this._.itemOverFn=CKEDITOR.tools.addFunction(function(a){clearTimeout(this._.showSubTimeout);this._.showSubTimeout=CKEDITOR.tools.setTimeout(this._.showSubMenu,i.config.menu_subMenuDelay||400,this,[a])},this);this._.itemOutFn=CKEDITOR.tools.addFunction(function(){clearTimeout(this._.showSubTimeout)},this);this._.itemClickFn=CKEDITOR.tools.addFunction(function(a){var b=
this.items[a];if(b.state==CKEDITOR.TRISTATE_DISABLED)this.hide(1);else if(b.getItems)this._.showSubMenu(a);else this._.onClick(b)},this)}k(e);for(var d=i.elementPath(),d=['<div class="cke_menu'+(d&&d.direction()!=i.lang.dir?" cke_mixed_dir_content":"")+'" role="presentation">'],g=e.length,m=g&&e[0].group,l=0;l<g;l++){var n=e[l];m!=n.group&&(d.push('<div class="cke_menuseparator" role="separator"></div>'),m=n.group);n.render(this,l,d)}d.push("</div>");h.setHtml(d.join(""));CKEDITOR.ui.fire("ready",
this);this.parent?this.parent._.panel.showAsChild(f,this.id,a,b,c,j):f.showBlock(this.id,a,b,c,j);i.fire("menuShow",[f])},addListener:function(a){this._.listeners.push(a)},hide:function(a){this._.onHide&&this._.onHide();this._.panel&&this._.panel.hide(a)}}});CKEDITOR.menuItem=CKEDITOR.tools.createClass({$:function(a,b,c){CKEDITOR.tools.extend(this,c,{order:0,className:"cke_menubutton__"+b});this.group=a._.menuGroups[this.group];this.editor=a;this.name=b},proto:{render:function(a,b,c){var g=a.id+(""+
b),e="undefined"==typeof this.state?CKEDITOR.TRISTATE_OFF:this.state,i=e==CKEDITOR.TRISTATE_ON?"on":e==CKEDITOR.TRISTATE_DISABLED?"disabled":"off",f=this.getItems,h="&#"+("rtl"==this.editor.lang.dir?"9668":"9658")+";",d=this.name;this.icon&&!/\./.test(this.icon)&&(d=this.icon);a={id:g,name:this.name,iconName:d,label:this.label,cls:this.className||"",state:i,hasPopup:f?"true":"false",disabled:e==CKEDITOR.TRISTATE_DISABLED,title:this.label,href:"javascript:void('"+(this.label||"").replace("'")+"')",
hoverFn:a._.itemOverFn,moveOutFn:a._.itemOutFn,clickFn:a._.itemClickFn,index:b,iconStyle:CKEDITOR.skin.getIconStyle(d,"rtl"==this.editor.lang.dir,d==this.icon?null:this.icon,this.iconOffset),arrowHtml:f?l.output({label:h}):""};m.output(a,c)}}})})();CKEDITOR.config.menu_groups="clipboard,form,tablecell,tablecellproperties,tablerow,tablecolumn,table,anchor,link,image,flash,checkbox,radio,textfield,hiddenfield,imagebutton,button,select,textarea,div";CKEDITOR.plugins.add("contextmenu",{requires:"menu",onLoad:function(){CKEDITOR.plugins.contextMenu=CKEDITOR.tools.createClass({base:CKEDITOR.menu,$:function(b){this.base.call(this,b,{panel:{className:"cke_menu_panel",attributes:{"aria-label":b.lang.contextmenu.options}}})},proto:{addTarget:function(b,d){if(CKEDITOR.env.opera&&!("oncontextmenu"in document.body)){var c;b.on("mousedown",function(a){a=a.data;if(2!=a.$.button)a.getKeystroke()==CKEDITOR.CTRL+1&&b.fire("contextmenu",a);else if(!d||!(CKEDITOR.env.mac?
a.$.metaKey:a.$.ctrlKey)){var g=a.getTarget();c||(g=g.getDocument(),c=g.createElement("input"),c.$.type="button",g.getBody().append(c));c.setAttribute("style","position:absolute;top:"+(a.$.clientY-2)+"px;left:"+(a.$.clientX-2)+"px;width:5px;height:5px;opacity:0.01")}});b.on("mouseup",function(a){c&&(c.remove(),c=void 0,b.fire("contextmenu",a.data))})}b.on("contextmenu",function(a){a=a.data;if(!d||!(CKEDITOR.env.webkit?e:CKEDITOR.env.mac?a.$.metaKey:a.$.ctrlKey)){a.preventDefault();var b=a.getTarget().getDocument(),
c=a.getTarget().getDocument().getDocumentElement(),f=!b.equals(CKEDITOR.document),b=b.getWindow().getScrollPosition(),h=f?a.$.clientX:a.$.pageX||b.x+a.$.clientX,i=f?a.$.clientY:a.$.pageY||b.y+a.$.clientY;CKEDITOR.tools.setTimeout(function(){this.open(c,null,h,i)},CKEDITOR.env.ie?200:0,this)}},this);if(CKEDITOR.env.opera)b.on("keypress",function(a){a=a.data;0===a.$.keyCode&&a.preventDefault()});if(CKEDITOR.env.webkit){var e,f=function(){e=0};b.on("keydown",function(a){e=CKEDITOR.env.mac?a.data.$.metaKey:
a.data.$.ctrlKey});b.on("keyup",f);b.on("contextmenu",f)}},open:function(b,d,c,e){this.editor.focus();b=b||CKEDITOR.document.getDocumentElement();this.editor.selectionChange(1);this.show(b,d,c,e)}}})},beforeInit:function(b){var d=b.contextMenu=new CKEDITOR.plugins.contextMenu(b);b.on("contentDom",function(){d.addTarget(b.editable(),!1!==b.config.browserContextMenuOnCtrl)});b.addCommand("contextMenu",{exec:function(){b.contextMenu.open(b.document.getBody())}});b.setKeystroke(CKEDITOR.SHIFT+121,"contextMenu");
b.setKeystroke(CKEDITOR.CTRL+CKEDITOR.SHIFT+121,"contextMenu")}});(function(){CKEDITOR.plugins.add("div",{requires:"dialog",init:function(a){if(!a.blockless){var c=a.lang.div,b="div(*)";CKEDITOR.dialog.isTabEnabled(a,"editdiv","advanced")&&(b+=";div[dir,id,lang,title]{*}");a.addCommand("creatediv",new CKEDITOR.dialogCommand("creatediv",{allowedContent:b,requiredContent:"div",contextSensitive:!0,refresh:function(a,c){this.setState("div"in(a.config.div_wrapTable?c.root:c.blockLimit).getDtd()?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED)}}));a.addCommand("editdiv",
new CKEDITOR.dialogCommand("editdiv",{requiredContent:"div"}));a.addCommand("removediv",{requiredContent:"div",exec:function(a){function c(b){if((b=CKEDITOR.plugins.div.getSurroundDiv(a,b))&&!b.data("cke-div-added"))f.push(b),b.data("cke-div-added")}for(var b=a.getSelection(),g=b&&b.getRanges(),e,h=b.createBookmarks(),f=[],d=0;d<g.length;d++)e=g[d],e.collapsed?c(b.getStartElement()):(e=new CKEDITOR.dom.walker(e),e.evaluator=c,e.lastForward());for(d=0;d<f.length;d++)f[d].remove(!0);b.selectBookmarks(h)}});
a.ui.addButton&&a.ui.addButton("CreateDiv",{label:c.toolbar,command:"creatediv",toolbar:"blocks,50"});a.addMenuItems&&(a.addMenuItems({editdiv:{label:c.edit,command:"editdiv",group:"div",order:1},removediv:{label:c.remove,command:"removediv",group:"div",order:5}}),a.contextMenu&&a.contextMenu.addListener(function(b){return!b||b.isReadOnly()?null:CKEDITOR.plugins.div.getSurroundDiv(a)?{editdiv:CKEDITOR.TRISTATE_OFF,removediv:CKEDITOR.TRISTATE_OFF}:null}));CKEDITOR.dialog.add("creatediv",this.path+
"dialogs/div.js");CKEDITOR.dialog.add("editdiv",this.path+"dialogs/div.js")}}});CKEDITOR.plugins.div={getSurroundDiv:function(a,c){var b=a.elementPath(c);return a.elementPath(b.blockLimit).contains("div",1)}}})();CKEDITOR.plugins.add("resize",{init:function(b){var f,g,n,o,a=b.config,q=b.ui.spaceId("resizer"),h=b.element?b.element.getDirection(1):"ltr";!a.resize_dir&&(a.resize_dir="vertical");void 0==a.resize_maxWidth&&(a.resize_maxWidth=3E3);void 0==a.resize_maxHeight&&(a.resize_maxHeight=3E3);void 0==a.resize_minWidth&&(a.resize_minWidth=750);void 0==a.resize_minHeight&&(a.resize_minHeight=250);if(!1!==a.resize_enabled){var c=null,i=("both"==a.resize_dir||"horizontal"==a.resize_dir)&&a.resize_minWidth!=a.resize_maxWidth,
l=("both"==a.resize_dir||"vertical"==a.resize_dir)&&a.resize_minHeight!=a.resize_maxHeight,j=function(d){var e=f,m=g,c=e+(d.data.$.screenX-n)*("rtl"==h?-1:1),d=m+(d.data.$.screenY-o);i&&(e=Math.max(a.resize_minWidth,Math.min(c,a.resize_maxWidth)));l&&(m=Math.max(a.resize_minHeight,Math.min(d,a.resize_maxHeight)));b.resize(i?e:null,m)},k=function(){CKEDITOR.document.removeListener("mousemove",j);CKEDITOR.document.removeListener("mouseup",k);b.document&&(b.document.removeListener("mousemove",j),b.document.removeListener("mouseup",
k))},p=CKEDITOR.tools.addFunction(function(d){c||(c=b.getResizable());f=c.$.offsetWidth||0;g=c.$.offsetHeight||0;n=d.screenX;o=d.screenY;a.resize_minWidth>f&&(a.resize_minWidth=f);a.resize_minHeight>g&&(a.resize_minHeight=g);CKEDITOR.document.on("mousemove",j);CKEDITOR.document.on("mouseup",k);b.document&&(b.document.on("mousemove",j),b.document.on("mouseup",k));d.preventDefault&&d.preventDefault()});b.on("destroy",function(){CKEDITOR.tools.removeFunction(p)});b.on("uiSpace",function(a){if("bottom"==
a.data.space){var e="";i&&!l&&(e=" cke_resizer_horizontal");!i&&l&&(e=" cke_resizer_vertical");var c='<span id="'+q+'" class="cke_resizer'+e+" cke_resizer_"+h+'" title="'+CKEDITOR.tools.htmlEncode(b.lang.common.resize)+'" onmousedown="CKEDITOR.tools.callFunction('+p+', event)">'+("ltr"==h?"◢":"◣")+"</span>";"ltr"==h&&"ltr"==e?a.data.html+=c:a.data.html=c+a.data.html}},b,null,100);b.on("maximize",function(a){b.ui.space("resizer")[a.data==CKEDITOR.TRISTATE_ON?"hide":"show"]()})}}});(function(){function w(a){function d(){for(var b=i(),e=CKEDITOR.tools.clone(a.config.toolbarGroups)||n(a),f=0;f<e.length;f++){var k=e[f];if("/"!=k){"string"==typeof k&&(k=e[f]={name:k});var j,d=k.groups;if(d)for(var h=0;h<d.length;h++)j=d[h],(j=b[j])&&c(k,j);(j=b[k.name])&&c(k,j)}}return e}function i(){var b={},c,f,e;for(c in a.ui.items)f=a.ui.items[c],e=f.toolbar||"others",e=e.split(","),f=e[0],e=parseInt(e[1]||-1,10),b[f]||(b[f]=[]),b[f].push({name:c,order:e});for(f in b)b[f]=b[f].sort(function(b,
a){return b.order==a.order?0:0>a.order?-1:0>b.order?1:b.order<a.order?-1:1});return b}function c(c,e){if(e.length){c.items?c.items.push(a.ui.create("-")):c.items=[];for(var f;f=e.shift();)if(f="string"==typeof f?f:f.name,!b||-1==CKEDITOR.tools.indexOf(b,f))(f=a.ui.create(f))&&a.addFeature(f)&&c.items.push(f)}}function h(b){var a=[],e,d,h;for(e=0;e<b.length;++e)d=b[e],h={},"/"==d?a.push(d):CKEDITOR.tools.isArray(d)?(c(h,CKEDITOR.tools.clone(d)),a.push(h)):d.items&&(c(h,CKEDITOR.tools.clone(d.items)),
h.name=d.name,a.push(h));return a}var b=a.config.removeButtons,b=b&&b.split(","),e=a.config.toolbar;"string"==typeof e&&(e=a.config["toolbar_"+e]);return a.toolbar=e?h(e):d()}function n(a){return a._.toolbarGroups||(a._.toolbarGroups=[{name:"document",groups:["mode","document","doctools"]},{name:"clipboard",groups:["clipboard","undo"]},{name:"editing",groups:["find","selection","spellchecker"]},{name:"forms"},"/",{name:"basicstyles",groups:["basicstyles","cleanup"]},{name:"paragraph",groups:["list",
"indent","blocks","align"]},{name:"links"},{name:"insert"},"/",{name:"styles"},{name:"colors"},{name:"tools"},{name:"others"},{name:"about"}])}var t=function(){this.toolbars=[];this.focusCommandExecuted=!1};t.prototype.focus=function(){for(var a=0,d;d=this.toolbars[a++];)for(var i=0,c;c=d.items[i++];)if(c.focus){c.focus();return}};var x={modes:{wysiwyg:1,source:1},readOnly:1,exec:function(a){a.toolbox&&(a.toolbox.focusCommandExecuted=!0,CKEDITOR.env.ie||CKEDITOR.env.air?setTimeout(function(){a.toolbox.focus()},
100):a.toolbox.focus())}};CKEDITOR.plugins.add("toolbar",{requires:"button",init:function(a){var d,i=function(c,h){var b,e="rtl"==a.lang.dir,g=a.config.toolbarGroupCycling,g=void 0===g||g;switch(h){case 9:case CKEDITOR.SHIFT+9:for(;!b||!b.items.length;)if(b=9==h?(b?b.next:c.toolbar.next)||a.toolbox.toolbars[0]:(b?b.previous:c.toolbar.previous)||a.toolbox.toolbars[a.toolbox.toolbars.length-1],b.items.length)for(c=b.items[d?b.items.length-1:0];c&&!c.focus;)(c=d?c.previous:c.next)||(b=0);c&&c.focus();
return!1;case e?37:39:case 40:b=c;do b=b.next,!b&&g&&(b=c.toolbar.items[0]);while(b&&!b.focus);b?b.focus():i(c,9);return!1;case e?39:37:case 38:b=c;do b=b.previous,!b&&g&&(b=c.toolbar.items[c.toolbar.items.length-1]);while(b&&!b.focus);b?b.focus():(d=1,i(c,CKEDITOR.SHIFT+9),d=0);return!1;case 27:return a.focus(),!1;case 13:case 32:return c.execute(),!1}return!0};a.on("uiSpace",function(c){if(c.data.space==a.config.toolbarLocation){c.removeListener();a.toolbox=new t;var d=CKEDITOR.tools.getNextId(),
b=['<span id="',d,'" class="cke_voice_label">',a.lang.toolbar.toolbars,"</span>",'<span id="'+a.ui.spaceId("toolbox")+'" class="cke_toolbox" role="group" aria-labelledby="',d,'" onmousedown="return false;">'],d=!1!==a.config.toolbarStartupExpanded,e,g;a.config.toolbarCanCollapse&&a.elementMode!=CKEDITOR.ELEMENT_MODE_INLINE&&b.push('<span class="cke_toolbox_main"'+(d?">":' style="display:none">'));for(var n=a.toolbox.toolbars,f=w(a),k=0;k<f.length;k++){var j,l=0,q,m=f[k],r;if(m)if(e&&(b.push("</span>"),
g=e=0),"/"===m)b.push('<span class="cke_toolbar_break"></span>');else{r=m.items||m;for(var s=0;s<r.length;s++){var o=r[s],u;if(o)if(o.type==CKEDITOR.UI_SEPARATOR)g=e&&o;else{u=!1!==o.canGroup;if(!l){j=CKEDITOR.tools.getNextId();l={id:j,items:[]};q=m.name&&(a.lang.toolbar.toolbarGroups[m.name]||m.name);b.push('<span id="',j,'" class="cke_toolbar"',q?' aria-labelledby="'+j+'_label"':"",' role="toolbar">');q&&b.push('<span id="',j,'_label" class="cke_voice_label">',q,"</span>");b.push('<span class="cke_toolbar_start"></span>');
var p=n.push(l)-1;0<p&&(l.previous=n[p-1],l.previous.next=l)}u?e||(b.push('<span class="cke_toolgroup" role="presentation">'),e=1):e&&(b.push("</span>"),e=0);j=function(c){c=c.render(a,b);p=l.items.push(c)-1;if(p>0){c.previous=l.items[p-1];c.previous.next=c}c.toolbar=l;c.onkey=i;c.onfocus=function(){a.toolbox.focusCommandExecuted||a.focus()}};g&&(j(g),g=0);j(o)}}e&&(b.push("</span>"),g=e=0);l&&b.push('<span class="cke_toolbar_end"></span></span>')}}a.config.toolbarCanCollapse&&b.push("</span>");if(a.config.toolbarCanCollapse&&
a.elementMode!=CKEDITOR.ELEMENT_MODE_INLINE){var v=CKEDITOR.tools.addFunction(function(){a.execCommand("toolbarCollapse")});a.on("destroy",function(){CKEDITOR.tools.removeFunction(v)});a.addCommand("toolbarCollapse",{readOnly:1,exec:function(b){var a=b.ui.space("toolbar_collapser"),c=a.getPrevious(),e=b.ui.space("contents"),d=c.getParent(),f=parseInt(e.$.style.height,10),h=d.$.offsetHeight,g=a.hasClass("cke_toolbox_collapser_min");g?(c.show(),a.removeClass("cke_toolbox_collapser_min"),a.setAttribute("title",
b.lang.toolbar.toolbarCollapse)):(c.hide(),a.addClass("cke_toolbox_collapser_min"),a.setAttribute("title",b.lang.toolbar.toolbarExpand));a.getFirst().setText(g?"▲":"◀");e.setStyle("height",f-(d.$.offsetHeight-h)+"px");b.fire("resize")},modes:{wysiwyg:1,source:1}});a.setKeystroke(CKEDITOR.ALT+(CKEDITOR.env.ie||CKEDITOR.env.webkit?189:109),"toolbarCollapse");b.push('<a title="'+(d?a.lang.toolbar.toolbarCollapse:a.lang.toolbar.toolbarExpand)+'" id="'+a.ui.spaceId("toolbar_collapser")+'" tabIndex="-1" class="cke_toolbox_collapser');
d||b.push(" cke_toolbox_collapser_min");b.push('" onclick="CKEDITOR.tools.callFunction('+v+')">','<span class="cke_arrow">&#9650;</span>',"</a>")}b.push("</span>");c.data.html+=b.join("")}});a.on("destroy",function(){if(this.toolbox){var a,d=0,b,e,g;for(a=this.toolbox.toolbars;d<a.length;d++){e=a[d].items;for(b=0;b<e.length;b++)g=e[b],g.clickFn&&CKEDITOR.tools.removeFunction(g.clickFn),g.keyDownFn&&CKEDITOR.tools.removeFunction(g.keyDownFn)}}});a.on("uiReady",function(){var c=a.ui.space("toolbox");
c&&a.focusManager.add(c,1)});a.addCommand("toolbarFocus",x);a.setKeystroke(CKEDITOR.ALT+121,"toolbarFocus");a.ui.add("-",CKEDITOR.UI_SEPARATOR,{});a.ui.addHandler(CKEDITOR.UI_SEPARATOR,{create:function(){return{render:function(a,d){d.push('<span class="cke_toolbar_separator" role="separator"></span>');return{}}}}})}});CKEDITOR.ui.prototype.addToolbarGroup=function(a,d,i){var c=n(this.editor),h=0===d,b={name:a};if(i){if(i=CKEDITOR.tools.search(c,function(a){return a.name==i})){!i.groups&&(i.groups=
[]);if(d&&(d=CKEDITOR.tools.indexOf(i.groups,d),0<=d)){i.groups.splice(d+1,0,a);return}h?i.groups.splice(0,0,a):i.groups.push(a);return}d=null}d&&(d=CKEDITOR.tools.indexOf(c,function(a){return a.name==d}));h?c.splice(0,0,a):"number"==typeof d?c.splice(d+1,0,b):c.push(a)}})();CKEDITOR.UI_SEPARATOR="separator";CKEDITOR.config.toolbarLocation="top";(function(){var h;function m(a,d){function o(b){b=a._.elementsPath.list[b];if(b.equals(a.editable())){var e=a.createRange();e.selectNodeContents(b);e.select()}else a.getSelection().selectElement(b);a.focus()}function p(){i&&i.setHtml(n);delete a._.elementsPath.list}var l=a.ui.spaceId("path"),i,q="cke_elementspath_"+CKEDITOR.tools.getNextNumber()+"_";a._.elementsPath={idBase:q,filters:[]};d.html+='<span id="'+l+'_label" class="cke_voice_label">'+a.lang.elementspath.eleLabel+'</span><span id="'+l+'" class="cke_path" role="group" aria-labelledby="'+
l+'_label">'+n+"</span>";a.on("uiReady",function(){var b=a.ui.space("path");b&&a.focusManager.add(b,1)});var m=CKEDITOR.tools.addFunction(o),r=CKEDITOR.tools.addFunction(function(b,e){var c=a._.elementsPath.idBase,f,e=new CKEDITOR.dom.event(e);f="rtl"==a.lang.dir;switch(e.getKeystroke()){case f?39:37:case 9:return(f=CKEDITOR.document.getById(c+(b+1)))||(f=CKEDITOR.document.getById(c+"0")),f.focus(),!1;case f?37:39:case CKEDITOR.SHIFT+9:return(f=CKEDITOR.document.getById(c+(b-1)))||(f=CKEDITOR.document.getById(c+
(a._.elementsPath.list.length-1))),f.focus(),!1;case 27:return a.focus(),!1;case 13:case 32:return o(b),!1}return!0});a.on("selectionChange",function(b){for(var e=a.editable(),c=b.data.selection.getStartElement(),b=[],f=a._.elementsPath.list=[],d=a._.elementsPath.filters;c;){var j=0,g;g=c.data("cke-display-name")?c.data("cke-display-name"):c.data("cke-real-element-type")?c.data("cke-real-element-type"):c.getName();for(var k=0;k<d.length;k++){var h=d[k](c,g);if(!1===h){j=1;break}g=h||g}j||(j=f.push(c)-
1,k=a.lang.elementspath.eleTitle.replace(/%1/,g),g=s.output({id:q+j,label:k,text:g,jsTitle:"javascript:void('"+g+"')",index:j,keyDownFn:r,clickFn:m}),b.unshift(g));if(c.equals(e))break;c=c.getParent()}i||(i=CKEDITOR.document.getById(l));e=i;e.setHtml(b.join("")+n);a.fire("elementsPathUpdate",{space:e})});a.on("readOnly",p);a.on("contentDomUnload",p);a.addCommand("elementsPathFocus",h);a.setKeystroke(CKEDITOR.ALT+122,"elementsPathFocus")}h={editorFocus:!1,readOnly:1,exec:function(a){(a=CKEDITOR.document.getById(a._.elementsPath.idBase+
"0"))&&a.focus(CKEDITOR.env.ie||CKEDITOR.env.air)}};var n='<span class="cke_path_empty">&nbsp;</span>',d="";if(CKEDITOR.env.opera||CKEDITOR.env.gecko&&CKEDITOR.env.mac)d+=' onkeypress="return false;"';CKEDITOR.env.gecko&&(d+=' onblur="this.style.cssText = this.style.cssText;"');var s=CKEDITOR.addTemplate("pathItem",'<a id="{id}" href="{jsTitle}" tabindex="-1" class="cke_path_item" title="{label}"'+(CKEDITOR.env.gecko&&10900>CKEDITOR.env.version?' onfocus="event.preventBubble();"':"")+d+' hidefocus="true"  onkeydown="return CKEDITOR.tools.callFunction({keyDownFn},{index}, event );" onclick="CKEDITOR.tools.callFunction({clickFn},{index}); return false;" role="button" aria-label="{label}">{text}</a>');
CKEDITOR.plugins.add("elementspath",{init:function(a){a.on("uiSpace",function(d){"bottom"==d.data.space&&m(a,d.data)})}})})();(function(){function C(c,j,f){function b(b){if((d=a[b?"getFirst":"getLast"]())&&(!d.is||!d.isBlockBoundary())&&(m=j.root[b?"getPrevious":"getNext"](CKEDITOR.dom.walker.invisible(!0)))&&(!m.is||!m.isBlockBoundary({br:1})))c.document.createElement("br")[b?"insertBefore":"insertAfter"](d)}for(var i=CKEDITOR.plugins.list.listToArray(j.root,f),e=[],h=0;h<j.contents.length;h++){var g=j.contents[h];if((g=g.getAscendant("li",!0))&&!g.getCustomData("list_item_processed"))e.push(g),CKEDITOR.dom.element.setMarker(f,
g,"list_item_processed",!0)}g=null;for(h=0;h<e.length;h++)g=e[h].getCustomData("listarray_index"),i[g].indent=-1;for(h=g+1;h<i.length;h++)if(i[h].indent>i[h-1].indent+1){e=i[h-1].indent+1-i[h].indent;for(g=i[h].indent;i[h]&&i[h].indent>=g;)i[h].indent+=e,h++;h--}var a=CKEDITOR.plugins.list.arrayToList(i,f,null,c.config.enterMode,j.root.getAttribute("dir")).listNode,d,m;b(!0);b();a.replace(j.root)}function x(c,j){this.name=c;this.context=this.type=j;this.allowedContent=j+" li";this.requiredContent=
j}function y(c,j,f,b){for(var i,e;i=c[b?"getLast":"getFirst"](D);)(e=i.getDirection(1))!==j.getDirection(1)&&i.setAttribute("dir",e),i.remove(),f?i[b?"insertBefore":"insertAfter"](f):j.append(i,b)}function A(c){var j;(j=function(f){var b=c[f?"getPrevious":"getNext"](q);b&&(b.type==CKEDITOR.NODE_ELEMENT&&b.is(c.getName()))&&(y(c,b,null,!f),c.remove(),c=b)})();j(1)}function B(c){return c.type==CKEDITOR.NODE_ELEMENT&&(c.getName()in CKEDITOR.dtd.$block||c.getName()in CKEDITOR.dtd.$listItem)&&CKEDITOR.dtd[c.getName()]["#"]}
function v(c,j,f){c.fire("saveSnapshot");f.enlarge(CKEDITOR.ENLARGE_LIST_ITEM_CONTENTS);var b=f.extractContents();j.trim(!1,!0);var i=j.createBookmark(),e=new CKEDITOR.dom.elementPath(j.startContainer),h=e.block,e=e.lastElement.getAscendant("li",1)||h,g=new CKEDITOR.dom.elementPath(f.startContainer),a=g.contains(CKEDITOR.dtd.$listItem),g=g.contains(CKEDITOR.dtd.$list);h?(h=h.getBogus())&&h.remove():g&&(h=g.getPrevious(q))&&u(h)&&h.remove();(h=b.getLast())&&(h.type==CKEDITOR.NODE_ELEMENT&&h.is("br"))&&
h.remove();(h=j.startContainer.getChild(j.startOffset))?b.insertBefore(h):j.startContainer.append(b);if(a&&(b=w(a)))e.contains(a)?(y(b,a.getParent(),a),b.remove()):e.append(b);for(;f.checkStartOfBlock()&&f.checkEndOfBlock();)g=f.startPath(),b=g.block,b.is("li")&&(e=b.getParent(),b.equals(e.getLast(q))&&b.equals(e.getFirst(q))&&(b=e)),f.moveToPosition(b,CKEDITOR.POSITION_BEFORE_START),b.remove();f=f.clone();b=c.editable();f.setEndAt(b,CKEDITOR.POSITION_BEFORE_END);f=new CKEDITOR.dom.walker(f);f.evaluator=
function(a){return q(a)&&!u(a)};(f=f.next())&&(f.type==CKEDITOR.NODE_ELEMENT&&f.getName()in CKEDITOR.dtd.$list)&&A(f);j.moveToBookmark(i);j.select();c.fire("saveSnapshot")}function w(c){return(c=c.getLast(q))&&c.type==CKEDITOR.NODE_ELEMENT&&c.getName()in r?c:null}var r={ol:1,ul:1},E=CKEDITOR.dom.walker.whitespaces(),F=CKEDITOR.dom.walker.bookmark(),q=function(c){return!(E(c)||F(c))},u=CKEDITOR.dom.walker.bogus();CKEDITOR.plugins.list={listToArray:function(c,j,f,b,i){if(!r[c.getName()])return[];b||
(b=0);f||(f=[]);for(var e=0,h=c.getChildCount();e<h;e++){var g=c.getChild(e);g.type==CKEDITOR.NODE_ELEMENT&&g.getName()in CKEDITOR.dtd.$list&&CKEDITOR.plugins.list.listToArray(g,j,f,b+1);if("li"==g.$.nodeName.toLowerCase()){var a={parent:c,indent:b,element:g,contents:[]};i?a.grandparent=i:(a.grandparent=c.getParent(),a.grandparent&&"li"==a.grandparent.$.nodeName.toLowerCase()&&(a.grandparent=a.grandparent.getParent()));j&&CKEDITOR.dom.element.setMarker(j,g,"listarray_index",f.length);f.push(a);for(var d=
0,m=g.getChildCount(),k;d<m;d++)k=g.getChild(d),k.type==CKEDITOR.NODE_ELEMENT&&r[k.getName()]?CKEDITOR.plugins.list.listToArray(k,j,f,b+1,a.grandparent):a.contents.push(k)}}return f},arrayToList:function(c,j,f,b,i){f||(f=0);if(!c||c.length<f+1)return null;for(var e,h=c[f].parent.getDocument(),g=new CKEDITOR.dom.documentFragment(h),a=null,d=f,m=Math.max(c[f].indent,0),k=null,n,l,p=b==CKEDITOR.ENTER_P?"p":"div";;){var o=c[d];e=o.grandparent;n=o.element.getDirection(1);if(o.indent==m){if(!a||c[d].parent.getName()!=
a.getName())a=c[d].parent.clone(!1,1),i&&a.setAttribute("dir",i),g.append(a);k=a.append(o.element.clone(0,1));n!=a.getDirection(1)&&k.setAttribute("dir",n);for(e=0;e<o.contents.length;e++)k.append(o.contents[e].clone(1,1));d++}else if(o.indent==Math.max(m,0)+1)l=c[d-1].element.getDirection(1),d=CKEDITOR.plugins.list.arrayToList(c,null,d,b,l!=n?n:null),!k.getChildCount()&&(CKEDITOR.env.ie&&!(7<h.$.documentMode))&&k.append(h.createText(" ")),k.append(d.listNode),d=d.nextIndex;else if(-1==o.indent&&
!f&&e){r[e.getName()]?(k=o.element.clone(!1,!0),n!=e.getDirection(1)&&k.setAttribute("dir",n)):k=new CKEDITOR.dom.documentFragment(h);var a=e.getDirection(1)!=n,s=o.element,z=s.getAttribute("class"),u=s.getAttribute("style"),w=k.type==CKEDITOR.NODE_DOCUMENT_FRAGMENT&&(b!=CKEDITOR.ENTER_BR||a||u||z),t,x=o.contents.length;for(e=0;e<x;e++){t=o.contents[e];if(t.type==CKEDITOR.NODE_ELEMENT&&t.isBlockBoundary()){a&&!t.getDirection()&&t.setAttribute("dir",n);var v=t,y=s.getAttribute("style");y&&v.setAttribute("style",
y.replace(/([^;])$/,"$1;")+(v.getAttribute("style")||""));z&&t.addClass(z)}else w&&(l||(l=h.createElement(p),a&&l.setAttribute("dir",n)),u&&l.setAttribute("style",u),z&&l.setAttribute("class",z),l.append(t.clone(1,1)));k.append(l||t.clone(1,1))}k.type==CKEDITOR.NODE_DOCUMENT_FRAGMENT&&d!=c.length-1&&((n=k.getLast())&&(n.type==CKEDITOR.NODE_ELEMENT&&"_moz"==n.getAttribute("type"))&&n.remove(),(!k.getLast(q)||!(n.type==CKEDITOR.NODE_ELEMENT&&n.getName()in CKEDITOR.dtd.$block))&&k.append(h.createElement("br")));
n=k.$.nodeName.toLowerCase();!CKEDITOR.env.ie&&("div"==n||"p"==n)&&k.appendBogus();g.append(k);a=null;d++}else return null;l=null;if(c.length<=d||Math.max(c[d].indent,0)<m)break}if(j)for(c=g.getFirst();c;){if(c.type==CKEDITOR.NODE_ELEMENT&&(CKEDITOR.dom.element.clearMarkers(j,c),c.getName()in CKEDITOR.dtd.$listItem&&(f=c,h=i=b=void 0,b=f.getDirection()))){for(i=f.getParent();i&&!(h=i.getDirection());)i=i.getParent();b==h&&f.removeAttribute("dir")}c=c.getNextSourceNode()}return{listNode:g,nextIndex:d}}};
var G=/^h[1-6]$/,D=CKEDITOR.dom.walker.nodeType(CKEDITOR.NODE_ELEMENT);x.prototype={exec:function(c){this.refresh(c,c.elementPath());var j=c.config,f=c.getSelection(),b=f&&f.getRanges(!0);if(this.state==CKEDITOR.TRISTATE_OFF){var i=c.editable();if(i.getFirst(q)){var e=1==b.length&&b[0];(j=e&&e.getEnclosedNode())&&(j.is&&this.type==j.getName())&&this.setState(CKEDITOR.TRISTATE_ON)}else j.enterMode==CKEDITOR.ENTER_BR?i.appendBogus():b[0].fixBlock(1,j.enterMode==CKEDITOR.ENTER_P?"p":"div"),f.selectRanges(b)}for(var j=
f.createBookmarks(!0),i=[],h={},b=b.createIterator(),g=0;(e=b.getNextRange())&&++g;){var a=e.getBoundaryNodes(),d=a.startNode,m=a.endNode;d.type==CKEDITOR.NODE_ELEMENT&&"td"==d.getName()&&e.setStartAt(a.startNode,CKEDITOR.POSITION_AFTER_START);m.type==CKEDITOR.NODE_ELEMENT&&"td"==m.getName()&&e.setEndAt(a.endNode,CKEDITOR.POSITION_BEFORE_END);e=e.createIterator();for(e.forceBrBreak=this.state==CKEDITOR.TRISTATE_OFF;a=e.getNextParagraph();)if(!a.getCustomData("list_block")){CKEDITOR.dom.element.setMarker(h,
a,"list_block",1);for(var k=c.elementPath(a),d=k.elements,m=0,k=k.blockLimit,n,l=d.length-1;0<=l&&(n=d[l]);l--)if(r[n.getName()]&&k.contains(n)){k.removeCustomData("list_group_object_"+g);(d=n.getCustomData("list_group_object"))?d.contents.push(a):(d={root:n,contents:[a]},i.push(d),CKEDITOR.dom.element.setMarker(h,n,"list_group_object",d));m=1;break}m||(m=k,m.getCustomData("list_group_object_"+g)?m.getCustomData("list_group_object_"+g).contents.push(a):(d={root:m,contents:[a]},CKEDITOR.dom.element.setMarker(h,
m,"list_group_object_"+g,d),i.push(d)))}}for(n=[];0<i.length;)if(d=i.shift(),this.state==CKEDITOR.TRISTATE_OFF)if(r[d.root.getName()]){a=c;b=d;d=h;g=n;m=CKEDITOR.plugins.list.listToArray(b.root,d);k=[];for(e=0;e<b.contents.length;e++)if(l=b.contents[e],(l=l.getAscendant("li",!0))&&!l.getCustomData("list_item_processed"))k.push(l),CKEDITOR.dom.element.setMarker(d,l,"list_item_processed",!0);for(var l=b.root.getDocument(),p=void 0,o=void 0,e=0;e<k.length;e++){var s=k[e].getCustomData("listarray_index"),
p=m[s].parent;p.is(this.type)||(o=l.createElement(this.type),p.copyAttributes(o,{start:1,type:1}),o.removeStyle("list-style-type"),m[s].parent=o)}a=CKEDITOR.plugins.list.arrayToList(m,d,null,a.config.enterMode);d=void 0;m=a.listNode.getChildCount();for(e=0;e<m&&(d=a.listNode.getChild(e));e++)d.getName()==this.type&&g.push(d);a.listNode.replace(b.root)}else{m=c;a=d;e=n;k=a.contents;b=a.root.getDocument();g=[];1==k.length&&k[0].equals(a.root)&&(d=b.createElement("div"),k[0].moveChildren&&k[0].moveChildren(d),
k[0].append(d),k[0]=d);a=a.contents[0].getParent();for(l=0;l<k.length;l++)a=a.getCommonAncestor(k[l].getParent());p=m.config.useComputedState;m=d=void 0;p=void 0===p||p;for(l=0;l<k.length;l++)for(o=k[l];s=o.getParent();){if(s.equals(a)){g.push(o);!m&&o.getDirection()&&(m=1);o=o.getDirection(p);null!==d&&(d=d&&d!=o?null:o);break}o=s}if(!(1>g.length)){k=g[g.length-1].getNext();l=b.createElement(this.type);e.push(l);for(p=e=void 0;g.length;)e=g.shift(),p=b.createElement("li"),e.is("pre")||G.test(e.getName())?
e.appendTo(p):(e.copyAttributes(p),d&&e.getDirection()&&(p.removeStyle("direction"),p.removeAttribute("dir")),e.moveChildren(p),e.remove()),p.appendTo(l);d&&m&&l.setAttribute("dir",d);k?l.insertBefore(k):l.appendTo(a)}}else this.state==CKEDITOR.TRISTATE_ON&&r[d.root.getName()]&&C.call(this,c,d,h);for(l=0;l<n.length;l++)A(n[l]);CKEDITOR.dom.element.clearAllMarkers(h);f.selectBookmarks(j);c.focus()},refresh:function(c,j){var f=j.contains(r,1),b=j.blockLimit||j.root;f&&b.contains(f)?this.setState(f.is(this.type)?
CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF):this.setState(CKEDITOR.TRISTATE_OFF)}};CKEDITOR.plugins.add("list",{requires:"indent",init:function(c){c.blockless||(c.addCommand("numberedlist",new x("numberedlist","ol")),c.addCommand("bulletedlist",new x("bulletedlist","ul")),c.ui.addButton&&(c.ui.addButton("NumberedList",{label:c.lang.list.numberedlist,command:"numberedlist",directional:!0,toolbar:"list,10"}),c.ui.addButton("BulletedList",{label:c.lang.list.bulletedlist,command:"bulletedlist",directional:!0,
toolbar:"list,20"})),c.on("key",function(j){var f=j.data.keyCode;if(c.mode=="wysiwyg"&&f in{8:1,46:1}){var b=c.getSelection().getRanges()[0],i=b.startPath();if(b.collapsed){var i=new CKEDITOR.dom.elementPath(b.startContainer),e=f==8,h=c.editable(),g=new CKEDITOR.dom.walker(b.clone());g.evaluator=function(a){return q(a)&&!u(a)};g.guard=function(a,b){return!(b&&a.type==CKEDITOR.NODE_ELEMENT&&a.is("table"))};f=b.clone();if(e){var a,d;if((a=i.contains(r))&&b.checkBoundaryOfElement(a,CKEDITOR.START)&&
(a=a.getParent())&&a.is("li")&&(a=w(a))){d=a;a=a.getPrevious(q);f.moveToPosition(a&&u(a)?a:d,CKEDITOR.POSITION_BEFORE_START)}else{g.range.setStartAt(h,CKEDITOR.POSITION_AFTER_START);g.range.setEnd(b.startContainer,b.startOffset);if((a=g.previous())&&a.type==CKEDITOR.NODE_ELEMENT&&(a.getName()in r||a.is("li"))){if(!a.is("li")){g.range.selectNodeContents(a);g.reset();g.evaluator=B;a=g.previous()}d=a;f.moveToElementEditEnd(d)}}if(d){v(c,f,b);j.cancel()}else if((f=i.contains(r))&&b.checkBoundaryOfElement(f,
CKEDITOR.START)){d=f.getFirst(q);if(b.checkBoundaryOfElement(d,CKEDITOR.START)){a=f.getPrevious(q);if(w(d)){if(a){b.moveToElementEditEnd(a);b.select()}}else c.execCommand("outdent");j.cancel()}}}else if(d=i.contains("li")){g.range.setEndAt(h,CKEDITOR.POSITION_BEFORE_END);h=(i=d.getLast(q))&&B(i)?i:d;d=0;if((a=g.next())&&a.type==CKEDITOR.NODE_ELEMENT&&a.getName()in r&&a.equals(i)){d=1;a=g.next()}else b.checkBoundaryOfElement(h,CKEDITOR.END)&&(d=1);if(d&&a){b=b.clone();b.moveToElementEditStart(a);v(c,
f,b);j.cancel()}}else{g.range.setEndAt(h,CKEDITOR.POSITION_BEFORE_END);if((a=g.next())&&a.type==CKEDITOR.NODE_ELEMENT&&a.is(r)){a=a.getFirst(q);if(i.block&&b.checkStartOfBlock()&&b.checkEndOfBlock()){i.block.remove();b.moveToElementEditStart(a);b.select()}else if(w(a)){b.moveToElementEditStart(a);b.select()}else{b=b.clone();b.moveToElementEditStart(a);v(c,f,b)}j.cancel()}}setTimeout(function(){c.selectionChange(1)})}}}))}})})();(function(){function p(d,i){this.name=i;var a=this.useIndentClasses=d.config.indentClasses&&0<d.config.indentClasses.length;if(a){this.classNameRegex=RegExp("(?:^|\\s+)("+d.config.indentClasses.join("|")+")(?=$|\\s)");this.indentClassMap={};for(var f=0;f<d.config.indentClasses.length;f++)this.indentClassMap[d.config.indentClasses[f]]=f+1}this.startDisabled="outdent"==i;this.allowedContent={"div h1 h2 h3 h4 h5 h6 ol p pre ul":{propertiesOnly:!0,styles:!a?"margin-left,margin-right":null,classes:a?d.config.indentClasses:
null}};this.requiredContent=["p"+(a?"("+d.config.indentClasses[0]+")":"{margin-left}"),"li"]}function r(d,i){return"ltr"==(i||d.getComputedStyle("direction"))?"margin-left":"margin-right"}function q(d){return d.type==CKEDITOR.NODE_ELEMENT&&d.is("li")}var m={ol:1,ul:1},t=CKEDITOR.dom.walker.whitespaces(!0),u=CKEDITOR.dom.walker.bookmark(!1,!0);p.prototype={context:"p",refresh:function(d,i){var a=i&&i.contains(m),f=i.block||i.blockLimit;a?this.setState(CKEDITOR.TRISTATE_OFF):!this.useIndentClasses&&
"indent"==this.name?this.setState(CKEDITOR.TRISTATE_OFF):f?this.useIndentClasses?(a=f.$.className.match(this.classNameRegex),f=0,a&&(a=a[1],f=this.indentClassMap[a]),"outdent"==this.name&&!f||"indent"==this.name&&f==d.config.indentClasses.length?this.setState(CKEDITOR.TRISTATE_DISABLED):this.setState(CKEDITOR.TRISTATE_OFF)):(a=parseInt(f.getStyle(r(f)),10),isNaN(a)&&(a=0),0>=a?this.setState(CKEDITOR.TRISTATE_DISABLED):this.setState(CKEDITOR.TRISTATE_OFF)):this.setState(CKEDITOR.TRISTATE_DISABLED)},
exec:function(d){function i(n){for(var j=l.startContainer,b=l.endContainer;j&&!j.getParent().equals(n);)j=j.getParent();for(;b&&!b.getParent().equals(n);)b=b.getParent();if(j&&b){for(var c=j,j=[],a=!1;!a;)c.equals(b)&&(a=!0),j.push(c),c=c.getNext();if(!(1>j.length)){c=n.getParents(!0);for(b=0;b<c.length;b++)if(c[b].getName&&m[c[b].getName()]){n=c[b];break}for(var c="indent"==e.name?1:-1,b=j[0],j=j[j.length-1],a=CKEDITOR.plugins.list.listToArray(n,o),f=a[j.getCustomData("listarray_index")].indent,
b=b.getCustomData("listarray_index");b<=j.getCustomData("listarray_index");b++)if(a[b].indent+=c,0<c){var k=a[b].parent;a[b].parent=new CKEDITOR.dom.element(k.getName(),k.getDocument())}for(b=j.getCustomData("listarray_index")+1;b<a.length&&a[b].indent>f;b++)a[b].indent+=c;j=CKEDITOR.plugins.list.arrayToList(a,o,null,d.config.enterMode,n.getDirection());if("outdent"==e.name){var i;if((i=n.getParent())&&i.is("li"))for(var c=j.listNode.getChildren(),h=[],g,b=c.count()-1;0<=b;b--)(g=c.getItem(b))&&(g.is&&
g.is("li"))&&h.push(g)}j&&j.listNode.replace(n);if(h&&h.length)for(b=0;b<h.length;b++){for(g=n=h[b];(g=g.getNext())&&g.is&&g.getName()in m;)CKEDITOR.env.ie&&!n.getFirst(function(b){return t(b)&&u(b)})&&n.append(l.document.createText(" ")),n.append(g);n.insertAfter(i)}}}}function a(){var a=l.createIterator(),e=d.config.enterMode;a.enforceRealBlocks=!0;a.enlargeBr=e!=CKEDITOR.ENTER_BR;for(var b;b=a.getNextParagraph(e==CKEDITOR.ENTER_P?"p":"div");)f(b)}function f(a,g){if(a.getCustomData("indent_processed"))return!1;
if(e.useIndentClasses){var b=a.$.className.match(e.classNameRegex),c=0;b&&(b=b[1],c=e.indentClassMap[b]);"outdent"==e.name?c--:c++;if(0>c)return!1;c=Math.min(c,d.config.indentClasses.length);c=Math.max(c,0);a.$.className=CKEDITOR.tools.ltrim(a.$.className.replace(e.classNameRegex,""));0<c&&a.addClass(d.config.indentClasses[c-1])}else{b=r(a,g);c=parseInt(a.getStyle(b),10);isNaN(c)&&(c=0);var f=d.config.indentOffset||40,c=c+("indent"==e.name?1:-1)*f;if(0>c)return!1;c=Math.max(c,0);c=Math.ceil(c/f)*
f;a.setStyle(b,c?c+(d.config.indentUnit||"px"):"");""===a.getAttribute("style")&&a.removeAttribute("style")}CKEDITOR.dom.element.setMarker(o,a,"indent_processed",1);return!0}for(var e=this,o={},g=d.getSelection(),v=g.createBookmarks(1),l,p=(g&&g.getRanges(1)).createIterator();l=p.getNextRange();){for(var h=l.getCommonAncestor();h&&!(h.type==CKEDITOR.NODE_ELEMENT&&m[h.getName()]);)h=h.getParent();if(!h){var k=l.getEnclosedNode();k&&(k.type==CKEDITOR.NODE_ELEMENT&&k.getName()in m)&&(l.setStartAt(k,
CKEDITOR.POSITION_AFTER_START),l.setEndAt(k,CKEDITOR.POSITION_BEFORE_END),h=k)}h&&(l.startContainer.type==CKEDITOR.NODE_ELEMENT&&l.startContainer.getName()in m)&&(k=new CKEDITOR.dom.walker(l),k.evaluator=q,l.startContainer=k.next());h&&(l.endContainer.type==CKEDITOR.NODE_ELEMENT&&l.endContainer.getName()in m)&&(k=new CKEDITOR.dom.walker(l),k.evaluator=q,l.endContainer=k.previous());if(h){var k=h.getFirst(q),w=!!k.getNext(q),s=l.startContainer;(!k.equals(s)&&!k.contains(s)||!("indent"==e.name||e.useIndentClasses||
parseInt(h.getStyle(r(h)),10))||!f(h,!w&&k.getDirection()))&&i(h)}else a()}CKEDITOR.dom.element.clearAllMarkers(o);d.forceNextSelectionCheck();g.selectBookmarks(v)}};CKEDITOR.plugins.add("indent",{requires:"list",onLoad:function(){(CKEDITOR.env.ie6Compat||CKEDITOR.env.ie7Compat)&&CKEDITOR.addCss(".cke_editable ul,.cke_editable ol{\tmargin-left: 0px;\tpadding-left: 40px;}")},init:function(d){d.blockless||(d.addCommand("indent",new p(d,"indent")),d.addCommand("outdent",new p(d,"outdent")),d.ui.addButton&&
(d.ui.addButton("Indent",{label:d.lang.indent.indent,command:"indent",directional:!0,toolbar:"indent,20"}),d.ui.addButton("Outdent",{label:d.lang.indent.outdent,command:"outdent",directional:!0,toolbar:"indent,10"})),d.on("dirChanged",function(i){var a=d.createRange();a.setStartBefore(i.data.node);a.setEndAfter(i.data.node);for(var f=new CKEDITOR.dom.walker(a),e;e=f.next();)if(e.type==CKEDITOR.NODE_ELEMENT)if(!e.equals(i.data.node)&&e.getDirection()){a.setStartAfter(e);f=new CKEDITOR.dom.walker(a)}else{var o=
d.config.indentClasses;if(o)for(var g=i.data.dir=="ltr"?["_rtl",""]:["","_rtl"],m=0;m<o.length;m++)if(e.hasClass(o[m]+g[0])){e.removeClass(o[m]+g[0]);e.addClass(o[m]+g[1])}o=e.getStyle("margin-right");g=e.getStyle("margin-left");o?e.setStyle("margin-left",o):e.removeStyle("margin-left");g?e.setStyle("margin-right",g):e.removeStyle("margin-right")}}))}})})();(function(){function m(a,d,b){b=a.config.forceEnterMode||b;if("wysiwyg"!=a.mode)return!1;d||(d=a.config.enterMode);a.elementPath().isContextFor("p")||(d=CKEDITOR.ENTER_BR,b=1);a.fire("saveSnapshot");d==CKEDITOR.ENTER_BR?n(a,d,null,b):o(a,d,null,b);a.fire("saveSnapshot");return!0}function p(a){for(var a=a.getSelection().getRanges(!0),d=a.length-1;0<d;d--)a[d].deleteContents();return a[0]}CKEDITOR.plugins.add("enterkey",{requires:"indent",init:function(a){a.addCommand("enter",{modes:{wysiwyg:1},editorFocus:!1,
exec:function(a){m(a)}});a.addCommand("shiftEnter",{modes:{wysiwyg:1},editorFocus:!1,exec:function(a){"wysiwyg"==a.mode&&m(a,a.config.shiftEnterMode,1)}});a.setKeystroke([[13,"enter"],[CKEDITOR.SHIFT+13,"shiftEnter"]])}});var s=CKEDITOR.dom.walker.whitespaces(),t=CKEDITOR.dom.walker.bookmark();CKEDITOR.plugins.enterkey={enterBlock:function(a,d,b,i){if(b=b||p(a)){var f=b.document,j=b.checkStartOfBlock(),h=b.checkEndOfBlock(),c=a.elementPath(b.startContainer).block;if(j&&h){if(c&&(c.is("li")||c.getParent().is("li"))){a.execCommand("outdent");
return}if(c&&c.getParent().is("blockquote")){c.breakParent(c.getParent());c.getPrevious().getFirst(CKEDITOR.dom.walker.invisible(1))||c.getPrevious().remove();c.getNext().getFirst(CKEDITOR.dom.walker.invisible(1))||c.getNext().remove();b.moveToElementEditStart(c);b.select();return}}else if(c&&c.is("pre")&&!h){n(a,d,b,i);return}var c=d==CKEDITOR.ENTER_DIV?"div":"p",l=b.splitBlock(c);if(l){var d=l.previousBlock,a=l.nextBlock,j=l.wasStartOfBlock,h=l.wasEndOfBlock,g;if(a)g=a.getParent(),g.is("li")&&(a.breakParent(g),
a.move(a.getNext(),1));else if(d&&(g=d.getParent())&&g.is("li"))d.breakParent(g),g=d.getNext(),b.moveToElementEditStart(g),d.move(d.getPrevious());if(!j&&!h){if(a.is("li")){var e=b.clone();e.selectNodeContents(a);e=new CKEDITOR.dom.walker(e);e.evaluator=function(a){return!(t(a)||s(a)||a.type==CKEDITOR.NODE_ELEMENT&&a.getName()in CKEDITOR.dtd.$inline&&!(a.getName()in CKEDITOR.dtd.$empty))};(g=e.next())&&(g.type==CKEDITOR.NODE_ELEMENT&&g.is("ul","ol"))&&(CKEDITOR.env.ie?f.createText(" "):f.createElement("br")).insertBefore(g)}a&&
b.moveToElementEditStart(a)}else{var k;if(d){if(d.is("li")||!q.test(d.getName())&&!d.is("pre"))e=d.clone()}else a&&(e=a.clone());e?i&&!e.is("li")&&e.renameNode(c):g&&g.is("li")?e=g:(e=f.createElement(c),d&&(k=d.getDirection())&&e.setAttribute("dir",k));if(f=l.elementPath){i=0;for(g=f.elements.length;i<g;i++){k=f.elements[i];if(k.equals(f.block)||k.equals(f.blockLimit))break;CKEDITOR.dtd.$removeEmpty[k.getName()]&&(k=k.clone(),e.moveChildren(k),e.append(k))}}CKEDITOR.env.ie||e.appendBogus();e.getParent()||
b.insertNode(e);e.is("li")&&e.removeAttribute("value");if(CKEDITOR.env.ie&&j&&(!h||!d.getChildCount()))b.moveToElementEditStart(h?d:e),b.select();b.moveToElementEditStart(j&&!h?a:e)}b.select();b.scrollIntoView()}}},enterBr:function(a,d,b,i){if(b=b||p(a)){var f=b.document,j=b.checkEndOfBlock(),h=new CKEDITOR.dom.elementPath(a.getSelection().getStartElement()),c=h.block,h=c&&h.block.getName();!i&&"li"==h?o(a,d,b,i):(!i&&j&&q.test(h)?(j=c.getDirection())?(f=f.createElement("div"),f.setAttribute("dir",
j),f.insertAfter(c),b.setStart(f,0)):(f.createElement("br").insertAfter(c),CKEDITOR.env.gecko&&f.createText("").insertAfter(c),b.setStartAt(c.getNext(),CKEDITOR.env.ie?CKEDITOR.POSITION_BEFORE_START:CKEDITOR.POSITION_AFTER_START)):(c="pre"==h&&CKEDITOR.env.ie&&8>CKEDITOR.env.version?f.createText("\r"):f.createElement("br"),b.deleteContents(),b.insertNode(c),CKEDITOR.env.ie?b.setStartAt(c,CKEDITOR.POSITION_AFTER_END):(f.createText("﻿").insertAfter(c),j&&c.getParent().appendBogus(),c.getNext().$.nodeValue=
"",b.setStartAt(c.getNext(),CKEDITOR.POSITION_AFTER_START))),b.collapse(!0),b.select(),b.scrollIntoView())}}};var r=CKEDITOR.plugins.enterkey,n=r.enterBr,o=r.enterBlock,q=/^h[1-6]$/})();(function(){function j(a,b){var d={},e=[],f={nbsp:" ",shy:"­",gt:">",lt:"<",amp:"&",apos:"'",quot:'"'},a=a.replace(/\b(nbsp|shy|gt|lt|amp|apos|quot)(?:,|$)/g,function(a,h){var c=b?"&"+h+";":f[h];d[c]=b?f[h]:"&"+h+";";e.push(c);return""});if(!b&&a){var a=a.split(","),c=document.createElement("div"),g;c.innerHTML="&"+a.join(";&")+";";g=c.innerHTML;c=null;for(c=0;c<g.length;c++){var i=g.charAt(c);d[i]="&"+a[c]+";";e.push(i)}}d.regex=e.join(b?"|":"");return d}CKEDITOR.plugins.add("entities",{afterInit:function(a){var b=
a.config;if(a=(a=a.dataProcessor)&&a.htmlFilter){var d=[];!1!==b.basicEntities&&d.push("nbsp,gt,lt,amp");b.entities&&(d.length&&d.push("quot,iexcl,cent,pound,curren,yen,brvbar,sect,uml,copy,ordf,laquo,not,shy,reg,macr,deg,plusmn,sup2,sup3,acute,micro,para,middot,cedil,sup1,ordm,raquo,frac14,frac12,frac34,iquest,times,divide,fnof,bull,hellip,prime,Prime,oline,frasl,weierp,image,real,trade,alefsym,larr,uarr,rarr,darr,harr,crarr,lArr,uArr,rArr,dArr,hArr,forall,part,exist,empty,nabla,isin,notin,ni,prod,sum,minus,lowast,radic,prop,infin,ang,and,or,cap,cup,int,there4,sim,cong,asymp,ne,equiv,le,ge,sub,sup,nsub,sube,supe,oplus,otimes,perp,sdot,lceil,rceil,lfloor,rfloor,lang,rang,loz,spades,clubs,hearts,diams,circ,tilde,ensp,emsp,thinsp,zwnj,zwj,lrm,rlm,ndash,mdash,lsquo,rsquo,sbquo,ldquo,rdquo,bdquo,dagger,Dagger,permil,lsaquo,rsaquo,euro"),
b.entities_latin&&d.push("Agrave,Aacute,Acirc,Atilde,Auml,Aring,AElig,Ccedil,Egrave,Eacute,Ecirc,Euml,Igrave,Iacute,Icirc,Iuml,ETH,Ntilde,Ograve,Oacute,Ocirc,Otilde,Ouml,Oslash,Ugrave,Uacute,Ucirc,Uuml,Yacute,THORN,szlig,agrave,aacute,acirc,atilde,auml,aring,aelig,ccedil,egrave,eacute,ecirc,euml,igrave,iacute,icirc,iuml,eth,ntilde,ograve,oacute,ocirc,otilde,ouml,oslash,ugrave,uacute,ucirc,uuml,yacute,thorn,yuml,OElig,oelig,Scaron,scaron,Yuml"),b.entities_greek&&d.push("Alpha,Beta,Gamma,Delta,Epsilon,Zeta,Eta,Theta,Iota,Kappa,Lambda,Mu,Nu,Xi,Omicron,Pi,Rho,Sigma,Tau,Upsilon,Phi,Chi,Psi,Omega,alpha,beta,gamma,delta,epsilon,zeta,eta,theta,iota,kappa,lambda,mu,nu,xi,omicron,pi,rho,sigmaf,sigma,tau,upsilon,phi,chi,psi,omega,thetasym,upsih,piv"),
b.entities_additional&&d.push(b.entities_additional));var e=j(d.join(",")),f=e.regex?"["+e.regex+"]":"a^";delete e.regex;b.entities&&b.entities_processNumerical&&(f="[^ -~]|"+f);var f=RegExp(f,"g"),c=function(a){return b.entities_processNumerical=="force"||!e[a]?"&#"+a.charCodeAt(0)+";":e[a]},g=j("nbsp,gt,lt,amp,shy",!0),i=RegExp(g.regex,"g"),k=function(a){return g[a]};a.addRules({text:function(a){return a.replace(i,k).replace(f,c)}})}}})})();CKEDITOR.config.basicEntities=!0;
CKEDITOR.config.entities=!0;CKEDITOR.config.entities_latin=!0;CKEDITOR.config.entities_greek=!0;CKEDITOR.config.entities_additional="#39";CKEDITOR.plugins.add("popup");
CKEDITOR.tools.extend(CKEDITOR.editor.prototype,{popup:function(e,a,b,d){a=a||"80%";b=b||"70%";"string"==typeof a&&(1<a.length&&"%"==a.substr(a.length-1,1))&&(a=parseInt(window.screen.width*parseInt(a,10)/100,10));"string"==typeof b&&(1<b.length&&"%"==b.substr(b.length-1,1))&&(b=parseInt(window.screen.height*parseInt(b,10)/100,10));640>a&&(a=640);420>b&&(b=420);var f=parseInt((window.screen.height-b)/2,10),g=parseInt((window.screen.width-a)/2,10),d=(d||"location=no,menubar=no,toolbar=no,dependent=yes,minimizable=no,modal=yes,alwaysRaised=yes,resizable=yes,scrollbars=yes")+",width="+
a+",height="+b+",top="+f+",left="+g,c=window.open("",null,d,!0);if(!c)return!1;try{-1==navigator.userAgent.toLowerCase().indexOf(" chrome/")&&(c.moveTo(g,f),c.resizeTo(a,b)),c.focus(),c.location.href=e}catch(h){window.open(e,null,d,!0)}return!0}});(function(){function g(a,c){var d=[];if(c)for(var b in c)d.push(b+"="+encodeURIComponent(c[b]));else return a;return a+(-1!=a.indexOf("?")?"&":"?")+d.join("&")}function i(a){a+="";return a.charAt(0).toUpperCase()+a.substr(1)}function k(){var a=this.getDialog(),c=a.getParentEditor();c._.filebrowserSe=this;var d=c.config["filebrowser"+i(a.getName())+"WindowWidth"]||c.config.filebrowserWindowWidth||"80%",a=c.config["filebrowser"+i(a.getName())+"WindowHeight"]||c.config.filebrowserWindowHeight||"70%",
b=this.filebrowser.params||{};b.CKEditor=c.name;b.CKEditorFuncNum=c._.filebrowserFn;b.langCode||(b.langCode=c.langCode);b=g(this.filebrowser.url,b);c.popup(b,d,a,c.config.filebrowserWindowFeatures||c.config.fileBrowserWindowFeatures)}function l(){var a=this.getDialog();a.getParentEditor()._.filebrowserSe=this;return!a.getContentElement(this["for"][0],this["for"][1]).getInputElement().$.value||!a.getContentElement(this["for"][0],this["for"][1]).getAction()?!1:!0}function m(a,c,d){var b=d.params||{};
b.CKEditor=a.name;b.CKEditorFuncNum=a._.filebrowserFn;b.langCode||(b.langCode=a.langCode);c.action=g(d.url,b);c.filebrowser=d}function j(a,c,d,b){if(b&&b.length)for(var e,g=b.length;g--;)if(e=b[g],("hbox"==e.type||"vbox"==e.type||"fieldset"==e.type)&&j(a,c,d,e.children),e.filebrowser)if("string"==typeof e.filebrowser&&(e.filebrowser={action:"fileButton"==e.type?"QuickUpload":"Browse",target:e.filebrowser}),"Browse"==e.filebrowser.action){var f=e.filebrowser.url;void 0===f&&(f=a.config["filebrowser"+
i(c)+"BrowseUrl"],void 0===f&&(f=a.config.filebrowserBrowseUrl));f&&(e.onClick=k,e.filebrowser.url=f,e.hidden=!1)}else if("QuickUpload"==e.filebrowser.action&&e["for"]&&(f=e.filebrowser.url,void 0===f&&(f=a.config["filebrowser"+i(c)+"UploadUrl"],void 0===f&&(f=a.config.filebrowserUploadUrl)),f)){var h=e.onClick;e.onClick=function(a){var b=a.sender;return h&&h.call(b,a)===false?false:l.call(b,a)};e.filebrowser.url=f;e.hidden=!1;m(a,d.getContents(e["for"][0]).get(e["for"][1]),e.filebrowser)}}function h(a,
c,d){if(-1!==d.indexOf(";")){for(var d=d.split(";"),b=0;b<d.length;b++)if(h(a,c,d[b]))return!0;return!1}return(a=a.getContents(c).get(d).filebrowser)&&a.url}function n(a,c){var d=this._.filebrowserSe.getDialog(),b=this._.filebrowserSe["for"],e=this._.filebrowserSe.filebrowser.onSelect;b&&d.getContentElement(b[0],b[1]).reset();if(!("function"==typeof c&&!1===c.call(this._.filebrowserSe))&&!(e&&!1===e.call(this._.filebrowserSe,a,c))&&("string"==typeof c&&c&&alert(c),a&&(b=this._.filebrowserSe,d=b.getDialog(),
b=b.filebrowser.target||null)))if(b=b.split(":"),e=d.getContentElement(b[0],b[1]))e.setValue(a),d.selectPage(b[0])}CKEDITOR.plugins.add("filebrowser",{requires:"popup",init:function(a){a._.filebrowserFn=CKEDITOR.tools.addFunction(n,a);a.on("destroy",function(){CKEDITOR.tools.removeFunction(this._.filebrowserFn)})}});CKEDITOR.on("dialogDefinition",function(a){for(var c=a.data.definition,d,b=0;b<c.contents.length;++b)if(d=c.contents[b])j(a.editor,a.data.name,c,d.elements),d.hidden&&d.filebrowser&&(d.hidden=
!h(c,d.id,d.filebrowser))})})();CKEDITOR.plugins.add("find",{requires:"dialog",init:function(a){var b=a.addCommand("find",new CKEDITOR.dialogCommand("find"));b.canUndo=!1;b.readOnly=1;a.addCommand("replace",new CKEDITOR.dialogCommand("replace")).canUndo=!1;a.ui.addButton&&(a.ui.addButton("Find",{label:a.lang.find.find,command:"find",toolbar:"find,10"}),a.ui.addButton("Replace",{label:a.lang.find.replace,command:"replace",toolbar:"find,20"}));CKEDITOR.dialog.add("find",this.path+"dialogs/find.js");CKEDITOR.dialog.add("replace",this.path+
"dialogs/find.js")}});CKEDITOR.config.find_highlight={element:"span",styles:{"background-color":"#004",color:"#fff"}};(function(){function g(a,b){var c=j.exec(a),d=j.exec(b);if(c){if(!c[2]&&"px"==d[2])return d[1];if("px"==c[2]&&!d[2])return d[1]+"px"}return b}var i=CKEDITOR.htmlParser.cssStyle,h=CKEDITOR.tools.cssLength,j=/^((?:\d*(?:\.\d+))|(?:\d+))(.*)?$/i,l={elements:{$:function(a){var b=a.attributes;if((b=(b=(b=b&&b["data-cke-realelement"])&&new CKEDITOR.htmlParser.fragment.fromHtml(decodeURIComponent(b)))&&b.children[0])&&a.attributes["data-cke-resizable"]){var c=(new i(a)).rules,a=b.attributes,d=c.width,c=
c.height;d&&(a.width=g(a.width,d));c&&(a.height=g(a.height,c))}return b}}},k=CKEDITOR.plugins.add("fakeobjects",{afterInit:function(a){(a=(a=a.dataProcessor)&&a.htmlFilter)&&a.addRules(l)}});CKEDITOR.editor.prototype.createFakeElement=function(a,b,c,d){var e=this.lang.fakeobjects,e=e[c]||e.unknown,b={"class":b,"data-cke-realelement":encodeURIComponent(a.getOuterHtml()),"data-cke-real-node-type":a.type,alt:e,title:e,align:a.getAttribute("align")||""};CKEDITOR.env.hc||(b.src=CKEDITOR.getUrl(k.path+
"images/spacer.gif"));c&&(b["data-cke-real-element-type"]=c);d&&(b["data-cke-resizable"]=d,c=new i,d=a.getAttribute("width"),a=a.getAttribute("height"),d&&(c.rules.width=h(d)),a&&(c.rules.height=h(a)),c.populate(b));return this.document.createElement("img",{attributes:b})};CKEDITOR.editor.prototype.createFakeParserElement=function(a,b,c,d){var e=this.lang.fakeobjects,e=e[c]||e.unknown,f;f=new CKEDITOR.htmlParser.basicWriter;a.writeHtml(f);f=f.getHtml();b={"class":b,"data-cke-realelement":encodeURIComponent(f),
"data-cke-real-node-type":a.type,alt:e,title:e,align:a.attributes.align||""};CKEDITOR.env.hc||(b.src=CKEDITOR.getUrl(k.path+"images/spacer.gif"));c&&(b["data-cke-real-element-type"]=c);d&&(b["data-cke-resizable"]=d,d=a.attributes,a=new i,c=d.width,d=d.height,void 0!=c&&(a.rules.width=h(c)),void 0!=d&&(a.rules.height=h(d)),a.populate(b));return new CKEDITOR.htmlParser.element("img",b)};CKEDITOR.editor.prototype.restoreRealElement=function(a){if(a.data("cke-real-node-type")!=CKEDITOR.NODE_ELEMENT)return null;
var b=CKEDITOR.dom.element.createFromHtml(decodeURIComponent(a.data("cke-realelement")),this.document);if(a.data("cke-resizable")){var c=a.getStyle("width"),a=a.getStyle("height");c&&b.setAttribute("width",g(b.getAttribute("width"),c));a&&b.setAttribute("height",g(b.getAttribute("height"),a))}return b}})();(function(){function d(a){a=a.attributes;return"application/x-shockwave-flash"==a.type||f.test(a.src||"")}function e(a,b){return a.createFakeParserElement(b,"cke_flash","flash",!0)}var f=/\.swf(?:$|\?)/i;CKEDITOR.plugins.add("flash",{requires:"dialog,fakeobjects",onLoad:function(){CKEDITOR.addCss("img.cke_flash{background-image: url("+CKEDITOR.getUrl(this.path+"images/placeholder.png")+");background-position: center center;background-repeat: no-repeat;border: 1px solid #a9a9a9;width: 80px;height: 80px;}")},
init:function(a){var b="object[classid,codebase,height,hspace,vspace,width];param[name,value];embed[height,hspace,pluginspage,src,type,vspace,width]";CKEDITOR.dialog.isTabEnabled(a,"flash","properties")&&(b+=";object[align]; embed[allowscriptaccess,quality,scale,wmode]");CKEDITOR.dialog.isTabEnabled(a,"flash","advanced")&&(b+=";object[id]{*}; embed[bgcolor]{*}(*)");a.addCommand("flash",new CKEDITOR.dialogCommand("flash",{allowedContent:b,requiredContent:"embed"}));a.ui.addButton&&a.ui.addButton("Flash",
{label:a.lang.common.flash,command:"flash",toolbar:"insert,20"});CKEDITOR.dialog.add("flash",this.path+"dialogs/flash.js");a.addMenuItems&&a.addMenuItems({flash:{label:a.lang.flash.properties,command:"flash",group:"flash"}});a.on("doubleclick",function(a){var b=a.data.element;b.is("img")&&"flash"==b.data("cke-real-element-type")&&(a.data.dialog="flash")});a.contextMenu&&a.contextMenu.addListener(function(a){if(a&&a.is("img")&&!a.isReadOnly()&&"flash"==a.data("cke-real-element-type"))return{flash:CKEDITOR.TRISTATE_OFF}})},
afterInit:function(a){var b=a.dataProcessor;(b=b&&b.dataFilter)&&b.addRules({elements:{"cke:object":function(b){var c=b.attributes;if((!c.classid||!(""+c.classid).toLowerCase())&&!d(b)){for(c=0;c<b.children.length;c++)if("cke:embed"==b.children[c].name){if(!d(b.children[c]))break;return e(a,b)}return null}return e(a,b)},"cke:embed":function(b){return!d(b)?null:e(a,b)}}},5)}})})();CKEDITOR.tools.extend(CKEDITOR.config,{flashEmbedTagOnly:!1,flashAddEmbedTag:!0,flashConvertOnEdit:!1});(function(){function t(a){var e="left"==a?"pageXOffset":"pageYOffset";return e in g.$?g.$[e]:CKEDITOR.document.$.documentElement["left"==a?"scrollLeft":"scrollTop"]}function p(a){var e,f=a.config,p=f.floatSpaceDockedOffsetX||0,o=f.floatSpaceDockedOffsetY||0,u=f.floatSpacePinnedOffsetX||0,q=f.floatSpacePinnedOffsetY||0,i=function(c){function f(a,c,b){d.setStyle(c,s(b));d.setStyle("position",a)}function j(a){var c=r.getDocumentPosition();switch(a){case "top":f("absolute","top",c.y-l-o);break;case "pin":f("fixed",
"top",q);break;case "bottom":f("absolute","top",c.y+(b.height||b.bottom-b.top)+o)}e=a}var r=a.editable();if(r){"focus"==c.name&&d.show();d.removeStyle("left");d.removeStyle("right");var k=d.getClientRect(),b=r.getClientRect(),l=k.height,n=t("left");if(e){"top"==e&&k.top<q?j("pin"):"pin"==e?b.top>o+l?j("top"):b.bottom-k.bottom<l&&j("bottom"):"bottom"==e&&(b.top>o+l?j("top"):b.bottom>2*l+q&&j("pin"));var c=g.getViewPaneSize(),h=c.width/2,h=0<b.left&&b.right<c.width&&b.width>k.width?"rtl"==a.config.contentsLangDirection?
"right":"left":h-b.left>b.right-h?"left":"right",m;k.width>c.width?(h="left",m=0):(m="left"==h?0<b.left?b.left:0:b.right<c.width?c.width-b.right:0,m+k.width>c.width&&(h="left"==h?"right":"left",m=0));d.setStyle(h,s(("pin"==e?u:p)+m+("pin"==e?0:"left"==h?n:-n)))}else e="pin",j("pin"),i(c)}},f=CKEDITOR.document.getBody(),v={id:a.id,name:a.name,langDir:a.lang.dir,langCode:a.langCode},n=a.fire("uiSpace",{space:"top",html:""}).html;if(n){var d=f.append(CKEDITOR.dom.element.createFromHtml(w.output(CKEDITOR.tools.extend({topId:a.ui.spaceId("top"),
content:n,style:"display:none;z-index:"+(a.config.baseFloatZIndex-1)},v))));d.unselectable();d.on("mousedown",function(a){a=a.data;a.getTarget().hasAscendant("a",1)||a.preventDefault()});a.on("focus",function(a){i(a);g.on("scroll",i);g.on("resize",i)});a.on("blur",function(){d.hide();g.removeListener("scroll",i);g.removeListener("resize",i)});a.on("destroy",function(){g.removeListener("scroll",i);g.removeListener("resize",i);d.clearCustomData();d.remove()});a.focusManager.hasFocus&&d.show();a.focusManager.add(d,
1)}}var w=CKEDITOR.addTemplate("floatcontainer",'<div id="cke_{name}" class="cke {id} cke_reset_all cke_chrome cke_editor_{name} cke_float cke_{langDir} '+CKEDITOR.env.cssClass+'" dir="{langDir}" title="'+(CKEDITOR.env.gecko?" ":"")+'" lang="{langCode}" role="application" style="{style}"><div class="cke_inner"><div id="{topId}" class="cke_top" role="presentation">{content}</div></div></div>');CKEDITOR.plugins.add("floatingspace",{init:function(a){a.on("loaded",function(){p(a)},null,null,20)}});var g=
CKEDITOR.document.getWindow(),s=CKEDITOR.tools.cssLength})();CKEDITOR.plugins.add("listblock",{requires:"panel",onLoad:function(){var e=CKEDITOR.addTemplate("panel-list",'<ul role="presentation" class="cke_panel_list">{items}</ul>'),f=CKEDITOR.addTemplate("panel-list-item",'<li id="{id}" class="cke_panel_listItem" role=presentation><a id="{id}_option" _cke_focus=1 hidefocus=true title="{title}" href="javascript:void(\'{val}\')"  {onclick}="CKEDITOR.tools.callFunction({clickFn},\'{val}\'); return false;" role="option">{text}</a></li>'),g=CKEDITOR.addTemplate("panel-list-group",
'<h1 id="{id}" class="cke_panel_grouptitle" role="presentation" >{label}</h1>');CKEDITOR.ui.panel.prototype.addListBlock=function(a,b){return this.addBlock(a,new CKEDITOR.ui.listBlock(this.getHolderElement(),b))};CKEDITOR.ui.listBlock=CKEDITOR.tools.createClass({base:CKEDITOR.ui.panel.block,$:function(a,b){var b=b||{},c=b.attributes||(b.attributes={});(this.multiSelect=!!b.multiSelect)&&(c["aria-multiselectable"]=!0);!c.role&&(c.role="listbox");this.base.apply(this,arguments);c=this.keys;c[40]="next";
c[9]="next";c[38]="prev";c[CKEDITOR.SHIFT+9]="prev";c[32]=CKEDITOR.env.ie?"mouseup":"click";CKEDITOR.env.ie&&(c[13]="mouseup");this._.pendingHtml=[];this._.pendingList=[];this._.items={};this._.groups={}},_:{close:function(){if(this._.started){var a=e.output({items:this._.pendingList.join("")});this._.pendingList=[];this._.pendingHtml.push(a);delete this._.started}},getClick:function(){this._.click||(this._.click=CKEDITOR.tools.addFunction(function(a){var b=this.toggle(a);if(this.onClick)this.onClick(a,
b)},this));return this._.click}},proto:{add:function(a,b,c){var d=CKEDITOR.tools.getNextId();this._.started||(this._.started=1,this._.size=this._.size||0);this._.items[a]=d;a={id:d,val:a,onclick:CKEDITOR.env.ie?'onclick="return false;" onmouseup':"onclick",clickFn:this._.getClick(),title:c||a,text:b||a};this._.pendingList.push(f.output(a))},startGroup:function(a){this._.close();var b=CKEDITOR.tools.getNextId();this._.groups[a]=b;this._.pendingHtml.push(g.output({id:b,label:a}))},commit:function(){this._.close();
this.element.appendHtml(this._.pendingHtml.join(""));delete this._.size;this._.pendingHtml=[]},toggle:function(a){var b=this.isMarked(a);b?this.unmark(a):this.mark(a);return!b},hideGroup:function(a){var b=(a=this.element.getDocument().getById(this._.groups[a]))&&a.getNext();a&&(a.setStyle("display","none"),b&&"ul"==b.getName()&&b.setStyle("display","none"))},hideItem:function(a){this.element.getDocument().getById(this._.items[a]).setStyle("display","none")},showAll:function(){var a=this._.items,b=
this._.groups,c=this.element.getDocument(),d;for(d in a)c.getById(a[d]).setStyle("display","");for(var e in b)a=c.getById(b[e]),d=a.getNext(),a.setStyle("display",""),d&&"ul"==d.getName()&&d.setStyle("display","")},mark:function(a){this.multiSelect||this.unmarkAll();var a=this._.items[a],b=this.element.getDocument().getById(a);b.addClass("cke_selected");this.element.getDocument().getById(a+"_option").setAttribute("aria-selected",!0);this.onMark&&this.onMark(b)},unmark:function(a){var b=this.element.getDocument(),
a=this._.items[a],c=b.getById(a);c.removeClass("cke_selected");b.getById(a+"_option").removeAttribute("aria-selected");this.onUnmark&&this.onUnmark(c)},unmarkAll:function(){var a=this._.items,b=this.element.getDocument(),c;for(c in a){var d=a[c];b.getById(d).removeClass("cke_selected");b.getById(d+"_option").removeAttribute("aria-selected")}this.onUnmark&&this.onUnmark()},isMarked:function(a){return this.element.getDocument().getById(this._.items[a]).hasClass("cke_selected")},focus:function(a){this._.focusIndex=
-1;if(a){for(var b=this.element.getDocument().getById(this._.items[a]).getFirst(),a=this.element.getElementsByTag("a"),c,d=-1;c=a.getItem(++d);)if(c.equals(b)){this._.focusIndex=d;break}setTimeout(function(){b.focus()},0)}}}})}});CKEDITOR.plugins.add("richcombo",{requires:"floatpanel,listblock,button",beforeInit:function(c){c.ui.addHandler(CKEDITOR.UI_RICHCOMBO,CKEDITOR.ui.richCombo.handler)}});
(function(){var c='<span id="{id}" class="cke_combo cke_combo__{name} {cls}" role="presentation"><span id="{id}_label" class="cke_combo_label">{label}</span><a class="cke_combo_button" hidefocus=true title="{title}" tabindex="-1"'+(CKEDITOR.env.gecko&&10900<=CKEDITOR.env.version&&!CKEDITOR.env.hc?"":'" href="javascript:void(\'{titleJs}\')"')+' hidefocus="true" role="button" aria-labelledby="{id}_label" aria-haspopup="true"';if(CKEDITOR.env.opera||CKEDITOR.env.gecko&&CKEDITOR.env.mac)c+=' onkeypress="return false;"';
CKEDITOR.env.gecko&&(c+=' onblur="this.style.cssText = this.style.cssText;"');var c=c+(' onkeydown="return CKEDITOR.tools.callFunction({keydownFn},event,this);" onmousedown="return CKEDITOR.tools.callFunction({mousedownFn},event);"  onfocus="return CKEDITOR.tools.callFunction({focusFn},event);" '+(CKEDITOR.env.ie?'onclick="return false;" onmouseup':"onclick")+'="CKEDITOR.tools.callFunction({clickFn},this);return false;"><span id="{id}_text" class="cke_combo_text cke_combo_inlinelabel">{label}</span><span class="cke_combo_open"><span class="cke_combo_arrow">'+
(CKEDITOR.env.hc?"&#9660;":CKEDITOR.env.air?"&nbsp;":"")+"</span></span></a></span>"),h=CKEDITOR.addTemplate("combo",c);CKEDITOR.UI_RICHCOMBO="richcombo";CKEDITOR.ui.richCombo=CKEDITOR.tools.createClass({$:function(a){CKEDITOR.tools.extend(this,a,{canGroup:!1,title:a.label,modes:{wysiwyg:1},editorFocus:1});a=this.panel||{};delete this.panel;this.id=CKEDITOR.tools.getNextNumber();this.document=a.parent&&a.parent.getDocument()||CKEDITOR.document;a.className="cke_combopanel";a.block={multiSelect:a.multiSelect,
attributes:a.attributes};a.toolbarRelated=!0;this._={panelDefinition:a,items:{}}},proto:{renderHtml:function(a){var b=[];this.render(a,b);return b.join("")},render:function(a,b){function j(){var d=this.modes[a.mode]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED;this.setState(a.readOnly&&!this.readOnly?CKEDITOR.TRISTATE_DISABLED:d);this.setValue("")}var c=CKEDITOR.env,g="cke_"+this.id,e=CKEDITOR.tools.addFunction(function(b){i&&(a.unlockSelection(1),i=0);d.execute(b)},this),f=this,d={id:g,combo:this,
focus:function(){CKEDITOR.document.getById(g).getChild(1).focus()},execute:function(d){var b=f._;if(b.state!=CKEDITOR.TRISTATE_DISABLED)if(f.createPanel(a),b.on)b.panel.hide();else{f.commit();var c=f.getValue();c?b.list.mark(c):b.list.unmarkAll();b.panel.showBlock(f.id,new CKEDITOR.dom.element(d),4)}},clickFn:e};a.on("mode",j,this);!this.readOnly&&a.on("readOnly",j,this);var k=CKEDITOR.tools.addFunction(function(a,b){var a=new CKEDITOR.dom.event(a),c=a.getKeystroke();switch(c){case 13:case 32:case 40:CKEDITOR.tools.callFunction(e,
b);break;default:d.onkey(d,c)}a.preventDefault()}),l=CKEDITOR.tools.addFunction(function(){d.onfocus&&d.onfocus()}),i=0,m=CKEDITOR.tools.addFunction(function(){if(CKEDITOR.env.opera){var b=a.editable();b.isInline()&&b.hasFocus&&(a.lockSelection(),i=1)}});d.keyDownFn=k;c={id:g,name:this.name||this.command,label:this.label,title:this.title,cls:this.className||"",titleJs:c.gecko&&10900<=c.version&&!c.hc?"":(this.title||"").replace("'",""),keydownFn:k,mousedownFn:m,focusFn:l,clickFn:e};h.output(c,b);
if(this.onRender)this.onRender();return d},createPanel:function(a){if(!this._.panel){var b=this._.panelDefinition,c=this._.panelDefinition.block,h=b.parent||CKEDITOR.document.getBody(),g="cke_combopanel__"+this.name,e=new CKEDITOR.ui.floatPanel(a,h,b),f=e.addListBlock(this.id,c),d=this;e.onShow=function(){this.element.addClass(g);d.setState(CKEDITOR.TRISTATE_ON);f.focus(!f.multiSelect&&d.getValue());d._.on=1;d.editorFocus&&a.focus();if(d.onOpen)d.onOpen()};e.onHide=function(b){this.element.removeClass(g);
d.setState(d.modes&&d.modes[a.mode]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED);d._.on=0;if(!b&&d.onClose)d.onClose()};e.onEscape=function(){e.hide(1)};f.onClick=function(a,b){d.onClick&&d.onClick.call(d,a,b);e.hide()};this._.panel=e;this._.list=f;e.getBlock(this.id).onHide=function(){d._.on=0;d.setState(CKEDITOR.TRISTATE_OFF)};this.init&&this.init()}},setValue:function(a,b){this._.value=a;var c=this.document.getById("cke_"+this.id+"_text");c&&(!a&&!b?(b=this.label,c.addClass("cke_combo_inlinelabel")):
c.removeClass("cke_combo_inlinelabel"),c.setText("undefined"!=typeof b?b:a))},getValue:function(){return this._.value||""},unmarkAll:function(){this._.list.unmarkAll()},mark:function(a){this._.list.mark(a)},hideItem:function(a){this._.list.hideItem(a)},hideGroup:function(a){this._.list.hideGroup(a)},showAll:function(){this._.list.showAll()},add:function(a,b,c){this._.items[a]=c||a;this._.list.add(a,b,c)},startGroup:function(a){this._.list.startGroup(a)},commit:function(){this._.committed||(this._.list.commit(),
this._.committed=1,CKEDITOR.ui.fire("ready",this));this._.committed=1},setState:function(a){if(this._.state!=a){var b=this.document.getById("cke_"+this.id);b.setState(a,"cke_combo");a==CKEDITOR.TRISTATE_DISABLED?b.setAttribute("aria-disabled",!0):b.removeAttribute("aria-disabled");this._.state=a}},enable:function(){this._.state==CKEDITOR.TRISTATE_DISABLED&&this.setState(this._.lastState)},disable:function(){this._.state!=CKEDITOR.TRISTATE_DISABLED&&(this._.lastState=this._.state,this.setState(CKEDITOR.TRISTATE_DISABLED))}},
statics:{handler:{create:function(a){return new CKEDITOR.ui.richCombo(a)}}}});CKEDITOR.ui.prototype.addRichCombo=function(a,b){this.add(a,CKEDITOR.UI_RICHCOMBO,b)}})();(function(){function g(a,b,g,h,j,n,k,o){for(var p=a.config,l=new CKEDITOR.style(k),c=j.split(";"),j=[],f={},d=0;d<c.length;d++){var e=c[d];if(e){var e=e.split("/"),m={},i=c[d]=e[0];m[g]=j[d]=e[1]||i;f[i]=new CKEDITOR.style(k,m);f[i]._.definition.name=i}else c.splice(d--,1)}a.ui.addRichCombo(b,{label:h.label,title:h.panelTitle,toolbar:"styles,"+o,allowedContent:l,requiredContent:l,panel:{css:[CKEDITOR.skin.getPath("editor")].concat(p.contentsCss),multiSelect:!1,attributes:{"aria-label":h.panelTitle}},
init:function(){this.startGroup(h.panelTitle);for(var a=0;a<c.length;a++){var b=c[a];this.add(b,f[b].buildPreview(),b)}},onClick:function(b){a.focus();a.fire("saveSnapshot");var c=f[b];a[this.getValue()==b?"removeStyle":"applyStyle"](c);a.fire("saveSnapshot")},onRender:function(){a.on("selectionChange",function(a){for(var b=this.getValue(),a=a.data.path.elements,c=0,d;c<a.length;c++){d=a[c];for(var e in f)if(f[e].checkElementMatch(d,!0)){e!=b&&this.setValue(e);return}}this.setValue("",n)},this)}})}
CKEDITOR.plugins.add("font",{requires:"richcombo",init:function(a){var b=a.config;g(a,"Font","family",a.lang.font,b.font_names,b.font_defaultLabel,b.font_style,30);g(a,"FontSize","size",a.lang.font.fontSize,b.fontSize_sizes,b.fontSize_defaultLabel,b.fontSize_style,40)}})})();CKEDITOR.config.font_names="Arial/Arial, Helvetica, sans-serif;Comic Sans MS/Comic Sans MS, cursive;Courier New/Courier New, Courier, monospace;Georgia/Georgia, serif;Lucida Sans Unicode/Lucida Sans Unicode, Lucida Grande, sans-serif;Tahoma/Tahoma, Geneva, sans-serif;Times New Roman/Times New Roman, Times, serif;Trebuchet MS/Trebuchet MS, Helvetica, sans-serif;Verdana/Verdana, Geneva, sans-serif";
CKEDITOR.config.font_defaultLabel="";CKEDITOR.config.font_style={element:"span",styles:{"font-family":"#(family)"},overrides:[{element:"font",attributes:{face:null}}]};CKEDITOR.config.fontSize_sizes="8/8px;9/9px;10/10px;11/11px;12/12px;14/14px;16/16px;18/18px;20/20px;22/22px;24/24px;26/26px;28/28px;36/36px;48/48px;72/72px";CKEDITOR.config.fontSize_defaultLabel="";CKEDITOR.config.fontSize_style={element:"span",styles:{"font-size":"#(size)"},overrides:[{element:"font",attributes:{size:null}}]};CKEDITOR.plugins.add("forms",{requires:"dialog,fakeobjects",onLoad:function(){CKEDITOR.addCss(".cke_editable form{border: 1px dotted #FF0000;padding: 2px;}\n");CKEDITOR.addCss("img.cke_hidden{background-image: url("+CKEDITOR.getUrl(this.path+"images/hiddenfield.gif")+");background-position: center center;background-repeat: no-repeat;border: 1px solid #a9a9a9;width: 16px !important;height: 16px !important;}")},init:function(b){var a=b.lang,e=0,h={email:1,password:1,search:1,tel:1,text:1,url:1},j={checkbox:"input[type,name,checked]",
radio:"input[type,name,checked]",textfield:"input[type,name,value,size,maxlength]",textarea:"textarea[cols,rows,name]",select:"select[name,size,multiple]; option[value,selected]",button:"input[type,name,value]",form:"form[action,name,id,enctype,target,method]",hiddenfield:"input[type,name,value]",imagebutton:"input[type,alt,src]{width,height,border,border-width,border-style,margin,float}"},k={checkbox:"input",radio:"input",textfield:"input",textarea:"textarea",select:"select",button:"input",form:"form",
hiddenfield:"input",imagebutton:"input"},d=function(g,c,h){var d={allowedContent:j[c],requiredContent:k[c]};"form"==c&&(d.context="form");b.addCommand(c,new CKEDITOR.dialogCommand(c,d));b.ui.addButton&&b.ui.addButton(g,{label:a.common[g.charAt(0).toLowerCase()+g.slice(1)],command:c,toolbar:"forms,"+(e+=10)});CKEDITOR.dialog.add(c,h)},f=this.path+"dialogs/";!b.blockless&&d("Form","form",f+"form.js");d("Checkbox","checkbox",f+"checkbox.js");d("Radio","radio",f+"radio.js");d("TextField","textfield",
f+"textfield.js");d("Textarea","textarea",f+"textarea.js");d("Select","select",f+"select.js");d("Button","button",f+"button.js");var i=CKEDITOR.plugins.get("image");i&&d("ImageButton","imagebutton",CKEDITOR.plugins.getPath("image")+"dialogs/image.js");d("HiddenField","hiddenfield",f+"hiddenfield.js");b.addMenuItems&&(d={checkbox:{label:a.forms.checkboxAndRadio.checkboxTitle,command:"checkbox",group:"checkbox"},radio:{label:a.forms.checkboxAndRadio.radioTitle,command:"radio",group:"radio"},textfield:{label:a.forms.textfield.title,
command:"textfield",group:"textfield"},hiddenfield:{label:a.forms.hidden.title,command:"hiddenfield",group:"hiddenfield"},imagebutton:{label:a.image.titleButton,command:"imagebutton",group:"imagebutton"},button:{label:a.forms.button.title,command:"button",group:"button"},select:{label:a.forms.select.title,command:"select",group:"select"},textarea:{label:a.forms.textarea.title,command:"textarea",group:"textarea"}},!b.blockless&&(d.form={label:a.forms.form.menu,command:"form",group:"form"}),b.addMenuItems(d));
b.contextMenu&&(!b.blockless&&b.contextMenu.addListener(function(g,c,a){if((g=a.contains("form",1))&&!g.isReadOnly())return{form:CKEDITOR.TRISTATE_OFF}}),b.contextMenu.addListener(function(a){if(a&&!a.isReadOnly()){var c=a.getName();if(c=="select")return{select:CKEDITOR.TRISTATE_OFF};if(c=="textarea")return{textarea:CKEDITOR.TRISTATE_OFF};if(c=="input"){var b=a.getAttribute("type")||"text";switch(b){case "button":case "submit":case "reset":return{button:CKEDITOR.TRISTATE_OFF};case "checkbox":return{checkbox:CKEDITOR.TRISTATE_OFF};
case "radio":return{radio:CKEDITOR.TRISTATE_OFF};case "image":return i?{imagebutton:CKEDITOR.TRISTATE_OFF}:null}if(h[b])return{textfield:CKEDITOR.TRISTATE_OFF}}if(c=="img"&&a.data("cke-real-element-type")=="hiddenfield")return{hiddenfield:CKEDITOR.TRISTATE_OFF}}}));b.on("doubleclick",function(a){var c=a.data.element;if(!b.blockless&&c.is("form"))a.data.dialog="form";else if(c.is("select"))a.data.dialog="select";else if(c.is("textarea"))a.data.dialog="textarea";else if(c.is("img")&&c.data("cke-real-element-type")==
"hiddenfield")a.data.dialog="hiddenfield";else if(c.is("input")){c=c.getAttribute("type")||"text";switch(c){case "button":case "submit":case "reset":a.data.dialog="button";break;case "checkbox":a.data.dialog="checkbox";break;case "radio":a.data.dialog="radio";break;case "image":a.data.dialog="imagebutton"}if(h[c])a.data.dialog="textfield"}})},afterInit:function(b){var a=b.dataProcessor,e=a&&a.htmlFilter,a=a&&a.dataFilter;CKEDITOR.env.ie&&e&&e.addRules({elements:{input:function(a){var a=a.attributes,
b=a.type;b||(a.type="text");("checkbox"==b||"radio"==b)&&"on"==a.value&&delete a.value}}});a&&a.addRules({elements:{input:function(a){if("hidden"==a.attributes.type)return b.createFakeParserElement(a,"cke_hidden","hiddenfield")}}})}});
CKEDITOR.env.ie&&(CKEDITOR.dom.element.prototype.hasAttribute=CKEDITOR.tools.override(CKEDITOR.dom.element.prototype.hasAttribute,function(b){return function(a){this.$.attributes.getNamedItem(a);if("input"==this.getName())switch(a){case "class":return 0<this.$.className.length;case "checked":return!!this.$.checked;case "value":var e=this.getAttribute("type");return"checkbox"==e||"radio"==e?"on"!=this.$.value:this.$.value}return b.apply(this,arguments)}}));CKEDITOR.plugins.add("format",{requires:"richcombo",init:function(a){if(!a.blockless){for(var g=a.config,c=a.lang.format,k=g.format_tags.split(";"),d={},l=0,m=[],h=0;h<k.length;h++){var i=k[h],j=new CKEDITOR.style(g["format_"+i]);if(!a.filter.customConfig||a.filter.check(j))l++,d[i]=j,d[i]._.enterMode=a.config.enterMode,m.push(j)}0!==l&&a.ui.addRichCombo("Format",{label:c.label,title:c.panelTitle,toolbar:"styles,20",allowedContent:m,panel:{css:[CKEDITOR.skin.getPath("editor")].concat(g.contentsCss),
multiSelect:!1,attributes:{"aria-label":c.panelTitle}},init:function(){this.startGroup(c.panelTitle);for(var a in d){var e=c["tag_"+a];this.add(a,d[a].buildPreview(e),e)}},onClick:function(b){a.focus();a.fire("saveSnapshot");var b=d[b],e=a.elementPath();a[b.checkActive(e)?"removeStyle":"applyStyle"](b);setTimeout(function(){a.fire("saveSnapshot")},0)},onRender:function(){a.on("selectionChange",function(b){var e=this.getValue(),b=b.data.path,c=!a.readOnly&&b.isContextFor("p");this[c?"enable":"disable"]();
if(c){for(var f in d)if(d[f].checkActive(b)){f!=e&&this.setValue(f,a.lang.format["tag_"+f]);return}this.setValue("")}},this)}})}}});CKEDITOR.config.format_tags="p;h1;h2;h3;h4;h5;h6;pre;address;div";CKEDITOR.config.format_p={element:"p"};CKEDITOR.config.format_div={element:"div"};CKEDITOR.config.format_pre={element:"pre"};CKEDITOR.config.format_address={element:"address"};CKEDITOR.config.format_h1={element:"h1"};CKEDITOR.config.format_h2={element:"h2"};CKEDITOR.config.format_h3={element:"h3"};
CKEDITOR.config.format_h4={element:"h4"};CKEDITOR.config.format_h5={element:"h5"};CKEDITOR.config.format_h6={element:"h6"};CKEDITOR.plugins.add("htmlwriter",{init:function(b){var a=new CKEDITOR.htmlWriter;a.forceSimpleAmpersand=b.config.forceSimpleAmpersand;a.indentationChars=b.config.dataIndentationChars||"\t";b.dataProcessor.writer=a}});
CKEDITOR.htmlWriter=CKEDITOR.tools.createClass({base:CKEDITOR.htmlParser.basicWriter,$:function(){this.base();this.indentationChars="\t";this.selfClosingEnd=" />";this.lineBreakChars="\n";this.sortAttributes=1;this._.indent=0;this._.indentation="";this._.inPre=0;this._.rules={};var b=CKEDITOR.dtd,a;for(a in CKEDITOR.tools.extend({},b.$nonBodyContent,b.$block,b.$listItem,b.$tableContent))this.setRules(a,{indent:!b[a]["#"],breakBeforeOpen:1,breakBeforeClose:!b[a]["#"],breakAfterClose:1,needsSpace:a in
b.$block&&!(a in{li:1,dt:1,dd:1})});this.setRules("br",{breakAfterOpen:1});this.setRules("title",{indent:0,breakAfterOpen:0});this.setRules("style",{indent:0,breakBeforeClose:1});this.setRules("pre",{breakAfterOpen:1,indent:0})},proto:{openTag:function(b){var a=this._.rules[b];this._.afterCloser&&(a&&a.needsSpace&&this._.needsSpace)&&this._.output.push("\n");this._.indent?this.indentation():a&&a.breakBeforeOpen&&(this.lineBreak(),this.indentation());this._.output.push("<",b);this._.afterCloser=0},
openTagClose:function(b,a){var c=this._.rules[b];a?(this._.output.push(this.selfClosingEnd),c&&c.breakAfterClose&&(this._.needsSpace=c.needsSpace)):(this._.output.push(">"),c&&c.indent&&(this._.indentation+=this.indentationChars));c&&c.breakAfterOpen&&this.lineBreak();"pre"==b&&(this._.inPre=1)},attribute:function(b,a){"string"==typeof a&&(this.forceSimpleAmpersand&&(a=a.replace(/&amp;/g,"&")),a=CKEDITOR.tools.htmlEncodeAttr(a));this._.output.push(" ",b,'="',a,'"')},closeTag:function(b){var a=this._.rules[b];
a&&a.indent&&(this._.indentation=this._.indentation.substr(this.indentationChars.length));this._.indent?this.indentation():a&&a.breakBeforeClose&&(this.lineBreak(),this.indentation());this._.output.push("</",b,">");"pre"==b&&(this._.inPre=0);a&&a.breakAfterClose&&(this.lineBreak(),this._.needsSpace=a.needsSpace);this._.afterCloser=1},text:function(b){this._.indent&&(this.indentation(),!this._.inPre&&(b=CKEDITOR.tools.ltrim(b)));this._.output.push(b)},comment:function(b){this._.indent&&this.indentation();
this._.output.push("<\!--",b,"--\>")},lineBreak:function(){!this._.inPre&&0<this._.output.length&&this._.output.push(this.lineBreakChars);this._.indent=1},indentation:function(){!this._.inPre&&this._.indentation&&this._.output.push(this._.indentation);this._.indent=0},reset:function(){this._.output=[];this._.indent=0;this._.indentation="";this._.afterCloser=0;this._.inPre=0},setRules:function(b,a){var c=this._.rules[b];c?CKEDITOR.tools.extend(c,a,!0):this._.rules[b]=a}}});(function(){var b={canUndo:!1,exec:function(a){var b=a.document.createElement("hr");a.insertElement(b)},allowedContent:"hr",requiredContent:"hr"};CKEDITOR.plugins.add("horizontalrule",{init:function(a){a.blockless||(a.addCommand("horizontalrule",b),a.ui.addButton&&a.ui.addButton("HorizontalRule",{label:a.lang.horizontalrule.toolbar,command:"horizontalrule",toolbar:"insert,40"}))}})})();(function(){CKEDITOR.plugins.add("iframe",{requires:"dialog,fakeobjects",onLoad:function(){CKEDITOR.addCss("img.cke_iframe{background-image: url("+CKEDITOR.getUrl(this.path+"images/placeholder.png")+");background-position: center center;background-repeat: no-repeat;border: 1px solid #a9a9a9;width: 80px;height: 80px;}")},init:function(a){var b=a.lang.iframe,c="iframe[align,longdesc,frameborder,height,name,scrolling,src,title,width]";a.plugins.dialogadvtab&&(c+=";iframe"+a.plugins.dialogadvtab.allowedContent({id:1,
classes:1,styles:1}));CKEDITOR.dialog.add("iframe",this.path+"dialogs/iframe.js");a.addCommand("iframe",new CKEDITOR.dialogCommand("iframe",{allowedContent:c,requiredContent:"iframe"}));a.ui.addButton&&a.ui.addButton("Iframe",{label:b.toolbar,command:"iframe",toolbar:"insert,80"});a.on("doubleclick",function(a){var b=a.data.element;b.is("img")&&"iframe"==b.data("cke-real-element-type")&&(a.data.dialog="iframe")});a.addMenuItems&&a.addMenuItems({iframe:{label:b.title,command:"iframe",group:"image"}});
a.contextMenu&&a.contextMenu.addListener(function(a){if(a&&a.is("img")&&"iframe"==a.data("cke-real-element-type"))return{iframe:CKEDITOR.TRISTATE_OFF}})},afterInit:function(a){var b=a.dataProcessor;(b=b&&b.dataFilter)&&b.addRules({elements:{iframe:function(b){return a.createFakeParserElement(b,"cke_iframe","iframe",!0)}}})}})})();(function(){function n(a){var c=this.editor,d=a.document,b=d.body;(a=d.getElementById("cke_actscrpt"))&&a.parentNode.removeChild(a);(a=d.getElementById("cke_shimscrpt"))&&a.parentNode.removeChild(a);CKEDITOR.env.gecko&&(b.contentEditable=!1,2E4>CKEDITOR.env.version&&(b.innerHTML=b.innerHTML.replace(/^.*<\!-- cke-content-start --\>/,""),setTimeout(function(){var a=new CKEDITOR.dom.range(new CKEDITOR.dom.document(d));a.setStart(new CKEDITOR.dom.node(b),0);c.getSelection().selectRanges([a])},0)));b.contentEditable=
!0;CKEDITOR.env.ie&&(b.hideFocus=!0,b.disabled=!0,b.removeAttribute("disabled"));delete this._.isLoadingData;this.$=b;d=new CKEDITOR.dom.document(d);this.setup();CKEDITOR.env.ie&&(d.getDocumentElement().addClass(d.$.compatMode),c.config.enterMode!=CKEDITOR.ENTER_P&&d.on("selectionchange",function(){var a=d.getBody(),b=c.getSelection(),e=b&&b.getRanges()[0];e&&(a.getHtml().match(/^<p>&nbsp;<\/p>$/i)&&e.startContainer.equals(a))&&setTimeout(function(){e=c.getSelection().getRanges()[0];if(!e.startContainer.equals("body")){a.getFirst().remove(1);
e.moveToElementEditEnd(a);e.select()}},0)}));CKEDITOR.env.gecko&&CKEDITOR.tools.setTimeout(o,0,this,c);try{c.document.$.execCommand("2D-position",!1,!0)}catch(e){}try{c.document.$.execCommand("enableInlineTableEditing",!1,!c.config.disableNativeTableHandles)}catch(f){}if(c.config.disableObjectResizing)try{this.getDocument().$.execCommand("enableObjectResizing",!1,!1)}catch(g){this.attachListener(this,CKEDITOR.env.ie?"resizestart":"resize",function(a){a.data.preventDefault()})}(CKEDITOR.env.gecko||
CKEDITOR.env.ie&&"CSS1Compat"==c.document.$.compatMode)&&this.attachListener(this,"keydown",function(a){var b=a.data.getKeystroke();if(b==33||b==34)if(CKEDITOR.env.ie)setTimeout(function(){c.getSelection().scrollIntoView()},0);else if(c.window.$.innerHeight>this.$.offsetHeight){var d=c.createRange();d[b==33?"moveToElementEditStart":"moveToElementEditEnd"](this);d.select();a.data.preventDefault()}});CKEDITOR.env.ie&&this.attachListener(d,"blur",function(){try{d.$.selection.empty()}catch(a){}});c.document.getElementsByTag("title").getItem(0).data("cke-title",
c.document.$.title);CKEDITOR.env.ie&&(c.document.$.title=this._.docTitle);CKEDITOR.tools.setTimeout(function(){c.fire("contentDom");if(this._.isPendingFocus){c.focus();this._.isPendingFocus=false}setTimeout(function(){c.fire("dataReady")},0);CKEDITOR.env.ie&&setTimeout(function(){if(c.document){var a=c.document.$.body;a.runtimeStyle.marginBottom="0px";a.runtimeStyle.marginBottom=""}},1E3)},0,this)}function p(a){a.checkDirty()||setTimeout(function(){a.resetDirty()},0)}function o(a){if(!a.readOnly){var c=
a.window,d=a.document,b=d.getBody(),e=b.getFirst(),f=b.getChildren().count();if(!f||1==f&&e.type==CKEDITOR.NODE_ELEMENT&&e.hasAttribute("_moz_editor_bogus_node")){p(a);var e=CKEDITOR.document,g=e.getDocumentElement(),h=g.$.scrollTop,i=g.$.scrollLeft,j=d.$.createEvent("KeyEvents");j.initKeyEvent("keypress",!0,!0,c.$,!1,!1,!1,!1,0,32);d.$.dispatchEvent(j);(h!=g.$.scrollTop||i!=g.$.scrollLeft)&&e.getWindow().$.scrollTo(i,h);f&&b.getFirst().remove();d.getBody().appendBogus();a=a.createRange();a.setStartAt(b,
CKEDITOR.POSITION_AFTER_START);a.select()}}}function q(){var a=[];if(8<=CKEDITOR.document.$.documentMode){a.push("html.CSS1Compat [contenteditable=false]{min-height:0 !important}");var c=[],d;for(d in CKEDITOR.dtd.$removeEmpty)c.push("html.CSS1Compat "+d+"[contenteditable=false]");a.push(c.join(",")+"{display:inline-block}")}else CKEDITOR.env.gecko&&(a.push("html{height:100% !important}"),a.push("img:-moz-broken{-moz-force-broken-image-icon:1;min-width:24px;min-height:24px}"));a.push("html{cursor:text;*cursor:auto}");
a.push("img,input,textarea{cursor:default}");return a.join("\n")}CKEDITOR.plugins.add("wysiwygarea",{init:function(a){a.config.fullPage&&a.addFeature({allowedContent:"html head title; style [media,type]; body (*)[id]; meta link [*]",requiredContent:"body"});a.addMode("wysiwyg",function(c){function d(d){d&&d.removeListener();a.editable(new k(a,b.$.contentWindow.document.body));a.setData(a.getData(1),c)}var b=CKEDITOR.document.createElement("iframe");b.setStyles({width:"100%",height:"100%"});b.addClass("cke_wysiwyg_frame cke_reset");
var e=a.ui.space("contents");e.append(b);var f="document.open();"+(l?'document.domain="'+document.domain+'";':"")+"document.close();",f=CKEDITOR.env.air?"javascript:void(0)":CKEDITOR.env.ie?"javascript:void(function(){"+encodeURIComponent(f)+"}())":"",g=CKEDITOR.env.ie||CKEDITOR.env.gecko;if(g)b.on("load",d);var h=[a.lang.editor,a.name].join(),i=a.lang.common.editorHelp;CKEDITOR.env.ie&&(h+=", "+i);var j=CKEDITOR.tools.getNextId(),m=CKEDITOR.dom.element.createFromHtml('<span id="'+j+'" class="cke_voice_label">'+
i+"</span>");e.append(m,1);a.on("beforeModeUnload",function(a){a.removeListener();m.remove()});b.setAttributes({frameBorder:0,"aria-describedby":j,title:h,src:f,tabIndex:a.tabIndex,allowTransparency:"true"});!g&&d();CKEDITOR.env.webkit&&(f=function(){e.setStyle("width","100%");b.hide();b.setSize("width",e.getSize("width"));e.removeStyle("width");b.show()},b.setCustomData("onResize",f),CKEDITOR.document.getWindow().on("resize",f));a.fire("ariaWidget",b)})}});var l=CKEDITOR.env.isCustomDomain(),k=CKEDITOR.tools.createClass({$:function(a){this.base.apply(this,
arguments);this._.frameLoadedHandler=CKEDITOR.tools.addFunction(function(a){CKEDITOR.tools.setTimeout(n,0,this,a)},this);this._.docTitle=this.getWindow().getFrame().getAttribute("title")},base:CKEDITOR.editable,proto:{setData:function(a,c){var d=this.editor;if(c)this.setHtml(a);else{this._.isLoadingData=!0;d._.dataStore={id:1};var b=d.config,e=b.fullPage,f=b.docType,g=CKEDITOR.tools.buildStyleHtml(q()).replace(/<style>/,'<style data-cke-temp="1">');e||(g+=CKEDITOR.tools.buildStyleHtml(d.config.contentsCss));
var h=b.baseHref?'<base href="'+b.baseHref+'" data-cke-temp="1" />':"";e&&(a=a.replace(/<!DOCTYPE[^>]*>/i,function(a){d.docType=f=a;return""}).replace(/<\?xml\s[^\?]*\?>/i,function(a){d.xmlDeclaration=a;return""}));d.dataProcessor&&(a=d.dataProcessor.toHtml(a));e?(/<body[\s|>]/.test(a)||(a="<body>"+a),/<html[\s|>]/.test(a)||(a="<html>"+a+"</html>"),/<head[\s|>]/.test(a)?/<title[\s|>]/.test(a)||(a=a.replace(/<head[^>]*>/,"$&<title></title>")):a=a.replace(/<html[^>]*>/,"$&<head><title></title></head>"),
h&&(a=a.replace(/<head>/,"$&"+h)),a=a.replace(/<\/head\s*>/,g+"$&"),a=f+a):a=b.docType+'<html dir="'+b.contentsLangDirection+'" lang="'+(b.contentsLanguage||d.langCode)+'"><head><title>'+this._.docTitle+"</title>"+h+g+"</head><body"+(b.bodyId?' id="'+b.bodyId+'"':"")+(b.bodyClass?' class="'+b.bodyClass+'"':"")+">"+a+"</body></html>";CKEDITOR.env.gecko&&(a=a.replace(/<body/,'<body contenteditable="true" '),2E4>CKEDITOR.env.version&&(a=a.replace(/<body[^>]*>/,"$&<\!-- cke-content-start --\>")));b='<script id="cke_actscrpt" type="text/javascript"'+
(CKEDITOR.env.ie?' defer="defer" ':"")+">"+(l?'document.domain="'+document.domain+'";':"")+"var wasLoaded=0;function onload(){if(!wasLoaded)window.parent.CKEDITOR.tools.callFunction("+this._.frameLoadedHandler+",window);wasLoaded=1;}"+(CKEDITOR.env.ie?"onload();":'document.addEventListener("DOMContentLoaded", onload, false );')+"<\/script>";CKEDITOR.env.ie&&9>CKEDITOR.env.version&&(b+='<script id="cke_shimscrpt">(function(){var e="abbr,article,aside,audio,bdi,canvas,data,datalist,details,figcaption,figure,footer,header,hgroup,mark,meter,nav,output,progress,section,summary,time,video".split(","),i=e.length;while(i--){document.createElement(e[i])}})()<\/script>');
a=a.replace(/(?=\s*<\/(:?head)>)/,b);this.clearCustomData();this.clearListeners();d.fire("contentDomUnload");var i=this.getDocument();try{i.write(a)}catch(j){setTimeout(function(){i.write(a)},0)}}},getData:function(a){if(a)return this.getHtml();var a=this.editor,c=a.config.fullPage,d=c&&a.docType,b=c&&a.xmlDeclaration,e=this.getDocument(),c=c?e.getDocumentElement().getOuterHtml():e.getBody().getHtml();CKEDITOR.env.gecko&&(c=c.replace(/<br>(?=\s*(:?$|<\/body>))/,""));a.dataProcessor&&(c=a.dataProcessor.toDataFormat(c));
b&&(c=b+"\n"+c);d&&(c=d+"\n"+c);return c},focus:function(){this._.isLoadingData?this._.isPendingFocus=!0:k.baseProto.focus.call(this)},detach:function(){var a=this.editor,c=a.document,d=a.window.getFrame();k.baseProto.detach.call(this);this.clearCustomData();c.getDocumentElement().clearCustomData();d.clearCustomData();CKEDITOR.tools.removeFunction(this._.frameLoadedHandler);(c=d.removeCustomData("onResize"))&&c.removeListener();a.fire("contentDomUnload");d.remove()}}})})();
CKEDITOR.config.disableObjectResizing=!1;CKEDITOR.config.disableNativeTableHandles=!0;CKEDITOR.config.disableNativeSpellChecker=!0;CKEDITOR.config.contentsCss=CKEDITOR.basePath+"contents.css";(function(){function e(b,a){a||(a=b.getSelection().getSelectedElement());if(a&&a.is("img")&&!a.data("cke-realelement")&&!a.isReadOnly())return a}function f(b){var a=b.getStyle("float");if("inherit"==a||"none"==a)a=0;a||(a=b.getAttribute("align"));return a}CKEDITOR.plugins.add("image",{requires:"dialog",init:function(b){CKEDITOR.dialog.add("image",this.path+"dialogs/image.js");var a="img[alt,!src]{border-style,border-width,float,height,margin,margin-bottom,margin-left,margin-right,margin-top,width}";
CKEDITOR.dialog.isTabEnabled(b,"image","advanced")&&(a="img[alt,dir,id,lang,longdesc,!src,title]{*}(*)");b.addCommand("image",new CKEDITOR.dialogCommand("image",{allowedContent:a,requiredContent:"img[alt,src]",contentTransformations:[["img{width}: sizeToStyle","img[width]: sizeToAttribute"],["img{float}: alignmentToStyle","img[align]: alignmentToAttribute"]]}));b.ui.addButton&&b.ui.addButton("Image",{label:b.lang.common.image,command:"image",toolbar:"insert,10"});b.on("doubleclick",function(a){var b=
a.data.element;b.is("img")&&(!b.data("cke-realelement")&&!b.isReadOnly())&&(a.data.dialog="image")});b.addMenuItems&&b.addMenuItems({image:{label:b.lang.image.menu,command:"image",group:"image"}});b.contextMenu&&b.contextMenu.addListener(function(a){if(e(b,a))return{image:CKEDITOR.TRISTATE_OFF}})},afterInit:function(b){function a(a){var d=b.getCommand("justify"+a);if(d){if("left"==a||"right"==a)d.on("exec",function(d){var c=e(b),g;c&&(g=f(c),g==a?(c.removeStyle("float"),a==f(c)&&c.removeAttribute("align")):
c.setStyle("float",a),d.cancel())});d.on("refresh",function(d){var c=e(b);c&&(c=f(c),this.setState(c==a?CKEDITOR.TRISTATE_ON:"right"==a||"left"==a?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED),d.cancel())})}}a("left");a("right");a("center");a("block")}})})();CKEDITOR.config.image_removeLinkByEmptyURL=!0;CKEDITOR.plugins.add("smiley",{requires:"dialog",init:function(a){a.config.smiley_path=a.config.smiley_path||this.path+"images/";a.addCommand("smiley",new CKEDITOR.dialogCommand("smiley",{allowedContent:"img[alt,height,!src,title,width]",requiredContent:"img"}));a.ui.addButton&&a.ui.addButton("Smiley",{label:a.lang.smiley.toolbar,command:"smiley",toolbar:"insert,50"});CKEDITOR.dialog.add("smiley",this.path+"dialogs/smiley.js")}});CKEDITOR.config.smiley_images="regular_smile.gif sad_smile.gif wink_smile.gif teeth_smile.gif confused_smile.gif tongue_smile.gif embarrassed_smile.gif omg_smile.gif whatchutalkingabout_smile.gif angry_smile.gif angel_smile.gif shades_smile.gif devil_smile.gif cry_smile.gif lightbulb.gif thumbs_down.gif thumbs_up.gif heart.gif broken_heart.gif kiss.gif envelope.gif".split(" ");
CKEDITOR.config.smiley_descriptions="smiley;sad;wink;laugh;frown;cheeky;blush;surprise;indecision;angry;angel;cool;devil;crying;enlightened;no;yes;heart;broken heart;kiss;mail".split(";");(function(){function l(a,c){var c=void 0===c||c,b;if(c)b=a.getComputedStyle("text-align");else{for(;!a.hasAttribute||!a.hasAttribute("align")&&!a.getStyle("text-align");){b=a.getParent();if(!b)break;a=b}b=a.getStyle("text-align")||a.getAttribute("align")||""}b&&(b=b.replace(/(?:-(?:moz|webkit)-)?(?:start|auto)/i,""));!b&&c&&(b="rtl"==a.getComputedStyle("direction")?"right":"left");return b}function f(a,c,b){this.editor=a;this.name=c;this.value=b;this.context="p";var c=a.config.justifyClasses,g=a.config.enterMode==
CKEDITOR.ENTER_P?"p":"div";if(c){switch(b){case "left":this.cssClassName=c[0];break;case "center":this.cssClassName=c[1];break;case "right":this.cssClassName=c[2];break;case "justify":this.cssClassName=c[3]}this.cssClassRegex=RegExp("(?:^|\\s+)(?:"+c.join("|")+")(?=$|\\s)");this.requiredContent=g+"("+this.cssClassName+")"}else this.requiredContent=g+"{text-align}";this.allowedContent={"caption div h1 h2 h3 h4 h5 h6 p pre td th li":{propertiesOnly:!0,styles:this.cssClassName?null:"text-align",classes:this.cssClassName||
null}};a.config.enterMode==CKEDITOR.ENTER_BR&&(this.allowedContent.div=!0)}function j(a){var c=a.editor,b=c.createRange();b.setStartBefore(a.data.node);b.setEndAfter(a.data.node);for(var g=new CKEDITOR.dom.walker(b),d;d=g.next();)if(d.type==CKEDITOR.NODE_ELEMENT)if(!d.equals(a.data.node)&&d.getDirection())b.setStartAfter(d),g=new CKEDITOR.dom.walker(b);else{var e=c.config.justifyClasses;e&&(d.hasClass(e[0])?(d.removeClass(e[0]),d.addClass(e[2])):d.hasClass(e[2])&&(d.removeClass(e[2]),d.addClass(e[0])));
e=d.getStyle("text-align");"left"==e?d.setStyle("text-align","right"):"right"==e&&d.setStyle("text-align","left")}}f.prototype={exec:function(a){var c=a.getSelection(),b=a.config.enterMode;if(c){for(var g=c.createBookmarks(),d=c.getRanges(!0),e=this.cssClassName,f,h,i=a.config.useComputedState,i=void 0===i||i,k=d.length-1;0<=k;k--){f=d[k].createIterator();for(f.enlargeBr=b!=CKEDITOR.ENTER_BR;h=f.getNextParagraph(b==CKEDITOR.ENTER_P?"p":"div");){h.removeAttribute("align");h.removeStyle("text-align");
var j=e&&(h.$.className=CKEDITOR.tools.ltrim(h.$.className.replace(this.cssClassRegex,""))),m=this.state==CKEDITOR.TRISTATE_OFF&&(!i||l(h,!0)!=this.value);e?m?h.addClass(e):j||h.removeAttribute("class"):m&&h.setStyle("text-align",this.value)}}a.focus();a.forceNextSelectionCheck();c.selectBookmarks(g)}},refresh:function(a,c){var b=c.block||c.blockLimit;this.setState("body"!=b.getName()&&l(b,this.editor.config.useComputedState)==this.value?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF)}};CKEDITOR.plugins.add("justify",
{init:function(a){if(!a.blockless){var c=new f(a,"justifyleft","left"),b=new f(a,"justifycenter","center"),g=new f(a,"justifyright","right"),d=new f(a,"justifyblock","justify");a.addCommand("justifyleft",c);a.addCommand("justifycenter",b);a.addCommand("justifyright",g);a.addCommand("justifyblock",d);a.ui.addButton&&(a.ui.addButton("JustifyLeft",{label:a.lang.justify.left,command:"justifyleft",toolbar:"align,10"}),a.ui.addButton("JustifyCenter",{label:a.lang.justify.center,command:"justifycenter",
toolbar:"align,20"}),a.ui.addButton("JustifyRight",{label:a.lang.justify.right,command:"justifyright",toolbar:"align,30"}),a.ui.addButton("JustifyBlock",{label:a.lang.justify.block,command:"justifyblock",toolbar:"align,40"}));a.on("dirChanged",j)}}})})();CKEDITOR.plugins.add("link",{requires:"dialog,fakeobjects",onLoad:function(){function b(b){return d.replace(/%1/g,"rtl"==b?"right":"left").replace(/%2/g,"cke_contents_"+b)}var a="background:url("+CKEDITOR.getUrl(this.path+"images/anchor.png")+") no-repeat %1 center;border:1px dotted #00f;",d=".%2 a.cke_anchor,.%2 a.cke_anchor_empty,.cke_editable.%2 a[name],.cke_editable.%2 a[data-cke-saved-name]{"+a+"padding-%1:18px;cursor:auto;}"+(CKEDITOR.env.ie?"a.cke_anchor_empty{display:inline-block;}":"")+".%2 img.cke_anchor{"+
a+"width:16px;min-height:15px;height:1.15em;vertical-align:"+(CKEDITOR.env.opera?"middle":"text-bottom")+";}";CKEDITOR.addCss(b("ltr")+b("rtl"))},init:function(b){var a="a[!href]";CKEDITOR.dialog.isTabEnabled(b,"link","advanced")&&(a=a.replace("]",",accesskey,charset,dir,id,lang,name,rel,tabindex,title,type]{*}(*)"));CKEDITOR.dialog.isTabEnabled(b,"link","target")&&(a=a.replace("]",",target,onclick]"));b.addCommand("link",new CKEDITOR.dialogCommand("link",{allowedContent:a,requiredContent:"a[href]"}));
b.addCommand("anchor",new CKEDITOR.dialogCommand("anchor",{allowedContent:"a[!name,id]",requiredContent:"a[name]"}));b.addCommand("unlink",new CKEDITOR.unlinkCommand);b.addCommand("removeAnchor",new CKEDITOR.removeAnchorCommand);b.setKeystroke(CKEDITOR.CTRL+76,"link");b.ui.addButton&&(b.ui.addButton("Link",{label:b.lang.link.toolbar,command:"link",toolbar:"links,10"}),b.ui.addButton("Unlink",{label:b.lang.link.unlink,command:"unlink",toolbar:"links,20"}),b.ui.addButton("Anchor",{label:b.lang.link.anchor.toolbar,
command:"anchor",toolbar:"links,30"}));CKEDITOR.dialog.add("link",this.path+"dialogs/link.js");CKEDITOR.dialog.add("anchor",this.path+"dialogs/anchor.js");b.on("doubleclick",function(a){var c=CKEDITOR.plugins.link.getSelectedLink(b)||a.data.element;if(!c.isReadOnly())if(c.is("a")){a.data.dialog=c.getAttribute("name")&&(!c.getAttribute("href")||!c.getChildCount())?"anchor":"link";b.getSelection().selectElement(c)}else if(CKEDITOR.plugins.link.tryRestoreFakeAnchor(b,c))a.data.dialog="anchor"});b.addMenuItems&&
b.addMenuItems({anchor:{label:b.lang.link.anchor.menu,command:"anchor",group:"anchor",order:1},removeAnchor:{label:b.lang.link.anchor.remove,command:"removeAnchor",group:"anchor",order:5},link:{label:b.lang.link.menu,command:"link",group:"link",order:1},unlink:{label:b.lang.link.unlink,command:"unlink",group:"link",order:5}});b.contextMenu&&b.contextMenu.addListener(function(a){if(!a||a.isReadOnly())return null;a=CKEDITOR.plugins.link.tryRestoreFakeAnchor(b,a);if(!a&&!(a=CKEDITOR.plugins.link.getSelectedLink(b)))return null;
var c={};a.getAttribute("href")&&a.getChildCount()&&(c={link:CKEDITOR.TRISTATE_OFF,unlink:CKEDITOR.TRISTATE_OFF});if(a&&a.hasAttribute("name"))c.anchor=c.removeAnchor=CKEDITOR.TRISTATE_OFF;return c})},afterInit:function(b){var a=b.dataProcessor,d=a&&a.dataFilter,a=a&&a.htmlFilter,c=b._.elementsPath&&b._.elementsPath.filters;d&&d.addRules({elements:{a:function(a){var c=a.attributes;if(!c.name)return null;var d=!a.children.length;if(CKEDITOR.plugins.link.synAnchorSelector){var a=d?"cke_anchor_empty":
"cke_anchor",e=c["class"];if(c.name&&(!e||0>e.indexOf(a)))c["class"]=(e||"")+" "+a;d&&CKEDITOR.plugins.link.emptyAnchorFix&&(c.contenteditable="false",c["data-cke-editable"]=1)}else if(CKEDITOR.plugins.link.fakeAnchor&&d)return b.createFakeParserElement(a,"cke_anchor","anchor");return null}}});CKEDITOR.plugins.link.emptyAnchorFix&&a&&a.addRules({elements:{a:function(a){delete a.attributes.contenteditable}}});c&&c.push(function(a,c){if("a"==c&&(CKEDITOR.plugins.link.tryRestoreFakeAnchor(b,a)||a.getAttribute("name")&&
(!a.getAttribute("href")||!a.getChildCount())))return"anchor"})}});
CKEDITOR.plugins.link={getSelectedLink:function(b){var a=b.getSelection(),d=a.getSelectedElement();return d&&d.is("a")?d:(a=a.getRanges(!0)[0])?(a.shrink(CKEDITOR.SHRINK_TEXT),b.elementPath(a.getCommonAncestor()).contains("a",1)):null},fakeAnchor:CKEDITOR.env.opera||CKEDITOR.env.webkit,synAnchorSelector:CKEDITOR.env.ie,emptyAnchorFix:CKEDITOR.env.ie&&8>CKEDITOR.env.version,tryRestoreFakeAnchor:function(b,a){if(a&&a.data("cke-real-element-type")&&"anchor"==a.data("cke-real-element-type")){var d=b.restoreRealElement(a);
if(d.data("cke-saved-name"))return d}}};CKEDITOR.unlinkCommand=function(){};CKEDITOR.unlinkCommand.prototype={exec:function(b){var a=new CKEDITOR.style({element:"a",type:CKEDITOR.STYLE_INLINE,alwaysRemoveElement:1});b.removeStyle(a)},refresh:function(b,a){var d=a.lastElement&&a.lastElement.getAscendant("a",!0);d&&"a"==d.getName()&&d.getAttribute("href")&&d.getChildCount()?this.setState(CKEDITOR.TRISTATE_OFF):this.setState(CKEDITOR.TRISTATE_DISABLED)},contextSensitive:1,startDisabled:1,requiredContent:"a[href]"};
CKEDITOR.removeAnchorCommand=function(){};CKEDITOR.removeAnchorCommand.prototype={exec:function(b){var a=b.getSelection(),d=a.createBookmarks(),c;if(a&&(c=a.getSelectedElement())&&(CKEDITOR.plugins.link.fakeAnchor&&!c.getChildCount()?CKEDITOR.plugins.link.tryRestoreFakeAnchor(b,c):c.is("a")))c.remove(1);else if(c=CKEDITOR.plugins.link.getSelectedLink(b))c.hasAttribute("href")?(c.removeAttributes({name:1,"data-cke-saved-name":1}),c.removeClass("cke_anchor")):c.remove(1);a.selectBookmarks(d)},requiredContent:"a[name]"};
CKEDITOR.tools.extend(CKEDITOR.config,{linkShowAdvancedTab:!0,linkShowTargetTab:!0});(function(){CKEDITOR.plugins.liststyle={requires:"dialog,contextmenu",init:function(a){if(!a.blockless){var b;b=new CKEDITOR.dialogCommand("numberedListStyle",{requiredContent:"ol",allowedContent:"ol{list-style-type}[start]"});b=a.addCommand("numberedListStyle",b);a.addFeature(b);CKEDITOR.dialog.add("numberedListStyle",this.path+"dialogs/liststyle.js");b=new CKEDITOR.dialogCommand("bulletedListStyle",{requiredContent:"ul",allowedContent:"ul{list-style-type}"});b=a.addCommand("bulletedListStyle",b);
a.addFeature(b);CKEDITOR.dialog.add("bulletedListStyle",this.path+"dialogs/liststyle.js");a.addMenuGroup("list",108);a.addMenuItems({numberedlist:{label:a.lang.liststyle.numberedTitle,group:"list",command:"numberedListStyle"},bulletedlist:{label:a.lang.liststyle.bulletedTitle,group:"list",command:"bulletedListStyle"}});a.contextMenu.addListener(function(a){if(!a||a.isReadOnly())return null;for(;a;){var b=a.getName();if("ol"==b)return{numberedlist:CKEDITOR.TRISTATE_OFF};if("ul"==b)return{bulletedlist:CKEDITOR.TRISTATE_OFF};
a=a.getParent()}return null})}}};CKEDITOR.plugins.add("liststyle",CKEDITOR.plugins.liststyle)})();(function(){function N(a,b,d){return l(b)&&l(d)&&d.equals(b.getNext(function(a){return!(y(a)||z(a)||o(a))}))}function t(a){this.upper=a[0];this.lower=a[1];this.set.apply(this,a.slice(2))}function H(a){var b=a.element,d;return b&&l(b)?(d=b.getAscendant(a.triggers,!0))&&!d.contains(a.editable)&&!d.equals(a.editable)?d:null:null}function ba(a,b,d){m(a,b);m(a,d);a=b.size.bottom;d=d.size.top;return a&&d?0|(a+d)/2:a||d}function q(a,b,d){return b=b[d?"getPrevious":"getNext"](function(e){return e&&e.type==
CKEDITOR.NODE_TEXT&&!y(e)||l(e)&&!o(e)&&!u(a,e)})}function ca(a){var b=a.doc,d=A('<span contenteditable="false" style="'+I+"position:absolute;border-top:1px dashed "+a.boxColor+'"></span>',b);p(d,{attach:function(){this.wrap.getParent()||this.wrap.appendTo(a.editable,!0);return this},lineChildren:[p(A('<span title="'+a.editor.lang.magicline.title+'" contenteditable="false">&#8629;</span>',b),{base:I+"height:17px;width:17px;"+(a.rtl?"left":"right")+":17px;background:url("+this.path+"images/icon.png) center no-repeat "+
a.boxColor+";cursor:pointer;"+(n.hc?"font-size: 15px;line-height:14px;border:1px solid #fff;text-align:center;":""),looks:["top:-8px;"+CKEDITOR.tools.cssVendorPrefix("border-radius","2px",1),"top:-17px;"+CKEDITOR.tools.cssVendorPrefix("border-radius","2px 2px 0px 0px",1),"top:-1px;"+CKEDITOR.tools.cssVendorPrefix("border-radius","0px 0px 2px 2px",1)]}),p(A(O,b),{base:P+"left:0px;border-left-color:"+a.boxColor+";",looks:["border-width:8px 0 8px 8px;top:-8px","border-width:8px 0 0 8px;top:-8px","border-width:0 0 8px 8px;top:0px"]}),
p(A(O,b),{base:P+"right:0px;border-right-color:"+a.boxColor+";",looks:["border-width:8px 8px 8px 0;top:-8px","border-width:8px 8px 0 0;top:-8px","border-width:0 8px 8px 0;top:0px"]})],detach:function(){this.wrap.getParent()&&this.wrap.remove();return this},mouseNear:function(){m(a,this);var e=a.holdDistance,b=this.size;return b&&a.mouse.y>b.top-e&&a.mouse.y<b.bottom+e&&a.mouse.x>b.left-e&&a.mouse.x<b.right+e?!0:!1},place:function(){var e=a.view,b=a.editable,c=a.trigger,d=c.upper,i=c.lower,h=d||i,
k=h.getParent(),g={};this.trigger=c;d&&m(a,d,!0);i&&m(a,i,!0);m(a,k,!0);a.inInlineMode&&B(a,!0);k.equals(b)?(g.left=e.scroll.x,g.right=-e.scroll.x,g.width=""):(g.left=h.size.left-h.size.margin.left+e.scroll.x-(a.inInlineMode?e.editable.left+e.editable.border.left:0),g.width=h.size.outerWidth+h.size.margin.left+h.size.margin.right+e.scroll.x,g.right="");d&&i?g.top=d.size.margin.bottom===i.size.margin.top?0|d.size.bottom+d.size.margin.bottom/2:d.size.margin.bottom<i.size.margin.top?d.size.bottom+d.size.margin.bottom:
d.size.bottom+d.size.margin.bottom-i.size.margin.top:d?i||(g.top=d.size.bottom+d.size.margin.bottom):g.top=i.size.top-i.size.margin.top;c.is(w)||g.top>e.scroll.y-15&&g.top<e.scroll.y+5?(g.top=a.inInlineMode?0:e.scroll.y,this.look(w)):c.is(x)||g.top>e.pane.bottom-5&&g.top<e.pane.bottom+15?(g.top=a.inInlineMode?e.editable.height+e.editable.padding.top+e.editable.padding.bottom:e.pane.bottom-1,this.look(x)):(a.inInlineMode&&(g.top-=e.editable.top+e.editable.border.top),this.look(r));a.inInlineMode&&
(g.top--,g.top+=e.editable.scroll.top,g.left+=e.editable.scroll.left);for(var Q in g)g[Q]=CKEDITOR.tools.cssLength(g[Q]);this.setStyles(g)},look:function(a){if(this.oldLook!=a){for(var d=this.lineChildren.length,c;d--;)(c=this.lineChildren[d]).setAttribute("style",c.base+c.looks[0|a/2]);this.oldLook=a}},wrap:new J("span",a.doc)});for(b=d.lineChildren.length;b--;)d.lineChildren[b].appendTo(d);d.look(r);d.appendTo(d.wrap);d.unselectable();d.lineChildren[0].on("mouseup",function(b){d.detach();K(a,function(d){var c=
a.line.trigger;d[c.is(C)?"insertBefore":"insertAfter"](c.is(C)?c.lower:c.upper)},!0);a.editor.focus();!n.ie&&a.enterMode!=CKEDITOR.ENTER_BR&&a.hotNode.scrollIntoView();b.data.preventDefault(!0)});d.on("mousedown",function(a){a.data.preventDefault(!0)});a.line=d}function K(a,b,d){var e=new CKEDITOR.dom.range(a.doc),f=a.editor,c;n.ie&&a.enterMode==CKEDITOR.ENTER_BR?c=a.doc.createText(D):(c=new J(a.enterBehavior,a.doc),a.enterMode!=CKEDITOR.ENTER_BR&&a.doc.createText(D).appendTo(c));d&&f.fire("saveSnapshot");
b(c);e.moveToPosition(c,CKEDITOR.POSITION_AFTER_START);f.getSelection().selectRanges([e]);a.hotNode=c;d&&f.fire("saveSnapshot")}function R(a,b){return{canUndo:!0,modes:{wysiwyg:1},exec:function(){function d(d){var f=n.ie&&9>n.version?" ":D,c=a.hotNode&&a.hotNode.getText()==f&&a.element.equals(a.hotNode)&&a.lastCmdDirection===!!b;K(a,function(f){c&&a.hotNode&&a.hotNode.remove();f[b?"insertAfter":"insertBefore"](d);f.setAttributes({"data-cke-magicline-hot":1,"data-cke-magicline-dir":!!b});a.lastCmdDirection=
!!b});!n.ie&&a.enterMode!=CKEDITOR.ENTER_BR&&a.hotNode.scrollIntoView();a.line.detach()}return function(e){e=e.getSelection().getStartElement();if((e=e.getAscendant(S,1))&&!e.equals(a.editable)&&!e.contains(a.editable)){a.element=e;var f=q(a,e,!b),c;l(f)&&f.is(a.triggers)&&f.is(da)&&(!q(a,f,!b)||(c=q(a,f,!b))&&l(c)&&c.is(a.triggers))?d(f):(c=H(a,e),l(c)&&(q(a,c,!b)?(e=q(a,c,!b))&&(l(e)&&e.is(a.triggers))&&d(c):d(c)))}}}()}}function u(a,b){if(!b||!(b.type==CKEDITOR.NODE_ELEMENT&&b.$))return!1;var d=
a.line;return d.wrap.equals(b)||d.wrap.contains(b)}function l(a){return a&&a.type==CKEDITOR.NODE_ELEMENT&&a.$}function o(a){if(!l(a))return!1;var b;if(!(b=T(a)))l(a)?(b={left:1,right:1,center:1},b=!(!b[a.getComputedStyle("float")]&&!b[a.getAttribute("align")])):b=!1;return b}function T(a){return!!{absolute:1,fixed:1,relative:1}[a.getComputedStyle("position")]}function E(a,b){return l(b)?b.is(a.triggers):null}function ea(a,b,d){b=b[d?"getLast":"getFirst"](function(d){return a.isRelevant(d)&&!d.is(fa)});
if(!b)return!1;m(a,b);return d?b.size.top>a.mouse.y:b.size.bottom<a.mouse.y}function U(a){var b=a.editable,d=a.mouse,e=a.view,f=a.triggerOffset;B(a);var c=d.y>(a.inInlineMode?e.editable.top+e.editable.height/2:Math.min(e.editable.height,e.pane.height)/2),b=b[c?"getLast":"getFirst"](function(a){return!(y(a)||z(a))});if(!b)return null;u(a,b)&&(b=a.line.wrap[c?"getPrevious":"getNext"](function(a){return!(y(a)||z(a))}));if(!l(b)||o(b)||!E(a,b))return null;m(a,b);return!c&&0<=b.size.top&&0<d.y&&d.y<b.size.top+
f?(a=a.inInlineMode||0===e.scroll.y?w:r,new t([null,b,C,F,a])):c&&b.size.bottom<=e.pane.height&&d.y>b.size.bottom-f&&d.y<e.pane.height?(a=a.inInlineMode||b.size.bottom>e.pane.height-f&&b.size.bottom<e.pane.height?x:r,new t([b,null,V,F,a])):null}function W(a){var b=a.mouse,d=a.view,e=a.triggerOffset,f=H(a);if(!f)return null;m(a,f);var e=Math.min(e,0|f.size.outerHeight/2),c=[],j,i;if(b.y>f.size.top-1&&b.y<f.size.top+e)i=!1;else if(b.y>f.size.bottom-e&&b.y<f.size.bottom+1)i=!0;else return null;if(o(f)||
ea(a,f,i)||f.getParent().is(X))return null;var h=q(a,f,!i);if(h){if(h&&h.type==CKEDITOR.NODE_TEXT)return null;if(l(h)){if(o(h)||!E(a,h)||h.getParent().is(X))return null;c=[h,f][i?"reverse":"concat"]().concat([L,F])}}else f.equals(a.editable[i?"getLast":"getFirst"](a.isRelevant))?(B(a),i&&b.y>f.size.bottom-e&&b.y<d.pane.height&&f.size.bottom>d.pane.height-e&&f.size.bottom<d.pane.height?j=x:0<b.y&&b.y<f.size.top+e&&(j=w)):j=r,c=[null,f][i?"reverse":"concat"]().concat([i?V:C,F,j,f.equals(a.editable[i?
"getLast":"getFirst"](a.isRelevant))?i?x:w:r]);return 0 in c?new t(c):null}function M(a,b,d,e){for(var f=function(){var d=n.ie?b.$.currentStyle:a.win.$.getComputedStyle(b.$,"");return n.ie?function(a){return d[CKEDITOR.tools.cssStyleToDomStyle(a)]}:function(a){return d.getPropertyValue(a)}}(),c=b.getDocumentPosition(),j={},i={},h={},k={},g=s.length;g--;)j[s[g]]=parseInt(f("border-"+s[g]+"-width"),10)||0,h[s[g]]=parseInt(f("padding-"+s[g]),10)||0,i[s[g]]=parseInt(f("margin-"+s[g]),10)||0;(!d||e)&&
G(a,e);k.top=c.y-(d?0:a.view.scroll.y);k.left=c.x-(d?0:a.view.scroll.x);k.outerWidth=b.$.offsetWidth;k.outerHeight=b.$.offsetHeight;k.height=k.outerHeight-(h.top+h.bottom+j.top+j.bottom);k.width=k.outerWidth-(h.left+h.right+j.left+j.right);k.bottom=k.top+k.outerHeight;k.right=k.left+k.outerWidth;a.inInlineMode&&(k.scroll={top:b.$.scrollTop,left:b.$.scrollLeft});return p({border:j,padding:h,margin:i,ignoreScroll:d},k,!0)}function m(a,b,d){if(!l(b))return b.size=null;if(b.size){if(b.size.ignoreScroll==
d&&b.size.date>new Date-Y)return null}else b.size={};return p(b.size,M(a,b,d),{date:+new Date},!0)}function B(a,b){a.view.editable=M(a,a.editable,b,!0)}function G(a,b){a.view||(a.view={});var d=a.view;if(b||!(d&&d.date>new Date-Y)){var e=a.win,d=e.getScrollPosition(),e=e.getViewPaneSize();p(a.view,{scroll:{x:d.x,y:d.y,width:a.doc.$.documentElement.scrollWidth-e.width,height:a.doc.$.documentElement.scrollHeight-e.height},pane:{width:e.width,height:e.height,bottom:e.height+d.y},date:+new Date},!0)}}
function ga(a,b,d,e){for(var f=e,c=e,j=0,i=!1,h=!1,k=a.view.pane.height,g=a.mouse;g.y+j<k&&0<g.y-j;){i||(i=b(f,e));h||(h=b(c,e));!i&&0<g.y-j&&(f=d(a,{x:g.x,y:g.y-j}));!h&&g.y+j<k&&(c=d(a,{x:g.x,y:g.y+j}));if(i&&h)break;j+=2}return new t([f,c,null,null])}CKEDITOR.plugins.add("magicline",{init:function(a){var b={};b[CKEDITOR.ENTER_BR]="br";b[CKEDITOR.ENTER_P]="p";b[CKEDITOR.ENTER_DIV]="div";var d=a.config,e=d.magicline_triggerOffset||30,f=d.enterMode,c={editor:a,enterBehavior:b[f],enterMode:f,triggerOffset:e,
holdDistance:0|e*(d.magicline_holdDistance||0.5),boxColor:d.magicline_color||"#ff0000",rtl:"rtl"==d.contentsLangDirection,triggers:d.magicline_everywhere?S:{table:1,hr:1,div:1,ul:1,ol:1,dl:1,form:1,blockquote:1}},j,i,h;c.isRelevant=function(a){return l(a)&&!u(c,a)&&!o(a)};a.on("contentDom",function(){var b=a.editable(),e=a.document,f=a.window;p(c,{editable:b,inInlineMode:b.isInline(),doc:e,win:f},!0);c.boundary=c.inInlineMode?c.editable:c.doc.getDocumentElement();b.is(v.$inline)||(c.inInlineMode&&
!T(b)&&b.setStyles({position:"relative",top:null,left:null}),ca.call(this,c),G(c),b.attachListener(a,"beforeUndoImage",function(){c.line.detach()}),b.attachListener(a,"beforeGetData",function(){c.line.wrap.getParent()&&(c.line.detach(),a.once("getData",function(){c.line.attach()},null,null,1E3))},null,null,0),b.attachListener(c.inInlineMode?e:e.getWindow().getFrame(),"mouseout",function(b){if("wysiwyg"==a.mode)if(c.inInlineMode){var d=b.data.$.clientX,b=b.data.$.clientY;G(c);B(c,!0);var e=c.view.editable,
f=c.view.scroll;if(!(d>e.left-f.x&&d<e.right-f.x)||!(b>e.top-f.y&&b<e.bottom-f.y))clearTimeout(h),h=null,c.line.detach()}else clearTimeout(h),h=null,c.line.detach()}),b.attachListener(b,"keyup",function(){c.hiddenMode=0}),b.attachListener(b,"keydown",function(b){if("wysiwyg"==a.mode)switch(b=b.data.getKeystroke(),a.getSelection().getStartElement(),b){case 2228240:case 16:c.hiddenMode=1,c.line.detach()}}),b.attachListener(c.inInlineMode?b:e,"mousemove",function(b){i=!0;if(!("wysiwyg"!=a.mode||a.readOnly||
h)){var d={x:b.data.$.clientX,y:b.data.$.clientY};h=setTimeout(function(){c.mouse=d;h=c.trigger=null;G(c);if(i&&!c.hiddenMode&&a.focusManager.hasFocus&&!c.line.mouseNear()&&(c.element=Z(c,!0)))(c.trigger=U(c)||W(c)||$(c))?c.line.attach().place():(c.trigger=null,c.line.detach()),i=!1},30)}}),b.attachListener(f,"scroll",function(){"wysiwyg"==a.mode&&(c.line.detach(),n.webkit&&(c.hiddenMode=1,clearTimeout(j),j=setTimeout(function(){c.hiddenMode=0},50)))}),b.attachListener(f,"mousedown",function(){"wysiwyg"==
a.mode&&(c.line.detach(),c.hiddenMode=1)}),b.attachListener(f,"mouseup",function(){c.hiddenMode=0}),a.addCommand("accessPreviousSpace",R(c)),a.addCommand("accessNextSpace",R(c,!0)),a.setKeystroke([[d.magicline_keystrokePrevious,"accessPreviousSpace"],[d.magicline_keystrokeNext,"accessNextSpace"]]),a.on("loadSnapshot",function(){for(var b=a.document.getElementsByTag(c.enterBehavior),d,e=b.count();e--;)if((d=b.getItem(e)).hasAttribute("data-cke-magicline-hot")){c.hotNode=d;c.lastCmdDirection="true"===
d.getAttribute("data-cke-magicline-dir")?!0:!1;break}}),this.backdoor={accessFocusSpace:K,boxTrigger:t,isLine:u,getAscendantTrigger:H,getNonEmptyNeighbour:q,getSize:M,that:c,triggerEdge:W,triggerEditable:U,triggerExpand:$})},this)}});var p=CKEDITOR.tools.extend,J=CKEDITOR.dom.element,A=J.createFromHtml,n=CKEDITOR.env,v=CKEDITOR.dtd,C=128,V=64,L=32,F=16,aa=8,w=4,x=2,r=1,D=" ",X=v.$listItem,fa=v.$tableContent,da=p({},v.$nonEditable,v.$empty),S=v.$block,Y=100,I="width:0px;height:0px;padding:0px;margin:0px;display:block;z-index:9999;color:#fff;position:absolute;font-size: 0px;line-height:0px;",
P=I+"border-color:transparent;display:block;border-style:solid;",O="<span>"+D+"</span>";t.prototype={set:function(a,b,d){this.properties=a+b+(d||r);return this},is:function(a){return(this.properties&a)==a}};var Z=function(){return function(a,b,d){if(!a.mouse)return null;var e=a.doc,f=a.line.wrap,d=d||a.mouse,c=new CKEDITOR.dom.element(e.$.elementFromPoint(d.x,d.y));b&&u(a,c)&&(f.hide(),c=new CKEDITOR.dom.element(e.$.elementFromPoint(d.x,d.y)),f.show());return!c||!(c.type==CKEDITOR.NODE_ELEMENT&&c.$)||
n.ie&&9>n.version&&!a.boundary.equals(c)&&!a.boundary.contains(c)?null:c}}(),y=CKEDITOR.dom.walker.whitespaces(),z=CKEDITOR.dom.walker.nodeType(CKEDITOR.NODE_COMMENT),$=function(){function a(a){var e=a.element,f,c,j;if(!l(e)||e.contains(a.editable))return null;j=ga(a,function(a,b){return!b.equals(a)},function(a,b){return Z(a,!0,b)},e);f=j.upper;c=j.lower;if(N(a,f,c))return j.set(L,aa);if(f&&e.contains(f))for(;!f.getParent().equals(e);)f=f.getParent();else f=e.getFirst(function(c){return b(a,c)});
if(c&&e.contains(c))for(;!c.getParent().equals(e);)c=c.getParent();else c=e.getLast(function(c){return b(a,c)});if(!f||!c)return null;m(a,f);m(a,c);if(!(a.mouse.y>f.size.top&&a.mouse.y<c.size.bottom))return null;for(var e=Number.MAX_VALUE,i,h,k,g;c&&!c.equals(f)&&(h=f.getNext(a.isRelevant));)i=Math.abs(ba(a,f,h)-a.mouse.y),i<e&&(e=i,k=f,g=h),f=h,m(a,f);if(!k||!g||!(a.mouse.y>k.size.top&&a.mouse.y<g.size.bottom))return null;j.upper=k;j.lower=g;return j.set(L,aa)}function b(a,b){return!(b&&b.type==
CKEDITOR.NODE_TEXT||z(b)||o(b)||u(a,b)||b.type==CKEDITOR.NODE_ELEMENT&&b.$&&b.is("br"))}return function(b){var e=a(b),f;if(f=e){f=e.upper;var c=e.lower;f=!f||!c||o(c)||o(f)||c.equals(f)||f.equals(c)||c.contains(f)||f.contains(c)?!1:E(b,f)&&E(b,c)&&N(b,f,c)?!0:!1}return f?e:null}}(),s=["top","left","right","bottom"]})();CKEDITOR.config.magicline_keystrokePrevious=CKEDITOR.CTRL+CKEDITOR.SHIFT+219;CKEDITOR.config.magicline_keystrokeNext=CKEDITOR.CTRL+CKEDITOR.SHIFT+221;(function(){function l(a){if(!a||a.type!=CKEDITOR.NODE_ELEMENT||"form"!=a.getName())return[];for(var e=[],f=["style","className"],b=0;b<f.length;b++){var d=a.$.elements.namedItem(f[b]);d&&(d=new CKEDITOR.dom.element(d),e.push([d,d.nextSibling]),d.remove())}return e}function o(a,e){if(a&&!(a.type!=CKEDITOR.NODE_ELEMENT||"form"!=a.getName())&&0<e.length)for(var f=e.length-1;0<=f;f--){var b=e[f][0],d=e[f][1];d?b.insertBefore(d):b.appendTo(a)}}function n(a,e){var f=l(a),b={},d=a.$;e||(b["class"]=d.className||
"",d.className="");b.inline=d.style.cssText||"";e||(d.style.cssText="position: static; overflow: visible");o(f);return b}function p(a,e){var f=l(a),b=a.$;"class"in e&&(b.className=e["class"]);"inline"in e&&(b.style.cssText=e.inline);o(f)}function q(a){if(!a.editable().isInline()){var e=CKEDITOR.instances,f;for(f in e){var b=e[f];"wysiwyg"==b.mode&&!b.readOnly&&(b=b.document.getBody(),b.setAttribute("contentEditable",!1),b.setAttribute("contentEditable",!0))}a.editable().hasFocus&&(a.toolbox.focus(),
a.focus())}}CKEDITOR.plugins.add("maximize",{init:function(a){function e(){var b=d.getViewPaneSize();a.resize(b.width,b.height,null,!0)}if(a.elementMode!=CKEDITOR.ELEMENT_MODE_INLINE){var f=a.lang,b=CKEDITOR.document,d=b.getWindow(),j,k,m,l=CKEDITOR.TRISTATE_OFF;a.addCommand("maximize",{modes:{wysiwyg:!CKEDITOR.env.iOS,source:!CKEDITOR.env.iOS},readOnly:1,editorFocus:!1,exec:function(){var h=a.container.getChild(1),g=a.ui.space("contents");if("wysiwyg"==a.mode){var c=a.getSelection();j=c&&c.getRanges();
k=d.getScrollPosition()}else{var i=a.editable().$;j=!CKEDITOR.env.ie&&[i.selectionStart,i.selectionEnd];k=[i.scrollLeft,i.scrollTop]}if(this.state==CKEDITOR.TRISTATE_OFF){d.on("resize",e);m=d.getScrollPosition();for(c=a.container;c=c.getParent();)c.setCustomData("maximize_saved_styles",n(c)),c.setStyle("z-index",a.config.baseFloatZIndex-5);g.setCustomData("maximize_saved_styles",n(g,!0));h.setCustomData("maximize_saved_styles",n(h,!0));g={overflow:CKEDITOR.env.webkit?"":"hidden",width:0,height:0};
b.getDocumentElement().setStyles(g);!CKEDITOR.env.gecko&&b.getDocumentElement().setStyle("position","fixed");(!CKEDITOR.env.gecko||!CKEDITOR.env.quirks)&&b.getBody().setStyles(g);CKEDITOR.env.ie?setTimeout(function(){d.$.scrollTo(0,0)},0):d.$.scrollTo(0,0);h.setStyle("position",CKEDITOR.env.gecko&&CKEDITOR.env.quirks?"fixed":"absolute");h.$.offsetLeft;h.setStyles({"z-index":a.config.baseFloatZIndex-5,left:"0px",top:"0px"});h.addClass("cke_maximized");e();g=h.getDocumentPosition();h.setStyles({left:-1*
g.x+"px",top:-1*g.y+"px"});CKEDITOR.env.gecko&&q(a)}else if(this.state==CKEDITOR.TRISTATE_ON){d.removeListener("resize",e);g=[g,h];for(c=0;c<g.length;c++)p(g[c],g[c].getCustomData("maximize_saved_styles")),g[c].removeCustomData("maximize_saved_styles");for(c=a.container;c=c.getParent();)p(c,c.getCustomData("maximize_saved_styles")),c.removeCustomData("maximize_saved_styles");CKEDITOR.env.ie?setTimeout(function(){d.$.scrollTo(m.x,m.y)},0):d.$.scrollTo(m.x,m.y);h.removeClass("cke_maximized");CKEDITOR.env.webkit&&
(h.setStyle("display","inline"),setTimeout(function(){h.setStyle("display","block")},0));a.fire("resize")}this.toggleState();if(c=this.uiItems[0])g=this.state==CKEDITOR.TRISTATE_OFF?f.maximize.maximize:f.maximize.minimize,c=CKEDITOR.document.getById(c._.id),c.getChild(1).setHtml(g),c.setAttribute("title",g),c.setAttribute("href",'javascript:void("'+g+'");');"wysiwyg"==a.mode?j?(CKEDITOR.env.gecko&&q(a),a.getSelection().selectRanges(j),(i=a.getSelection().getStartElement())&&i.scrollIntoView(!0)):
d.$.scrollTo(k.x,k.y):(j&&(i.selectionStart=j[0],i.selectionEnd=j[1]),i.scrollLeft=k[0],i.scrollTop=k[1]);j=k=null;l=this.state;a.fire("maximize",this.state)},canUndo:!1});a.ui.addButton&&a.ui.addButton("Maximize",{label:f.maximize.maximize,command:"maximize",toolbar:"tools,10"});a.on("mode",function(){var b=a.getCommand("maximize");b.setState(b.state==CKEDITOR.TRISTATE_DISABLED?CKEDITOR.TRISTATE_DISABLED:l)},null,null,100)}}})})();CKEDITOR.plugins.add("newpage",{init:function(a){a.addCommand("newpage",{modes:{wysiwyg:1,source:1},exec:function(b){var a=this;b.setData(b.config.newpage_html||"",function(){b.focus();setTimeout(function(){b.fire("afterCommandExec",{name:"newpage",command:a});b.selectionChange()},200)})},async:!0});a.ui.addButton&&a.ui.addButton("NewPage",{label:a.lang.newpage.toolbar,command:"newpage",toolbar:"document,20"})}});CKEDITOR.plugins.add("pagebreak",{requires:"fakeobjects",onLoad:function(){var a=["{","background: url("+CKEDITOR.getUrl(this.path+"images/pagebreak.gif")+") no-repeat center center;","clear: both;width:100%; _width:99.9%;border-top: #999999 1px dotted;border-bottom: #999999 1px dotted;padding:0;height: 5px;cursor: default;}"].join("").replace(/;/g," !important;");CKEDITOR.addCss("div.cke_pagebreak"+a)},init:function(a){a.blockless||(a.addCommand("pagebreak",CKEDITOR.plugins.pagebreakCmd),a.ui.addButton&&
a.ui.addButton("PageBreak",{label:a.lang.pagebreak.toolbar,command:"pagebreak",toolbar:"insert,70"}),CKEDITOR.env.opera&&a.on("contentDom",function(){a.document.on("click",function(b){b=b.data.getTarget();b.is("div")&&b.hasClass("cke_pagebreak")&&a.getSelection().selectElement(b)})}))},afterInit:function(a){var b=a.lang.pagebreak.alt,c=a.dataProcessor,a=c&&c.dataFilter;(c=c&&c.htmlFilter)&&c.addRules({attributes:{"class":function(a,b){var c=a.replace("cke_pagebreak","");if(c!=a){var d=CKEDITOR.htmlParser.fragment.fromHtml('<span style="display: none;">&nbsp;</span>').children[0];
b.children.length=0;b.add(d);d=b.attributes;delete d["aria-label"];delete d.contenteditable;delete d.title}return c}}},5);a&&a.addRules({elements:{div:function(a){var c=a.attributes,e=c&&c.style,d=e&&1==a.children.length&&a.children[0];if((d=d&&"span"==d.name&&d.attributes.style)&&/page-break-after\s*:\s*always/i.test(e)&&/display\s*:\s*none/i.test(d))c.contenteditable="false",c["class"]="cke_pagebreak",c["data-cke-display-name"]="pagebreak",c["aria-label"]=b,c.title=b,a.children.length=0}}})}});
CKEDITOR.plugins.pagebreakCmd={exec:function(a){var b=a.lang.pagebreak.alt,b=CKEDITOR.dom.element.createFromHtml('<div style="page-break-after: always;"contenteditable="false" title="'+b+'" aria-label="'+b+'" data-cke-display-name="pagebreak" class="cke_pagebreak"></div>',a.document);a.insertElement(b)},context:"div",allowedContent:{div:{styles:"!page-break-after"},span:{match:function(a){return(a=a.parent)&&"div"==a.name&&a.styles["page-break-after"]},styles:"display"}},requiredContent:"div{page-break-after}"};(function(){var c={canUndo:!1,async:!0,exec:function(a){a.getClipboardData({title:a.lang.pastetext.title},function(b){b&&a.fire("paste",{type:"text",dataValue:b.dataValue});a.fire("afterCommandExec",{name:"pastetext",command:c,returnValue:!!b})})}};CKEDITOR.plugins.add("pastetext",{requires:"clipboard",init:function(a){a.addCommand("pastetext",c);a.ui.addButton&&a.ui.addButton("PasteText",{label:a.lang.pastetext.button,command:"pastetext",toolbar:"clipboard,40"});if(a.config.forcePasteAsPlainText)a.on("beforePaste",
function(a){"html"!=a.data.type&&(a.data.type="text")});a.on("pasteState",function(b){a.getCommand("pastetext").setState(b.data)})}})})();(function(){function h(a,d,f){var b=CKEDITOR.cleanWord;b?f():(a=CKEDITOR.getUrl(a.config.pasteFromWordCleanupFile||d+"filter/default.js"),CKEDITOR.scriptLoader.load(a,f,null,!0));return!b}function i(a){a.data.type="html"}CKEDITOR.plugins.add("pastefromword",{requires:"clipboard",init:function(a){var d=0,f=this.path;a.addCommand("pastefromword",{canUndo:!1,async:!0,exec:function(a){var e=this;d=1;a.once("beforePaste",i);a.getClipboardData({title:a.lang.pastefromword.title},function(c){c&&a.fire("paste",
{type:"html",dataValue:c.dataValue});a.fire("afterCommandExec",{name:"pastefromword",command:e,returnValue:!!c})})}});a.ui.addButton&&a.ui.addButton("PasteFromWord",{label:a.lang.pastefromword.toolbar,command:"pastefromword",toolbar:"clipboard,50"});a.on("pasteState",function(b){a.getCommand("pastefromword").setState(b.data)});a.on("paste",function(b){var e=b.data,c=e.dataValue;if(c&&(d||/(class=\"?Mso|style=\"[^\"]*\bmso\-|w:WordDocument)/.test(c))){var g=h(a,f,function(){if(g)a.fire("paste",e);
else if(!a.config.pasteFromWordPromptCleanup||d||confirm(a.lang.pastefromword.confirmCleanup))e.dataValue=CKEDITOR.cleanWord(c,a)});g&&b.cancel()}},null,null,3)}})})();(function(){var h,j={modes:{wysiwyg:1,source:1},canUndo:!1,readOnly:1,exec:function(a){var g,b=a.config,e=b.baseHref?'<base href="'+b.baseHref+'"/>':"",i=CKEDITOR.env.isCustomDomain();if(b.fullPage)g=a.getData().replace(/<head>/,"$&"+e).replace(/[^>]*(?=<\/title>)/,"$& &mdash; "+a.lang.preview.preview);else{var b="<body ",d=a.document&&a.document.getBody();d&&(d.getAttribute("id")&&(b+='id="'+d.getAttribute("id")+'" '),d.getAttribute("class")&&(b+='class="'+d.getAttribute("class")+'" '));g=a.config.docType+
'<html dir="'+a.config.contentsLangDirection+'"><head>'+e+"<title>"+a.lang.preview.preview+"</title>"+CKEDITOR.tools.buildStyleHtml(a.config.contentsCss)+"</head>"+(b+">")+a.getData()+"</body></html>"}e=640;b=420;d=80;try{var c=window.screen,e=Math.round(0.8*c.width),b=Math.round(0.7*c.height),d=Math.round(0.1*c.width)}catch(j){}if(!a.fire("contentPreview",a={dataValue:g}))return!1;c="";i&&(window._cke_htmlToLoad=a.dataValue,c='javascript:void( (function(){document.open();document.domain="'+document.domain+
'";document.write( window.opener._cke_htmlToLoad );document.close();window.opener._cke_htmlToLoad = null;})() )');CKEDITOR.env.gecko&&(window._cke_htmlToLoad=a.dataValue,c=h+"preview.html");c=window.open(c,null,"toolbar=yes,location=no,status=yes,menubar=yes,scrollbars=yes,resizable=yes,width="+e+",height="+b+",left="+d);if(!i&&!CKEDITOR.env.gecko){var f=c.document;f.open();f.write(a.dataValue);f.close();CKEDITOR.env.webkit&&setTimeout(function(){f.body.innerHTML=f.body.innerHTML+""},0)}return!0}};
CKEDITOR.plugins.add("preview",{init:function(a){a.elementMode!=CKEDITOR.ELEMENT_MODE_INLINE&&(h=this.path,a.addCommand("preview",j),a.ui.addButton&&a.ui.addButton("Preview",{label:a.lang.preview.preview,command:"preview",toolbar:"document,40"}))}})})();CKEDITOR.plugins.add("print",{init:function(a){a.elementMode!=CKEDITOR.ELEMENT_MODE_INLINE&&(a.addCommand("print",CKEDITOR.plugins.print),a.ui.addButton&&a.ui.addButton("Print",{label:a.lang.print.toolbar,command:"print",toolbar:"document,50"}))}});CKEDITOR.plugins.print={exec:function(a){CKEDITOR.env.opera||(CKEDITOR.env.gecko?a.window.$.print():a.document.$.execCommand("Print"))},canUndo:!1,readOnly:1,modes:{wysiwyg:!CKEDITOR.env.opera}};CKEDITOR.plugins.add("removeformat",{init:function(a){a.addCommand("removeFormat",CKEDITOR.plugins.removeformat.commands.removeformat);a.ui.addButton&&a.ui.addButton("RemoveFormat",{label:a.lang.removeformat.toolbar,command:"removeFormat",toolbar:"cleanup,10"})}});
CKEDITOR.plugins.removeformat={commands:{removeformat:{exec:function(a){for(var h=a._.removeFormatRegex||(a._.removeFormatRegex=RegExp("^(?:"+a.config.removeFormatTags.replace(/,/g,"|")+")$","i")),e=a._.removeAttributes||(a._.removeAttributes=a.config.removeFormatAttributes.split(",")),f=CKEDITOR.plugins.removeformat.filter,k=a.getSelection().getRanges(1),l=k.createIterator(),c;c=l.getNextRange();){c.collapsed||c.enlarge(CKEDITOR.ENLARGE_ELEMENT);var i=c.createBookmark(),b=i.startNode,j=i.endNode,
d=function(b){for(var c=a.elementPath(b),e=c.elements,d=1,g;(g=e[d])&&!g.equals(c.block)&&!g.equals(c.blockLimit);d++)h.test(g.getName())&&f(a,g)&&b.breakParent(g)};d(b);if(j){d(j);for(b=b.getNextSourceNode(!0,CKEDITOR.NODE_ELEMENT);b&&!b.equals(j);)d=b.getNextSourceNode(!1,CKEDITOR.NODE_ELEMENT),!("img"==b.getName()&&b.data("cke-realelement"))&&f(a,b)&&(h.test(b.getName())?b.remove(1):(b.removeAttributes(e),a.fire("removeFormatCleanup",b))),b=d}c.moveToBookmark(i)}a.forceNextSelectionCheck();a.getSelection().selectRanges(k)}}},
filter:function(a,h){for(var e=a._.removeFormatFilters||[],f=0;f<e.length;f++)if(!1===e[f](h))return!1;return!0}};CKEDITOR.editor.prototype.addRemoveFormatFilter=function(a){this._.removeFormatFilters||(this._.removeFormatFilters=[]);this._.removeFormatFilters.push(a)};CKEDITOR.config.removeFormatTags="b,big,code,del,dfn,em,font,i,ins,kbd,q,s,samp,small,span,strike,strong,sub,sup,tt,u,var";CKEDITOR.config.removeFormatAttributes="class,style,lang,width,height,align,hspace,valign";(function(){var b={modes:{wysiwyg:1,source:1},readOnly:1,exec:function(a){if(a=a.element.$.form)try{a.submit()}catch(b){a.submit.click&&a.submit.click()}}};CKEDITOR.plugins.add("save",{init:function(a){a.elementMode==CKEDITOR.ELEMENT_MODE_REPLACE&&(a.addCommand("save",b).modes={wysiwyg:!!a.element.$.form},a.ui.addButton&&a.ui.addButton("Save",{label:a.lang.save.toolbar,command:"save",toolbar:"document,10"}))}})})();(function(){CKEDITOR.plugins.add("selectall",{init:function(b){b.addCommand("selectAll",{modes:{wysiwyg:1,source:1},exec:function(a){var b=a.editable();if(b.is("textarea"))a=b.$,CKEDITOR.env.ie?a.createTextRange().execCommand("SelectAll"):(a.selectionStart=0,a.selectionEnd=a.value.length),a.focus();else{if(b.is("body"))a.document.$.execCommand("SelectAll",!1,null);else{var c=a.createRange();c.selectNodeContents(b);c.select()}a.forceNextSelectionCheck();a.selectionChange()}},canUndo:!1});b.ui.addButton&&
b.ui.addButton("SelectAll",{label:b.lang.selectall.toolbar,command:"selectAll",toolbar:"selection,10"})}})})();(function(){var d={readOnly:1,preserveState:!0,editorFocus:!1,exec:function(a){this.toggleState();this.refresh(a)},refresh:function(a){if(a.document){var b=this.state==CKEDITOR.TRISTATE_ON&&(a.elementMode!=CKEDITOR.ELEMENT_MODE_INLINE||a.focusManager.hasFocus)?"attachClass":"removeClass";a.editable()[b]("cke_show_blocks")}}};CKEDITOR.plugins.add("showblocks",{onLoad:function(){function a(a){return".%1.%2 p,.%1.%2 div,.%1.%2 pre,.%1.%2 address,.%1.%2 blockquote,.%1.%2 h1,.%1.%2 h2,.%1.%2 h3,.%1.%2 h4,.%1.%2 h5,.%1.%2 h6{background-position: top %3;padding-%3: 8px;}".replace(/%1/g,
"cke_show_blocks").replace(/%2/g,"cke_contents_"+a).replace(/%3/g,"rtl"==a?"right":"left")}CKEDITOR.addCss(".%2 p,.%2 div,.%2 pre,.%2 address,.%2 blockquote,.%2 h1,.%2 h2,.%2 h3,.%2 h4,.%2 h5,.%2 h6{background-repeat: no-repeat;border: 1px dotted gray;padding-top: 8px;}.%2 p{%1p.png);}.%2 div{%1div.png);}.%2 pre{%1pre.png);}.%2 address{%1address.png);}.%2 blockquote{%1blockquote.png);}.%2 h1{%1h1.png);}.%2 h2{%1h2.png);}.%2 h3{%1h3.png);}.%2 h4{%1h4.png);}.%2 h5{%1h5.png);}.%2 h6{%1h6.png);}".replace(/%1/g,
"background-image: url("+CKEDITOR.getUrl(this.path)+"images/block_").replace(/%2/g,"cke_show_blocks ")+a("ltr")+a("rtl"))},init:function(a){if(!a.blockless){var b=a.addCommand("showblocks",d);b.canUndo=!1;a.config.startupOutlineBlocks&&b.setState(CKEDITOR.TRISTATE_ON);a.ui.addButton&&a.ui.addButton("ShowBlocks",{label:a.lang.showblocks.toolbar,command:"showblocks",toolbar:"tools,20"});a.on("mode",function(){b.state!=CKEDITOR.TRISTATE_DISABLED&&b.refresh(a)});if(a.elementMode==CKEDITOR.ELEMENT_MODE_INLINE){var c=
function(){b.refresh(a)};a.on("focus",c);a.on("blur",c)}a.on("contentDom",function(){b.state!=CKEDITOR.TRISTATE_DISABLED&&b.refresh(a)})}}})})();(function(){var f={preserveState:!0,editorFocus:!1,readOnly:1,exec:function(a){this.toggleState();this.refresh(a)},refresh:function(a){if(a.document){var b=this.state==CKEDITOR.TRISTATE_ON?"attachClass":"removeClass";a.editable()[b]("cke_show_borders")}}};CKEDITOR.plugins.add("showborders",{modes:{wysiwyg:1},onLoad:function(){var a;a=(CKEDITOR.env.ie6Compat?[".%1 table.%2,",".%1 table.%2 td, .%1 table.%2 th","{","border : #d3d3d3 1px dotted","}"]:".%1 table.%2,;.%1 table.%2 > tr > td, .%1 table.%2 > tr > th,;.%1 table.%2 > tbody > tr > td, .%1 table.%2 > tbody > tr > th,;.%1 table.%2 > thead > tr > td, .%1 table.%2 > thead > tr > th,;.%1 table.%2 > tfoot > tr > td, .%1 table.%2 > tfoot > tr > th;{;border : #d3d3d3 1px dotted;}".split(";")).join("").replace(/%2/g,
"cke_show_border").replace(/%1/g,"cke_show_borders ");CKEDITOR.addCss(a)},init:function(a){var b=a.addCommand("showborders",f);b.canUndo=!1;!1!==a.config.startupShowBorders&&b.setState(CKEDITOR.TRISTATE_ON);a.on("mode",function(){b.state!=CKEDITOR.TRISTATE_DISABLED&&b.refresh(a)},null,null,100);a.on("contentDom",function(){b.state!=CKEDITOR.TRISTATE_DISABLED&&b.refresh(a)});a.on("removeFormatCleanup",function(d){d=d.data;a.getCommand("showborders").state==CKEDITOR.TRISTATE_ON&&(d.is("table")&&(!d.hasAttribute("border")||
0>=parseInt(d.getAttribute("border"),10)))&&d.addClass("cke_show_border")})},afterInit:function(a){var b=a.dataProcessor,a=b&&b.dataFilter,b=b&&b.htmlFilter;a&&a.addRules({elements:{table:function(a){var a=a.attributes,b=a["class"],c=parseInt(a.border,10);if((!c||0>=c)&&(!b||-1==b.indexOf("cke_show_border")))a["class"]=(b||"")+" cke_show_border"}}});b&&b.addRules({elements:{table:function(a){var a=a.attributes,b=a["class"];b&&(a["class"]=b.replace("cke_show_border","").replace(/\s{2}/," ").replace(/^\s+|\s+$/,
""))}}})}});CKEDITOR.on("dialogDefinition",function(a){var b=a.data.name;if("table"==b||"tableProperties"==b)if(a=a.data.definition,b=a.getContents("info").get("txtBorder"),b.commit=CKEDITOR.tools.override(b.commit,function(a){return function(b,c){a.apply(this,arguments);var e=parseInt(this.getValue(),10);c[!e||0>=e?"addClass":"removeClass"]("cke_show_border")}}),a=(a=a.getContents("advanced"))&&a.get("advCSSClasses"))a.setup=CKEDITOR.tools.override(a.setup,function(a){return function(){a.apply(this,
arguments);this.setValue(this.getValue().replace(/cke_show_border/,""))}}),a.commit=CKEDITOR.tools.override(a.commit,function(a){return function(b,c){a.apply(this,arguments);parseInt(c.getAttribute("border"),10)||c.addClass("cke_show_border")}})})})();(function(){CKEDITOR.plugins.add("sourcearea",{init:function(a){function d(){this.hide();this.setStyle("height",this.getParent().$.clientHeight+"px");this.setStyle("width",this.getParent().$.clientWidth+"px");this.show()}if(a.elementMode!=CKEDITOR.ELEMENT_MODE_INLINE){var e=CKEDITOR.plugins.sourcearea;a.addMode("source",function(e){var b=a.ui.space("contents").getDocument().createElement("textarea");b.setStyles(CKEDITOR.tools.extend({width:CKEDITOR.env.ie7Compat?"99%":"100%",height:"100%",resize:"none",
outline:"none","text-align":"left"},CKEDITOR.tools.cssVendorPrefix("tab-size",a.config.sourceAreaTabSize||4)));b.setAttribute("dir","ltr");b.addClass("cke_source cke_reset cke_enable_context_menu");a.ui.space("contents").append(b);b=a.editable(new c(a,b));b.setData(a.getData(1));CKEDITOR.env.ie&&(b.attachListener(a,"resize",d,b),b.attachListener(CKEDITOR.document.getWindow(),"resize",d,b),CKEDITOR.tools.setTimeout(d,0,b));a.fire("ariaWidget",this);e()});a.addCommand("source",e.commands.source);a.ui.addButton&&
a.ui.addButton("Source",{label:a.lang.sourcearea.toolbar,command:"source",toolbar:"mode,10"});a.on("mode",function(){a.getCommand("source").setState("source"==a.mode?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF)})}}});var c=CKEDITOR.tools.createClass({base:CKEDITOR.editable,proto:{setData:function(a){this.setValue(a);this.editor.fire("dataReady")},getData:function(){return this.getValue()},insertHtml:function(){},insertElement:function(){},insertText:function(){},setReadOnly:function(a){this[(a?"set":
"remove")+"Attribute"]("readOnly","readonly")},detach:function(){c.baseProto.detach.call(this);this.clearCustomData();this.remove()}}})})();CKEDITOR.plugins.sourcearea={commands:{source:{modes:{wysiwyg:1,source:1},editorFocus:!1,readOnly:1,exec:function(c){"wysiwyg"==c.mode&&c.fire("saveSnapshot");c.getCommand("source").setState(CKEDITOR.TRISTATE_DISABLED);c.setMode("source"==c.mode?"wysiwyg":"source")},canUndo:!1}}};CKEDITOR.plugins.add("specialchar",{availableLangs:{ca:1,cs:1,cy:1,de:1,en:1,eo:1,es:1,et:1,fa:1,fi:1,fr:1,"fr-ca":1,he:1,hr:1,it:1,ku:1,lv:1,nb:1,nl:1,no:1,pl:1,"pt-br":1,sk:1,sq:1,sv:1,th:1,tr:1,ug:1,"zh-cn":1},requires:"dialog",init:function(a){var c=this;CKEDITOR.dialog.add("specialchar",this.path+"dialogs/specialchar.js");a.addCommand("specialchar",{exec:function(){var b=a.langCode,b=c.availableLangs[b]?b:c.availableLangs[b.replace(/-.*/,"")]?b.replace(/-.*/,""):"en";CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(c.path+
"dialogs/lang/"+b+".js"),function(){CKEDITOR.tools.extend(a.lang.specialchar,c.langEntries[b]);a.openDialog("specialchar")})},modes:{wysiwyg:1},canUndo:!1});a.ui.addButton&&a.ui.addButton("SpecialChar",{label:a.lang.specialchar.toolbar,command:"specialchar",toolbar:"insert,50"})}});CKEDITOR.config.specialChars="! &quot; # $ % &amp; ' ( ) * + - . / 0 1 2 3 4 5 6 7 8 9 : ; &lt; = &gt; ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ &euro; &lsquo; &rsquo; &ldquo; &rdquo; &ndash; &mdash; &iexcl; &cent; &pound; &curren; &yen; &brvbar; &sect; &uml; &copy; &ordf; &laquo; &not; &reg; &macr; &deg; &sup2; &sup3; &acute; &micro; &para; &middot; &cedil; &sup1; &ordm; &raquo; &frac14; &frac12; &frac34; &iquest; &Agrave; &Aacute; &Acirc; &Atilde; &Auml; &Aring; &AElig; &Ccedil; &Egrave; &Eacute; &Ecirc; &Euml; &Igrave; &Iacute; &Icirc; &Iuml; &ETH; &Ntilde; &Ograve; &Oacute; &Ocirc; &Otilde; &Ouml; &times; &Oslash; &Ugrave; &Uacute; &Ucirc; &Uuml; &Yacute; &THORN; &szlig; &agrave; &aacute; &acirc; &atilde; &auml; &aring; &aelig; &ccedil; &egrave; &eacute; &ecirc; &euml; &igrave; &iacute; &icirc; &iuml; &eth; &ntilde; &ograve; &oacute; &ocirc; &otilde; &ouml; &divide; &oslash; &ugrave; &uacute; &ucirc; &uuml; &yacute; &thorn; &yuml; &OElig; &oelig; &#372; &#374 &#373 &#375; &sbquo; &#8219; &bdquo; &hellip; &trade; &#9658; &bull; &rarr; &rArr; &hArr; &diams; &asymp;".split(" ");CKEDITOR.plugins.add("menubutton",{requires:"button,menu",onLoad:function(){var d=function(a){var b=this._;if(b.state!==CKEDITOR.TRISTATE_DISABLED){b.previousState=b.state;var c=b.menu;c||(c=b.menu=new CKEDITOR.menu(a,{panel:{className:"cke_menu_panel",attributes:{"aria-label":a.lang.common.options}}}),c.onHide=CKEDITOR.tools.bind(function(){this.setState(this.modes&&this.modes[a.mode]?b.previousState:CKEDITOR.TRISTATE_DISABLED)},this),this.onMenu&&c.addListener(this.onMenu));b.on?c.hide():(this.setState(CKEDITOR.TRISTATE_ON),
setTimeout(function(){c.show(CKEDITOR.document.getById(b.id),4)},0))}};CKEDITOR.ui.menuButton=CKEDITOR.tools.createClass({base:CKEDITOR.ui.button,$:function(a){delete a.panel;this.base(a);this.hasArrow=!0;this.click=d},statics:{handler:{create:function(a){return new CKEDITOR.ui.menuButton(a)}}}})},beforeInit:function(d){d.ui.addHandler(CKEDITOR.UI_MENUBUTTON,CKEDITOR.ui.menuButton.handler)}});CKEDITOR.UI_MENUBUTTON="menubutton";(function(){function k(a,c){var b=0,d;for(d in c)if(c[d]==a){b=1;break}return b}var i="",r=function(){function a(){b.once("focus",f);b.once("blur",c)}function c(b){var b=b.editor,c=d.getScayt(b),f=b.elementMode==CKEDITOR.ELEMENT_MODE_INLINE;c&&(d.setPaused(b,!c.disabled),d.setControlId(b,c.id),c.destroy(!0),delete d.instances[b.name],f&&a())}var b=this,f=function(){if(!("undefined"!=typeof d.instances[b.name]||null!=d.instances[b.name])){var a=b.config,c={};c.srcNodeRef="BODY"==b.editable().$.nodeName?
b.document.getWindow().$.frameElement:b.editable().$;c.assocApp="CKEDITOR."+CKEDITOR.version+"@"+CKEDITOR.revision;c.customerid=a.scayt_customerid||"1:WvF0D4-UtPqN1-43nkD4-NKvUm2-daQqk3-LmNiI-z7Ysb4-mwry24-T8YrS3-Q2tpq2";c.customDictionaryIds=a.scayt_customDictionaryIds||"";c.userDictionaryName=a.scayt_userDictionaryName||"";c.sLang=a.scayt_sLang||"en_US";c.onLoad=function(){CKEDITOR.env.ie&&8>CKEDITOR.env.version||this.addStyle(this.selectorCss(),"padding-bottom: 2px !important;");b.editable().hasFocus&&
!d.isControlRestored(b)&&this.focus()};c.onBeforeChange=function(){d.getScayt(b)&&!b.checkDirty()&&setTimeout(function(){b.resetDirty()},0)};a=window.scayt_custom_params;if("object"==typeof a)for(var f in a)c[f]=a[f];d.getControlId(b)&&(c.id=d.getControlId(b));var o=new window.scayt(c);o.afterMarkupRemove.push(function(a){(new CKEDITOR.dom.element(a,o.document)).mergeSiblings()});if(c=d.instances[b.name])o.sLang=c.sLang,o.option(c.option()),o.paused=c.paused;d.instances[b.name]=o;try{o.setDisabled(!1===
d.isPaused(b))}catch(e){}b.fire("showScaytState")}};b.elementMode==CKEDITOR.ELEMENT_MODE_INLINE?a():b.on("contentDom",f);b.on("contentDomUnload",function(){for(var a=CKEDITOR.document.getElementsByTag("script"),b=/^dojoIoScript(\d+)$/i,c=/^https?:\/\/svc\.webspellchecker\.net\/spellcheck\/script\/ssrv\.cgi/i,d=0;d<a.count();d++){var f=a.getItem(d),e=f.getId(),h=f.getAttribute("src");e&&(h&&e.match(b)&&h.match(c))&&f.remove()}});b.on("beforeCommandExec",function(a){"source"==a.data.name&&"source"==
b.mode&&d.markControlRestore(b)});b.on("afterCommandExec",function(a){d.isScaytEnabled(b)&&"wysiwyg"==b.mode&&("undo"==a.data.name||"redo"==a.data.name)&&window.setTimeout(function(){d.getScayt(b).refresh()},10)});b.on("destroy",c);b.on("setData",c);b.on("insertElement",function(){var a=d.getScayt(b);d.isScaytEnabled(b)&&(CKEDITOR.env.ie&&b.getSelection().unlock(!0),window.setTimeout(function(){a.focus();a.refresh()},10))},this,null,50);b.on("insertHtml",function(){var a=d.getScayt(b);d.isScaytEnabled(b)&&
(CKEDITOR.env.ie&&b.getSelection().unlock(!0),window.setTimeout(function(){a.focus();a.refresh()},10))},this,null,50);b.on("scaytDialog",function(a){a.data.djConfig=window.djConfig;a.data.scayt_control=d.getScayt(b);a.data.tab=i;a.data.scayt=window.scayt});var e=b.dataProcessor;(e=e&&e.htmlFilter)&&e.addRules({elements:{span:function(a){if(a.attributes["data-scayt_word"]&&a.attributes["data-scaytid"])return delete a.name,a}}});e=CKEDITOR.plugins.undo.Image.prototype;e.equals=CKEDITOR.tools.override(e.equals,
function(a){return function(b){var c=this.contents,f=b.contents,e=d.getScayt(this.editor);e&&d.isScaytReady(this.editor)&&(this.contents=e.reset(c)||"",b.contents=e.reset(f)||"");e=a.apply(this,arguments);this.contents=c;b.contents=f;return e}});b.document&&(b.elementMode!=CKEDITOR.ELEMENT_MODE_INLINE||b.focusManager.hasFocus)&&f()};CKEDITOR.plugins.scayt={engineLoaded:!1,instances:{},controlInfo:{},setControlInfo:function(a,c){a&&(a.name&&"object"!=typeof this.controlInfo[a.name])&&(this.controlInfo[a.name]=
{});for(var b in c)this.controlInfo[a.name][b]=c[b]},isControlRestored:function(a){return a&&a.name&&this.controlInfo[a.name]?this.controlInfo[a.name].restored:!1},markControlRestore:function(a){this.setControlInfo(a,{restored:!0})},setControlId:function(a,c){this.setControlInfo(a,{id:c})},getControlId:function(a){return a&&a.name&&this.controlInfo[a.name]&&this.controlInfo[a.name].id?this.controlInfo[a.name].id:null},setPaused:function(a,c){this.setControlInfo(a,{paused:c})},isPaused:function(a){if(a&&
a.name&&this.controlInfo[a.name])return this.controlInfo[a.name].paused},getScayt:function(a){return this.instances[a.name]},isScaytReady:function(a){return!0===this.engineLoaded&&"undefined"!==typeof window.scayt&&this.getScayt(a)},isScaytEnabled:function(a){return(a=this.getScayt(a))?!1===a.disabled:!1},getUiTabs:function(a){var c=[],b=a.config.scayt_uiTabs||"1,1,1",b=b.split(",");b[3]="1";for(var d=0;4>d;d++)c[d]="undefined"!=typeof window.scayt&&"undefined"!=typeof window.scayt.uiTags?parseInt(b[d],
10)&&window.scayt.uiTags[d]:parseInt(b[d],10);"object"==typeof a.plugins.wsc?c.push(1):c.push(0);return c},loadEngine:function(a){if(CKEDITOR.env.gecko&&10900>CKEDITOR.env.version||CKEDITOR.env.opera||CKEDITOR.env.air)return a.fire("showScaytState");if(!0===this.engineLoaded)return r.apply(a);if(-1==this.engineLoaded)return CKEDITOR.on("scaytReady",function(){r.apply(a)});CKEDITOR.on("scaytReady",r,a);CKEDITOR.on("scaytReady",function(){this.engineLoaded=!0},this,null,0);this.engineLoaded=-1;var c=
document.location.protocol,c=-1!=c.search(/https?:/)?c:"http:",c=a.config.scayt_srcUrl||c+"//svc.webspellchecker.net/scayt26/loader__base.js",b=d.parseUrl(c).path+"/";void 0==window.scayt?(CKEDITOR._djScaytConfig={baseUrl:b,addOnLoad:[function(){CKEDITOR.fireOnce("scaytReady")}],isDebug:!1},CKEDITOR.document.getHead().append(CKEDITOR.document.createElement("script",{attributes:{type:"text/javascript",async:"true",src:c}}))):CKEDITOR.fireOnce("scaytReady");return null},parseUrl:function(a){var c;return a.match&&
(c=a.match(/(.*)[\/\\](.*?\.\w+)$/))?{path:c[1],file:c[2]}:a}};var d=CKEDITOR.plugins.scayt,s=function(a,c,b,d,e,k,g){a.addCommand(d,e);a.addMenuItem(d,{label:b,command:d,group:k,order:g})},v={preserveState:!0,editorFocus:!1,canUndo:!1,exec:function(a){if(d.isScaytReady(a)){var c=d.isScaytEnabled(a);this.setState(c?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_ON);a=d.getScayt(a);a.focus();a.setDisabled(c)}else!a.config.scayt_autoStartup&&0<=d.engineLoaded&&(a.focus(),this.setState(CKEDITOR.TRISTATE_DISABLED),
d.loadEngine(a))}};CKEDITOR.plugins.add("scayt",{requires:"menubutton,dialog",beforeInit:function(a){var c=a.config.scayt_contextMenuItemsOrder||"suggest|moresuggest|control",b="";if((c=c.split("|"))&&c.length)for(var d=0;d<c.length;d++)b+="scayt_"+c[d]+(c.length!=parseInt(d,10)+1?",":"");a.config.menu_groups=b+","+a.config.menu_groups},checkEnvironment:function(){return CKEDITOR.env.opera||CKEDITOR.env.air?0:1},init:function(a){var c=a.dataProcessor&&a.dataProcessor.dataFilter,b={elements:{span:function(a){var b=
a.attributes;b&&b["data-scaytid"]&&delete a.name}}};c&&c.addRules(b);var f={},e={},p=a.addCommand("scaytcheck",v);CKEDITOR.dialog.add("scaytcheck",CKEDITOR.getUrl(this.path+"dialogs/options.js"));c=d.getUiTabs(a);a.addMenuGroup("scaytButton");a.addMenuGroup("scayt_suggest",-10);a.addMenuGroup("scayt_moresuggest",-9);a.addMenuGroup("scayt_control",-8);var b={},g=a.lang.scayt;b.scaytToggle={label:g.enable,command:"scaytcheck",group:"scaytButton"};1==c[0]&&(b.scaytOptions={label:g.options,group:"scaytButton",
onClick:function(){i="options";a.openDialog("scaytcheck")}});1==c[1]&&(b.scaytLangs={label:g.langs,group:"scaytButton",onClick:function(){i="langs";a.openDialog("scaytcheck")}});1==c[2]&&(b.scaytDict={label:g.dictionariesTab,group:"scaytButton",onClick:function(){i="dictionaries";a.openDialog("scaytcheck")}});b.scaytAbout={label:a.lang.scayt.about,group:"scaytButton",onClick:function(){i="about";a.openDialog("scaytcheck")}};1==c[4]&&(b.scaytWSC={label:a.lang.wsc.toolbar,group:"scaytButton",command:"checkspell"});
a.addMenuItems(b);a.ui.add("Scayt",CKEDITOR.UI_MENUBUTTON,{label:g.title,title:CKEDITOR.env.opera?g.opera_title:g.title,modes:{wysiwyg:this.checkEnvironment()},toolbar:"spellchecker,20",onRender:function(){p.on("state",function(){this.setState(p.state)},this)},onMenu:function(){var b=d.isScaytEnabled(a);a.getMenuItem("scaytToggle").label=g[b?"disable":"enable"];var c=d.getUiTabs(a);return{scaytToggle:CKEDITOR.TRISTATE_OFF,scaytOptions:b&&c[0]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,scaytLangs:b&&
c[1]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,scaytDict:b&&c[2]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,scaytAbout:b&&c[3]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,scaytWSC:c[4]?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED}}});a.contextMenu&&a.addMenuItems&&a.contextMenu.addListener(function(b,c){if(!d.isScaytEnabled(a)||c.getRanges()[0].checkReadOnly())return null;var l=d.getScayt(a),q=l.getScaytNode();if(!q)return null;var h=l.getWord(q);if(!h)return null;var i=l.getLang(),
m=a.config.scayt_contextCommands||"all",h=window.scayt.getSuggestion(h,i),m=m.split("|"),n;for(n in f){delete a._.menuItems[n];delete a.commands[n]}for(n in e){delete a._.menuItems[n];delete a.commands[n]}if(!h||!h.length){s(a,"no_sugg",g.noSuggestions,"scayt_no_sugg",{exec:function(){}},"scayt_control",1,true);e.scayt_no_sugg=CKEDITOR.TRISTATE_OFF}else{f={};e={};n=a.config.scayt_moreSuggestions||"on";var i=false,u=a.config.scayt_maxSuggestions;typeof u!="number"&&(u=5);!u&&(u=h.length);for(var j=
0,p=h.length;j<p;j=j+1){var t="scayt_suggestion_"+h[j].replace(" ","_"),r=function(a,b){return{exec:function(){l.replace(a,b)}}}(q,h[j]);if(j<u){s(a,"button_"+t,h[j],t,r,"scayt_suggest",j+1);e[t]=CKEDITOR.TRISTATE_OFF}else if(n=="on"){s(a,"button_"+t,h[j],t,r,"scayt_moresuggest",j+1);f[t]=CKEDITOR.TRISTATE_OFF;i=true}}if(i){a.addMenuItem("scayt_moresuggest",{label:g.moreSuggestions,group:"scayt_moresuggest",order:10,getItems:function(){return f}});e.scayt_moresuggest=CKEDITOR.TRISTATE_OFF}}if(k("all",
m)||k("ignore",m)){s(a,"ignore",g.ignore,"scayt_ignore",{exec:function(){l.ignore(q)}},"scayt_control",2);e.scayt_ignore=CKEDITOR.TRISTATE_OFF}if(k("all",m)||k("ignoreall",m)){s(a,"ignore_all",g.ignoreAll,"scayt_ignore_all",{exec:function(){l.ignoreAll(q)}},"scayt_control",3);e.scayt_ignore_all=CKEDITOR.TRISTATE_OFF}if(k("all",m)||k("add",m)){s(a,"add_word",g.addWord,"scayt_add_word",{exec:function(){window.scayt.addWordToUserDictionary(q)}},"scayt_control",4);e.scayt_add_word=CKEDITOR.TRISTATE_OFF}l.fireOnContextMenu&&
l.fireOnContextMenu(a);return e});c=function(b){b.removeListener();CKEDITOR.env.opera||CKEDITOR.env.air?p.setState(CKEDITOR.TRISTATE_DISABLED):p.setState(d.isScaytEnabled(a)?CKEDITOR.TRISTATE_ON:CKEDITOR.TRISTATE_OFF)};a.on("showScaytState",c);a.on("instanceReady",c);if(a.config.scayt_autoStartup)a.on("instanceReady",function(){d.loadEngine(a)})},afterInit:function(a){var c,b=function(a){if(a.hasAttribute("data-scaytid"))return!1};a._.elementsPath&&(c=a._.elementsPath.filters)&&c.push(b);a.addRemoveFormatFilter&&
a.addRemoveFormatFilter(b)}})})();(function(){CKEDITOR.plugins.add("stylescombo",{requires:"richcombo",init:function(c){var j=c.config,f=c.lang.stylescombo,g={},i=[],k=[];c.on("stylesSet",function(b){if(b=b.data.styles){for(var a,h,d=0,e=b.length;d<e;d++)if(a=b[d],!(c.blockless&&a.element in CKEDITOR.dtd.$block)&&(h=a.name,a=new CKEDITOR.style(a),!c.filter.customConfig||c.filter.check(a)))a._name=h,a._.enterMode=j.enterMode,a._.weight=d+1E3*(a.type==CKEDITOR.STYLE_OBJECT?1:a.type==CKEDITOR.STYLE_BLOCK?2:3),g[h]=a,i.push(a),k.push(a);
i.sort(function(a,b){return a._.weight-b._.weight})}});c.ui.addRichCombo("Styles",{label:f.label,title:f.panelTitle,toolbar:"styles,10",allowedContent:k,panel:{css:[CKEDITOR.skin.getPath("editor")].concat(j.contentsCss),multiSelect:!0,attributes:{"aria-label":f.panelTitle}},init:function(){var b,a,c,d,e,g;e=0;for(g=i.length;e<g;e++)b=i[e],a=b._name,d=b.type,d!=c&&(this.startGroup(f["panelTitle"+d]),c=d),this.add(a,b.type==CKEDITOR.STYLE_OBJECT?a:b.buildPreview(),a);this.commit()},onClick:function(b){c.focus();
c.fire("saveSnapshot");var b=g[b],a=c.elementPath();c[b.checkActive(a)?"removeStyle":"applyStyle"](b);c.fire("saveSnapshot")},onRender:function(){c.on("selectionChange",function(b){for(var a=this.getValue(),b=b.data.path.elements,c=0,d=b.length,e;c<d;c++){e=b[c];for(var f in g)if(g[f].checkElementRemovable(e,!0)){f!=a&&this.setValue(f);return}}this.setValue("")},this)},onOpen:function(){var b=c.getSelection().getSelectedElement(),b=c.elementPath(b),a=[0,0,0,0];this.showAll();this.unmarkAll();for(var h in g){var d=
g[h],e=d.type;e==CKEDITOR.STYLE_BLOCK&&!b.isContextFor(d.element)?this.hideItem(h):(d.checkActive(b)?this.mark(h):e==CKEDITOR.STYLE_OBJECT&&!d.checkApplicable(b)&&(this.hideItem(h),a[e]--),a[e]++)}a[CKEDITOR.STYLE_BLOCK]||this.hideGroup(f["panelTitle"+CKEDITOR.STYLE_BLOCK]);a[CKEDITOR.STYLE_INLINE]||this.hideGroup(f["panelTitle"+CKEDITOR.STYLE_INLINE]);a[CKEDITOR.STYLE_OBJECT]||this.hideGroup(f["panelTitle"+CKEDITOR.STYLE_OBJECT])},reset:function(){g={};i=[]}})}})})();(function(){function i(c){return{editorFocus:!1,canUndo:!1,modes:{wysiwyg:1},exec:function(d){if(d.editable().hasFocus){var e=d.getSelection(),b;if(b=(new CKEDITOR.dom.elementPath(e.getCommonAncestor(),e.root)).contains({td:1,th:1},1)){var e=d.createRange(),a=CKEDITOR.tools.tryThese(function(){var a=b.getParent().$.cells[b.$.cellIndex+(c?-1:1)];a.parentNode.parentNode;return a},function(){var a=b.getParent(),a=a.getAscendant("table").$.rows[a.$.rowIndex+(c?-1:1)];return a.cells[c?a.cells.length-1:
0]});if(!a&&!c){for(var f=b.getAscendant("table").$,a=b.getParent().$.cells,f=new CKEDITOR.dom.element(f.insertRow(-1),d.document),g=0,h=a.length;g<h;g++){var i=f.append((new CKEDITOR.dom.element(a[g],d.document)).clone(!1,!1));!CKEDITOR.env.ie&&i.appendBogus()}e.moveToElementEditStart(f)}else if(a)a=new CKEDITOR.dom.element(a),e.moveToElementEditStart(a),(!e.checkStartOfBlock()||!e.checkEndOfBlock())&&e.selectNodeContents(a);else return!0;e.select(!0);return!0}}return!1}}}var h={editorFocus:!1,modes:{wysiwyg:1,
source:1}},g={exec:function(c){c.container.focusNext(!0,c.tabIndex)}},f={exec:function(c){c.container.focusPrevious(!0,c.tabIndex)}};CKEDITOR.plugins.add("tab",{init:function(c){for(var d=!1!==c.config.enableTabKeyTools,e=c.config.tabSpaces||0,b="";e--;)b+=" ";if(b)c.on("key",function(a){9==a.data.keyCode&&(c.insertHtml(b),a.cancel())});if(d)c.on("key",function(a){(9==a.data.keyCode&&c.execCommand("selectNextCell")||a.data.keyCode==CKEDITOR.SHIFT+9&&c.execCommand("selectPreviousCell"))&&a.cancel()});
c.addCommand("blur",CKEDITOR.tools.extend(g,h));c.addCommand("blurBack",CKEDITOR.tools.extend(f,h));c.addCommand("selectNextCell",i());c.addCommand("selectPreviousCell",i(!0))}})})();
CKEDITOR.dom.element.prototype.focusNext=function(i,h){var g=void 0===h?this.getTabIndex():h,f,c,d,e,b,a;if(0>=g)for(b=this.getNextSourceNode(i,CKEDITOR.NODE_ELEMENT);b;){if(b.isVisible()&&0===b.getTabIndex()){d=b;break}b=b.getNextSourceNode(!1,CKEDITOR.NODE_ELEMENT)}else for(b=this.getDocument().getBody().getFirst();b=b.getNextSourceNode(!1,CKEDITOR.NODE_ELEMENT);){if(!f)if(!c&&b.equals(this)){if(c=!0,i){if(!(b=b.getNextSourceNode(!0,CKEDITOR.NODE_ELEMENT)))break;f=1}}else c&&!this.contains(b)&&
(f=1);if(b.isVisible()&&!(0>(a=b.getTabIndex()))){if(f&&a==g){d=b;break}a>g&&(!d||!e||a<e)?(d=b,e=a):!d&&0===a&&(d=b,e=a)}}d&&d.focus()};
CKEDITOR.dom.element.prototype.focusPrevious=function(i,h){for(var g=void 0===h?this.getTabIndex():h,f,c,d,e=0,b,a=this.getDocument().getBody().getLast();a=a.getPreviousSourceNode(!1,CKEDITOR.NODE_ELEMENT);){if(!f)if(!c&&a.equals(this)){if(c=!0,i){if(!(a=a.getPreviousSourceNode(!0,CKEDITOR.NODE_ELEMENT)))break;f=1}}else c&&!this.contains(a)&&(f=1);if(a.isVisible()&&!(0>(b=a.getTabIndex())))if(0>=g){if(f&&0===b){d=a;break}b>e&&(d=a,e=b)}else{if(f&&b==g){d=a;break}if(b<g&&(!d||b>e))d=a,e=b}}d&&d.focus()};CKEDITOR.plugins.add("table",{requires:"dialog",init:function(a){function d(a){return CKEDITOR.tools.extend(a||{},{contextSensitive:1,refresh:function(a,e){this.setState(e.contains("table",1)?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED)}})}if(!a.blockless){var b=a.lang.table;a.addCommand("table",new CKEDITOR.dialogCommand("table",{context:"table",allowedContent:"table{width,height}[align,border,cellpadding,cellspacing,summary];caption tbody thead tfoot;th td tr[scope];"+(a.plugins.dialogadvtab?
"table"+a.plugins.dialogadvtab.allowedContent():""),requiredContent:"table",contentTransformations:[["table{width}: sizeToStyle","table[width]: sizeToAttribute"]]}));a.addCommand("tableProperties",new CKEDITOR.dialogCommand("tableProperties",d()));a.addCommand("tableDelete",d({exec:function(a){var c=a.elementPath().contains("table",1);if(c){var b=c.getParent();1==b.getChildCount()&&!b.is("body","td","th")&&(c=b);a=a.createRange();a.moveToPosition(c,CKEDITOR.POSITION_BEFORE_START);c.remove();a.select()}}}));
a.ui.addButton&&a.ui.addButton("Table",{label:b.toolbar,command:"table",toolbar:"insert,30"});CKEDITOR.dialog.add("table",this.path+"dialogs/table.js");CKEDITOR.dialog.add("tableProperties",this.path+"dialogs/table.js");a.addMenuItems&&a.addMenuItems({table:{label:b.menu,command:"tableProperties",group:"table",order:5},tabledelete:{label:b.deleteTable,command:"tableDelete",group:"table",order:1}});a.on("doubleclick",function(a){a.data.element.is("table")&&(a.data.dialog="tableProperties")});a.contextMenu&&
a.contextMenu.addListener(function(){return{tabledelete:CKEDITOR.TRISTATE_OFF,table:CKEDITOR.TRISTATE_OFF}})}}});(function(){function p(e){function d(a){!(0<b.length)&&(a.type==CKEDITOR.NODE_ELEMENT&&y.test(a.getName())&&!a.getCustomData("selected_cell"))&&(CKEDITOR.dom.element.setMarker(c,a,"selected_cell",!0),b.push(a))}for(var e=e.getRanges(),b=[],c={},a=0;a<e.length;a++){var f=e[a];if(f.collapsed)f=f.getCommonAncestor(),(f=f.getAscendant("td",!0)||f.getAscendant("th",!0))&&b.push(f);else{var f=new CKEDITOR.dom.walker(f),g;for(f.guard=d;g=f.next();)if(g.type!=CKEDITOR.NODE_ELEMENT||!g.is(CKEDITOR.dtd.table))if((g=
g.getAscendant("td",!0)||g.getAscendant("th",!0))&&!g.getCustomData("selected_cell"))CKEDITOR.dom.element.setMarker(c,g,"selected_cell",!0),b.push(g)}}CKEDITOR.dom.element.clearAllMarkers(c);return b}function o(e,d){for(var b=p(e),c=b[0],a=c.getAscendant("table"),c=c.getDocument(),f=b[0].getParent(),g=f.$.rowIndex,b=b[b.length-1],h=b.getParent().$.rowIndex+b.$.rowSpan-1,b=new CKEDITOR.dom.element(a.$.rows[h]),g=d?g:h,f=d?f:b,b=CKEDITOR.tools.buildTableMap(a),a=b[g],g=d?b[g-1]:b[g+1],b=b[0].length,
c=c.createElement("tr"),h=0;a[h]&&h<b;h++){var i;1<a[h].rowSpan&&g&&a[h]==g[h]?(i=a[h],i.rowSpan+=1):(i=(new CKEDITOR.dom.element(a[h])).clone(),i.removeAttribute("rowSpan"),!CKEDITOR.env.ie&&i.appendBogus(),c.append(i),i=i.$);h+=i.colSpan-1}d?c.insertBefore(f):c.insertAfter(f)}function q(e){if(e instanceof CKEDITOR.dom.selection){for(var d=p(e),b=d[0].getAscendant("table"),c=CKEDITOR.tools.buildTableMap(b),e=d[0].getParent().$.rowIndex,d=d[d.length-1],a=d.getParent().$.rowIndex+d.$.rowSpan-1,d=[],
f=e;f<=a;f++){for(var g=c[f],h=new CKEDITOR.dom.element(b.$.rows[f]),i=0;i<g.length;i++){var j=new CKEDITOR.dom.element(g[i]),l=j.getParent().$.rowIndex;1==j.$.rowSpan?j.remove():(j.$.rowSpan-=1,l==f&&(l=c[f+1],l[i-1]?j.insertAfter(new CKEDITOR.dom.element(l[i-1])):(new CKEDITOR.dom.element(b.$.rows[f+1])).append(j,1)));i+=j.$.colSpan-1}d.push(h)}c=b.$.rows;b=new CKEDITOR.dom.element(c[a+1]||(0<e?c[e-1]:null)||b.$.parentNode);for(f=d.length;0<=f;f--)q(d[f]);return b}e instanceof CKEDITOR.dom.element&&
(b=e.getAscendant("table"),1==b.$.rows.length?b.remove():e.remove());return null}function r(e,d){for(var b=d?Infinity:0,c=0;c<e.length;c++){var a;a=e[c];for(var f=d,g=a.getParent().$.cells,h=0,i=0;i<g.length;i++){var j=g[i],h=h+(f?1:j.colSpan);if(j==a.$)break}a=h-1;if(d?a<b:a>b)b=a}return b}function k(e,d){for(var b=p(e),c=b[0].getAscendant("table"),a=r(b,1),b=r(b),a=d?a:b,f=CKEDITOR.tools.buildTableMap(c),c=[],b=[],g=f.length,h=0;h<g;h++)c.push(f[h][a]),b.push(d?f[h][a-1]:f[h][a+1]);for(h=0;h<g;h++)c[h]&&
(1<c[h].colSpan&&b[h]==c[h]?(a=c[h],a.colSpan+=1):(a=(new CKEDITOR.dom.element(c[h])).clone(),a.removeAttribute("colSpan"),!CKEDITOR.env.ie&&a.appendBogus(),a[d?"insertBefore":"insertAfter"].call(a,new CKEDITOR.dom.element(c[h])),a=a.$),h+=a.rowSpan-1)}function u(e,d){var b=e.getStartElement();if(b=b.getAscendant("td",1)||b.getAscendant("th",1)){var c=b.clone();CKEDITOR.env.ie||c.appendBogus();d?c.insertBefore(b):c.insertAfter(b)}}function t(e){if(e instanceof CKEDITOR.dom.selection){var e=p(e),d=
e[0]&&e[0].getAscendant("table"),b;a:{var c=0;b=e.length-1;for(var a={},f,g;f=e[c++];)CKEDITOR.dom.element.setMarker(a,f,"delete_cell",!0);for(c=0;f=e[c++];)if((g=f.getPrevious())&&!g.getCustomData("delete_cell")||(g=f.getNext())&&!g.getCustomData("delete_cell")){CKEDITOR.dom.element.clearAllMarkers(a);b=g;break a}CKEDITOR.dom.element.clearAllMarkers(a);g=e[0].getParent();(g=g.getPrevious())?b=g.getLast():(g=e[b].getParent(),b=(g=g.getNext())?g.getChild(0):null)}for(g=e.length-1;0<=g;g--)t(e[g]);
b?m(b,!0):d&&d.remove()}else e instanceof CKEDITOR.dom.element&&(d=e.getParent(),1==d.getChildCount()?d.remove():e.remove())}function m(e,d){var b=new CKEDITOR.dom.range(e.getDocument());if(!b["moveToElementEdit"+(d?"End":"Start")](e))b.selectNodeContents(e),b.collapse(d?!1:!0);b.select(!0)}function v(e,d,b){e=e[d];if("undefined"==typeof b)return e;for(d=0;e&&d<e.length;d++){if(b.is&&e[d]==b.$)return d;if(d==b)return new CKEDITOR.dom.element(e[d])}return b.is?-1:null}function s(e,d,b){var c=p(e),
a;if((d?1!=c.length:2>c.length)||(a=e.getCommonAncestor())&&a.type==CKEDITOR.NODE_ELEMENT&&a.is("table"))return!1;var f,e=c[0];a=e.getAscendant("table");var g=CKEDITOR.tools.buildTableMap(a),h=g.length,i=g[0].length,j=e.getParent().$.rowIndex,l=v(g,j,e);if(d){var n;try{var m=parseInt(e.getAttribute("rowspan"),10)||1;f=parseInt(e.getAttribute("colspan"),10)||1;n=g["up"==d?j-m:"down"==d?j+m:j]["left"==d?l-f:"right"==d?l+f:l]}catch(z){return!1}if(!n||e.$==n)return!1;c["up"==d||"left"==d?"unshift":"push"](new CKEDITOR.dom.element(n))}for(var d=
e.getDocument(),o=j,m=n=0,q=!b&&new CKEDITOR.dom.documentFragment(d),s=0,d=0;d<c.length;d++){f=c[d];var k=f.getParent(),t=f.getFirst(),r=f.$.colSpan,u=f.$.rowSpan,k=k.$.rowIndex,w=v(g,k,f),s=s+r*u,m=Math.max(m,w-l+r);n=Math.max(n,k-j+u);if(!b){r=f;(u=r.getBogus())&&u.remove();r.trim();if(f.getChildren().count()){if(k!=o&&t&&(!t.isBlockBoundary||!t.isBlockBoundary({br:1})))(o=q.getLast(CKEDITOR.dom.walker.whitespaces(!0)))&&(!o.is||!o.is("br"))&&q.append("br");f.moveChildren(q)}d?f.remove():f.setHtml("")}o=
k}if(b)return n*m==s;q.moveChildren(e);CKEDITOR.env.ie||e.appendBogus();m>=i?e.removeAttribute("rowSpan"):e.$.rowSpan=n;n>=h?e.removeAttribute("colSpan"):e.$.colSpan=m;b=new CKEDITOR.dom.nodeList(a.$.rows);c=b.count();for(d=c-1;0<=d;d--)a=b.getItem(d),a.$.cells.length||(a.remove(),c++);return e}function w(e,d){var b=p(e);if(1<b.length)return!1;if(d)return!0;var b=b[0],c=b.getParent(),a=c.getAscendant("table"),f=CKEDITOR.tools.buildTableMap(a),g=c.$.rowIndex,h=v(f,g,b),i=b.$.rowSpan,j;if(1<i){j=Math.ceil(i/
2);for(var i=Math.floor(i/2),c=g+j,a=new CKEDITOR.dom.element(a.$.rows[c]),f=v(f,c),l,c=b.clone(),g=0;g<f.length;g++)if(l=f[g],l.parentNode==a.$&&g>h){c.insertBefore(new CKEDITOR.dom.element(l));break}else l=null;l||a.append(c,!0)}else{i=j=1;a=c.clone();a.insertAfter(c);a.append(c=b.clone());l=v(f,g);for(h=0;h<l.length;h++)l[h].rowSpan++}CKEDITOR.env.ie||c.appendBogus();b.$.rowSpan=j;c.$.rowSpan=i;1==j&&b.removeAttribute("rowSpan");1==i&&c.removeAttribute("rowSpan");return c}function x(e,d){var b=
p(e);if(1<b.length)return!1;if(d)return!0;var b=b[0],c=b.getParent(),a=c.getAscendant("table"),a=CKEDITOR.tools.buildTableMap(a),f=v(a,c.$.rowIndex,b),g=b.$.colSpan;if(1<g)c=Math.ceil(g/2),g=Math.floor(g/2);else{for(var g=c=1,h=[],i=0;i<a.length;i++){var j=a[i];h.push(j[f]);1<j[f].rowSpan&&(i+=j[f].rowSpan-1)}for(a=0;a<h.length;a++)h[a].colSpan++}a=b.clone();a.insertAfter(b);CKEDITOR.env.ie||a.appendBogus();b.$.colSpan=c;a.$.colSpan=g;1==c&&b.removeAttribute("colSpan");1==g&&a.removeAttribute("colSpan");
return a}var y=/^(?:td|th)$/;CKEDITOR.plugins.tabletools={requires:"table,dialog,contextmenu",init:function(e){function d(a){return CKEDITOR.tools.extend(a||{},{contextSensitive:1,refresh:function(a,b){this.setState(b.contains({td:1,th:1},1)?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED)}})}function b(a,b){var c=e.addCommand(a,b);e.addFeature(c)}var c=e.lang.table;b("cellProperties",new CKEDITOR.dialogCommand("cellProperties",d({allowedContent:"td th{width,height,border-color,background-color,white-space,vertical-align,text-align}[colspan,rowspan]",
requiredContent:"table"})));CKEDITOR.dialog.add("cellProperties",this.path+"dialogs/tableCell.js");b("rowDelete",d({requiredContent:"table",exec:function(a){a=a.getSelection();m(q(a))}}));b("rowInsertBefore",d({requiredContent:"table",exec:function(a){a=a.getSelection();o(a,!0)}}));b("rowInsertAfter",d({requiredContent:"table",exec:function(a){a=a.getSelection();o(a)}}));b("columnDelete",d({requiredContent:"table",exec:function(a){for(var a=a.getSelection(),a=p(a),b=a[0],c=a[a.length-1],a=b.getAscendant("table"),
d=CKEDITOR.tools.buildTableMap(a),e,j,l=[],n=0,o=d.length;n<o;n++)for(var k=0,q=d[n].length;k<q;k++)d[n][k]==b.$&&(e=k),d[n][k]==c.$&&(j=k);for(n=e;n<=j;n++)for(k=0;k<d.length;k++)c=d[k],b=new CKEDITOR.dom.element(a.$.rows[k]),c=new CKEDITOR.dom.element(c[n]),c.$&&(1==c.$.colSpan?c.remove():c.$.colSpan-=1,k+=c.$.rowSpan-1,b.$.cells.length||l.push(b));j=a.$.rows[0]&&a.$.rows[0].cells;e=new CKEDITOR.dom.element(j[e]||(e?j[e-1]:a.$.parentNode));l.length==o&&a.remove();e&&m(e,!0)}}));b("columnInsertBefore",
d({requiredContent:"table",exec:function(a){a=a.getSelection();k(a,!0)}}));b("columnInsertAfter",d({requiredContent:"table",exec:function(a){a=a.getSelection();k(a)}}));b("cellDelete",d({requiredContent:"table",exec:function(a){a=a.getSelection();t(a)}}));b("cellMerge",d({allowedContent:"td[colspan,rowspan]",requiredContent:"td[colspan,rowspan]",exec:function(a){m(s(a.getSelection()),!0)}}));b("cellMergeRight",d({allowedContent:"td[colspan]",requiredContent:"td[colspan]",exec:function(a){m(s(a.getSelection(),
"right"),!0)}}));b("cellMergeDown",d({allowedContent:"td[rowspan]",requiredContent:"td[rowspan]",exec:function(a){m(s(a.getSelection(),"down"),!0)}}));b("cellVerticalSplit",d({allowedContent:"td[rowspan]",requiredContent:"td[rowspan]",exec:function(a){m(w(a.getSelection()))}}));b("cellHorizontalSplit",d({allowedContent:"td[colspan]",requiredContent:"td[colspan]",exec:function(a){m(x(a.getSelection()))}}));b("cellInsertBefore",d({requiredContent:"table",exec:function(a){a=a.getSelection();u(a,!0)}}));
b("cellInsertAfter",d({requiredContent:"table",exec:function(a){a=a.getSelection();u(a)}}));e.addMenuItems&&e.addMenuItems({tablecell:{label:c.cell.menu,group:"tablecell",order:1,getItems:function(){var a=e.getSelection(),b=p(a);return{tablecell_insertBefore:CKEDITOR.TRISTATE_OFF,tablecell_insertAfter:CKEDITOR.TRISTATE_OFF,tablecell_delete:CKEDITOR.TRISTATE_OFF,tablecell_merge:s(a,null,!0)?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,tablecell_merge_right:s(a,"right",!0)?CKEDITOR.TRISTATE_OFF:
CKEDITOR.TRISTATE_DISABLED,tablecell_merge_down:s(a,"down",!0)?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,tablecell_split_vertical:w(a,!0)?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,tablecell_split_horizontal:x(a,!0)?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED,tablecell_properties:0<b.length?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED}}},tablecell_insertBefore:{label:c.cell.insertBefore,group:"tablecell",command:"cellInsertBefore",order:5},tablecell_insertAfter:{label:c.cell.insertAfter,
group:"tablecell",command:"cellInsertAfter",order:10},tablecell_delete:{label:c.cell.deleteCell,group:"tablecell",command:"cellDelete",order:15},tablecell_merge:{label:c.cell.merge,group:"tablecell",command:"cellMerge",order:16},tablecell_merge_right:{label:c.cell.mergeRight,group:"tablecell",command:"cellMergeRight",order:17},tablecell_merge_down:{label:c.cell.mergeDown,group:"tablecell",command:"cellMergeDown",order:18},tablecell_split_horizontal:{label:c.cell.splitHorizontal,group:"tablecell",
command:"cellHorizontalSplit",order:19},tablecell_split_vertical:{label:c.cell.splitVertical,group:"tablecell",command:"cellVerticalSplit",order:20},tablecell_properties:{label:c.cell.title,group:"tablecellproperties",command:"cellProperties",order:21},tablerow:{label:c.row.menu,group:"tablerow",order:1,getItems:function(){return{tablerow_insertBefore:CKEDITOR.TRISTATE_OFF,tablerow_insertAfter:CKEDITOR.TRISTATE_OFF,tablerow_delete:CKEDITOR.TRISTATE_OFF}}},tablerow_insertBefore:{label:c.row.insertBefore,
group:"tablerow",command:"rowInsertBefore",order:5},tablerow_insertAfter:{label:c.row.insertAfter,group:"tablerow",command:"rowInsertAfter",order:10},tablerow_delete:{label:c.row.deleteRow,group:"tablerow",command:"rowDelete",order:15},tablecolumn:{label:c.column.menu,group:"tablecolumn",order:1,getItems:function(){return{tablecolumn_insertBefore:CKEDITOR.TRISTATE_OFF,tablecolumn_insertAfter:CKEDITOR.TRISTATE_OFF,tablecolumn_delete:CKEDITOR.TRISTATE_OFF}}},tablecolumn_insertBefore:{label:c.column.insertBefore,
group:"tablecolumn",command:"columnInsertBefore",order:5},tablecolumn_insertAfter:{label:c.column.insertAfter,group:"tablecolumn",command:"columnInsertAfter",order:10},tablecolumn_delete:{label:c.column.deleteColumn,group:"tablecolumn",command:"columnDelete",order:15}});e.contextMenu&&e.contextMenu.addListener(function(a,b,c){return(a=c.contains({td:1,th:1},1))&&!a.isReadOnly()?{tablecell:CKEDITOR.TRISTATE_OFF,tablerow:CKEDITOR.TRISTATE_OFF,tablecolumn:CKEDITOR.TRISTATE_OFF}:null})},getSelectedCells:p};
CKEDITOR.plugins.add("tabletools",CKEDITOR.plugins.tabletools)})();CKEDITOR.tools.buildTableMap=function(p){for(var p=p.$.rows,o=-1,q=[],r=0;r<p.length;r++){o++;!q[o]&&(q[o]=[]);for(var k=-1,u=0;u<p[r].cells.length;u++){var t=p[r].cells[u];for(k++;q[o][k];)k++;for(var m=isNaN(t.colSpan)?1:t.colSpan,t=isNaN(t.rowSpan)?1:t.rowSpan,v=0;v<t;v++){q[o+v]||(q[o+v]=[]);for(var s=0;s<m;s++)q[o+v][k+s]=p[r].cells[u]}k+=m-1}}return q};(function(){function i(a){this.editor=a;this.reset()}CKEDITOR.plugins.add("undo",{init:function(a){function c(a){b.enabled&&!1!==a.data.command.canUndo&&b.save()}function d(){b.enabled=a.readOnly?!1:"wysiwyg"==a.mode;b.onChange()}var b=new i(a),e=a.addCommand("undo",{exec:function(){b.undo()&&(a.selectionChange(),this.fire("afterUndo"))},state:CKEDITOR.TRISTATE_DISABLED,canUndo:!1}),f=a.addCommand("redo",{exec:function(){b.redo()&&(a.selectionChange(),this.fire("afterRedo"))},state:CKEDITOR.TRISTATE_DISABLED,
canUndo:!1});a.setKeystroke([[CKEDITOR.CTRL+90,"undo"],[CKEDITOR.CTRL+89,"redo"],[CKEDITOR.CTRL+CKEDITOR.SHIFT+90,"redo"]]);b.onChange=function(){e.setState(b.undoable()?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED);f.setState(b.redoable()?CKEDITOR.TRISTATE_OFF:CKEDITOR.TRISTATE_DISABLED)};a.on("beforeCommandExec",c);a.on("afterCommandExec",c);a.on("saveSnapshot",function(a){b.save(a.data&&a.data.contentOnly)});a.on("contentDom",function(){a.editable().on("keydown",function(a){!a.data.$.ctrlKey&&
!a.data.$.metaKey&&b.type(a)})});a.on("beforeModeUnload",function(){"wysiwyg"==a.mode&&b.save(!0)});a.on("mode",d);a.on("readOnly",d);a.ui.addButton&&(a.ui.addButton("Undo",{label:a.lang.undo.undo,command:"undo",toolbar:"undo,10"}),a.ui.addButton("Redo",{label:a.lang.undo.redo,command:"redo",toolbar:"undo,20"}));a.resetUndo=function(){b.reset();a.fire("saveSnapshot")};a.on("updateSnapshot",function(){b.currentImage&&b.update()});a.on("lockSnapshot",b.lock,b);a.on("unlockSnapshot",b.unlock,b)}});CKEDITOR.plugins.undo=
{};var h=CKEDITOR.plugins.undo.Image=function(a){this.editor=a;a.fire("beforeUndoImage");var c=a.getSnapshot(),d=c&&a.getSelection();CKEDITOR.env.ie&&c&&(c=c.replace(/\s+data-cke-expando=".*?"/g,""));this.contents=c;this.bookmarks=d&&d.createBookmarks2(!0);a.fire("afterUndoImage")},j=/\b(?:href|src|name)="[^"]*?"/gi;h.prototype={equals:function(a,c){var d=this.contents,b=a.contents;if(CKEDITOR.env.ie&&(CKEDITOR.env.ie7Compat||CKEDITOR.env.ie6Compat))d=d.replace(j,""),b=b.replace(j,"");if(d!=b)return!1;
if(c)return!0;d=this.bookmarks;b=a.bookmarks;if(d||b){if(!d||!b||d.length!=b.length)return!1;for(var e=0;e<d.length;e++){var f=d[e],g=b[e];if(f.startOffset!=g.startOffset||f.endOffset!=g.endOffset||!CKEDITOR.tools.arrayCompare(f.start,g.start)||!CKEDITOR.tools.arrayCompare(f.end,g.end))return!1}}return!0}};var k={8:1,46:1},m={16:1,17:1,18:1},l={37:1,38:1,39:1,40:1};i.prototype={type:function(a){var a=a&&a.data.getKey(),c=a in k,d=this.lastKeystroke in k,b=c&&a==this.lastKeystroke,e=a in l,f=this.lastKeystroke in
l;if(!(a in m||this.typing)||!c&&!e&&(d||f)||c&&!b){var g=new h(this.editor),i=this.snapshots.length;CKEDITOR.tools.setTimeout(function(){var a=this.editor.getSnapshot();CKEDITOR.env.ie&&(a=a.replace(/\s+data-cke-expando=".*?"/g,""));g.contents!=a&&i==this.snapshots.length&&(this.typing=!0,this.save(!1,g,!1)||this.snapshots.splice(this.index+1,this.snapshots.length-this.index-1),this.hasUndo=!0,this.hasRedo=!1,this.modifiersCount=this.typesCount=1,this.onChange())},0,this)}this.lastKeystroke=a;c?
(this.typesCount=0,this.modifiersCount++,25<this.modifiersCount&&(this.save(!1,null,!1),this.modifiersCount=1)):e||(this.modifiersCount=0,this.typesCount++,25<this.typesCount&&(this.save(!1,null,!1),this.typesCount=1))},reset:function(){this.lastKeystroke=0;this.snapshots=[];this.index=-1;this.limit=this.editor.config.undoStackSize||20;this.currentImage=null;this.hasRedo=this.hasUndo=!1;this.locked=null;this.resetType()},resetType:function(){this.typing=!1;delete this.lastKeystroke;this.modifiersCount=
this.typesCount=0},fireChange:function(){this.hasUndo=!!this.getNextImage(!0);this.hasRedo=!!this.getNextImage(!1);this.resetType();this.onChange()},save:function(a,c,d){if(this.locked)return!1;var b=this.snapshots;c||(c=new h(this.editor));if(!1===c.contents||this.currentImage&&c.equals(this.currentImage,a))return!1;b.splice(this.index+1,b.length-this.index-1);b.length==this.limit&&b.shift();this.index=b.push(c)-1;this.currentImage=c;!1!==d&&this.fireChange();return!0},restoreImage:function(a){var c=
this.editor,d;a.bookmarks&&(c.focus(),d=c.getSelection());this.locked=1;this.editor.loadSnapshot(a.contents);a.bookmarks?d.selectBookmarks(a.bookmarks):CKEDITOR.env.ie&&(c=this.editor.document.getBody().$.createTextRange(),c.collapse(!0),c.select());this.locked=0;this.index=a.index;this.update();this.fireChange()},getNextImage:function(a){var c=this.snapshots,d=this.currentImage,b;if(d)if(a)for(b=this.index-1;0<=b;b--){if(a=c[b],!d.equals(a,!0))return a.index=b,a}else for(b=this.index+1;b<c.length;b++)if(a=
c[b],!d.equals(a,!0))return a.index=b,a;return null},redoable:function(){return this.enabled&&this.hasRedo},undoable:function(){return this.enabled&&this.hasUndo},undo:function(){if(this.undoable()){this.save(!0);var a=this.getNextImage(!0);if(a)return this.restoreImage(a),!0}return!1},redo:function(){if(this.redoable()&&(this.save(!0),this.redoable())){var a=this.getNextImage(!1);if(a)return this.restoreImage(a),!0}return!1},update:function(){this.locked||this.snapshots.splice(this.index,1,this.currentImage=
new h(this.editor))},lock:function(){if(this.locked)this.locked.level++;else{var a=new h(this.editor);this.locked={update:this.currentImage&&this.currentImage.equals(a,!0)?a:null,level:1}}},unlock:function(){if(this.locked&&!--this.locked.level){var a=this.locked.update;this.locked=null;a&&!a.equals(new h(this.editor),!0)&&this.update()}}}})();CKEDITOR.plugins.add("wsc",{requires:"dialog",init:function(a){a.addCommand("checkspell",new CKEDITOR.dialogCommand("checkspell")).modes={wysiwyg:!CKEDITOR.env.opera&&!CKEDITOR.env.air&&document.domain==window.location.hostname};"undefined"==typeof a.plugins.scayt&&a.ui.addButton&&a.ui.addButton("SpellChecker",{label:a.lang.wsc.toolbar,command:"checkspell",toolbar:"spellchecker,10"});CKEDITOR.dialog.add("checkspell",this.path+"dialogs/wsc.js")}});
CKEDITOR.config.wsc_customerId=CKEDITOR.config.wsc_customerId||"1:ua3xw1-2XyGJ3-GWruD3-6OFNT1-oXcuB1-nR6Bp4-hgQHc-EcYng3-sdRXG3-NOfFk";CKEDITOR.config.wsc_customLoaderScript=CKEDITOR.config.wsc_customLoaderScript||null;CKEDITOR.config.plugins='dialogui,dialog,about,a11yhelp,dialogadvtab,basicstyles,bidi,blockquote,clipboard,button,panelbutton,panel,floatpanel,colorbutton,colordialog,templates,menu,contextmenu,div,resize,toolbar,elementspath,list,indent,enterkey,entities,popup,filebrowser,find,fakeobjects,flash,floatingspace,listblock,richcombo,font,forms,format,htmlwriter,horizontalrule,iframe,wysiwygarea,image,smiley,justify,link,liststyle,magicline,maximize,newpage,pagebreak,pastetext,pastefromword,preview,print,removeformat,save,selectall,showblocks,showborders,sourcearea,specialchar,menubutton,scayt,stylescombo,tab,table,tabletools,undo,wsc';CKEDITOR.config.skin='moono';(function() {var icons = ( 'about,0,bold,32,italic,64,strike,96,subscript,128,superscript,160,underline,192,bidiltr,224,bidirtl,256,blockquote,288,copy-rtl,320,copy,352,cut-rtl,384,cut,416,paste-rtl,448,paste,480,bgcolor,512,textcolor,544,templates-rtl,576,templates,608,creatediv,640,bulletedlist-rtl,672,bulletedlist,704,numberedlist-rtl,736,numberedlist,768,indent-rtl,800,indent,832,outdent-rtl,864,outdent,896,find-rtl,928,find,960,replace,992,flash,1024,button,1056,checkbox,1088,form,1120,hiddenfield,1152,imagebutton,1184,radio,1216,select-rtl,1248,select,1280,textarea-rtl,1312,textarea,1344,textfield-rtl,1376,textfield,1408,horizontalrule,1440,iframe,1472,image,1504,smiley,1536,justifyblock,1568,justifycenter,1600,justifyleft,1632,justifyright,1664,anchor-rtl,1696,anchor,1728,link,1760,unlink,1792,maximize,1824,newpage-rtl,1856,newpage,1888,pagebreak-rtl,1920,pagebreak,1952,pastetext-rtl,1984,pastetext,2016,pastefromword-rtl,2048,pastefromword,2080,preview-rtl,2112,preview,2144,print,2176,removeformat,2208,save,2240,selectall,2272,showblocks-rtl,2304,showblocks,2336,source-rtl,2368,source,2400,specialchar,2432,scayt,2464,table,2496,redo-rtl,2528,redo,2560,undo-rtl,2592,undo,2624,spellchecker,2656' ),path = CKEDITOR.getUrl( 'plugins/icons.png' ),icons = icons.split( ',' );for ( var i = 0; i < icons.length; i++ )CKEDITOR.skin.icons[ icons[ i ] ] = { path: path, offset: -icons[ ++i ] };})();CKEDITOR.lang.languages={"af":1,"sq":1,"ar":1,"eu":1,"bn":1,"bs":1,"bg":1,"ca":1,"zh-cn":1,"zh":1,"hr":1,"cs":1,"da":1,"nl":1,"en":1,"en-au":1,"en-ca":1,"en-gb":1,"eo":1,"et":1,"fo":1,"fi":1,"fr":1,"fr-ca":1,"gl":1,"ka":1,"de":1,"el":1,"gu":1,"he":1,"hi":1,"hu":1,"is":1,"it":1,"ja":1,"km":1,"ko":1,"ku":1,"lv":1,"lt":1,"mk":1,"ms":1,"mn":1,"no":1,"nb":1,"fa":1,"pl":1,"pt-br":1,"pt":1,"ro":1,"ru":1,"sr":1,"sr-latn":1,"sk":1,"sl":1,"es":1,"sv":1,"th":1,"tr":1,"ug":1,"uk":1,"vi":1,"cy":1};}());;

/** Mustache **/
(function defineMustache(global,factory){if(typeof exports==="object"&&exports&&typeof exports.nodeName!=="string"){factory(exports)}else if(typeof define==="function"&&define.amd){define(["exports"],factory)}else{global.Mustache={};factory(Mustache)}})(this,function mustacheFactory(mustache){var objectToString=Object.prototype.toString;var isArray=Array.isArray||function isArrayPolyfill(object){return objectToString.call(object)==="[object Array]"};function isFunction(object){return typeof object==="function"}function typeStr(obj){return isArray(obj)?"array":typeof obj}function escapeRegExp(string){return string.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}function hasProperty(obj,propName){return obj!=null&&typeof obj==="object"&&propName in obj}var regExpTest=RegExp.prototype.test;function testRegExp(re,string){return regExpTest.call(re,string)}var nonSpaceRe=/\S/;function isWhitespace(string){return!testRegExp(nonSpaceRe,string)}var entityMap={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function escapeHtml(string){return String(string).replace(/[&<>"'\/]/g,function fromEntityMap(s){return entityMap[s]})}var whiteRe=/\s*/;var spaceRe=/\s+/;var equalsRe=/\s*=/;var curlyRe=/\s*\}/;var tagRe=/#|\^|\/|>|\{|&|=|!/;function parseTemplate(template,tags){if(!template)return[];var sections=[];var tokens=[];var spaces=[];var hasTag=false;var nonSpace=false;function stripSpace(){if(hasTag&&!nonSpace){while(spaces.length)delete tokens[spaces.pop()]}else{spaces=[]}hasTag=false;nonSpace=false}var openingTagRe,closingTagRe,closingCurlyRe;function compileTags(tagsToCompile){if(typeof tagsToCompile==="string")tagsToCompile=tagsToCompile.split(spaceRe,2);if(!isArray(tagsToCompile)||tagsToCompile.length!==2)throw new Error("Invalid tags: "+tagsToCompile);openingTagRe=new RegExp(escapeRegExp(tagsToCompile[0])+"\\s*");closingTagRe=new RegExp("\\s*"+escapeRegExp(tagsToCompile[1]));closingCurlyRe=new RegExp("\\s*"+escapeRegExp("}"+tagsToCompile[1]))}compileTags(tags||mustache.tags);var scanner=new Scanner(template);var start,type,value,chr,token,openSection;while(!scanner.eos()){start=scanner.pos;value=scanner.scanUntil(openingTagRe);if(value){for(var i=0,valueLength=value.length;i<valueLength;++i){chr=value.charAt(i);if(isWhitespace(chr)){spaces.push(tokens.length)}else{nonSpace=true}tokens.push(["text",chr,start,start+1]);start+=1;if(chr==="\n")stripSpace()}}if(!scanner.scan(openingTagRe))break;hasTag=true;type=scanner.scan(tagRe)||"name";scanner.scan(whiteRe);if(type==="="){value=scanner.scanUntil(equalsRe);scanner.scan(equalsRe);scanner.scanUntil(closingTagRe)}else if(type==="{"){value=scanner.scanUntil(closingCurlyRe);scanner.scan(curlyRe);scanner.scanUntil(closingTagRe);type="&"}else{value=scanner.scanUntil(closingTagRe)}if(!scanner.scan(closingTagRe))throw new Error("Unclosed tag at "+scanner.pos);token=[type,value,start,scanner.pos];tokens.push(token);if(type==="#"||type==="^"){sections.push(token)}else if(type==="/"){openSection=sections.pop();if(!openSection)throw new Error('Unopened section "'+value+'" at '+start);if(openSection[1]!==value)throw new Error('Unclosed section "'+openSection[1]+'" at '+start)}else if(type==="name"||type==="{"||type==="&"){nonSpace=true}else if(type==="="){compileTags(value)}}openSection=sections.pop();if(openSection)throw new Error('Unclosed section "'+openSection[1]+'" at '+scanner.pos);return nestTokens(squashTokens(tokens))}function squashTokens(tokens){var squashedTokens=[];var token,lastToken;for(var i=0,numTokens=tokens.length;i<numTokens;++i){token=tokens[i];if(token){if(token[0]==="text"&&lastToken&&lastToken[0]==="text"){lastToken[1]+=token[1];lastToken[3]=token[3]}else{squashedTokens.push(token);lastToken=token}}}return squashedTokens}function nestTokens(tokens){var nestedTokens=[];var collector=nestedTokens;var sections=[];var token,section;for(var i=0,numTokens=tokens.length;i<numTokens;++i){token=tokens[i];switch(token[0]){case"#":case"^":collector.push(token);sections.push(token);collector=token[4]=[];break;case"/":section=sections.pop();section[5]=token[2];collector=sections.length>0?sections[sections.length-1][4]:nestedTokens;break;default:collector.push(token)}}return nestedTokens}function Scanner(string){this.string=string;this.tail=string;this.pos=0}Scanner.prototype.eos=function eos(){return this.tail===""};Scanner.prototype.scan=function scan(re){var match=this.tail.match(re);if(!match||match.index!==0)return"";var string=match[0];this.tail=this.tail.substring(string.length);this.pos+=string.length;return string};Scanner.prototype.scanUntil=function scanUntil(re){var index=this.tail.search(re),match;switch(index){case-1:match=this.tail;this.tail="";break;case 0:match="";break;default:match=this.tail.substring(0,index);this.tail=this.tail.substring(index)}this.pos+=match.length;return match};function Context(view,parentContext){this.view=view;this.cache={".":this.view};this.parent=parentContext}Context.prototype.push=function push(view){return new Context(view,this)};Context.prototype.lookup=function lookup(name){var cache=this.cache;var value;if(cache.hasOwnProperty(name)){value=cache[name]}else{var context=this,names,index,lookupHit=false;while(context){if(name.indexOf(".")>0){value=context.view;names=name.split(".");index=0;while(value!=null&&index<names.length){if(index===names.length-1)lookupHit=hasProperty(value,names[index]);value=value[names[index++]]}}else{value=context.view[name];lookupHit=hasProperty(context.view,name)}if(lookupHit)break;context=context.parent}cache[name]=value}if(isFunction(value))value=value.call(this.view);return value};function Writer(){this.cache={}}Writer.prototype.clearCache=function clearCache(){this.cache={}};Writer.prototype.parse=function parse(template,tags){var cache=this.cache;var tokens=cache[template];if(tokens==null)tokens=cache[template]=parseTemplate(template,tags);return tokens};Writer.prototype.render=function render(template,view,partials){var tokens=this.parse(template);var context=view instanceof Context?view:new Context(view);return this.renderTokens(tokens,context,partials,template)};Writer.prototype.renderTokens=function renderTokens(tokens,context,partials,originalTemplate){var buffer="";var token,symbol,value;for(var i=0,numTokens=tokens.length;i<numTokens;++i){value=undefined;token=tokens[i];symbol=token[0];if(symbol==="#")value=this.renderSection(token,context,partials,originalTemplate);else if(symbol==="^")value=this.renderInverted(token,context,partials,originalTemplate);else if(symbol===">")value=this.renderPartial(token,context,partials,originalTemplate);else if(symbol==="&")value=this.unescapedValue(token,context);else if(symbol==="name")value=this.escapedValue(token,context);else if(symbol==="text")value=this.rawValue(token);if(value!==undefined)buffer+=value}return buffer};Writer.prototype.renderSection=function renderSection(token,context,partials,originalTemplate){var self=this;var buffer="";var value=context.lookup(token[1]);function subRender(template){return self.render(template,context,partials)}if(!value)return;if(isArray(value)){for(var j=0,valueLength=value.length;j<valueLength;++j){buffer+=this.renderTokens(token[4],context.push(value[j]),partials,originalTemplate)}}else if(typeof value==="object"||typeof value==="string"||typeof value==="number"){buffer+=this.renderTokens(token[4],context.push(value),partials,originalTemplate)}else if(isFunction(value)){if(typeof originalTemplate!=="string")throw new Error("Cannot use higher-order sections without the original template");value=value.call(context.view,originalTemplate.slice(token[3],token[5]),subRender);if(value!=null)buffer+=value}else{buffer+=this.renderTokens(token[4],context,partials,originalTemplate)}return buffer};Writer.prototype.renderInverted=function renderInverted(token,context,partials,originalTemplate){var value=context.lookup(token[1]);if(!value||isArray(value)&&value.length===0)return this.renderTokens(token[4],context,partials,originalTemplate)};Writer.prototype.renderPartial=function renderPartial(token,context,partials){if(!partials)return;var value=isFunction(partials)?partials(token[1]):partials[token[1]];if(value!=null)return this.renderTokens(this.parse(value),context,partials,value)};Writer.prototype.unescapedValue=function unescapedValue(token,context){var value=context.lookup(token[1]);if(value!=null)return value};Writer.prototype.escapedValue=function escapedValue(token,context){var value=context.lookup(token[1]);if(value!=null)return mustache.escape(value)};Writer.prototype.rawValue=function rawValue(token){return token[1]};mustache.name="mustache.js";mustache.version="2.1.3";mustache.tags=["{{","}}"];var defaultWriter=new Writer;mustache.clearCache=function clearCache(){return defaultWriter.clearCache()};mustache.parse=function parse(template,tags){return defaultWriter.parse(template,tags)};mustache.render=function render(template,view,partials){if(typeof template!=="string"){throw new TypeError('Invalid template! Template should be a "string" '+'but "'+typeStr(template)+'" was given as the first '+"argument for mustache#render(template, view, partials)")}return defaultWriter.render(template,view,partials)};mustache.to_html=function to_html(template,view,partials,send){var result=mustache.render(template,view,partials);if(isFunction(send)){send(result)}else{return result}};mustache.escape=escapeHtml;mustache.Scanner=Scanner;mustache.Context=Context;mustache.Writer=Writer});
;

/** WB Uploader **/

/**
 * Uploader class
 * 
 * @author Marius Tomas <marius@profis.lt>
 * @version 2.1.1, 2012-07-12
 */
function WB_Uploader() { this.__construct(); }

WB_Uploader.prototype.id = null;
WB_Uploader.prototype.element = null;
WB_Uploader.prototype.iframe = null;
WB_Uploader.prototype.form = null;
WB_Uploader.prototype.index = 0;
WB_Uploader.prototype.files = null;
WB_Uploader.prototype.currFile = null;
WB_Uploader.prototype.lastUrl = null;
WB_Uploader.prototype.urls = null;
WB_Uploader.prototype.currProgress = null;
WB_Uploader.prototype.multi = false;

WB_Uploader.prototype.uploadCallback = null;
WB_Uploader.prototype.callback = null;
WB_Uploader.prototype.params = null;
WB_Uploader.lastIndex = -1;

/**
 * Construct uploader
 */
WB_Uploader.prototype.__construct = function() {
	WB_Uploader.lastIndex++;
	this.id = "wb_uploader_" + WB_Uploader.lastIndex;

	this.params = {};
	this.element = document.createElement("div");
	this.element.id = this.id;
	this.element._class = this;
	$(this.element).addClass("ui-uploader");
	
	var tmp = document.createElement("div");
	tmp.innerHTML = '<iframe name="wb_uploader_ifrm_' + WB_Uploader.lastIndex +
		'" frameborder="0" style="width: 1px; height: 1px;"></iframe>';
	this.iframe = tmp.firstChild; tmp.removeChild(this.iframe);
	
	//this.iframe = document.createElement("iframe");
	//this.iframe.name = "wb_uploader_ifrm_" + WB_Uploader_lastIndex;
	//$(this.iframe).attr("frameborder", 0).css({"width": "1px", "height": "1px"});
	
	tmp = document.createElement("div");
	tmp.innerHTML = '<form action="' + wb_builder.baseUrl + "gallery/?id=" + this.id +
		'" target="' + this.iframe.name + '" method="post" enctype="multipart/form-data"></form>';
	this.form = tmp.firstChild; tmp.removeChild(this.form);
	
	/*this.form = document.createElement("form");
	$(this.form).attr({
		"action":	wb_builder.baseUrl + "gallery/?id=" + this.id,
		"target":	this.iframe.name,
		"method":	"post",
		"enctype":	"multipart/form-data"
	});*/
	this.reset();

	this.element.appendChild(this.form);
	this.element.appendChild(this.iframe);
};

WB_Uploader.prototype.setCallback = function(callback, object) {
	if( !callback )
		this.callback = null;
	else
		this.callback = {object: object, callback: callback};
};

WB_Uploader.prototype.setUploadCallback = function(callback, object) {
	if( !callback )
		this.uploadCallback = null;
	else
		this.uploadCallback = {object: object, callback: callback};
};

WB_Uploader.prototype.createParamElement = function(id, value) {
	
	var tmp = document.createElement("div");
	tmp.innerHTML = '<input type="hidden" name="' + id + '" value="' + value + '" />';
	var inp = tmp.firstChild; tmp.removeChild(inp);
	
	/*var inp = document.createElement("INPUT");
	inp.name = id;
	inp.type = "hidden";
	inp.value = value;*/
	this.params[id] = {
		element: inp,
		value: value
	};
	this.form.appendChild(inp);
};

WB_Uploader.prototype.setParam = function(id, value) {
	if(value !== null)
	{
		if( this.params[id] && this.params[id].element )
         this.params[id].element.parentNode.removeChild(this.params[id].element);
		this.createParamElement(id, value);
	}
	else if( this.params[id] )
	{
		this.form.removeChild(this.params[id].element);
		this.params[id] = null;
		delete this.params[id];
	}
};

WB_Uploader.prototype.reset = function() {
	$(this.form).empty();
	for( var i in this.params )
		this.createParamElement(i, this.params[i].value);
	this.files = {};
	this.urls = {};
	this.lastUrl = null;
	this.addFile();
};

WB_Uploader.prototype.getUrl = function() {
	return this.lastUrl;
};

WB_Uploader.prototype.addFile = function() {
	var thisClass = this;
	if (this.currFile) {
		this.currFile.style.display = "none";
	}
	this.currFile = document.createElement("div");
	$(this.currFile).css({ "overflow": "hidden" });
	
	var tmp = document.createElement("div");
	tmp.innerHTML = '<input type="file" name="upl_' + (this.index++) + '" size="4" />';
	var fl = tmp.firstChild; tmp.removeChild(fl);
	
	/*var fl = document.createElement("input");
	fl.name = 'upl_' + (this.index++);
	fl.type = "file";
	fl.size = "4";*/
	
	$(fl).bind("change", function() { thisClass.upload(this.name); });

	this.currFile.appendChild(fl);

	if (this.form.firstChild)
		this.form.insertBefore(this.currFile, this.form.firstChild);
	else
		this.form.appendChild(this.currFile);
	this.files[fl.name] = this.currFile;
};

WB_Uploader.prototype.upload = function(key) {
	if (!this.files[key]) return;
	var file = this.files[key];
	var input = file.firstChild;
	input.style.display = "none";
	if( this.uploadCallback )
	{
		if( this.uploadCallback.object )
			this.uploadCallback.callback.call(this.uploadCallback.object, this);
		else
			this.uploadCallback.callback(this);
	}

	this.currProgress = document.createElement("div");
	$(this.currProgress).addClass("wb_progress").progressbar({ value: 100 });

	file.insertBefore(this.currProgress, file.firstChild);
	this.form.submit();
	file.removeChild(input);
	if (this.multi)
		this.addFile();
};

WB_Uploader.prototype.remove = function(key) {
	if (!this.urls[key]) return;
	$.get(wb_builder.baseUrl + "gallery/?id=" + this.id + "&del=" + this.urls[key]);
};

WB_Uploader.prototype.display = function(url, relUrl) {
	for (var k in this.files) {
		this.onUpload(k, url, relUrl);
		break;
	}
};

WB_Uploader.prototype.onUpload = function(key, url, relUrl, param) {
	if (!this.files[key]) return;
	this.urls[key] = relUrl;
	var thisClass = this;
	var file = this.files[key];
	if (this.callback) {
		$(file).empty();
		if( this.callback.object )
			this.callback.callback.call(this.callback.object, this, key, url, relUrl, param);
		else
			this.callback.callback(this, key, url, relUrl, param);
	}
	else {
		// at this point param contains error code if there were any
		if (url.split("?")[0].match(/^.*\.swf$/i)) {
			$(file).empty();
			file.style.position = "relative";
			var xbtn = document.createElement("a");
			xbtn.className = "ui-uploader-xbtn";
			xbtn.innerHTML = '<span>&times;</span>';
			$(xbtn).css({ "position" : "absolute", "right": "4px", "margin": "4px 0 0 4px" })
				.bind("click", function() { thisClass.remove(key); thisClass.reset(); });
			file.appendChild(xbtn);
			$(file).append('<object style="width: 120px; height: 100px;" data="' + url + '" type="application/x-shockwave-flash">' +
					'<param name="movie" value="' + url + '" />' +
					'<param name="menu" value="false" />' +
				'</object>');
		} else {		
			var img = new Image();
			img.style.display = "none";
			img.onload = function() {
				var oWidth = this.width;
				var oHeight = this.height;
				var file = thisClass.files[key];
				$(file).empty();
				file.style.position = "relative";
				var xbtn = document.createElement("a");
				xbtn.className = "ui-uploader-xbtn";
				xbtn.innerHTML = '<span>&times;</span>';
				$(xbtn).css({ "position" : "absolute", "right": "4px", "margin": "4px 0 0 4px" })
					.bind("click", function() { thisClass.remove(key); thisClass.reset(); });
				file.appendChild(xbtn);
				$(file).addClass("ui-uploader-img").css("background", "#ffffff url(images/transparent.png)");
				file.appendChild(this);
				var tWidth = (oWidth < 120) ? oWidth : 120;
				var tHeight =  oHeight * tWidth / oWidth;
				this.style.display = "block";
				this.style.width = tWidth + "px";
				this.style.height = tHeight + "px";
				this.parentNode.style.width = "122px";
				if (tHeight < 26)
					this.parentNode.style.height = "26px";
			};
			img.onerror = function() {
				thisClass.reset();
				this.onload = null;
				return;
			};
			img.src = url;
		}
	}
	this.lastUrl = relUrl;
};
;

/** WB Confirm **/

define('Confirm', ['Dialog'], function(Dialog) {
	'use strict';

/**
 * Confirmation dialog class
 */
var Confirm = function() {  };

Confirm.popover = null;
Confirm.dialog = null;
Confirm.hasHotkey = null;

Confirm.showPopover = function(title, message, buttons, width, parent, placement) {
	if (!Confirm.hasHotkey) {
		Confirm.hasHotkey = function() {
			if (Confirm.popover) {
				Confirm.popover.popover("hide");
				Confirm.popover.popover("destroy");
			}
		};
		wb_builder.addHotKey("esc", Confirm.hasHotkey);
	}
	if (Confirm.popover) {
		Confirm.popover.popover("hide");
		Confirm.popover.popover("destroy");
	}
	if (!buttons) buttons = [{ title: __("OK") }];
	if (!placement) placement = "bottom";
	
	var panel = $('<div>');
	panel.css({ textAlign: "center" });
	
	var msg = null;
	panel.append(msg = $('<div>').css({textAlign: 'left', marginBottom: '20px'}));
	msg.html(message.split("\n").join("<br />"));
	
	var buttonPanel = $('<div>').addClass('clearfix');
	panel.append(buttonPanel);
	
	for (var i = 0; i < buttons.length; i++) {
		var cfg = buttons[i];
		var btn = $('<button>').addClass('btn');
		if (cfg.cssClass) btn.addClass(cfg.cssClass);
		btn.html(cfg.title ? cfg.title : __("Untitled"));
		if (i > 0) btn.css({ marginLeft: "10px" });
		(function(func) {
			btn.on('click', function() {
				parent.popover('hide');
				if (typeof func === 'function') func();
				panel.empty();
				parent.popover('destroy');
				Confirm.popover = null;
			});
		})(cfg.func);
		buttonPanel.append(btn);
	}
	
	parent.popover({
		html: true,
		title: title,
		content: function() { return panel; },
		trigger: "manual",
		placement: placement
	});
	Confirm.popover = parent;
	parent.popover("show");
	if (width && !isNaN(width*1)) parent.next(".popover").width(width*1); 
};

Confirm.showDialog = function(title, message, buttons, width) {
	if (!Confirm.hasHotkey) {
		Confirm.hasHotkey = function() {
			if (Confirm.dialog) {
				Confirm.dialog.hide();
			}
		};
		wb_builder.addHotKey("esc", Confirm.hasHotkey);
	}
	if (Confirm.dialog) {
		Confirm.dialog.hide();
	}
	if (!Confirm.dialog) {
		Confirm.dialog = new Dialog();
		Confirm.dialog.fields.panel = $('<div></div>');
		Confirm.dialog.setContent(Confirm.dialog.fields.panel);
	}
	Confirm.dialog.setCenterButtons(false);
	
	if (!buttons) buttons = [{ title: __("OK") }];
	
	Confirm.dialog.setTitle(title);
	Confirm.dialog.fields.panel.empty();
	var msg = (typeof(message) === "string") ? message.split("\n").join("<br />") : message;
	Confirm.dialog.fields.panel.append(msg);
	Confirm.dialog.removeAllButtons();
	for (var i = 0; i < buttons.length; i++) {
		var cfg = buttons[i];
		(function(func) {
			Confirm.dialog.addButton((cfg.title ? cfg.title : __('Untitled')), function() {
				Confirm.dialog.hide();

				if (typeof func === 'function') func();	
			}, null, cfg.cssClass);
		})(cfg.func);
	}
	
	if (width && !isNaN(width*1)) Confirm.dialog.setSize(width*1); 
	
	Confirm.dialog.show();
};

	window.WB_Confirm = Confirm;
	
	return Confirm;

});
;

/** WB Dialog **/

define('Dialog', ['UIComponent', 'Service'], function(UIComponent, Service) {
	'use strict';
	
/**
 * Dialog class
 * @param {string} title
 * @param {boolean} isStatic
 * @param {UIComponent} content content element
 * @param {boolean=} keepXBtn keep x btn in static mode
 * @class
 */
var Dialog = function(title, isStatic, content, keepXBtn) { if (title !== '%inherit%') this.__construct(title, isStatic, content, keepXBtn); };

Dialog.prototype.id = null;
Dialog.prototype.title = "";
Dialog.prototype.dialog = null;
Dialog.prototype.baseElem = null;
Dialog.prototype.content = null;
/** @type jQuery */
Dialog.prototype.headerElem = null;
/** @type jQuery */
Dialog.prototype.footerElem = null;
Dialog.prototype.xButton = null;
Dialog.prototype.fields = null;
Dialog.prototype.buttons = null;
Dialog.prototype.onOpen = null;
Dialog.prototype.onBeforeClose = null;
Dialog.prototype.onShown = null;
Dialog.prototype.onClose = null;
/** @type Boolean */
Dialog.prototype.stopPropagation = false;
/** @type Boolean */
Dialog.prototype.ignoreEvent = false;
/** @type Boolean */
Dialog.prototype.isStatic = false;
/** @type Boolean */
Dialog.prototype.isVisible = false;
/** @type Boolean */
Dialog.prototype.autoResize = false;
/** @type Function */
Dialog.prototype.autoResizeFunc = null;
/** @type boolean */
Dialog.prototype.maximised = false;
Dialog.lastIndex = -1;
Dialog.stack = [];
Dialog.hasHotkey = null;
Dialog.hideEditors = true;

/**
 * Construct Dialog
 * @param {string} title dialog title
 * @param {boolean} isStatic no close on escape and no close on backbrop click
 * @param {UIComponent} content content element
 * @param {boolean=} keepXBtn keep x btn in static mode
 */
Dialog.prototype.__construct = function(title, isStatic, content, keepXBtn) {
	if (!Dialog.hasHotkey) {
		Dialog.hasHotkey = function() {
			if (Dialog.stack.length > 0 && !Dialog.stack[Dialog.stack.length - 1].isStatic) {
				Dialog.stack[Dialog.stack.length - 1].setVisible(false);
			}
		};
		wb_builder.addHotKey("esc", Dialog.hasHotkey);
	}
	
	Dialog.lastIndex++;
	this.id = "wb_dialog_" + Dialog.lastIndex;
	this.isStatic = isStatic ? true : false;
	this.dialog = $(
		'<div class="modal fade">' +
			'<div class="modal-dialog">' +
				'<div class="modal-content">' +
					'<div class="modal-header">' +
						((isStatic && !keepXBtn) ? '' : '<button type="button" class="close" data-dismiss="modal">&times;</button>') +
						'<h4 class="modal-title">&nbsp;</h4>' +
					'</div>' +
					'<div class="modal-body"><p>&nbsp;</p></div>' +
					'<div class="modal-footer"></div>' +
				'</div>' +
			'</div>' +
		'</div>'
	);
	this.dialog.attr("id", this.id);
	
	this.baseElem = $('.modal-dialog', this.dialog).eq(0);
	this.headerElem = $('.modal-header', this.dialog).eq(0);
	this.footerElem = $('.modal-footer', this.dialog).eq(0);
	
	this.title = $(".modal-header", this.dialog).children(".modal-title");
	this.xButton = $(".modal-header", this.dialog).children("button.close");
	
	this.content = $(".modal-body", this.dialog);
	
	this.buttons = $(".modal-footer", this.dialog);
	
	$(document.body).append(this.dialog);
	
	var opt = { show: false, keyboard: true };
	if (isStatic) {
		opt.keyboard = false;
		opt.backdrop = "static";
	}
	this.dialog.modal(opt);
	var thisClass = this;
	this.dialog.on("shown.bs.modal", function() {
		if (typeof(thisClass.onShown) === "function") thisClass.onShown();
    });
	this.dialog.on("hide.bs.modal", function() {
		if (thisClass.ignoreEvent) return;
		thisClass.setVisible(false, true);
		if (typeof(thisClass.onClose) === "function") thisClass.onClose();
		//console.log("Hidding: " + thisClass.id);
    });
	this.fields = {};
	
	
	/* var thisClass = this;
	$(".modal-header", this.dialog).children("button.close").bind("click", function() {
		//thisClass.setVisible(false, true);
		//if (typeof(thisClass.onClose) == "function") thisClass.onClose();
	});
	 */
	this.setTitle(title);
	if (content) this.setContent(content);
};

/** @param {Boolean} visible */
Dialog.prototype.setTitleVisible = function(visible) {
	if (visible) {
		this.headerElem.show();
	} else {
		this.headerElem.hide();
	}
};

/** @param {Boolean} visible */
Dialog.prototype.setFooterVisible = function(visible) {
	if (visible) {
		this.footerElem.show();
	} else {
		this.footerElem.hide();
	}
};

/**
 * Set dialog title
 * @param title dialog title
 */
Dialog.prototype.setTitle = function(title) {
	if (typeof(title) !== "undefined")
		this.title.html(title);
};

/**
 * Set dialog content HTML
 * @param htmlContent dialog content HTML
 * @param {boolean} keepFields
 */
Dialog.prototype.setContent = function(htmlContent, keepFields) {
	if (htmlContent && (htmlContent instanceof UIComponent)) {
		if (('fields' in htmlContent) && typeof htmlContent.fields === 'object') {
			if (!keepFields) this.fields = {};
			for (var k in htmlContent.fields) {
				this.fields[k] = htmlContent.fields[k];
			}
		}
		this.content.empty().append(htmlContent.getElem());
	} else if (htmlContent !== null && typeof(htmlContent) !== "undefined") {
		this.content.empty().append(htmlContent);
	}
};

/**
 * Add element to dialog content
 * @param elm element to add
 */
Dialog.prototype.addElement = function(elm) {
	this.content.append(elm);
	return elm;
};

Dialog.prototype.addNamedInput = function(title, type, id, name) {
	var div = document.createElement("div");
	var inp = document.createElement("input");
	var lbl = document.createElement("label");
	
	div.className = "ui-named-input";
	
	inp.type = type;
	if (name) inp.name = name;
	if (id) {
		inp.id = id;
		try {lbl.setAttribute("for", id);} catch (ex) {}
		try {lbl.setAttribute("htmlFor", id);} catch (ex) {}
	}
	$(lbl).html(title);
	
	if (type === "checkbox" || type === "radio") {
		div.appendChild(inp);
		div.appendChild(lbl);
	} else {
		div.appendChild(lbl);
		div.appendChild(inp);
	}
	$(this.dialog).append(div);
	if (id)
		this.fields[id] = inp;
	return inp;
};

/**
 * Set if dialog is maximised to the size of window
 * @param {boolean} maximised
 */
Dialog.prototype.setMaximised = function(maximised) {
	this.maximised = maximised;
	if (maximised) {
		this.dialog.css({paddingRight: 0, paddingLeft: 0});
		this.baseElem.css({width: 'auto', margin: 0});
		var wh = $(window).height(), h = wh - this.headerElem.outerHeight() - this.footerElem.outerHeight() - 2;
		this.content.css({height: h, maxHeight: wh});
	} else {
		this.dialog.css({paddingRight: 17, paddingLeft: 17});
		this.baseElem.css({width: '', margin: ''});
		this.content.css({height: ''});
	}
};

/**
 * Set dialog size
 * @param width dialog width in pixels
 * @param height dialog height in pixels
 */
Dialog.prototype.setSize = function(width, height) {
	if (width*1 && typeof(width) !== "undefined" && width !== null)
		this.baseElem.css({width: width});
	if (height*1 && typeof(height) !== "undefined" && height !== null)
		this.baseElem.height(height*1);
};

/**
 * Sets max height for dialog body
 * @param height max body height to set
 */
Dialog.prototype.setMaxBodyHeight = function(height) {
	if (WB_Builder.isset(height)) {
		this.content.css("max-height", height + "px");
	}
};

/**
 * Sets min height for dialog body
 * @param height min body height to set
 */
Dialog.prototype.setMinBodyHeight = function(height) {
	if (WB_Builder.isset(height)) {
		this.content.css("min-height", height + "px");
	}
};

/**
 * Removes scrolls on overflow and removes overflow hidden 
 */
Dialog.prototype.setNoScroll = function() {
	this.content.css({
		"overflow-x": "",
		"overflow-y": "",
		"overflow": "visible"
	});
};

/**
 * If set to true dialog will try to auto-resize to window size
 * @param {Boolean} autoResize
 * @param {Function} callback
 */
Dialog.prototype.setAutoResize = function(autoResize, callback) {
	var self = this;
	var thisCallback = callback;
	this.autoResize = autoResize;
	if (this.autoResize) {
		$(window).on('resize', (this.autoResizeFunc = function() {
			// console.log(self.headerElem.outerHeight(true), self.footerElem.outerHeight(true));
			var bh = ($(window).height()*0.9) - Math.max(self.headerElem.outerHeight(true), 49) - Math.max(self.footerElem.outerHeight(true), 60) - 60;
			self.setMaxBodyHeight(bh);
			if (typeof thisCallback === 'function') thisCallback.call(self, bh);
		}));
		this.autoResizeFunc();
	} else {
		if (typeof this.autoResizeFunc === 'function') $(window).off('resize', null, this.autoResizeFunc);
		this.autoResizeFunc = null;
	}
};

/**
 * Set if buttons are centered 
 * @param {Boolean} value
 */
Dialog.prototype.setCenterButtons = function(value) {
	if (value) {
		this.footerElem.css("text-align", "center");
	} else {
		this.footerElem.css("text-align", "");
	}
};

/**
 * Set dialog visibility
 * @param visible dialog visibility
 * @param noAction (optional) no show/hide action
 * @param ignoreEvent (optional) ignore event
 */
Dialog.prototype.setVisible = function(visible, noAction, ignoreEvent) {
	if (this.stopPropagation) return;
	this.stopPropagation = true;
	if (visible) {
		if (!ignoreEvent) {
			Service.contextMenu.hideAll();
			if (Dialog.hideEditors)
				if ('textArea' in Service) Service.textArea.hideEditors();
			if (Dialog.stack.length > 0) {
				Dialog.stack[Dialog.stack.length - 1].setVisible(false, false, true);
			}
			Dialog.stack.push(this);
		}
		if (!noAction) {
			if (ignoreEvent) this.ignoreEvent = true;
			this.dialog.modal("show");
			this.isVisible = true;
			if (ignoreEvent) this.ignoreEvent = false;
		}
	} else {
		if (!noAction) {
			if (ignoreEvent) this.ignoreEvent = true;
			this.dialog.modal("hide");
			this.isVisible = false;
			if (ignoreEvent) this.ignoreEvent = false;
		}
		if (!ignoreEvent) {
			Dialog.stack.pop();
			if (Dialog.stack.length > 0) {
				Dialog.stack[Dialog.stack.length - 1].setVisible(true, false, true);
			}
		}
	}
	this.stopPropagation = false;
};

/**
 * Show dialog
 * @param {Object|String} htmlContent
 */
Dialog.prototype.show = function(htmlContent) {
	this.setContent(htmlContent);
	this.setVisible(true);
};

/**
 * Hide dialog
 */
Dialog.prototype.hide = function() {
	this.setVisible(false);
};

/**
 * Add button to dialog
 * @param name button title
 * @param callback button click callback function or null (if null button will close dialog)
 * @param primary mark button as primary
 * @param cssClass class to add to button
 * @return button as jQuery selector object
 */
Dialog.prototype.addButton = function(name, callback, primary, cssClass) {
	this.buttons[name] = callback;
	var btn = $('<button class="btn" type="button"></button>');
	btn.html(name);
	if (typeof(callback) === "function") {
		btn.bind("click", callback);
	} else {
		var thisClass = this;
		//btn.attr("data-dismiss", "modal");
		btn.bind("click", function() {
			thisClass.setVisible(false);
			//if (typeof(thisClass.onClose) == "function") thisClass.onClose();
		});
	}
	if (primary) btn.addClass("btn-success"); else btn.addClass('btn-default');
	if (cssClass) btn.addClass(cssClass);
	btn.attr("iid", name);
	this.buttons.append(btn);
	return btn;
};

/**
 * Get dialog button callback
 * @param {String} name
 */
Dialog.prototype.getButtonCallback = function(name) {
	if (this.buttons[name]) 
		return this.buttons[name];
	else
		return false;
};

/**
 * Remove button from dialog
 * @param name button title to remove button by
 */
Dialog.prototype.removeButton = function(name) {
   this.buttons.children("[iid='" + name + "']").remove();
};

/**
 * Remove all button from dialog
 */
Dialog.prototype.removeAllButtons = function() {
   this.buttons.children("[iid]").remove();
};
	
	window.WB_Dialog = Dialog;
	
	return Dialog;

});
;

/** WB MsgDialog **/

define('MsgDialog', ['Dialog'], function(Dialog) {
	'use strict';

/**
 * Message Dialog class
 * Dialog used to view message
 * @param {string} dlg_title dialog title
 * @param {string} message message text
 * @param {string} title message title
 * @param {string} type message type (value one of: error, success, info, block)
 * @param {boolean} isStatic prevents dialog from reacting to esc button and from closing with X button
 */
var MsgDialog = function(dlg_title, message, title, type, isStatic) {this.__construct(dlg_title, message, title, type, isStatic);};

MsgDialog.prototype = new Dialog('%inherit%');
MsgDialog.prototype.constructor = MsgDialog;
MsgDialog.prototype.msg = null;

/**
 * Construct Message dialog 
 * @param {string} dlg_title dialog title
 * @param {string} message message text
 * @param {string} title message title
 * @param {string} type message type (value one of: error, success, info, block)
 * @param {boolean} isStatic prevents dialog from reacting to esc button and from closing with X button
 */
MsgDialog.prototype.__construct = function(dlg_title, message, title, type, isStatic) {
	Dialog.prototype.__construct.call(this, dlg_title, isStatic);
	
	this.msg = $('<div class="alert alert-danger" style="margin: 0px;">' +
			'<span></span>' +
		'</div>');
	
	this.content.empty().append(this.msg);

	this.addButton(__("OK"));
	
	if (message || title) {
		this.setMessage(message, title, type);
	}
	
};

/**
 * Set inline message
 * @param message message text
 * @param title message title
 * @param type message type (value one of: error, success, info, block)
 */
MsgDialog.prototype.setMessage = function(message, title, type) {
	var msg = (title ? ("<strong>" + title + "</strong> ") : "") + message;
	this.msg.children("span").html(msg);
	this.msg.removeClass("alert-error alert-danger alert-success alert-info alert-block alert-error-big");
	if (type === "error" || type === "danger" || type === "success" || type === "info" || type === "block") {
		this.msg.addClass("alert-" + ((type === 'error') ? 'danger' : type));
	} else if (type === "error-big") {
		this.msg.addClass("alert-error-big");
		var cErrMsg = wb_builder.commonErrorMessage ? wb_builder.commonErrorMessage : __('If you see this error once again, please contact us through the “Support“ section (lower left).');
		msg = (msg ? (msg + "<br><br>") : "") + __('If you see this message, it means that we are already informed and are working on it. We apologize for the inconvenience.')
			+ '<br><br>'
			+ '<strong>' + __('Relax for 5 minutes.') + '</strong>'
			+ '<br>'
			+ cErrMsg;
		this.msg.children("span").html(msg);
	} else {
		this.msg.addClass("alert-block");
	}
};

/**
 * Set dialog visibility
 * @param {Boolean} visible dialog visibility
 * @param {Boolean} noAction
 * @param {Boolean} ignoreEvent
 */
MsgDialog.prototype.setVisible = function(visible, noAction, ignoreEvent) {
	Dialog.prototype.setVisible.call(this, visible, noAction, ignoreEvent);
};
	
	window.WB_MsgDialog = MsgDialog;
	
	return MsgDialog;
});
;

/** WB MediaLibrary **/

define('MediaLibrary', ['Dialog', 'Service', 'UIButton'], function(Dialog, Service, UIButton) {
	'use strict';

/**
 * Media Library class
 * Dialog used to select one or multiple images from library
 * @param {String} title
 * @param {Boolean} multi
 * @param {String} mode
 * @param {Boolean} showTabs
 */
var MediaLibrary = function(title, multi, mode, showTabs) {this.__construct(title, multi, mode, showTabs);};

MediaLibrary.prototype = new Dialog('%inherit%');
MediaLibrary.prototype.constructor = MediaLibrary;

MediaLibrary.prototype.tabbedPane = null;
MediaLibrary.prototype.tabActive = 0;
MediaLibrary.prototype.myTab = null;
MediaLibrary.prototype.freeTab = null;
MediaLibrary.prototype.urlTab = null;
MediaLibrary.prototype.tagSelected = null;
MediaLibrary.prototype.tagMenu = null;
MediaLibrary.prototype.selectedFiles = null;
MediaLibrary.prototype.isMultiselect = false;
MediaLibrary.prototype.uploader = null;
MediaLibrary.prototype.uploader2 = null;
MediaLibrary.prototype.gallery = null;
MediaLibrary.prototype.galleryLoaded = false;
MediaLibrary.prototype.selList = null;
MediaLibrary.prototype.thumb = null;
MediaLibrary.prototype.progress = null;
MediaLibrary.prototype.msg = null;
MediaLibrary.prototype.mode = 'all';				//all,image,sound,flash
MediaLibrary.prototype.showTabs = false;			//show other tabs except My Gallery
MediaLibrary.prototype.galMsg = null;
MediaLibrary.prototype.flickrInfo = {};
MediaLibrary.prototype.flickrKey = '881fe8a1a99a491e17c4adf1f46b0350';
MediaLibrary.prototype.flickrListRandomUrl = 'https://api.flickr.com/services/rest/?method=flickr.photos.getRecent&safe_search=1&sort=random&privacy_filter=1&per_page=50&format=json&jsoncallback=?';
MediaLibrary.prototype.flickrListUrl = 'https://api.flickr.com/services/rest/?method=flickr.photos.search&safe_search=1&privacy_filter=1&per_page=50&format=json&jsoncallback=?';
MediaLibrary.prototype.flickrImagesUrl = 'https://api.flickr.com/services/rest/?method=flickr.photos.getSizes&format=json&jsoncallback=?';
MediaLibrary.prototype.urlInfo = {};
MediaLibrary.prototype.requiresRevalidation = true; // forces to reload tag and item lists on next dialog open

/**
 * Construct media library
 * @param {string} title media library dialog title
 * @param {boolean} multi allow multi select
 * @param {string} mode filter list to show only one of (audio, images, flash...)
 * @param {boolean} showTabs show the rest tabs?
 */
MediaLibrary.prototype.__construct = function(title, multi, mode, showTabs) {
	Dialog.prototype.__construct.call(this, title);
	var thisClass = this;
	this.isMultiselect = multi ? true : false;
	this.mode = (typeof(mode) === 'undefined') ? 'all' : mode;
	this.showTabs = showTabs ? true : false;
	this.selectedFiles = [];
	this.flickrInfo = {};
	this.urlInfo = {};
	var filters = [
		{title : __('All'), extensions : "jpg,jpeg,gif,png,ico,psd,swf,mp3,aac,wav,mp4,mpeg,avi,flv,mkv,pdf,docx,doc,xls,xlsx,rtf,ppt,pptx,odt,txt,csv,html,xml,yml,rar,zip"},
		{title : __('Images'), extensions : "jpg,jpeg,gif,png"},
		{title : __('Favicon'), extensions : "jpg,jpeg,gif,png,ico"},
		{title : __('Flash'), extensions : "swf"},
		{title : __('Audio'), extensions : "mp3,aac,wav"}
	];
	var modes = ["all", "image", "favicon", "flash", "audio"];
	if (this.mode !== 'all') {
		var idx = $.inArray(this.mode, modes);
		if (idx !== -1) filters = [filters[idx]];
	}
	var rt = ((!$.browser.msie && !$.browser.opera) ? 'html5,' : '') + 'flash,gears,html4';
	this.setContent(new Service.UIBuilder({
		type: 'TabbedPane', id: 'tabbedPane',
		tabs: [
			{name: __('Template Gallery'), children: [ // this.myTab
				{type: 'HorizontalLayout', columnWeights: ((this.mode !== 'image') ? null : [3, 9]), css: {marginTop: ((this.mode == 'all') ? 0 : 15)}, children: [
					{type: 'CustomContainer',
						ignore: (this.mode !== 'image'),
						styleClass: 'wb-list-control well',
						css: {height: 285},
						init: function() {
							var iBlock, iInput, eBlock, addCat;
							thisClass.tagMenu = $('<ul>').addClass('nav nav-pills nav-stacked tag-menu')
								.append('<li class="active"><a class="tag-item" href="javascript:void(0)"><i class="glyphicon glyphicon-folder-open"></i> ' + __('All') + '</a></li>')
								.on('click', '.tag-item', function() {
									thisClass.selectImageCat($(this).parent().data('tag'));
								})
								.on('click', '.btn-rem', function() {
									if (confirm(__("Remove this category? All files in it will be deleted!"))) {
										var thisBtn = $(this);
										var cat = $(this).closest('li').data('tag');
										$.post(wb_builder.getUrl('del_image_cat'), {cat: cat}, function(data) {
											if (data.status === 'ok') {
												var li = thisBtn.parents('li');
												if (li.hasClass('active')) {
													thisClass.tagMenu.find('li:first-child a').click();
												}
												li.remove();
												$.each(thisClass.gallery.find('.tag-sort'), function() {
													if ($(this).data('tag') === cat) {
														$(this).remove();
													}
												});
												thisClass.invalidate();
											} else {
												thisClass.showMessage(data.msg, '<i class="glyphicon glyphicon-warning-sign"></i>', 'error', eBlock);
											}
										});
									}
								})
								.sortable({
									items: 'li:not(:first)',
									update: function(e, ui) {
										$.post(wb_builder.getUrl('move_image_cat'), {
											cat: ui.item.data('tag'),
											newIndex: ui.item.index() - 1
										}, function(data) {});
										thisClass.invalidate();
									}
								})
								.appendTo(this._elem);
							$('<button>').addClass('btn btn-link')
								.attr({type: 'button'})
								.css({marginLeft: '3px'})
								.append($('<i>').addClass('glyphicon glyphicon-plus')).append(' ' + __('New Item'))
								.on('click', function() {
									$(this).addClass('hide');
									iBlock.removeClass('hide');
									iInput.focus();
								})
								.appendTo(this._elem);
							iBlock = $('<div>').addClass('input-group input-group-sm hide')
								.css({margin: '8px 0 0 8px'})
								.append(iInput = $('<input>').addClass('form-control')
											.attr({type: 'text'})
											.css({width: 100})
											.keyup(function(e) { if (e.keyCode === 13) addCat(); }))
								.append($('<span>').addClass('input-group-btn').append(
										$('<button>').addClass('btn btn-default')
											.append($('<i>').addClass('glyphicon glyphicon-plus'))
											.on('click', function() { addCat(); })))
								.appendTo(this._elem);
							eBlock = $('<div>').css({margin: '8px 0 0 -22px'}).appendTo(this._elem);
							addCat = function() {
								var v = $.trim(iInput.val());
								if (v) {
									$.post(wb_builder.getUrl('add_image_cat'), {cat: v}, function(data) {
										if (data.status === 'ok') {
											thisClass.addImageCat(data.cat);
											iInput.val('');
										} else {
											thisClass.showMessage(data.msg, '<i class="glyphicon glyphicon-warning-sign"></i>', 'error', eBlock);
										}
									});
								}
							};
							$('li', this.tagMenu).disableSelection();
						}
					},
					{type: 'VerticalLayout', children: [
						{type: 'FlowLayout', verticalAlign: 'middle', children: [
							{type: 'Label', id: 'galMsg', css: {lineHeight: '30px'}, text: (
								(this.mode === 'image' || this.mode === 'favicon')
									? (this.isMultiselect
										? __('Select pictures by clicking below or')
										: __('Select picture below or')
									  )
									: __('Select file below or')
							)},
							{type: 'Button', buttonStyle: UIButton.STYLE_INFO,
								css: {marginTop: '-5px'},
								attr: {id: this.id + '_uploader'},
								text: (
									(this.mode === 'image' || this.mode === 'favicon')
										? __('Upload New Picture')
										: __('Upload New File')
								),
								init: function(def) {
									thisClass.uploader = new plupload.Uploader({
										runtimes: rt,
										browse_button: def.attr.id,
										container: thisClass.id,
										multi_selection: true,
										multiple_queues: false,
										urlstream_upload: true,
										max_file_count: 1,
										//max_file_size: "60mb",
										url: wb_builder.getUrl('upload') + ((thisClass.mode === 'favicon') ? ('?mode=' + thisClass.mode) : ''),
										multipart_params: {tag: thisClass.tagSelected},
										flash_swf_url: wb_builder.modBaseUrl + 'js/lib/plupload/js/plupload.flash.swf',
										filters: filters
									});
								}
							},
							{type: 'FlowLayout', css: {float: 'right'}, ignore: (this.mode !== 'all'), children: [
								{type: 'Label', text: (__('Show') + ':')},
								{type: 'DropdownBox',
									css: {marginTop: '-5px', maxWidth: 160},
									value: this.mode,
									options: [
										{name: __('All'), id: 'all'},
										{name: __('Images'), id: 'image'},
										{name: __('Audio'), id: 'audio'},
										{name: __('Flash'), id: 'flash'}
									],
									change: function() {
										thisClass.mode = this.getValue();
										thisClass.clearGallery();
										thisClass.loadGallery();
									}
								}
							]}
						]},
						{type: 'CustomContainer', id: 'gallery', tag: 'ul',
							styleClass: 'thumbnails wb_media_library',
							css: {marginTop: '15px'},
							attr: {id: 'galList' + this.id}
						}
					]}
				]}
			]},
			{name: __('Free Gallery'), ignore: !this.showTabs,
				init: function() { thisClass.loadFlickContent(this); }
			},
			{name: __('Picture URL'), ignore: !this.showTabs,
				init: function() { thisClass.loadUrlContent(this); }
			}
		],
		change: function(fields, tab) {
			thisClass.hideProgress();
			thisClass.tabActive = parseInt($(tab).attr('href').substr(-1), 10);
			if (thisClass.tabActive === 1 && !thisClass.flickrInfo.galleryLoaded) {
				thisClass.loadFlickrGallery();
			}
		}
	}), true);
    this.setSize(760);
	
	this.gallery = this.fields.gallery.getElem();
	this.galMsg = this.fields.galMsg.getElem();
	
	this.uploader.init();
	
	this.uploader.bind('FilesAdded', function(up) {
		thisClass.hideMessage();
		thisClass.showProgress(0, true);
		setTimeout(function () { up.start(); }, 100);
	});
	this.uploader.bind('BeforeUpload', function(up, file) {
        thisClass.uploader.settings.multipart_params.tag = thisClass.tagSelected;
    });
	this.uploader.bind('FileUploaded', function(up, file, data) {
		data.response = data.response.replace(/^<pre[^>]+>(.+)<\/pre>$/i,'$1'); // strange bug in Opera browser
		var r = $.parseJSON(data.response);
		if (typeof(r) === "object" && !("error" in r)) {
            var fileName = r.result ? r.result : file.name.toLowerCase();
			var thumb = thisClass.addThumb(wb_builder.userGalleyUrl + 'thumbs/' + fileName , true);
			thumb.click();
			thisClass.invalidate();
		}
		if (!up.total.queued) {
			thisClass.hideProgress(false, false);
			thisClass.hideMessage();
		}
		if (typeof(r) === "object" && ("error" in r)) {
			if (r.error.verifySession) {
				wb_builder.verifySession(function(sess, req) {
					if (sess && req) thisClass.showMessage(r.error.message, __("Upload error"), "error");
				});
			} else {
				thisClass.showMessage(r.error.message, __("Upload error"), "error");
			}
		}
	});
	this.uploader.bind('UploadProgress', function(up, files){
		var addMsg = up.total.queued ? (__('Files left:') + up.total.queued) : null;
		if (up.runtime === 'html5' || (up.total.queued || files.percent !== 100))
			thisClass.showProgress(files.percent, true, addMsg);
	});
	
	this.progress = $('<div class="wb_media_progress_wrap">' +
				'<div class="wb_media_progress progress">' +
					'<div class="progress-bar progress-bar-striped active" style="width: 1%;">' +
						'<span class="sr-only"></span>' +
					'</div>' +
				'</div>' +
				'<div class="status"></div>' +
				'<div class="status2"></div>' +
			'</div>');
	
	this.msg = $('<div class="alert alert-error" style="margin:0 10px 5px 30px">' +
			'<a class="close" data-dismiss="alert" href="#">&times;</a>' +
			'<span></span>' +
		'</div>');
	
	this.thumb = $('<li class="thumb-li">' +
			'<a href="javascript:void(0)" class="btn btn-default btn-xs" style="display: none;"><i class="glyphicon glyphicon-remove"></i></a>' +
			'<a href="javascript:void(0)" class="thumbnail">' +
				'<img src="" alt="" />' +
			'</a>' +
			'<span class="wb_thumb_name"></span>' +
		'</li>');
	
	//"Add New" thumb start
	var thumb = this.thumb.clone().addClass("firstThumb");
	var name = __("Add New");
	$("span", thumb).remove();
	$("img", thumb).remove();
	$("a.thumbnail", thumb).attr({"title": name, id:"addNewThumb"+this.id}).append('<span class="empty"><i class="glyphicon glyphicon-plus"></i><span class="name">'+name+'</span></span>');
	this.gallery.prepend(thumb);
	thumb.fadeIn();
	this.uploader2 = new plupload.Uploader({
		runtimes : rt,
		browse_button : "addNewThumb"+this.id,
		container : 'galList'+ this.id,
		multi_selection: true,
		multiple_queues : false,
		urlstream_upload : true,
		max_file_count : 1,
		url : wb_builder.getUrl("upload"),
        multipart_params: {tag: thisClass.tagSelected},
		flash_swf_url : wb_builder.modBaseUrl + "js/lib/plupload/js/plupload.flash.swf",
		filters : filters
	});
	this.uploader2.init();

    this.uploader2.bind('BeforeUpload', function(up, file) {
        thisClass.uploader2.settings.multipart_params.tag = thisClass.tagSelected;
    });
	this.uploader2.bind('FilesAdded', function(up) {
		thisClass.hideMessage();
		thisClass.showProgress(0, true);
		setTimeout(function () { up.start(); }, 100);
	});
	this.uploader2.bind('FileUploaded', function(up, file, data) {
		data.response = data.response.replace(/^<pre[^>]+>(.+)<\/pre>$/i,'$1'); // strange bug in Opera browser
		var r = $.parseJSON(data.response);
		if (typeof(r) === "object" && !("error" in r)) {
            var fileName = r.result ? r.result : file.name.toLowerCase();
			var thumb = thisClass.addThumb(wb_builder.userGalleyUrl + 'thumbs/' + fileName, true);
			thumb.click();
			thisClass.invalidate();
		}
		if (!up.total.queued) {
			thisClass.hideProgress(false, false);
			thisClass.hideMessage();
		}
		if (typeof(r) === "object" && ("error" in r)) {
			if (r.error.verifySession) {
				wb_builder.verifySession(function(sess, req) {
					if (sess && req) thisClass.showMessage(r.error.message, __("Upload error"), "error");
				});
			} else {
				thisClass.showMessage(r.error.message, __("Upload error"), "error");
			}
		}
	});
	this.uploader2.bind('UploadProgress', function(up, files){
			var addMsg = up.total.queued ? (__('Files left:') + up.total.queued) : null;
			if (up.runtime === 'html5' || (up.total.queued || files.percent !== 100))
				thisClass.showProgress(files.percent, true, addMsg);
		});
	Service.templates.addChangeListener(function() {
		thisClass.requiresRevalidation = true;
	});
};

MediaLibrary.prototype.sort = function(scrollToThumb) {
	var thumbs = this.gallery.find('.thumb-li:not(.firstThumb)').toArray();
	thumbs.sort(function(a, b) {
		var an = $(a).children('.wb_thumb_name').text(),
			bn = $(b).children('.wb_thumb_name').text();
		if (an == bn) return 0;
		return (an > bn) ? 1 : -1;
	});
	for (var i in thumbs) {
		this.gallery.append(thumbs[i]);
	}
	if (scrollToThumb) {
		var scroll = scrollToThumb.offset().top - this.gallery.offset().top;
		this.gallery.get(0).scrollTop = scroll;
	}
};

/**
 * Loads image url content to selected content
 * 
 * @param content Where to append Flick content
 */
MediaLibrary.prototype.loadUrlContent = function(content) {
	var thisClass = this, searchFunc;
	Service.UIBuilder.buildLayout({type: 'VerticalLayout', css: {marginTop: '15px'}, children: [
		{type: 'Label', text: __('Picture URL')},
		{type: 'FlowLayout', children: [
			{type: 'TextField', id: 'urlInput', value: 'http://', init: function() {
				this.on('keyup', function(e) {
					if (e.keyCode === 13) searchFunc();
				});
			}},
			{type: 'Button', text: __('Insert'),
				buttonStyle: UIButton.STYLE_INFO,
				click: (searchFunc = function() {
					thisClass.loadUrlImage();
				})
			}
		]},
		{type: 'CustomContainer', tag: 'span', styleClass: 'help-block help-block-sm',
			content: (__('Example') + ': http://www.google.com/images/srpr/logo3w.<u>png</u>')
		},
		{type: 'CustomContainer', id: 'imgPreview',
			styleClass: 'thumbnail',
			css: {marginTop: 15, marginBottom: 0, minHeight: 190, maxHeight: 190, overflow: 'hidden'},
			init: function() {
				var img, prev, err;
				this.getElem()
					.append(img = $('<img>').css({minHeight: 170}).hide())
					.append(prev = $('<div>')
						.css({textAlign: 'center', marginTop: 76, color: '#999999'})
							.text(__('Preview')))
					.append(err = $('<span>').addClass('alert error').hide()
						.text(__('URL is incorrect. May be you forgot ".jpg" or ".png" at the end of URL')));
				
				this.setImage = function(url) {
					var ext = url.split('.'); 
					ext = ext[ext.length - 1];
					if (ext && $.inArray(ext.toLowerCase(), ['jpg', 'jpeg', 'gif', 'png']) !== -1) {
						img.get(0).src = thisClass.urlInfo.url = url;
						img.show();
						err.hide();
					} else {
						img.hide();
						err.show();
					}
					prev.addClass('hide');
					this.css({minHeight: 'auto'});
				};
			}
		}
	]}, content, this.fields);
};

/**
 * Load image from url
 */
MediaLibrary.prototype.loadUrlImage = function() {
	this.fields.imgPreview.setImage(this.fields.urlInput.getValue());
};

/**
 * Loads flick media to selected content
 * 
 * @param content Where to append Flick content
 */
MediaLibrary.prototype.loadFlickContent = function(content) {
	var thisClass = this, searchFunc;
	Service.UIBuilder.buildLayout({type: 'VerticalLayout', css: {marginTop: '15px'}, children: [
		{type: 'FlowLayout', children: [
			{type: 'TextField', id: 'searchInput', init: function() {
				this.on('keyup', function(e) {
					if (e.keyCode === 13) searchFunc();
				});
			}},
			{type: 'Button', text: __('Search'),
				buttonStyle: UIButton.STYLE_INFO,
				click: (searchFunc = function() {
					thisClass.flickrInfo.searchPhrase = thisClass.fields.searchInput.getValue();
					thisClass.flickrInfo.listPage = 1;
					thisClass.loadFlickrGallery();
				})
			}
		]},
		{type: 'CustomContainer', id: 'flcrGallery', tag: 'ul',
			styleClass: 'thumbnails wb_media_library',
			css: {marginTop: '15px'},
			attr: {id: 'galList' + this.id +'_flcr'}
		}
	]}, content, this.fields);
	this.flickrInfo.gallery = this.fields.flcrGallery.getElem();
};

/**
 * Loads flick gallery, if we have this.flickrInfo.searchPhrase - will do the search, otherwise random images
 * @param append
 */
MediaLibrary.prototype.loadFlickrGallery = function(append) {
	if (this.flickrInfo.galleryLoading) return false;
	this.flickrInfo.galleryLoading = true;
	if (!append) this.flickrInfo.gallery.empty();
	var thisClass = this;
	this.showProgress(0, true);
	
	var url = this.flickrInfo.searchPhrase ? (this.flickrListUrl + '&text=' + this.flickrInfo.searchPhrase) : this.flickrListRandomUrl;
	url += '&api_key=' + this.flickrKey;
	if (this.flickrInfo.listPage)
		url += '&page=' + this.flickrInfo.listPage;
	else
		this.flickrInfo.listPage = 1;
	
	//get list
	var err = false;
	$.ajax({
		url: url,
		success: function(data){
			//continue
			if (data.stat === "ok") {
				thisClass.flickrInfo.listPages = data.photos.pages;
				var total = data.photos.photo.length;
				if (total) {
					var loaded = 0;
					$.each(data.photos.photo, function(i, item) {
						//get image info
						$.ajax({
							url: thisClass.flickrImagesUrl + '&api_key=' + thisClass.flickrKey + '&photo_id=' + item.id,
							success: function(data){
								loaded++;
								if (data.stat === "ok") {
									var thumb = data.sizes.size[0].source;
									var orig = data.sizes.size[0].source;
									//get original photo
									$.each(data.sizes.size, function(i, size) {
										if (parseInt(size.width) <= 2000 && parseInt(size.height) <= 2000)
											orig = size.source;
									});
									thisClass.addThumb(thumb, false, thisClass.flickrInfo.gallery, {title:item.title, url:orig});
									thisClass.showProgress(parseInt(loaded/total*100), true);
								}
								//remove show more thumb
								if (i === 0) {
									if (thisClass.flickrInfo.showMoreThumb)
										thisClass.flickrInfo.showMoreThumb.remove();
								}
								else if (loaded === total) {
									//show more?
									if (thisClass.flickrInfo.listPages > thisClass.flickrInfo.listPage) {
										thisClass.flickrInfo.showMoreThumb = thisClass.thumb.clone();
										var name = __("Show more");
										$("span", thisClass.flickrInfo.showMoreThumb).remove();
										$("img", thisClass.flickrInfo.showMoreThumb).remove();
										$("a.thumbnail", thisClass.flickrInfo.showMoreThumb).attr({"title": name}).append('<span class="empty"><i class="glyphicon glyphicon-plus"></i><span class="name">'+name+'</span></span>').click(function() {
											thisClass.flickrInfo.listPage = thisClass.flickrInfo.listPage+1;
											thisClass.loadFlickrGallery(true);
										});
										thisClass.flickrInfo.gallery.append(thisClass.flickrInfo.showMoreThumb);
										thisClass.flickrInfo.showMoreThumb.fadeIn();
									}
									thisClass.hideProgress();
									thisClass.flickrInfo.galleryLoading = false;
									thisClass.flickrInfo.galleryLoaded = true;
								}
							},
							error: function(data){
								thisClass.hideProgress();
								thisClass.flickrInfo.galleryLoading = false;
							},
							dataType: "json"
						});
					});
				}
				else {
					thisClass.hideProgress(false, function() {
						thisClass.showMessage(__("No images found."), '<i class="glyphicon glyphicon-warning-sign"></i>', "error", thisClass.flickrInfo.gallery);
						thisClass.flickrInfo.galleryLoading = false;
					});
				}
			}
			else {
				thisClass.hideProgress(false, function() {
					thisClass.showMessage(__("Image loading failed."), '<i class="glyphicon glyphicon-warning-sign"></i>', "error", thisClass.flickrInfo.gallery);
					thisClass.flickrInfo.galleryLoading = false;
				});
			}
		},
		error: function(data){
			err = true;
		},
		dataType: "json"
	});
	if (err) {
		thisClass.hideProgress(false, function() {
			thisClass.showMessage(__("Image loading failed."), '<i class="glyphicon glyphicon-warning-sign"></i>', "error", thisClass.flickrInfo.gallery);
			thisClass.flickrInfo.galleryLoading = false;
		});
	}
};

MediaLibrary.prototype.clearGallery = function() {
	this.gallery.children("li:not(.firstThumb)").remove();
	this.galleryLoaded = false;
	this.invalidate();
};

/**
 * Reload gallery
 * @param {null} cb
 */
MediaLibrary.prototype.loadGallery = function(cb) {
	var thisClass = this;
//	this.gallery.empty();
	this.hideMessage();
	this.showProgress(0).children(".progress-bar").animate({width: "100%"}, 10000);
	this.clearGallery();
	var thisData;
	$.get(wb_builder.getUrl("upload_list"), {mode:this.mode}, function(data) {
		var reselectTag = null;
		if (data && (typeof data === 'object') && ('error' in data)) {
			thisData = [];
			if (data.error.verifySession) {
				wb_builder.verifySession(function(sess, req) {
					if (sess && req) thisClass.showMessage(data.error.message, '<i class="icon-warning-sign"></i>', 'error');
				});
			} else {
				thisClass.showMessage(data.error.message, '<i class="icon-warning-sign"></i>', 'error');
			}
		} else {
			if (thisClass.mode === 'image' && WB_Builder.isset(data.list)) {
				thisData = data.list;
				if (thisClass.tagMenu && data.tags) {
					reselectTag = thisClass.tagMenu.children('li.active').data('tag');
					thisClass.tagMenu.children('li:not(:first)').remove();
					$.each(data.tags, function(i, el) {
						if (el === undefined || el === null || el === false) return;
						thisClass.addImageCat(el);
					});
				}
			} else {
				thisData = data;
			}
		}
		thisClass.hideProgress(false, function() {
			if (thisData && thisData.length) {
				
//				thisClass.gallery.show();
				for (var i = 0; i < thisData.length; i++) {
					thisClass.addThumb(thisData[i]);
				}
				thisClass.setSelectedFiles(thisClass.selectedFiles);
				thisClass.checkSelected();
			} else {
				thisClass.showMessage(__("No files found."), '<i class="icon-info-sign"></i>', "info");
			}
			thisClass.selectImageCat(reselectTag);
			thisClass.requiresRevalidation = false;
		});
	}).error(function() {
		thisClass.hideProgress(false, function() {
			thisClass.showMessage(__("File loading failed."), '<i class="icon-warning-sign"></i>', "error");
		});
	});
	this.galleryLoaded = true;
};

/**
 * Check if any thumbs selected and disable primary button if needed
 */
MediaLibrary.prototype.checkSelected = function() {
	var selected = this.getSelectedFiles();
	if (!selected.length)
		this.buttons.find(".btn-success").attr("disabled", "disabled");
	else
		this.buttons.find(".btn-success").removeAttr("disabled");
};

/**
 * Add image thumb to gallery
 * 
 * @param {String} url image url
 * @param {Boolean} prepend if true thumb will be prepended, otherwise - appended to gallery
 * @param {Object} gallery where to insert thumbs, if undefined - this.gallery will be used
 * @param {Object} external image info
 * @param {number} size
 */
MediaLibrary.prototype.addThumb = function(url, prepend, gallery, external, size) {
	var thumb = this.thumb.clone();
	if (size) thumb.removeClass('span2').addClass('span' + size);
	var imgData = $.extend({
			width: 0, height: 0, size: 0
		}, ((typeof url === "object") ? url : { file: url }));
    var tag = this.tagSelected;
	if (typeof url === "object") {
        tag = WB_Builder.isset(url.tag) ? url.tag : null;
        url = url.file;
    }
    thumb.addClass('tag-sort');
    thumb.data('tag', tag);

	var name = url.split("/");
    name = name[name.length - 1];
	var title = name.replace(/-ts\d+/gi, "");
	if (imgData.width > 0 && imgData.height > 0) {
		title += " (" + imgData.width + "x" + imgData.height + ")";
	}
	
	if (!gallery)
		gallery = this.gallery;


	$("a.thumbnail", thumb).attr("title", (external ? external.title : title));
	$("span", thumb).html(name);
	var thumbUrl = url;
	var ext = url.split(".");
	ext = (ext.length > 1) ? ext[(ext.length - 1)] : "";
	if (ext === "swf") {
		thumbUrl = wb_builder.modBaseUrl + "img/file_flash.png";
	} else if ("mp3,aac,wav".indexOf(ext) >= 0) {
		thumbUrl = wb_builder.modBaseUrl + "img/file_audio.png";
	} else if (ext === "pdf") {
		thumbUrl = wb_builder.modBaseUrl + "img/file_pdf.png";
	} else if ("docx,doc,xls,xlsx,rtf,ppt,pptx,odt".indexOf(ext) >= 0) {
		thumbUrl = wb_builder.modBaseUrl + "img/file_doc.png";
	} else if (ext === "rar") {
		thumbUrl = wb_builder.modBaseUrl + "img/file_rar.png";
	} else if (ext === "zip") {
		thumbUrl = wb_builder.modBaseUrl + "img/file_zip.png";
	} else if ("mp4,mpeg,avi,flv,mkv".indexOf(ext) >= 0) {
		thumbUrl = wb_builder.modBaseUrl + "img/file_video.png";
	} else if ("psd,csv,html,xml,yml,txt".indexOf(ext) >= 0) {
		thumbUrl = wb_builder.modBaseUrl + "img/file_doc.png";
	}
	$("img", thumb).attr("src", thumbUrl + "?ts=" + (new Date()).getTime());
	if (!external) {
		thumb.data("url", wb_builder.userGalleyUrl + name);
		thumb.data("wb_width", imgData.width);
		thumb.data("wb_height", imgData.height);
		thumb.data("wb_size", imgData.size);
	} else {
		thumb.data("url", external.url);
		thumb.data("external", 1);
		$("a.btn", thumb).remove();
	}
		
	//thumb.css("opacity", 0);
	var thisClass = this;
	thumb.on("click touchend", function() {
		if (thisClass.isMultiselect) {
			$(this).toggleClass("active");
		} else {
			thisClass.dialog.find(".wb_media_library").children().removeClass("active");
			$(this).addClass("active");
		}
		thisClass.checkSelected();
	}).bind("dblclick", function(e) {
		e.stopPropagation();
		if (!thisClass.isMultiselect)
			thisClass.dialog.find(".wb_media_library").children().removeClass("active");

		$(this).addClass("active");
		
		thisClass.buttons.find(".btn-success").click();
	}).hover(
		function() {
			$("a.btn", this).css("display", "block");
		}, function() {
			$("a.btn", this).css("display", "none");
		}
	);
	$("a.btn", thumb).bind("click touchend", function(e) {
		if (confirm(__("Remove this file?"))) {
			var url = wb_builder.makeRelUrl($("img", thumb).get(0).src.split("?", 2)[0]);
			$.get(wb_builder.getUrl("upload_remove"), { filename: name });
			thumb.remove();
			thisClass.invalidate();
		}
		e.stopPropagation();
		return false;
	});
	if (typeof(prepend) === "undefined")
		prepend = false;
	if (prepend) {
		if ($(".firstThumb", gallery).length) 
			$(".firstThumb", gallery).after(thumb);
		else
			gallery.prepend(thumb);
	}
	else
		gallery.append(thumb);
	thumb.fadeIn();
	
	clearInterval(this.sortTimeInterval);
	this.sortTimeInterval = setTimeout(function() {
		thisClass.sort(thumb);
	}, 150);
	
	return thumb;
};

/**
 * Add category to image tag menu
 *
 * @param {String} name tag name
 */
MediaLibrary.prototype.addImageCat = function(name) {
    this.tagMenu.append('<li data-tag="'+ name +'">'
        + '<a class="tag-item" href="javascript:void(0)">'
        + '<i class="glyphicon glyphicon-folder-open"></i> '+ name
        + '</a>'
        + '<button class="btn btn-xs btn-link btn-rem"><i class="glyphicon glyphicon-remove"></i></button>'
        + '</li>');
	this.invalidate();
};

/**
 * Switches view to one of image categories (tags)
 * @param {string} tagName
 */
MediaLibrary.prototype.selectImageCat = function(tagName) {
	if (this.tagMenu) {
		var $item = null;
		var thisClass = this;
		this.tagMenu.find('li').each(function() {
			var $this = $(this);
			$this.removeClass('active');
			if ($this.data('tag') === tagName || !$item)
				$item = $this;
		});
		$item.addClass('active');
		thisClass.tagSelected = $item.data('tag');
		if (thisClass.tagSelected) {
			thisClass.gallery.find('.tag-sort').each(function() {
				if ($(this).data('tag') === thisClass.tagSelected) {
					$(this).removeClass('hide');
				}
				else {
					$(this).addClass('hide');
				}
			});
		} else {
			thisClass.gallery.find('.tag-sort').removeClass('hide');
		}
	}
};

/**
 * Clear file selection (unselect all files)
 */
MediaLibrary.prototype.clearFileSelection = function() {
	this.dialog.find(".wb_media_library").children().removeClass("active");
//	this.gallery.children().removeClass("active");
};

/**
 * Set selected files
 * @param list list of relative file url's to select
 */
MediaLibrary.prototype.setSelectedFiles = function(list) {
	if (!list.length)
		return false;
	this.selectedFiles = list;
	this.gallery.children().removeClass("active");
	//1 external file selected
	if (this.showTabs && this.selectedFiles[0].substr(0, 4) === 'http') {
		this.fields.urlInput.setValue(this.selectedFiles[0]);
		this.loadUrlImage();
		this.fields.tabbedPane.selectTab(2);
		this.tabActive = 2;
	}
	//might be multiple :F
	else {
		this.gallery.children().each(function() {
			var url = $(this).data("url") ? $(this).data("url").split("?") : [""];
			url = wb_builder.makeRelUrl(url[0]);
			for (var k in list) {
				if (url === wb_builder.makeRelUrl(list[k]))
					$(this).addClass("active");
			}
		});
	}
};

/**
 * Get selected file list
 * @param {Object} asObject get selected files as object { file: ..., width: ..., height: ..., size: ... }
 * @return array of relative files url's
 */
MediaLibrary.prototype.getSelectedFiles = function(asObject) {
	var list = [];
	if (this.tabActive === 2 && this.urlInfo.url) {
		this.clearFileSelection();
		if (asObject) {
			list[list.length] = { file: this.urlInfo.url, width: 0, height: 0, size: 0 };
		} else {
			list[list.length] = this.urlInfo.url;
		}
	}
	else {
		var thisAsObject = asObject;
		this.dialog.find(".wb_media_library").children(".active").each(function() {
			var url;
			if ($(this).data("external")) {
				url = $(this).data("url");
				if (thisAsObject) {
					list[list.length] = { file: url, width: 0, height: 0, size: 0 };
				} else {
					list[list.length] = url;
				}
			}
			else {
				url = $(this).data("url").split("?");
				if (thisAsObject) {
					list[list.length] = {
						file: wb_builder.makeRelUrl(url[0]),
						width: parseInt($(this).data("wb_width"), 10),
						height: parseInt($(this).data("wb_height"), 10),
						size: parseInt($(this).data("wb_size"), 10)
					};
				} else {
					list[list.length] = wb_builder.makeRelUrl(url[0]);
				}
			}
		});
	}
	
	return list;
};

/**
 * Show progress bar
 * @param value progress bar value in percents
 * @param showVal
 * @param addMsg
 * @return progress jQuery object
 */
MediaLibrary.prototype.showProgress = function(value, showVal, addMsg) {
	//thumbnails
	if (typeof(showVal) === "undefined")
		showVal = false;
	this.progress.find(".progress-bar").stop().css("width", (value * 1) + "%");
	if (showVal)
		this.progress.find(".progress-bar > span").text((value * 1) + "%");
		this.progress.children(".status").html((value * 1) + "%");
	if (addMsg) {
		this.progress.children(".status2").html(addMsg);
	}
	this.dialog.find(".tab-content").fadeTo(0, 0.3);
	this.content.append(this.progress);
	this.progress.fadeIn();
	return this.progress;
};

/**
 * Hide progress bar
 * @param instant if true will be hidden instantly else with fadeout animation
 * @param callback callback to be called when hide is complete
 * @return progress jQuery object
 */
MediaLibrary.prototype.hideProgress = function(instant, callback) {
	var thisCallback = (callback && typeof(callback) === "function") ? callback : null;
	this.dialog.find(".tab-content").fadeTo(0, 1);
	this.progress.children(".status2").html('');
	if (instant) {
		this.progress.detach();
		if (thisCallback) thisCallback();
	} else {
		this.progress.fadeOut(function() {
			$(this).detach();
			if (thisCallback) thisCallback();
		});
	}
	return this.progress;
};

/**
 * Show inline message
 * @param {String} message message text
 * @param {String} title message title
 * @param {String} type message type (value one of: error, success, info, block)
 * @param {Object} container to add this message
 */
MediaLibrary.prototype.showMessage = function(message, title, type, container) {
	if (!container)
		container = this.gallery;
	var msg = (title ? ("<strong>" + title + "</strong> ") : "") + message;
	this.msg.children("span").html(msg);
	this.msg.removeClass("alert-error");
	this.msg.removeClass("alert-success");
	this.msg.removeClass("alert-info");
	this.msg.removeClass("alert-block");
	if (type === "error" || type === "success" || type === "info" || type === "block") {
		this.msg.addClass("alert-" + type);
	} else {
		this.msg.addClass("alert-block");
	}
	this.msg.css("opacity", 1);
	container.prepend(this.msg);
	this.msg.fadeIn();
};

/**
 * Hide inline message
 */
MediaLibrary.prototype.hideMessage = function() {
	this.msg.detach();
};

/**
 * Set dialog visibility
 * @param visible dialog visibility
 * @param noAction (optional) no show/hide action
 * @param ignoreEvent (optional) ignore event
 */
MediaLibrary.prototype.setVisible = function(visible, noAction, ignoreEvent) {
	if (visible && (!this.galleryLoaded || this.requiresRevalidation)) {
		this.loadGallery(this.checkSelected());
	}
	Dialog.prototype.setVisible.call(this, visible, noAction, ignoreEvent);
};

MediaLibrary.prototype.createDefaultButtons = function() {
	if (this.mode !== "all") {
		var librartLink = $('<a href="javascript:void(0)" iid="fullMediaLibrary"></a>')
				.addClass('btn btn-default')
				.text(__("Full Media Library"))
				.on("click", function() {
					var lib = MediaLibrary.open(__("Upload media"), false, 'all');
					lib.galMsg.parent().hide();
					lib.addButton(__("Close"));
					lib.setVisible(true);
					return false;
				})
				.css({float: (wb_builder.rtl ? 'right' : 'left')});
		this.buttons.prepend(librartLink);
	}
};

/**
 * Updates media gallery state to reload information on next open.
 */
MediaLibrary.prototype.invalidate = function() {
	for( var i in MediaLibrary.dialogs )
		MediaLibrary.dialogs[i].requiresRevalidation = true;
};

// STATIC PROPERTIES AND METHODS

MediaLibrary.dialogs = {}; // instances of dialogs

/**
 * Creates or returns an already existing instance of media library dialog.
 * @param {string} title
 * @param {boolean} multi
 * @param {string} mode Either "all", "image", "sound" or "flash".
 * @param {boolean} showTabs
 * @returns {MediaLibrary}
 */
MediaLibrary.open = function(title, multi, mode, showTabs) {
	var dtid = mode + ":" + (multi ? "1" : "0") + ":" + (showTabs ? "1" : "0");
	if( typeof(MediaLibrary.dialogs[dtid]) !== "object" )
		MediaLibrary.dialogs[dtid] = new MediaLibrary(title, multi, mode, showTabs);

	var dlg = MediaLibrary.dialogs[dtid];
	dlg.setTitle(title);
	dlg.removeAllButtons();
	dlg.createDefaultButtons();
	dlg.clearFileSelection();
	return dlg;
};

	Service.mediaLibrary = {
		open: MediaLibrary.open
	};
	
	return MediaLibrary;
});
;

/** WB PropertyDialog **/

define('PropertyDialog', ['Dialog', 'TabbedPane', 'Service'], function(Dialog, TabbedPane, Service) {
	'use strict';

/**
 * Property Dialog class
 * @param {string} title
 * @param {Object} uiDef property dialog definition object
 * @constructor
 */
var PropertyDialog = function(title, uiDef) { this.__construct(title, uiDef); };

PropertyDialog.prototype = new Dialog('%inherit%');
PropertyDialog.prototype.constructor = PropertyDialog;
/** @type TabbedPane */
PropertyDialog.prototype.tabbedPane = null;
PropertyDialog.prototype.bottomPane = null;
PropertyDialog.prototype.generalTab = null;
PropertyDialog.prototype.optionsTab = null;
/** @type {jQuery} */
PropertyDialog.prototype.tabElem = null;

/**
 * Construct Property dialog 
 * @param {string} title dialog title
 * @param {Object} uiDef property dialog definition object
 */
PropertyDialog.prototype.__construct = function(title, uiDef) {
	Dialog.prototype.__construct.call(this, title);
	var thisClass = this;
	this.content.empty();
	
	this.tabbedPane = new TabbedPane();
	//this.tabbedPane.setFixedHeight(200);
	this.content.append(this.tabbedPane.getElem());
	this.tabElem = $('<div>').addClass('wb-prop-dlg-tabs').append($('<div>').addClass('wb-prop-dlg-tabs-wrap').append(this.tabbedPane.elemNav)).appendTo(this.headerElem);
	this.tabbedPane.on('nav-show', function() {
		thisClass.tabbedPane.addClass('wb-prop-dlg-tabs-cont');
	}).on('nav-hide', function() {
		thisClass.tabbedPane.removeClass('wb-prop-dlg-tabs-cont');
	});
	
	this.bottomPane = $('<div>');
	this.content.append(this.bottomPane);
	
	var hasTabs = false, i, itemDef, item;
	if (typeof uiDef === 'object' && uiDef) {
		if (typeof uiDef.size === 'object' && uiDef.size) {
			if (uiDef.size.width) this.setSize(uiDef.size.width);
			if (uiDef.size.height) {
				this.tabbedPane.setFixedHeight(uiDef.size.height - 200);
			}
			if (uiDef.size.minBodyHeight) this.setMinBodyHeight(uiDef.size.minBodyHeight);
			if (uiDef.size.maxBodyHeight) this.setMaxBodyHeight(uiDef.size.maxBodyHeight);
		}
		if (uiDef.noScroll) {
			this.setNoScroll();
			this.tabbedPane.setNoScroll();
		}
		if (typeof uiDef.tabs === 'object' && uiDef.tabs && uiDef.tabs.length > 0) {
			uiDef.tabs.sort(function(a, b) {
				return (('priority' in a) ? a.priority : 0) - (('priority' in b) ? b.priority : 0);
			});
			for (i = 0; i < uiDef.tabs.length; i++) {
				itemDef = uiDef.tabs[i];
				item = this.tabbedPane.addTab(itemDef.name ? itemDef.name : __('General'), i);
				if (itemDef.general) {
					this.generalTab = item;
				} else if (!itemDef.name && !this.generalTab) {
					this.generalTab = item;
				}
				if (itemDef.options) {
					this.optionsTab = item;
				}
				hasTabs = true;
				if (itemDef.children) Service.UIBuilder.buildLayout(itemDef.children, item, this.fields);
			}
		}
		if (typeof uiDef.buttons === 'object' && uiDef.buttons && uiDef.buttons.length > 0) {
			for (i = 0; i < uiDef.buttons.length; i++) {
				itemDef = uiDef.buttons[i];
				this.addButton(
						itemDef.name,
						(('click' in itemDef && typeof itemDef.click === 'function') ? itemDef.click : null),
						(itemDef.primary ? true : false)
					);
			}
		}
		if (('open' in uiDef) && (typeof uiDef.open === 'function')) {
			this.onShown = function() { uiDef.open.call(thisClass, thisClass.fields); };
		}
		if (('close' in uiDef) && (typeof uiDef.close === 'function')) {
			this.onClose = function() { uiDef.close.call(thisClass, thisClass.fields); };
		}
	}
	if (hasTabs) this.tabbedPane.selectTab(0);
	
};

/**
 * Get general tab (if not exists will be created)
 * @returns tab content element as jQuery selector object
 */
PropertyDialog.prototype.getGeneralTab = function() {
	if (!this.generalTab) {
		this.generalTab = this.tabbedPane.addTab(__("General"), 0);
		this.tabbedPane.selectTab(this.generalTab.index());
	}
	return this.generalTab;
};

	window.WB_PropertyDialog = PropertyDialog;
	
	return PropertyDialog;
});
;

/** WB LinkDialog **/

define('LinkDialog', ['Dialog', 'Service'], function(Dialog, Service) {
	'use strict';

/**
 * Link Dialog class
 * @param {String} title
 * @param {Object} linkInfo
 */
var LinkDialog = function(title, linkInfo) {this.__construct(title, linkInfo);};

LinkDialog.prototype = new Dialog('%inherit%');
LinkDialog.prototype.constructor = LinkDialog;
LinkDialog.prototype.libraryDlg = null;
LinkDialog.prototype.linkInfo = {};
LinkDialog.prototype.isInfoSet = false;

/**
 * Construct Property dialog 
 * 
 * @param title dialog title
 * @param linkInfo info about link (type,url,target,title)
 */
LinkDialog.prototype.__construct = function(title, linkInfo) {
	Dialog.prototype.__construct.call(this, title);
	
	var thisClass = this;
	var fields = this.fields;
	
	this.setContent(new Service.UIBuilder({
		type: 'HorizontalLayout',
		columnWeights: [7, 5],
		children: [
			{type: 'VerticalLayout', children: [
				{type: 'RadioBox', id: 'linkUrlR', label: __('Web Address'),
					group: 'linkType',
					css: {marginBottom: 5},
					change: function() { thisClass.changeType('url'); }
				},
				{type: 'TextField', id: 'linkUrl', value: 'http://'},

				{type: 'RadioBox', id: 'linkPageR', label: __('Page on your Website'),
					group: 'linkType',
					css: {marginTop: 15, marginBottom: 5},
					change: function() { thisClass.changeType('page'); }
				},
				{type: 'MenuItemSelector', id: 'linkPage', anchorMode: true},

				{type: 'RadioBox', id: 'linkEmailR', label: __('Email Address'),
					group: 'linkType',
					css: {marginTop: 15, marginBottom: 5},
					change: function() { thisClass.changeType('email'); }
				},
				{type: 'TextField', id: 'linkEmail'},

				{type: 'RadioBox', id: 'linkFileR', label: __('File from your Website'),
					group: 'linkType',
					css: {marginTop: 15, marginBottom: 5},
					change: function() { thisClass.changeType('file'); }
				},
				{type: 'LinkEditSelector', id: 'linkFile',
					emptyMsg: __('No files selected'),
					click: function() {
						thisClass.changeType('file');
						thisClass.libraryDlg = Service.mediaLibrary.open(__('Select media'), false, 'all');
						thisClass.libraryDlg.addButton(__('Cancel'));
						thisClass.libraryDlg.addButton(__('Select'), function() {
							var list = thisClass.libraryDlg.getSelectedFiles();
							if (list.length > 0)
								fields.linkFile.setValue(list[0]);
							thisClass.libraryDlg.hide();
						}, true);

						thisClass.libraryDlg.show();
						return false;
					}
				},

				{type: 'Label', text: __('Link Title'),
					helpText: __('Link Title will pop up when you hover over the link'),
					css: {marginTop: 15}
				}, // title
				{type: 'TextField', id: 'linkTitle'}
			]},
			{type: 'VerticalLayout', children: [
				{type: 'CheckBox', id: 'linkTarget', label: __('Open in New Window')} // target
			]}
		]
	}, this.fields), true);
	
	if (linkInfo && linkInfo.type) {
		this.setInfo(linkInfo);
	} else {
		this.isInfoSet = false;
		setTimeout(function(){
			if (!thisClass.isInfoSet) {
				thisClass.changeType('url', true);
			}
		}, 100);
	}
	
};

/**
 * Change type for radio
 * @param {String} type
 * @param {boolean} noInfoSet
 */
LinkDialog.prototype.changeType = function(type, noInfoSet) {
	this.isInfoSet = (noInfoSet ? false : true);
	this.linkInfo.type = type;
	
	if (type === 'page') this.fields.linkPageR.setValue(true);
	else if (type === 'email') this.fields.linkEmailR.setValue(true);
	else if (type === 'file') this.fields.linkFileR.setValue(true);
	else {
		this.linkInfo.type = 'url';
		this.fields.linkUrlR.setValue(true);
	}
};

/**
 * Get type
 * 
 * @returns string Value of selected radio
 */
LinkDialog.prototype.getType = function() {
	return this.linkInfo.type;
};

/**
 * Set link info
 * @param {Object} info
 */
LinkDialog.prototype.setInfo = function(info) {
	this.clearInfo();
	if (info.type) {
		this.changeType(info.type);
		if (info.url) {
			var inp = 'link' + info.type.substring(0, 1).toUpperCase() + info.type.substring(1);
			if (this.fields[inp]) {
				if (info.type === 'page' && info.menuUID) {
					this.fields[inp].setExtendedValue({menuUID: info.menuUID, menuItemId: parseInt(info.url, 10), menuItemAnchor: info.anchor});
				} else {
					this.fields[inp].setValue(("" + info.url).trim());
				}
			}
		}
		if (info.title) {
			this.fields.linkTitle.setValue(info.title);
		}
		if (info.target) {
			this.fields.linkTarget.setValue(info.target);
		}
	}
	this.linkInfo = info;
};

/**
 * Clear link info
 */
LinkDialog.prototype.clearInfo = function() {
	this.changeType(null);
	this.fields.linkUrl.setValue('http://');
	this.fields.linkPage.setValue(null);
	this.fields.linkEmail.setValue(null);
	this.fields.linkFile.clearValue();
	this.fields.linkTitle.setValue(null);
	this.fields.linkTarget.setValue(false);
};

/**
 * Get link info
 */
LinkDialog.prototype.getInfo = function() {
	var params = {
		type: null,
		url: null,
		target: null,
		title: null
	};
	
	var type = this.getType();
	if (type) {
		params.type = type;
		var inp = 'link' + type.substring(0, 1).toUpperCase() + type.substring(1);
		if (this.fields[inp]) {
			params.url = this.fields[inp].getValue();
			if (params.url) params.url = ("" + params.url).trim();
			if (type === 'page') {
				var extv = this.fields[inp].getExtendedValue();
				params.menuUID = extv.menuUID;
				params.anchor = ('menuItemAnchor' in extv) ? extv.menuItemAnchor : null;
			}
			params.title = this.fields.linkTitle.getValue();
			params.target = this.fields.linkTarget.getValue();
		}
	}
	return params;
};


/**
 * Set dialog visibility
 * @param {Boolean} visible dialog visibility
 * @param {Boolean} noAction
 * @param {Boolean} ignoreEvent
 */
LinkDialog.prototype.setVisible = function(visible, noAction, ignoreEvent) {
	if (visible) {
		this.fields.linkPage.reloadMenuList();
		if (this.linkInfo.type && this.linkInfo.type === "page" && this.linkInfo.url) {
			if (this.linkInfo.menuUID) {
				this.fields.linkPage.setExtendedValue({menuUID: this.linkInfo.menuUID, menuItemId: parseInt(this.linkInfo.url, 10), menuItemAnchor: this.linkInfo.anchor});
			} else {
				this.fields.linkPage.setValue(this.linkInfo.url);
			}
		}
	}
	
	Dialog.prototype.setVisible.call(this, visible, noAction, ignoreEvent);
};

	window.WB_LinkDialog = LinkDialog;
	
	return LinkDialog;
});
;

/** WB PasteDialog **/

define('PasteDialog', ['Dialog'], function(Dialog) {
	'use strict';

/**
 * Text Paste Dialog class
 * @param {String} title
 * @param {Object} linkInfo
 */
var PasteDialog = function(title, linkInfo) {this.__construct(title, linkInfo);};

PasteDialog.prototype = new Dialog('%inherit%');
PasteDialog.prototype.constructor = PasteDialog;

/**
 * Construct Property dialog 
 * 
 * @param {string} title dialog title
 * @param {Object} linkInfo info about link (type,url,target,title)
 */
PasteDialog.prototype.__construct = function(title, linkInfo) {
	Dialog.prototype.__construct.call(this, title);
	
	var fields = this.fields;
	this.content.empty();
	
	var lbl = $('<label for="pasteText'+this.id+'"><small></small></label>');
	lbl.children("small").append(__("Please paste inside the following box using mouse or keyboard (Ctrl/Cmd+V) and hit Paste"));
	this.content.append(lbl);
	
	//TextArea
	fields.pasteText = new WB_TextAreaControl();
	fields.pasteText.input.css({"width": "510px", "height": "160px"}).attr("id", 'pasteText'+this.id);
	this.content.append(fields.pasteText.elem);
	
	//Check "Paste inside"
	fields.pasteInside = new WB_CheckBoxControl(__('Paste text inside selected element'));
	this.content.append(fields.pasteInside.elem);
};

/**
 * Show/Hide "Paste inside element" checkbox
 * @param {boolean} show
 */
PasteDialog.prototype.showCheck = function(show) {
	this.fields.pasteText.setValue('');
	this.fields.pasteInside.setValue(null);
	if (show) {
		this.fields.pasteInside.elem.show();
	}
	else {
		this.fields.pasteInside.elem.hide();
	}
		
};

/**
 * Get link info
 */
PasteDialog.prototype.getInfo = function() {
	var params = {
		text: this.fields.pasteText.getValue(),
		inside: this.fields.pasteInside.getValue()
	};
	
	return params;
};
	
	return PasteDialog;
});
;

/** WB Preloader **/

define('Preloader', ['Dialog'], function(Dialog) {
	'use strict';

/**
 * Preloader class
 * Dialog used to view load/save progress
 * @param {String} title
 */
var Preloader = function(title) {this.__construct(title);};

Preloader.prototype = new Dialog('%inherit%');
Preloader.prototype.constructor = Preloader;
Preloader.prototype.progress = null;
Preloader.prototype.msg = null;
Preloader.prototype.cancelMonitoring = false;
Preloader.prototype.mon = null;
Preloader.prototype.loaderStack = null;
Preloader.prototype.stackIndex = -1;
Preloader.prototype._container = null;
Preloader.prototype._nContainer = null;

/**
 * Construct Preloader dialog
 * @param title dialog title
 */
Preloader.prototype.__construct = function(title) {
	Dialog.prototype.__construct.call(this, title, true);
	var thisClass = this;
	
	this.content.empty();
	this._container = $('<div>').appendTo(this.content);
	this._nContainer = ({
		elem: null,
		title: null,
		message: null,
		init: function(content) {
			this.elem = $('<div>');
			this.elem.appendTo(content);
			return this;
		},
		addMessage: function(message, title) {
			var elem = $('<div>').addClass('alert alert-info');
			if (title) {
				$('<strong>').text(title).appendTo(elem);
			}
			if (message) {
				$('<span>').text((title ? ' ' : '') + message).appendTo(elem);
			}
			if (title || message) elem.appendTo(this.elem);
		}
	}).init(this.content);
	
	this.loaderStack = [];
	
	this.pushStack();
	
	this.xButton.hide();
	//this.addButton(__("Cancel"));
	this.onClose = function() {
		thisClass.cancelMonitoring = true;
	};
	
};

/**
 * Set notification message
 * @param {String} message
 * @param {String} title
 */
Preloader.prototype.setNotification = function(message, title) {
	this._nContainer.addMessage(message, title);
};

/**
 * Query specified url until 100% or error
 * @param url url to query
 * @param callback callback to call on success or on error (ex. function(success) { ... })
 * @param noReset if true will not reset current process
 * @param keepOpen keep open on complete
 * @param errorHandler callback for error handling
 */
Preloader.prototype.monitor = function(url, callback, noReset, keepOpen, errorHandler) {
	var thisClass = this;
	var thisClallback = callback;
	var thisErrorHandler = (typeof errorHandler === 'function') ? errorHandler : null;
	if (typeof(url) !== "object") url = { "url": url };
	var thisUrl = url.url;
	var opts = (typeof(url.opts) === "object") ? url.opts : {};
	opts.ts = (new Date()).getTime();
	if (!noReset) {
		this.cancelMonitoring = false;
		opts.reset = 1;
	}
	var thisKeepOpen = keepOpen ? true : false;
	
	var okfn = function(data) {
		if (thisClass.cancelMonitoring) return;
		if (!data || typeof(data) !== "object") {
			data = { complete: false, error: __("Server error") };
		}
		if (data.error) {
			if (thisErrorHandler && thisErrorHandler(data.error)) return;
			var error = ((typeof data.error === 'object') && ('title' in data.error)) ? data.error.title : data.error;
			thisClass.setMessage(error, __("Error:"), "error");
			setTimeout(function() {
				thisClass.setVisible(false);
				if (typeof(thisClallback) === "function") thisClallback(false, data.error);
			}, 500);
		} else if (data.complete) {
			thisClass.setMessage("", __("Complete"), "success");
			thisClass.setProgress(100);
			setTimeout(function() {
				if (!thisKeepOpen) thisClass.setVisible(false);
				if (typeof(thisClallback) === "function") thisClallback(true);
			}, 500);
		} else {
			if (thisClass.cancelMonitoring) return;
			if (typeof(data.text) !== "undefined")
				thisClass.setMessage(data.text);
			if (typeof(data.progress) !== "undefined")
				thisClass.setProgress(data.progress);
			
			setTimeout(function() {
				if (thisClass.cancelMonitoring) return;
				thisClass.monitor(thisUrl, thisClallback, true, null, thisErrorHandler);
			}, 5000);
		}
	};
	
	var errfn = function() {
		thisClass.setMessage("", __("Server error"), "error");
		setTimeout(function() {
			thisClass.setVisible(false);
			if (typeof(thisClallback) === "function") thisClallback(false, __("Server error"));
		}, 500);
	};
	
	if (url.method === "post") {
		(this.mon = $.post(thisUrl, opts, okfn)).error(errfn);
	} else {
		(this.mon = $.get(thisUrl, opts, okfn)).error(errfn);
	}
};

/**
 * Get number of stacks
 * @return number of stacks
 */
Preloader.prototype.numStacks = function() {
	return this.loaderStack.length;
};

/**
 * Create and add new stack to this loader
 */
Preloader.prototype.pushStack = function() {
	var stack = {};
	stack.progress = $('<div class="progress">' +
			'<div class="progress-bar progress-bar-success progress-bar-striped active" style="width: 1%;"></div>' +
		'</div>');
	
	stack.msg = $('<div class="alert alert-danger">' +
			'<span></span>' +
		'</div>');
	
	this._container.append(stack.msg);
	this._container.append(stack.progress);
	
	this.loaderStack.push(stack);
	if (this.stackIndex < 0) this.selectStack(0);
};

/**
 * Remove last stack from this loader.
 * If there is only one stack left do nothing.
 * If removed stack is currently selected then first stack will be selected
 */
Preloader.prototype.popStack = function() {
	if (this.loaderStack.length === 1) return;
	var stack = this.loaderStack.pop();
	if (this.stackIndex >= this.loaderStack.length) this.selectStack(0);
	stack.progress.remove();
	stack.progress.empty();
	delete stack.progress;
	stack.msg.remove();
	stack.msg.empty();
	delete stack.msg;
};

/**
 * Select stack
 * @param idx stack index to select
 */
Preloader.prototype.selectStack = function(idx) {
	if (idx < 0 || idx >= this.loaderStack.length || !this.loaderStack[idx]) return;
	this.stackIndex = idx;
	this.progress = this.loaderStack[idx].progress;
	this.msg = this.loaderStack[idx].msg;
};

/**
 * Reset state
 */
Preloader.prototype.reset = function() {
	this.setProgress(0);
	this.setMessage(__("loading..."));
};

/**
 * Reset state for all stacks
 */
Preloader.prototype.resetAll = function() {
	var _idx = this.stackIndex;
	for (var i = 0; i < this.loaderStack.length; i++) {
		this.selectStack(i);
		this.setProgress(0);
		this.setMessage(__("loading..."));
	}
	this.selectStack(_idx);
};


/**
 * Set progress bar value
 * @param value progress bar value in percents
 */
Preloader.prototype.setProgress = function(value) {
	this.progress.children(".progress-bar").css("width", (value * 1) + "%");
};

/**
 * Set inline message
 * @param message message text
 * @param title message title
 * @param type message type (value one of: error, success, info, warning)
 */
Preloader.prototype.setMessage = function(message, title, type) {
	var msg = (title ? ("<strong>" + title + "</strong> ") : "") + message;
	if (type === 'block') type = 'warning';
	this.msg.children("span").html(msg);
	this.msg.removeClass("alert-danger");
	this.msg.removeClass("alert-success");
	this.msg.removeClass("alert-info");
	this.msg.removeClass("alert-warning");
	if (type === "error" || type === "success" || type === "info" || type === "warning") {
		this.msg.addClass("alert-" + type);
	} else {
		this.msg.addClass("alert-warning");
	}
};

/**
 * Set dialog visibility
 * @param visible dialog visibility
 */
Preloader.prototype.setVisible = function(visible) {
	Dialog.prototype.setVisible.call(this, visible);
};

	window.WB_Preloader = Preloader;
	
	return Preloader;
});
;

/** WB ContextMenu **/

define('ContextMenu', ['Service', 'MobileToolbar'], function(Service, MobileToolbar) {
	'use strict';

/**
 * Context menu class
 * @param {String} id
 * @constructor
 */
var ContextMenu = function(id) {this.__construct(id);};

ContextMenu.prototype.id = null;
ContextMenu.prototype.menu = null;
ContextMenu.prototype.parentMenu = null;
ContextMenu.prototype.bindBtn = null;
ContextMenu.prototype.bindCont = null;
ContextMenu.prototype.onShow = null;
ContextMenu.prototype.pageX = null;
ContextMenu.prototype.pageY = null;
ContextMenu.prototype.items = null;
ContextMenu.lastIndex = 0;
ContextMenu.menuList = [];
ContextMenu.hideAllMenus = function() {
	MobileToolbar.Drawer.open(null, null, true);
	for (var i = 0; i < ContextMenu.menuList.length; i++) {
		ContextMenu.menuList[i].hide(true);
	}
};
ContextMenu.mobileLimit = 485;
ContextMenu.prototype.mobileDrawer = null;

$(function() {
	$('#site').on('mouseup touchstart', function(e) {
		// Safari context menu issue: safari opens context menu on mouse down,
		// other browsers open context menu on mouse up, this prevents closing
		// of context menu on sfari when right mouse button is released.
		if (e.button === 2) return;
		ContextMenu.hideAllMenus();
	});
	$(window).on('scroll', function() {
		ContextMenu.hideAllMenus();
	});
});

/**
 * Construct context menu
 * @param {string} id unique menu identificator
 */
ContextMenu.prototype.__construct = function(id) {	
	this.id = "wb_context_menu_" + ContextMenu.lastIndex++;
	if (id) this.id = id;
	this.menu = $('<ul></ul>').attr('id', (id ? id : null));
	this.menu.addClass("dropdown-menu");
	this.menu.wbSetClassInstance(this);
	this.items = [];
	ContextMenu.menuList[ContextMenu.menuList.length] = this;
};

/**
 * Show menu
 * @param {Object} e event object to get mouse position from
 * @param {boolean} isSubmenu tells if this called for submenu
 */
ContextMenu.prototype.show = function(e, isSubmenu) {
	var i;
	if ($(window).width() <= ContextMenu.mobileLimit) {
		ContextMenu.hideAllMenus();
		if (!this.mobileDrawer) {
			this.mobileDrawer = new MobileToolbar.Drawer('list');
			for (i = 0; i < this.items.length; i++) {
				if (!('id' in this.items[i])) continue;
				this.mobileDrawer.addItem(MobileToolbar.Toolbar.buildDrawerItem(this.items[i], this.mobileDrawer));
			}
			$(document.body).append(this.mobileDrawer.getElem());
		}
		MobileToolbar.Drawer.open(this.mobileDrawer, null, true);
		return;
	}
	if (e) {
		for (i = 0; i < ContextMenu.menuList.length; i++) {
			if (this.id === ContextMenu.menuList[i].id) continue;
			ContextMenu.menuList[i].hide(true);
		}
	}
	
	if (typeof(this.onShow) === "function") {
		this.onShow(this);
	}
	
	this.menu.parent().addClass("open");
	
	var vw = $(window).width();
	var vh = $(window).height();
	var mw = this.menu.outerWidth(true);
	var mh = this.menu.outerHeight(true);
	
	var px = 0, py = 0;
	
	if (e) {
		this.pageX = e.pageX;
		this.pageY = e.pageY;
		px = e.pageX + 10;
		py = e.pageY + 10;
		
		if (wb_builder.rtl) {
			if ((px - mw) < 0) {
				px = e.pageX + 10 + mw;
			}
		} else {
			if ((px + mw) > vw) {
				px = e.pageX - 10 - mw;
			}
		}
		if ((py + mh) > vh) {
			py = e.pageY - 10 - mh;
		}
		
		this.menu.parent().css({
			left: px + "px",
			top: py + "px"
		});
	} else if (isSubmenu) {
		var off = this.menu.parent().offset();
		var prw = this.menu.parent().width();
		px = 90;
		py = 0;
		if ((off.left + Math.ceil(prw * 0.9) + mw) > vw) {
			px = -90;
		}
		if ((off.top + mh) > vh) {
			py = -mh + 10;
		}
		this.menu.css({
			left: px + "%",
			top: py + "px"
		});
	}
};

/**
 * Hide menu
 * @param {boolean} instant if true menu will be hidden instantly else by fade out
 */
ContextMenu.prototype.hide = function(instant) {
	instant = true; //make always instant
	if (instant) {
		this.menu.parent().removeClass("open");
	} else {
		var thisClass = this;
		// neivyksta callback
		this.menu.fadeOut(function() {
			thisClass.menu.css("opacity", "");
			thisClass.menu.css("display", "");
			thisClass.menu.parent().removeClass("open");
		});
	}
};

/**
 * Bind context menu to element
 * @param {Object} elem element to bind menu to
 * @param {boolean} noClick no left mouse button click binding
 */
ContextMenu.prototype.bind = function(elem, noClick) {
	var cont = $('<div class="dropdown-btn-body"></div>');
	$(document.body).append(cont);
	var btn = $('<span class="dropdown-toggle-body"></span>');
	//$(elem).append(this.menu);
	$(elem).append(btn);
	cont.append(this.menu);
	var thisClass = this;
	btn.attr("data-toggle", "dropdown");
	btn.attr("data-target", "#x");
	if (!noClick) {
		btn.unbind("click").bind("click", function(e) {
			thisClass.show(e);
			e.stopPropagation();
			return false;
		});
	}
	btn.get(0).oncontextmenu = function(e) {
		if (!e) e = window.event;
		var ne = wb_builder.normalizeEvent(e);
		ne.type = "click";
		thisClass.show(ne);
		e.stopPropagation();
		return false;
	};
	this.bindBtn = btn;
	this.bindCont = cont;
};

/**
 * Unbind context menu from element
 */
ContextMenu.prototype.unbind = function() {
	//var elem = this.menu.parent();
	var btn = this.bindBtn;
	btn.removeAttr("data-toggle");
	btn.removeAttr("data-target");
	btn.unbind("click");
	btn.get(0).oncontextmenu = function() {};
	btn.remove();
	this.menu.detach();
};

/**
 * Bind pasively context menu to element
 * Note: you must normal bind first
 * @param {Object} elem element to bind menu to
 */
ContextMenu.prototype.pasiveBind = function(elem) {
	var thisClass = this;
	$(elem).get(0).oncontextmenu = function(e) {
		if (!e) e = window.event;
		var ne = wb_builder.normalizeEvent(e);
		ne.type = "click";
		thisClass.show(ne);
		e.stopPropagation();
		return false;
	};
};

/**
 * Unbind pasively bind'ed context menu from element
 * @param {Object} elem element to unbind menu from
 */
ContextMenu.prototype.pasiveUnbind = function(elem) {
	$(elem).get(0).oncontextmenu = null;
};

/**
 * Set max height of dropdown menu and add scroll if needed
 * @param {number} max height of dropdown menu
 */
ContextMenu.prototype.setHeight = function(height) {
	var h = height ? parseInt(height) : 0;
	if (!h) {
		this.menu.css({ maxHeight: '', overflow: '', overflowY: '' });
	} else {
		this.menu.css({ maxHeight: h + 'px', overflow: 'hidden', overflowY: 'auto' });
	}
};

/**
 * Remove all items
 */
ContextMenu.prototype.removeAllItems = function() {
	this.items.splice(0, this.items.length);
	this.menu.children().each(function() {
		$(this).remove();
	});
};

/**
 * Insert menu item at specified index
 * @param {number} index index to insert icon at
 * @param {string} id menu item identificator
 * @param {string} name menu item name
 * @param {Object} submenu submenu of the item ir callback
 * @param {boolean} selected if true menu item will be selected
 * @param {booelan} disabled if true menu item will be disabled
 * @param {mixed} param parameter that will be passed to callback function
 * @param {string} ico icon class
 * @param {boolean} multi true if this menu item can be used for multiple elements
 * @returns {jQuery} DOM element object of this menu item
 */
ContextMenu.prototype.insertItemAt = function(index, id, name, submenu, selected, disabled, param, ico, multi) {
	var item = {
		id: id,
		name: name,
		checked: (selected ? true : false),
		disabled: (selected ? true : false),
		icon: ico
	};
	if (submenu instanceof ContextMenu) {
		item.drawer = {type: 'list', items: submenu.items};
	} else if (typeof(submenu) === 'function') {
		(function(thisSelf, func, param) {
			item.click = function(e) { func.call(thisSelf, e, param); };
		})(this, submenu, param);
	}
	if (index >= 0 && index < this.items.length) {
		this.items.splice(index, 0, item);
	} else {
		this.items.push(item);
	}
	var thisClass = this;
	var mi = $('<li><a href="javascript:void(0)"></a></li>');
	mi.attr("iid", id);
	if (multi) {
		mi.addClass("wb-multi-mi");
	}
	
	if (!name) name = '---';
	if (typeof(selected) === "undefined") selected = false;
	if (typeof(disabled) === "undefined") disabled = false;
	if (ico) {
		mi.children("a").append('<i class="' + ico + '"></i>');
		name = "&nbsp;" + name;
	}
	mi.children("a").append(name);	
	
	if (selected)
		mi.addClass("active");
	if (disabled)
		mi.addClass("disabled");
	
	if (submenu instanceof ContextMenu) {
		submenu.parentMenu = this;
		mi.addClass("dropdown-submenu");
//		var r = $('<i class="icon-chevron-right"></i>');
//		r.css({ position: "absolute", right: "4px", top: "4px" });
//		mi.append(r);
		mi.append(submenu.menu);
//		mi.css("position", "relative");
//		submenu.menu.css("top", "0px");
//		submenu.menu.css("left", "90%");
		var thisSubmenu = submenu;
		mi.hover(
			/** @param {jQuery.Event} e */
			function(e) {
				/*if (mi.children('.cover-disabler').length > 0) {
					e.stopPropagation(); e.preventDefault();
					thisSubmenu.menu.hide();
					return false;
				} else {
					thisSubmenu.menu.show();
				}*/
				var vw = $(window).width();
				//var vh = $(window).height();
				var mw = thisSubmenu.menu.outerWidth(true);
				//var mh = thisSubmenu.menu.outerHeight(true);

				var off = mi.offset();
				var prw = mi.width();
				
				if (wb_builder.rtl) {
					if ((off.left - mw) < 0) {
						// drop right
						var smenu = mi.children("ul.dropdown-menu");
						smenu.css({ right: (-smenu.width()) + "px"});
					}
				} else {
					if ((off.left + prw + mw) > vw) {
						// drop left
						mi.addClass("pull-left");
						var smenu = mi.children("ul.dropdown-menu");
						smenu.css({ left: (-smenu.width()) + "px"});
					} else {
						mi.removeClass("pull-left");
					}
				}
				/* if ((off.top + mh) > vh) {
					// dropup
				} */
				//thisSubmenu.show(null, true);
			},
			function() {
				//thisSubmenu.hide(true);
			}
		);
	}
	if (typeof(submenu) === "function") {
		var _callback = submenu;
		var _callback_param = param ? param : null;
		mi.data("__WB_MI_DATA__", _callback_param);
		mi.children("a").bind("click", function(e, prm) {
			_callback(e, (typeof(prm) === "undefined") ? _callback_param : prm);
			thisClass.hide();
			if (thisClass.parentMenu) thisClass.parentMenu.hide();
		});
	}
	if (index >= 0 && index < this.menu.children("li").size()) {
		this.menu.children("li").eq(index).before(mi);
	} else {
		this.menu.append(mi);
	}
	return mi;
};

ContextMenu.prototype.getIndexById = function(id) {
	var items = this.menu.children("[iid]");
	var idx = null;
	$.each(items, function(i, item) {
		if ($(item).attr('iid') === id) {
			idx = i;
			return;
		}
	});
	return ++idx;
};

/**
 * Add menu item
 * @param id menu item identificator
 * @param name menu item name
 * @param submenu submenu of the item ir callback
 * @param selected if true menu item will be selected
 * @param disabled if true menu item will be disabled
 * @param param parameter that will be passed to callback function
 * @param ico icon class
 * @param multi true if this menu item can be used for multiple elements
 * @returns jQuery DOM element object of this menu item
 */
ContextMenu.prototype.addItem = function(id, name, submenu, selected, disabled, param, ico, multi) {
	return this.insertItemAt(-1, id, name, submenu, selected, disabled, param, ico, multi);
};

ContextMenu.prototype.removeItem = function(id) {
	for (var i = (this.items.length - 1); i >= 0; i--) {
		if ('id' in this.items[i] && this.items[i].id === id) {
			this.items.splice(i, 1);
			break;
		}
	}
	var item = this.getItem(id);
	item.remove();
};

/**
 * Add item separator to this menu
 * @param {Number} index
 */
ContextMenu.prototype.addSeparator = function(index) {
	var item = {type: '-'};
	if (index >= 0 && index < this.items.length) {
		this.items.splice(index, 0, item);
	} else {
		this.items.push(item);
	}
	var mi = $('<li class="divider"></li>');
	if (!isNaN(index*1) && index >= 0 && index < this.menu.children("li").size()) {
		this.menu.children("li").eq(index).before(mi);
	} else {
		this.menu.append(mi);
	}
};

/**
 * Get menu item count
 * @returns item count
 */
ContextMenu.prototype.getSize = function() {
	return this.menu.children("li").size();
};

/**
 * Get menu item by id
 * @param id menu item id to get by
 * @returns jQuery DOM element object of this menu item
 */
ContextMenu.prototype.getItem = function(id) {
	var items = this.menu.children("[iid=" + id + "]");
	if (!items.size()) return null;
	return items.eq(0);
};

ContextMenu.prototype.getItems = function() {
	var items = [];
	this.menu.children('[iid]').each(function() {
		items.push({id: $(this).attr('iid'), elem: $(this)});
	});
	return items;
};

/**
 * Set menu item name
 * @param id menu item id
 * @param name item name to set
 */
ContextMenu.prototype.setName = function(id, name) {
	var mi = this.getItem(id);
	mi = mi ? $(mi).children("a") : null;
	if (!mi || mi.size() === 0) return;
	
	var ico = mi.children("i");
	if (ico.size() > 0) ico.detach();
	mi.empty();
	if (ico.size() > 0) {
		mi.append(ico);
		name = "&nbsp;" + name;
	}
	mi.append(name);
};

/**
 * Set menu item action
 * @param id menu item id
 * @param act action to set
 * @param unbind
 */
ContextMenu.prototype.setAction = function(id, act, unbind) {
	var mi = this.getItem(id);
	var thisClass = this;
	if (!mi || mi.size() === 0) return;
	
	if (act instanceof ContextMenu) {
		mi.append(act.menu);
	}
	if (typeof(act) === "function") {
		var _callback = act;
		var _callback_param = mi.data("__WB_MI_DATA__");
		if (unbind) {
			mi.children("a").unbind("click");
			mi.children("a").bind("click", function(e, prm) {
				thisClass.hide();
				if (thisClass.parentMenu) thisClass.parentMenu.hide();
			});
		}
			
		mi.children("a").bind("click", function(e, prm) {
			_callback(e, (typeof(prm) === "undefined") ? _callback_param : prm);
		});
	}
};

/**
 * Checks if item has submenu
 * 
 * @param id menu item id
 */
ContextMenu.prototype.hasSubmenu = function(id) {
	var mi = this.getItem(id);
	if (!mi || mi.size() === 0) return;
	
	return $(mi).find("ul").length;
};

/**
 * Set menu item submenu
 * 
 * @param id menu item id
 * @param submenu submenu of the item
 */
ContextMenu.prototype.setSubmenu = function(id, submenu) {
	var mi = this.getItem(id);
	if (!mi || mi.size() === 0) return;
	
	if (submenu instanceof ContextMenu) {
		this.removeSubmenu(id);
		submenu.parentMenu = this;
		mi.addClass("dropdown-submenu");
//		var r = $('<i class="icon-chevron-right"></i>');
//		r.css({ position: "absolute", right: "4px", top: "4px" });
//		mi.append(r);
		mi.append(submenu.menu);
//		mi.css("position", "relative");
//		submenu.menu.css("top", "0px");
//		submenu.menu.css("left", "90%");
		/*var thisSubmenu = submenu;
		mi.hover(
			function() {
				thisSubmenu.show(null, true);
			},
			function() {
				thisSubmenu.hide(true);
			}
		);*/
	}
};

/**
 * Remove menu item submenu
 * 
 * @param id menu item id
 */
ContextMenu.prototype.removeSubmenu = function(id) {
	var mi = this.getItem(id);
	if (!mi || mi.size() === 0) return;
	
	$(mi).find(".icon-chevron-right, ul").remove();
};

/**
 * Get menu location
 * @return location as object { left: ..., top: ... }
 */
ContextMenu.prototype.getLocation = function() {
	var loc = this.menu.parent().is("li") ? this.menu.position() : this.menu.parent().position();
	return loc;
};

/**
 * Set menu item selected state
 * @param id menu item id
 * @param selected selection state
 */
ContextMenu.prototype.setSelected = function(id, selected) {
	var mi = this.getItem(id);
	if (!mi || mi.size() === 0) return;
	
	if (selected)
		mi.addClass("active");
	else
		mi.removeClass("active");
};

/**
 * Set menu item disabled state
 * @param id menu item id
 * @param disabled disabled state
 */
ContextMenu.prototype.setDisabled = function(id, disabled) {
	var mi = this.getItem(id);
	if (!mi || mi.size() === 0) return;
	
	if (disabled) {
		if (mi.children('.cover').length === 0) {
			mi.css({position: 'relative'});
			mi.prepend($('<div>').addClass('cover cover-disabler').on('mousedown mouseup', function(e) { e.stopPropagation(); e.preventDefault(); return false; }));
		}
		//mi.addClass("disabled");
	} else {
		mi.children('.cover').remove();
		//mi.removeClass("disabled");
	}
};

/**
 * Set menu item visibility
 * @param id menu item id
 * @param visible visibility state
 */
ContextMenu.prototype.setVisible = function(id, visible) {
	var mi = this.getItem(id);
	if (!mi || mi.size() === 0) return;
	
	if (visible)
		mi.css("display", "block");
	else
		mi.css("display", "none");
};

/**
 * Trigger menu item callback
 * @param id menu item id
 * @param param param that will be passed to callback
 */
ContextMenu.prototype.trigger = function(id, param) {
	var mi = this.getItem(id);
	if (!mi || mi.size() === 0) return;
	
	mi.trigger("click", [param]);
};

/**
 * Enable/disable multi mode
 * @param value true to enable, false to disable
 */
ContextMenu.prototype.setMultiMode = function(value) {
	if (value) {
		this.menu.children("li").hide();
		this.menu.children(".wb-multi-mi").show();
	} else {
		this.menu.children("li").show();
	}
};

ContextMenu.Item = (function() {
	/**
	 * @class ContextMenu.Item
	 * @param {String} name menu item name
	 * @param {String} icon icon style class
	 * @param {String} id menu item identificator
	 * @param {Function} onClick
	 */
	var self = function(name, icon, id, onClick) {
		this.id = id;
		this.elem = $('<li>');
		this.elemA = $('<a>').appendTo(this.elem);
		this._elemIcon = $('<i>').attr('href', 'javascript:void(0)');
		this._elemText = $(document.createTextNode(name)).appendTo(this.elemA);
		this._elemSubmenu = $('<ul>').addClass('dropdown-menu');
		if (icon) this.setIcon(icon);
		this._items = [];
		this._onClick = (typeof onClick === 'function') ? onClick : null;
		var thisSelf = this;
		if (this._onClick) {
			this.elemA.on('click', function(e) {
				if (thisSelf._disabled) return false;
				thisSelf._onClick.call(thisSelf, e);
			});
		}
	};
	
	/** @type jQuery */
	self.prototype.elem = null;
	/** @type jQuery */
	self.prototype.elemA = null;
	/** @type jQuery */
	self.prototype._elemIcon = null;
	/** @type jQuery */
	self.prototype._elemText = null;
	/** @type String */
	self.prototype.id = null;
	/** @type ContextMenu.Item */
	self.prototype._items = null;
	/** @type Boolean */
	self.prototype._selected = false;
	/** @type Boolean */
	self.prototype._disabled = false;
	/** @type Boolean */
	self.prototype._multiSomething = false;
	/** @type Object */
	self.prototype._metaData = null;
	/** @type Function */
	self.prototype._onClick = null;
	
	self.prototype.removeAllItems = function() {
		var items = this._items.splice(0, this._items.length);
		for (var i = 0; i < items.length; i++) { items[i].elem.detach(); }
		this._elemSubmenu.detach();
	};
	
	/** @param {ContextMenu.Item} item */
	self.prototype.removeItem = function(item) {
		if (!(item instanceof self)) return;
		var idx = this._items.indexOf(item);
		if (idx >= 0) {
			this._items.splice(idx, 1);
			item.elem.detach();
			if (this._items.length <= 0) {
				this._elemSubmenu.detach();
			}
		}
	};
	
	/** @param {ContextMenu.Item[]} items */
	self.prototype.setItems = function(items) {
		for (var i = 0; i < items.length; i++) { this.addItem(items[i]); }
	};
	
	/** @param {ContextMenu.Item} item */
	self.prototype.addItem = function(item) {
		this.insertItemAt(-1, item);
	};
	
	/**
	 * @param {Number} index
	 * @param {ContextMenu.Item} item
	 */
	self.prototype.insertItemAt = function(index, item) {
		if (!(item instanceof self)) return;
		this._items.push(item);
		if (this._items.length > 0) {
			this._elemSubmenu.appendTo(this.elem);
		}
		var thisSelf = this;
		this.elem.hover(
			function() {
				if (thisSelf._disabled) return false;
				var vw = $(window).width();
				//var vh = $(window).height();
				var mw = thisSelf._elemSubmenu.outerWidth(true);
				//var mh = thisSelf._elemSubmenu.outerHeight(true);

				var off = thisSelf.elem.offset();
				var prw = thisSelf.elem.width();

				if ((off.left + prw + mw) > vw) {
					thisSelf.elem.addClass('pull-left');
					thisSelf._elemSubmenu.css({ left: (-thisSelf._elemSubmenu.width()) + 'px'});
				} else {
					thisSelf.elem.removeClass('pull-left');
				}
			},
			function() {
				if (thisSelf._disabled) return false;
			}
		);

		if (index >= 0 && index < this._elemSubmenu.children('li').length) {
			this._elemSubmenu.children('li').eq(index).before(item.elem);
		} else {
			this._elemSubmenu.append(item.elem);
		}

	};
	
	/** @param {Object} data */
	self.prototype.setMetaData = function(data) {
		this._metaData = data;
	};
	
	/** @param {Boolean} multiSomething */
	self.prototype.setMultiSomethind = function(multiSomething) {
		this._multiSomething = multiSomething;
		if (multiSomething) {
			this.elem.addClass('wb-multi-mi');
		} else {
			this.elem.removeClass('wb-multi-mi');
		}
	};
	
	/** @param {Boolean} disabled */
	self.prototype.setSelected = function(disabled) {
		this._disabled = disabled;
		if (disabled) {
			this.elem.addClass('disabled');
		} else {
			this.elem.removeClass('disabled');
		}
	};
	
	/** @param {Boolean} selected */
	self.prototype.setSelected = function(selected) {
		this._selected = selected;
		if (selected) {
			this.elem.addClass('active');
		} else {
			this.elem.removeClass('active');
		}
	};
	
	/** @param {String} icon */
	self.prototype.setIcon = function(icon) {
		this._elemIcon.addClass(icon);
		if (icon) {
			this._elemIcon.detach();
		} else {
			this._elemIcon.prependTo(this.elemA);
		}
	};
	
	/** @param {String} name */
	self.prototype.setName = function(name) {
		this._elemText.text(name);
	};
	
	return self;
})();
	
	Service.contextMenu = {
		hideAll: function() { ContextMenu.hideAllMenus(); }
	};
	
	return ContextMenu;
});
;

/** WB ColorPicker **/

/**
 * ColorPicker component class
 * @param {Boolean} noTransparent
 * @param {Boolean} big
 * @param {Boolean} noFixedWidth
 */
function WB_ColorPicker(noTransparent, big, noFixedWidth) { this.__construct(noTransparent, big, noFixedWidth); }

WB_ColorPicker.prototype.elem = null;
WB_ColorPicker.prototype.noTransparent = false;
WB_ColorPicker.prototype.input = null;
WB_ColorPicker.prototype.colorCode = null;
WB_ColorPicker.prototype.color = null;
WB_ColorPicker.prototype.editBtn = null;
WB_ColorPicker.prototype.onChange = null;
//WB_ColorPicker.prototype.tranBtn = null;

/**
 * Chose more readable color from black and white
 * 
 * @param color background color to calc readability for
 */
WB_ColorPicker.readableColor = function(color) {
	var col = (color + "").replace(/[^0-9a-zA-Z]/i, "");
	var r = 0, g = 0, b = 0;
	if (col.length === 3) {
		r = parseInt(col.substring(0, 1), 16);
		g = parseInt(col.substring(1, 2), 16);
		b = parseInt(col.substring(2, 3), 16);
	} else {
		r = parseInt(col.substring(0, 2), 16);
		g = parseInt(col.substring(2, 4), 16);
		b = parseInt(col.substring(4, 6), 16);
	}
	
    r = Math.pow(r / 255, 2.2);
    g = Math.pow(g / 255, 2.2);
	b = Math.pow(b / 255, 2.2);
    
	var Y = 0.2126 * r + 0.7151 * g + 0.0721 * b;
	
	return (Y > 0.5) ? "#000000" : "#ffffff";
};

/**
 * Construct ColorPicker component
 * @param noTransparent no transparent color selector in picker
 * @param big big colorpicker
 * @param noFixedWidth
 */
WB_ColorPicker.prototype.__construct = function(noTransparent, big, noFixedWidth) {
	this.noTransparent = noTransparent ? true : false;
	if (big) {
		var thumbSize = 60;
		this.elem = $('<table class="wb-colorpicker-controll">' +
				'<tr>' +
					'<td>' +
						'<a href="javascript:void(0)" class="thumbnail bg-transparent" style="margin-' + (wb_builder.rtl ? 'left' : 'right') + ': 4px; width: ' + thumbSize + 'px; height: ' + thumbSize + 'px"></a>' +
						'<div class="colorcode"></div>' +
					'</td>' +
					'<td style="vertical-align: top;"><div class="btn-group-vertical btn-group-sm">' +
						'<button class="btn btn-default ui-colorpicker-btn" type="button"><span class="glyphicon glyphicon-pencil"></span></button>' +
						// '<button class="btn btn-default ui-colorpicker-btn2" type="button"><span class="glyphicon glyphicon-remove"></span></button>' +
					'</div></td>' +
				'</tr>' +
			'</table>');
		this.input = this.elem.find(".thumbnail");
		this.colorCode = this.elem.find(".colorcode");
		this.colorCode.css("display", "none");
		this.editBtn = this.elem.find(".ui-colorpicker-btn");
		// this.tranBtn = this.elem.find(".ui-colorpicker-btn2");
	} else {
		this.elem = $('<div class="input-group wb-colorpicker-controll"' + (noFixedWidth ? '' : ' style="width: 70px;"') + '>' +
				'<input type="text" class="form-control" class="bg-transparent" readonly="readonly" />' +
				'<div class="colorcode"></div>' +
				'<div class="input-group-btn">' +
					'<button class="btn btn-default ui-colorpicker-btn" type="button"><span class="glyphicon glyphicon-pencil"></span></button>' +
					// '<button class="btn btn-default ui-colorpicker-btn2" type="button"><span class="glyphicon glyphicon-remove"></span></button>' +
				'</div>' +
			'</div>');
		this.input = this.elem.children("input");
		this.colorCode = this.elem.children(".colorcode");
		this.colorCode.css("display", "none");
		this.editBtn = this.elem.find(".ui-colorpicker-btn");
		// this.tranBtn = this.elem.children(".ui-colorpicker-btn2");
	}
	
	
	if (this.noTransparent) {
		// this.tranBtn.detach();
		this.input.removeClass("bg-transparent");
	}
	
	var thisClass = this;
	
	this.editBtn.ColorPicker({
		color: "#ffffff",
		trans: thisClass.noTransparent,
		onShow: function (colpkr) {
			$(colpkr).fadeIn(500);
			var btnPos = thisClass.elem.offset(),
				btnH = thisClass.editBtn.outerHeight(true),
				cpW = $(colpkr).outerWidth(true),
				cpH = $(colpkr).outerHeight(true),
				left = btnPos.left - $(window).scrollLeft(),
				top = btnPos.top + btnH - $(window).scrollTop(),
				winW = $(window).width(),
				winH = $(window).height();
			if ((left + cpW) > winW) {
				if ((left - cpW) > (winW - left - cpW)) {
					left -= cpW;
				} else {
					left += (winW - left - cpW);
				}
				if (left < 0) left = 0;
			}
			if ((top + cpH) > winH) {
				if ((top - cpH - btnH) > (winH - top - cpH)) {
					top -= (cpH + btnH);
				} else {
					top += (winH - top - cpH);
				}
				if (top < 0) top = 0;
			}
			$(colpkr).css({position: 'fixed', left: left, top: top});
			if (!thisClass.noTransparent)
				$(colpkr).find(".colorpicker_transparent").show();
			return false;
		},
		onHide: function (colpkr) {
			$(colpkr).fadeOut(500);
			return false;
		},
		onChange: function (hsb, hex, rgb) {
			
		},
		onSubmit: function(hsb, hex, rgb, el) {
			thisClass.setValue(hex);
			$(el).ColorPickerHide();
			thisClass.elem.trigger("change");
		},
		onBeforeShow: function () {
			//var col = thisClass.input.val();
			var col = thisClass.color;
			if (!col) col = "ffffff";
			$(this).ColorPickerSetColor(col);
		}
	});
	this.input.on("click", function() {
		thisClass.editBtn.ColorPickerShow();
	}).on("keyup", function(e) {
		var val = $(this).val();
		if (val.length === 6 || val.length === 3) {
			thisClass.setValue(val);
		}
	});
	/*this.tranBtn.bind("click", function() {
		thisClass.setValue("transparent");
	});*/
};

/**
 * Get currently selected color
 * @return css hex color code (ex. #0f0f0f) or 'transparent'
 */
WB_ColorPicker.prototype.getValue = function() {
	//var color = this.input.val();
	var color = this.color;
	color = color ? ("#" + color) : (this.noTransparent ? "#000000" : "transparent");
	return color;
};

/**
 * Set color
 * @param color css hex color code (ex. #0f0f0f) or 'transparent' or empty string (defaults to 'transparent')
 */
WB_ColorPicker.prototype.setValue = function(color) {
	if (color === "transparent") color = "";
	if (this.noTransparent && !color) color = "#000000";
	color = ("" + color).replace("#", "").substring(0, 6);
	this.color = color;
	if (color) {
		//this.input.val(color);
		this.colorCode.html("#" + color);
		this.input.removeClass("bg-transparent");
		this.input.css("background-color", "#" + color);
		this.input.css("color", WB_ColorPicker.readableColor(color));
	} else {
		//this.input.val("");
		this.colorCode.html("#" + __("Transparent"));
		this.input.addClass("bg-transparent");
		this.input.css("background-color", "");
		this.input.css("color", "");
	}
	if (typeof(this.onChange) === "function") {
		this.onChange.call(this);
	}
};

/**
 * Get currently selected color
 * NOTE: this is alias of getValue()
 * @return css hex color code (ex. #0f0f0f) or 'transparent'
 */
WB_ColorPicker.prototype.getColor = function() {
	return this.getValue();
};

/**
 * Set color
 * NOTE: this is alias of setValue(...)
 * @param color css hex color code (ex. #0f0f0f) or 'transparent' or empty string (defaults to 'transparent')
 */
WB_ColorPicker.prototype.setColor = function(color) {
	this.setValue(color);
};

/**
 * Show color picker popup
 */
WB_ColorPicker.prototype.showPicker = function() {
	this.editBtn.ColorPickerShow();
};

/**
 * Hide color picker popup
 */
WB_ColorPicker.prototype.hidePicker = function() {
	this.editBtn.ColorPickerHide();
};
;

/** WB ImagePicker **/

define('ImagePicker', ['Service'], function(Service) {
	'use strict';

/**
 * ImagePicker component class
 * @param {string} mode
 * @param {number} thumbSize
 * @param {boolean} multiselect
 * @param {boolean} mediatabs
 * @param {Function} callback
 */
var ImagePicker = function(mode, thumbSize, multiselect, mediatabs, callback) { this.__construct(mode, thumbSize, multiselect, mediatabs, callback); };

ImagePicker.prototype.elem = null;
ImagePicker.prototype.image = null;
ImagePicker.prototype.selButton = null;
ImagePicker.prototype.clearButton = null;
ImagePicker.prototype.libraryDlg = null;
ImagePicker.prototype.counter = null;
ImagePicker.prototype.src = null;
ImagePicker.prototype.images = null;
ImagePicker.prototype.imagesInfo = null;
ImagePicker.prototype.mode = 'image';
ImagePicker.prototype.multiselect = false;
ImagePicker.prototype.mediatabs = false;
ImagePicker.prototype.callback = null;

/**
 * Construct ImagePicker component
 * @param {string} mode
 * @param {number} thumbSize
 * @param {boolean} multiselect
 * @param {boolean} mediatabs
 * @param {Function} callback
 */
ImagePicker.prototype.__construct = function(mode, thumbSize, multiselect, mediatabs, callback) {
	this.callback = callback;
	if (mode)
		this.mode = mode;
	if (!thumbSize || isNaN(thumbSize*1)) {
		thumbSize = 60;
	} else {
		thumbSize = thumbSize*1;
	}
	this.multiselect = multiselect ? true : false;
	if (mediatabs)
		this.mediatabs = mediatabs;
	
	this.elem = $('<table class="wb-image-picker">' +
			'<tr>' +
				'<td>' +
					'<a href="javascript:void(0)" class="thumbnail" style="margin-' + (wb_builder.rtl ? 'left' : 'right') + ': 4px; width: ' + thumbSize + 'px; height: ' + thumbSize + 'px">' +
						'<img src="" alt="" style="max-height: ' + thumbSize + 'px" />' +
						'<span style="display:block;padding-top:9px;" class="wb_caption wb_caption_small wb_empty_msg">' +
							(this.multiselect
								? ((this.mode === "image") ? __('Click to add picture(s)') : __('Click to add file(s)'))
								: ((this.mode === "image" || this.mode === "favicon") ? __('Click to select picture') : __('Click to select file'))
							) +
						'</span>' +
					'</a>' +
				'</td>' +
				'<td style="vertical-align: top;"><div class="btn-group-vertical btn-group-sm">' +
					'<a href="javascript:void(0)" class="btn btn-default"><span class="glyphicon glyphicon-pencil"></span></a>' +
					'<a href="javascript:void(0)" class="btn btn-default"><span class="glyphicon glyphicon-remove"></span></a>' +
				'</div></td>' +
			'</tr>' +
		'</table>');
	
	this.images = [];
	this.imagesInfo = [];
	
	var thisClass = this;
	$(".thumbnail", this.elem).css({ cursor: "pointer", textDecoration: "none" });
	this.image = $("img", this.elem);
	this.image.css("display", "none");
	if (this.multiselect) this.image.css({ display: "none" });
	this.counter = $('<span style="display:block;margin-top:9px;" class="wb_caption wb_caption_small"></span>');
	this.counter.css("visibility", "hidden");
	$(".thumbnail", this.elem).append(this.counter);
	if (!this.multiselect) this.counter.css({ display: "none" });
	this.selButton = $(".btn", this.elem).first();
	this.clearButton = $(".btn", this.elem).last();
	this.selButton.bind("click", function() {
		thisClass.libraryDlg = Service.mediaLibrary.open(__("Select media"), thisClass.multiselect, thisClass.mode, thisClass.mediatabs);
		thisClass.libraryDlg.addButton(__("Cancel"));
		thisClass.libraryDlg.addButton(__("Select"), function() {
			var list = thisClass.libraryDlg.getSelectedFiles(true);

			if (thisClass.multiselect) {
				thisClass.setValues(list);
			} else {
				thisClass.setImage((list.length > 0) ? list[0] : null);
			}
			thisClass.libraryDlg.hide();
		}, true);
			
		if (thisClass.images.length > 0) {
			thisClass.libraryDlg.setSelectedFiles(thisClass.images);
		} else {
			thisClass.libraryDlg.clearFileSelection();
		}
		thisClass.libraryDlg.show();
		return false;
	});
	this.clearButton.bind("click", function() {
		thisClass.setImage(null);
		thisClass.setValues([]);
		return false;
	});
	$(".thumbnail", this.elem).bind("click", function() { thisClass.selButton.trigger("click"); });
};

/**
 * Get currently selected image URL
 * @param {Boolean} asObject return selected file list as object { file: ..., width: ..., height: ..., size: ... }
 * @return relative image URL
 */
ImagePicker.prototype.getValues = function(asObject) {
	if (asObject) {
		return this.imagesInfo;
	}
	var list_ = [];
	for (var i = 0; i < this.list.length; i++) {
		list_.push(this.imagesInfo[i].file);
	}
	return list_;
};

/**
 * Set image URL's
 * @param list relative image URL list
 */
ImagePicker.prototype.setValues = function(list) {
	this.list = list;
	this.images = [];
	this.imagesInfo = [];
	this.src = null;
	for (var i = 0; i < list.length; i++) {
		var url = (typeof list[i] === "object") ? list[i].file : list[i];
		var _url = (url && url !== "none") ? url : null;
		var src = _url ? wb_builder.makeRelUrl(_url) : null;
		if (!this.src) this.src = src;
		this.images.push(src);
		this.imagesInfo.push($.extend({}, list[i], { file: src }));
	}
	/*$(".thumbnail", this.elem).attr("title", (this.images.length > 0) ? this.images.length : __("No images selected"));
	if ($(".thumbnail", this.elem).data("__WB_TOOLTIP__")) {
		$(".thumbnail", this.elem).tooltip('destroy');
		$(".thumbnail", this.elem).data("__WB_TOOLTIP__", false);
	}
	$(".thumbnail", this.elem).tooltip();
	$(".thumbnail", this.elem).data("__WB_TOOLTIP__", true);*/
	this.counter.html(this.images.length + ' ' + __('picture(s) selected'));
	this.counter.css("visibility", ((this.images.length > 0) ? "visible" : "hidden"));
	
	if (this.images.length) {
		this.elem.find(".wb_empty_msg").addClass("hide2");
	} else {
		this.elem.find(".wb_empty_msg").removeClass("hide2");
	}
	if (typeof this.callback === "function") this.callback.call(this);
};

/**
 * Get currently selected image URL
 * @return relative image URL
 */
ImagePicker.prototype.getValue = function() {
	return this.src;
};

/**
 * Set image
 * @param url relative image URL
 */
ImagePicker.prototype.setValue = function(url) {
	this.images = [];
	this.imagesInfo = [];
	var urlInfo = (url && (typeof url === "object")) ? url : { file: url, width: 0, height: 0, size: 0 };
	var _url = (urlInfo.file && urlInfo.file !== "none") ? urlInfo.file : null;
	this.src = _url ? wb_builder.makeRelUrl(_url) : null;
	if (this.src) {
		this.images.push(this.src);
		this.imagesInfo.push($.extend({}, urlInfo, { file: this.src}));
	}
	var title = _url ? _url.split("/") : "";
	title = title ? title[title.length - 1] : "";
	title = title.split("%20").join(" ");
	$(".thumbnail", this.elem).attr("title", title);
	if ($(".thumbnail", this.elem).data("__WB_TOOLTIP__")) {
		$(".thumbnail", this.elem).tooltip('destroy');
		$(".thumbnail", this.elem).data("__WB_TOOLTIP__", false);
	}
	$(".thumbnail", this.elem).tooltip();
	$(".thumbnail", this.elem).data("__WB_TOOLTIP__", true);
	
	var thumbUrl = this.src ? wb_builder.makeLocalUrl(this.src) : "";
	var ext = thumbUrl.split(".");
	ext = (ext.length > 1) ? ext[(ext.length - 1)] : "";
	if (ext === "swf") {
		thumbUrl = wb_builder.modBaseUrl + "img/file_flash.png";
	} else if (ext === "mp3") {
		thumbUrl = wb_builder.modBaseUrl + "img/file_audio.png";
	} else if (ext === "pdf") {
		thumbUrl = wb_builder.modBaseUrl + "img/file_pdf.png";
	} else if ("docx,doc,xls,xlsx,rtf,ppt,pptx,odt".indexOf(ext) >= 0) {
		thumbUrl = wb_builder.modBaseUrl + "img/file_doc.png";
	}
	
	this.image.get(0).src = thumbUrl;
	this.image.css("display", (this.src ? "block" : "none"));
	this.counter.html(this.images.length);
	this.counter.css("visibility", ((this.images.length > 0) ? "visible" : "hidden"));
	
	if (this.images.length) {
		this.elem.find(".wb_empty_msg").addClass("hide2");
	} else {
		this.elem.find(".wb_empty_msg").removeClass("hide2");
	}
	if (typeof this.callback === "function") this.callback.call(this);
};

/**
 * Get currently selected image URL
 * NOTE: alias of getValue()
 * @return relative image URL
 */
ImagePicker.prototype.getImage = function() {
	return this.getValue();
};

/**
 * Set image
 * NOTE: alias of setValue(...)
 * @param url relative image URL
 */
ImagePicker.prototype.setImage = function(url) {
	this.setValue(url);
};

	window.WB_ImagePicker = ImagePicker;
	
	return ImagePicker;
});
;

/** WB AlignSelector **/

/**
 * AlignSelector component class
 * 
 * @author Marius Tomas <marius@profis.lt>
 * @version 1.2.0, 2012-07-23
 */
function WB_AlignSelector() { this.__construct(); }

WB_AlignSelector.index = 0;
WB_AlignSelector.prototype.elem = null;
WB_AlignSelector.prototype.hAlign = "left";
WB_AlignSelector.prototype.vAlign = "top";
WB_AlignSelector.prototype.callback = null;

/**
 * Construct AlignSelector component
 */
WB_AlignSelector.prototype.__construct = function() {
	//var idx = WB_AlignSelector.index;
	WB_AlignSelector.index++;
	this.elem = $('<table class="wb-align-controll">' +
			'<tr>' +
				'<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>' +
			'</tr>' +
			'<tr>' +
				'<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>' +
			'</tr>' +
			'<tr>' +
				'<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>' +
			'</tr>' +
		'</table>');
	var thisClass = this;
	var tds = this.elem.find("td");
	tds.bind("click", function() {
		tds.removeClass("active");
		$(this).addClass("active");
		var x = $(this).index()*1;
		var y = $(this).parent().index()*1;
		thisClass.hAlign = (x > 0) ? ((x === 1) ? "center" : "right") : "left";
		thisClass.vAlign = (y > 0) ? ((y === 1) ? "center" : "bottom") : "top";
		if (typeof thisClass.callback === "function") thisClass.callback.call(thisClass);
	});
	// $("[rel=tooltip]", this.elem).tooltip();
};

/**
 * Get currently selected align
 * @return align align as string in format '[horizontal] [vertical]' (ex. 'left top')
 */
WB_AlignSelector.prototype.getValue = function() {
	return this.hAlign + " " + this.vAlign;
};

/**
 * Set align
 * @param align align as string in format '[horizontal] [vertical]' (ex. 'left top')
 */
WB_AlignSelector.prototype.setValue = function(align) {
	var a = (align + "").split(" ");
	this.hAlign = a[0] ? a[0] : "left";
	this.vAlign = (a.length > 1 && a[1]) ? a[1] : "top";
	var x = (this.hAlign === "right") ? 2 : ((this.hAlign === "center") ? 1 : 0);
	var y = (this.vAlign === "bottom") ? 2 : ((this.vAlign === "center") ? 1 : 0);
	var tds = this.elem.find("td");
	tds.removeClass("active");
	tds.eq(y*3 + x).addClass("active");
};

/**
 * Get currently selected align
 * NOTE: alias of getValue()
 * @return align align as string in format '[horizontal] [vertical]' (ex. 'left top')
 */
WB_AlignSelector.prototype.getAlign = function() {
	return this.getValue();
};

/**
 * Set align
 * NOTE: alias of setValue(...)
 * @param align align as string in format '[horizontal] [vertical]' (ex. 'left top')
 */
WB_AlignSelector.prototype.setAlign = function(align) {
	this.setValue(align);
};
;

/** WB HAlignSelector **/

/**
 * Horizontal AlignSelector component class
 * 
 * @author Marius Tomas <marius@profis.lt>
 * @version 1.2.0, 2012-07-23
 */
function WB_HAlignSelector() { this.__construct(); }

WB_HAlignSelector.prototype.elem = null;

/**
 * Construct Horizontal AlignSelector component
 */
WB_HAlignSelector.prototype.__construct = function() {
	this.elem = $('<div class="btn-group wb-halign-control">' +
			'<button class="btn btn-default active" data-value="left"><span class="glyphicon glyphicon-align-left"></span></button>' +
			'<button class="btn btn-default" data-value="center"><span class="glyphicon glyphicon-align-center"></span></button>' +
			'<button class="btn btn-default" data-value="right"><span class="glyphicon glyphicon-align-right"></span></button>' +
		'</div>');
	$(".btn", this.elem).bind("click", function() {
		$(this).parent().children(".btn").removeClass("active");
		$(this).addClass("active");
	});
};

/**
 * Get currently selected align
 * @return align align as string (ex. 'left')
 */
WB_HAlignSelector.prototype.getValue = function() {
	var val = "left";
	this.elem.children(".active").each(function() {
		val = $(this).attr("data-value");
	});
	return val;
};

/**
 * Set align
 * @param align align as string (ex. 'left')
 */
WB_HAlignSelector.prototype.setValue = function(align) {
	this.elem.children().removeClass("active");
	this.elem.children("[data-value='" + align + "']").addClass("active");
};
;

/** WB SizeSelector **/

define('SizeSelector', [], function() {
	'use strict';

/**
 * SizeSelector component class
 * @param {Boolean} noUnits hide units label
 * @param {Number} minValue custom min value
 * @param {Number} maxValue custom max value
 * @param {Number} step increment (decrement) by this value
 * @param {Boolean} dont_go_to_min_when_max
 * @param {Boolean} noFixedWidth
 * @class
 */
var SizeSelector = function(noUnits, minValue, maxValue, step, dont_go_to_min_when_max, noFixedWidth) { this.__construct(noUnits, minValue, maxValue, step, dont_go_to_min_when_max, noFixedWidth); };

SizeSelector.toCSS = function(size) {
	var css = "";
	if ((typeof(size) === "object") && size.length) {
		for (var i = 0; i < Math.min(size.length, 4); i++) {
			css += (css ? " " : "") + size[i] + "px";
		}
	} else {
		css = size + "px";
	}
	return css;
};
SizeSelector.prototype.elem = null;
SizeSelector.prototype.input = null;
SizeSelector.prototype.minValue = 1;
SizeSelector.prototype.maxValue = 9999;
SizeSelector.prototype.dont_go_to_min_when_max = false;
SizeSelector.prototype._enabled = true;

/**
 * Construct SizeSelector component
 * @param {Boolean} noUnits hide units label
 * @param {Number} minValue custom min value
 * @param {Number} maxValue custom max value
 * @param {Number} step increment (decrement) by this value
 * @param {Boolean} dont_go_to_min_when_max
 * @param {Boolean} noFixedWidth
 */
SizeSelector.prototype.__construct = function(noUnits, minValue, maxValue, step, dont_go_to_min_when_max, noFixedWidth) {
	if (!step) { step = 1; }
	if (minValue !== null) { this.minValue = minValue; }
	if (maxValue !== null) { this.maxValue = maxValue; }
	if (dont_go_to_min_when_max) { this.dont_go_to_min_when_max = dont_go_to_min_when_max; }
	
	var thisClass = this;
	
	this.elem = $('<div class="wb-size-selector"><div class="input-group"' + (noFixedWidth ? '' : ' style="width: 70px;"') + '>' +
			'<input type="text" class="form-control" value="1" />' +
			'<div class="input-group-btn buttons">' +
				'<button class="btn btn-default btn-arrow arrow-up" type="button"><span class="caret"></span></button>' +
				'<button class="btn btn-default btn-arrow arrow-down" type="button"><span class="caret"></span></button>' +
			'</div>' +
		'</div>' + (noUnits ? '' : '<span class="units">px</span>') + '</div>');
	if (!noUnits) this.elem.children('.input-group').eq(0).css({marginRight: 20});
	this.input = $('input', this.elem);

	$('button', this.elem).first().bind('click', function() {
		if (!thisClass._enabled) return false;
		var val = thisClass.input.val()*1 + step;
		if (isNaN(val) || val > thisClass.maxValue) val = !thisClass.dont_go_to_min_when_max ? thisClass.minValue : thisClass.maxValue;
		if (val < thisClass.minValue) val = thisClass.minValue;
		thisClass.input.val(val);
		thisClass.input.trigger('change');
	});
	$('button', this.elem).last().bind('click', function() {
		if (!thisClass._enabled) return false;
		var val = thisClass.input.val()*1 - step;
		if (isNaN(val) || val < thisClass.minValue) val = !thisClass.dont_go_to_min_when_max ? thisClass.maxValue : thisClass.minValue;
		if (val > thisClass.maxValue) val = thisClass.maxValue;
		thisClass.input.val(val);
		thisClass.input.trigger('change');
	});
};

/**
 * Set new maximum value.
 * @param {Number} maxValue new maximum value to set (must be bigger than minimum value).
 */
SizeSelector.prototype.setMaxValue = function(maxValue) {
	if (maxValue <= this.minValue) return;
	this.maxValue = maxValue;
};

/**
 * Set if this control is enabled.
 * @param {Boolean} enabled if true then enabled else not.
 */
SizeSelector.prototype.setEnabled = function(enabled) {
	this._enabled = enabled ? true : false;
	if (this._enabled) {
		this.input.removeClass('disabled');
		this.input.removeAttr('disabled');
		$('button', this.elem).removeClass('disabled');
	} else {
		this.input.addClass('disabled');
		this.input.attr({disabled: 'disabled'});
		$('button', this.elem).addClass('disabled');
	}
};

/**
 * Get if this control is enabled.
 * @returns {Boolean} if true then enabled else not.
 */
SizeSelector.prototype.getEnabled = function() {
	return this._enabled;
};

/**
 * Set unit name
 * @param {String} unit
 */
SizeSelector.prototype.setUnit = function(unit) {
	this.elem.find('.units').text(unit);
};

/**
 * Get currently selected size
 * @return {Number} size in pixels
 */
SizeSelector.prototype.getValue = function() {
	var res = parseInt(this.input.val(), 10);
	return (isNaN(res) ? this.minValue : res);
};

/**
 * Set size
 * @param {Number} size size in pixels
 */
SizeSelector.prototype.setValue = function(size) {
	var val = size ? size : 0;
	if ((typeof(val) === 'object') && val.length) {
		val = size[0]*1;
	} else {
		val = size*1;
	}
	if (isNaN(val)) val = this.minValue;
	this.input.val(val);
};

/**
 * Attach a handler to controll input fields
 * @param {String} eventType A string containing one or more DOM event types, such as "click" or "submit," or custom event names
 * @param {Object|Function} eventData A map of data that will be passed to the event handler
 * @param {Boolean} preventBubble Setting the third argument to false will attach a function that prevents the default action from occurring and stops the event from bubbling. The default is true
 */
SizeSelector.prototype.bind = function(eventType, eventData, preventBubble) {
	this.input.bind(eventType, eventData, preventBubble);
};

/**
 * Remove a previously-attached event handler from controll input fields
 * @param {String} eventType a string containing a JavaScript event type, such as click or submit
 */
SizeSelector.prototype.unbind = function(eventType) {
	this.input.unbind(eventType);
};

	return SizeSelector;
});
;

/** WB ComboBox **/

define('ComboBox', [], function() {
	'use strict';

/**
 * ComboBox component class
 * @param {Object} options
 * @param {String} selected
 * @param {Number} zIndex
 */
var ComboBox = function(options, selected, zIndex) { this.__construct(options, selected, zIndex); };

ComboBox.prototype.elem = null;
ComboBox.prototype.input = null;
ComboBox.prototype.menu = null;
ComboBox.prototype.options = null;
ComboBox.prototype.optionsData = null;
ComboBox.prototype.onChange = null;
ComboBox.elemList = [];
ComboBox.closeAll = function(excludeMe) {
	for (var i = 0; i < ComboBox.elemList.length; i++) {
		if (excludeMe && excludeMe == ComboBox.elemList[i]) continue;
		ComboBox.elemList[i].menu.parent().removeClass("open");
	}
};
ComboBox.onDocumentClick = function(e) {
	var t = $(e.target);
	var activeComboBox = null;
	if (t.is('.wb-combobox-controll *')) {
		t = t.parents('.wb-combobox-controll');
		
		$.each(ComboBox.elemList, function() {
			if (t.get(0) == this.elem.get(0)) {
				activeComboBox = this;
				return;
			}
		});
	}
	ComboBox.closeAll(activeComboBox);
};

/**
 * Construct ComboBox component
 * @param {Object} options combo box option list as object = {key: value, ...}
 * @param {String} selected key of the option to select by default
 * @param {Number} zIndex if true make dropdown list visible when element itself is within fixed element
 */
ComboBox.prototype.__construct = function(options, selected, zIndex) {
	this.elem = $('<div class="input-group wb-combobox-controll">' +
			'<input type="text" class="form-control" readonly="readonly" />' +
			'<div class="input-group-btn">' +
				'<button class="btn btn-default dropdown-toggle" type="button"><span class="caret"></span></button>' +
				'<ul class="dropdown-menu"></ul>' +
			'</div>' +
		'</div>');
	this.input = this.elem.children("input");
	this.menu = this.elem.find("ul");
	
	var button = this.elem.find("button");
	var thisClass = this;
	
	this.input.bind("click", function() {
		var li,
			w = thisClass.input.outerWidth(),
			mw = thisClass.menu.width(),
			ew = thisClass.elem.outerWidth();
		if (mw < ew) thisClass.menu.width(ew);
		if (wb_builder.rtl) {
			thisClass.menu.css({ marginRight: (-w) + "px" });
		} else {
			thisClass.menu.css({ marginLeft: (-w) + "px" });
		}
		if (zIndex) { thisClass.fixDropdownPosition(zIndex); }
		button.parent().toggleClass("open");
		if ((li = thisClass.menu.children('li.active')).length) {
			thisClass.menu.scrollTop(li.get(0).offsetTop);
			li.addClass('hover');
		}
		
		var it = thisClass.input.offset().top;
		var ws = window.scrollY;
		var mh = Math.round(thisClass.input.outerHeight(true) + thisClass.menu.outerHeight(true));
		var wh = $(window).height();
		
		if (it - ws + mh > wh) {
			button.parent().addClass("dropup");
		} else {
			button.parent().removeClass("dropup");
		}
	});
	button.bind("click", function() {
		var li, w = thisClass.input.outerWidth();
		if (wb_builder.rtl) {
			thisClass.menu.css({ marginRight: (-w) + "px" });
		} else {
			thisClass.menu.css({ marginLeft: (-w) + "px" });
		}
		if (zIndex) { thisClass.fixDropdownPosition(zIndex); }
		button.parent().toggleClass("open");
		if ((li = thisClass.menu.children('li.active')).length) {
			thisClass.menu.scrollTop(li.get(0).offsetTop);
			li.addClass('hover');
		}
		
		var it = thisClass.input.offset().top;
		var ws = window.scrollY;
		var mh = Math.round(thisClass.input.outerHeight(true) + thisClass.menu.outerHeight(true));
		var wh = $(window).height();
		
		if (it - ws + mh > wh) {
			button.parent().addClass("dropup");
		} else {
			button.parent().removeClass("dropup");
		}
	});
	
	var sel = null, selIdx = -1;
	this.menu.bind('mouseenter mousemove', 'a', function(e) {
		if (e.type === 'mousemove' && $(e.target).hasClass('hover')) return;
		if (sel) {
			sel = null;
			return;
		}
		thisClass.menu.find('li').removeClass('hover');
		$(e.target).parent().addClass('hover');
	}).bind('mouseleave', 'a', function(e) {
		$(e.target).parent().removeClass('hover');
	});
	
	this.elem.bind('keydown', function(e) {
		var prev, next;
		if (e.which === 13) { // Enter
			thisClass.menu.children('li.hover').trigger('click');
			return false;
		} else if (e.which === 38 || e.which === 40) { // Up or Down
			sel = thisClass.menu.children('li.hover');
			var mt = thisClass.menu.scrollTop(),
				mh = thisClass.menu.outerHeight();
			if (e.which === 38) { // Up
				if ((prev = sel.prev()).is('li')) {
					sel.removeClass('hover');
					prev.addClass('hover');
					var pt = prev.get(0).offsetTop,
						ph = prev.outerHeight();
					if (pt <= mt) {
						thisClass.menu.scrollTop(pt);
					}
				}
			} else if (e.which === 40) { // Down
				if ((next = sel.next()).is('li')) {
					sel.removeClass('hover');
					next.addClass('hover');
					var nt = next.get(0).offsetTop,
						nh = next.outerHeight();
					if (nt + nh >= mt + mh) {
						thisClass.menu.scrollTop(nt - mh + nh);
					}
				}
			}
			return false;
		}
	}).bind('keypress', function(e) {
		var ch = String.fromCharCode(e.which).toLowerCase();
		var list = thisClass.menu.find('li');
		var searchIteration = function(li, idx) {
			if (ch && li.children('a').html().substring(0,1).toLowerCase() === ch && idx > selIdx) {
				sel = li;
				selIdx = idx;
				list.removeClass('hover');
				li.addClass('hover');
				
				var scroll = 0,
					mt = thisClass.menu.scrollTop(),
					mh = thisClass.menu.outerHeight(),
					lih = li.outerHeight(),
					lit = li.get(0).offsetTop;
				if (lit <= mt) {
					scroll = lit;
				} else if (lih + lit >= mt + mh) {
					scroll = lit - mh + lih;
				} else {
					scroll = mt;
				}
				thisClass.menu.scrollTop(scroll);
				return true;
			} else {
				return false;
			}
		};
		mainLoop: for (var i=0, thisLi; (thisLi = list[i]); i++) {
			thisLi = $(thisLi);
			if (searchIteration(thisLi, i)) {
				break;
			}
			if (i === list.length - 1) {
				selIdx = -1;
				for (var j=0, thisLi2; (thisLi2 = list[j]); j++) {
					thisLi2 = $(thisLi2);
					if (searchIteration(thisLi2, j)) {
						break mainLoop;
					}
				}
			}
		}
	});
	
	this.options = {};
	this.optionsData = {};
	if (options) {
		for (var key in options) {
			this.options[key] = options[key];
			this.addOption(key, options[key], (key === selected));
		}
	}
	ComboBox.elemList.push(this);
};

ComboBox.prototype.fixDropdownPosition = function(zIndex) {
	if ($.browser.msie) return;
	var thisClass = this;
	var offset = this.elem.offset(), css;
	if (!offset.top || !offset.left) {
		setTimeout(function() {
			thisClass.fixDropdownPosition(zIndex);
		}, 20);
		return;
	}
	css = {
		top: (this.elem.offset().top - window.scrollY + 30) + 'px',
		marginLeft: 0,
		zIndex: zIndex,
		position: 'fixed'
	};
	if (wb_builder.rtl) {
		css.right = this.elem.offset().left + this.elem.outerWidth(true) + 'px';
	} else {
		css.left = this.elem.offset().left + 'px';
	}
	this.menu.css(css);
};

/**
 * Get additional data assigned to selected option
 * @returns {Object}
 */
ComboBox.prototype.getValueData = function() {
	var sel = this.menu.children('li.active');
	var val = (sel.size() > 0) ? sel.attr('data-value') : null;
	return val ? this.optionsData[val].data : null;
};

/**
 * Get currently selected option key
 * @return {String} key of selected option
 */
ComboBox.prototype.getValue = function() {
	var sel = this.menu.children("li.active");
	var val = (sel.size() > 0) ? sel.attr("data-value") : null;
	if (val === null) {
		for (var k in this.options) {
			val = this.options[k];
			break;
		}
	}
	return val;
};

/**
 * Set size
 * @param {String} key of the option to select
 */
ComboBox.prototype.setValue = function(key) {
	var has = false, k;
	for (k in this.options) {
		if (key === k) {
			has = true;
			break;
		}
	}
	if (key !== null && key !== undefined) {
		if (!has) {
			for (k in this.options) {
				this.menu.children("li[data-value='" + key.replace(/(['"])/g, '\\$1') + "']").trigger("click", true);
				return k;
			}
		} else {
			this.menu.children("li[data-value='" + key.replace(/(['"])/g, '\\$1') + "']").trigger("click", true);
		}
	}
	return key;
};

/**
 * Add option to combo box
 * @param {String} key option key (ID)
 * @param {String} value option value (label)
 * @param {Boolean} selected if true option will be selected
 * @param {Object} data additianl data to be assigned to option
 */
ComboBox.prototype.addOption = function(key, value, selected, data) {
	this.options[key] = value;
	var opt = $('<li><a href="javascript:void(0)"></a></li>');
	this.optionsData[key] = {data: data, elem: opt};
	opt.attr("data-value", key);
	opt.children("a").html(value);
	var thisClass = this;
	opt.bind("click", function(e, skipOnChange) {
		thisClass.menu.children("li").removeClass("active");
		$(this).addClass("active");
		var val = value.replace(/<[^>]*>/g, "").replace(/\&nbsp;/g, " ");
		thisClass.input.val(val);
		thisClass.menu.parent().removeClass("open");
		if (!skipOnChange && typeof(thisClass.onChange) === "function") {
			thisClass.onChange.call(this, e);
		}
		thisClass.elem.trigger("change");
		e.stopPropagation();
		return false;
	});
	if (selected || this.menu.children("li").length === 0) {
		opt.trigger("click", true);
	}
	this.menu.append(opt);
	return opt;
};

ComboBox.prototype.addSeparator = function() {
	this.menu.append('<li class="divider"></li>');
};

/**
 * Get options data
 * @returns {Object[]}
 */
ComboBox.prototype.getOptionsData = function() {
	var key, list = [];
	for (key in this.options) {
		list.push({
			name: this.options[key],
			data: ((key in this.optionsData) ? this.optionsData[key].data : null)
		});
	}
	return list;
};

/**
 * Get option by key
 * @param {String} key option key (ID)
 * @return {jQuery} jQuery selector object
 */
ComboBox.prototype.getOption = function(key) {
	return this.menu.children("li[data-value='" + key.replace(/(['"])/g, '\\$1') + "']");
};

/**
 * Remove all options from combo box
 */
ComboBox.prototype.removeAllOptions = function() {
	this.menu.empty();
	this.input.val('');
	this.options = {};
	this.optionsData = {};
};

/**
 * Get selected option label
 * @return {String} selected label
 */
ComboBox.prototype.getSelectedLabel = function() {
	return this.input.val();
};

/**
 * Set option option label
 * @param {String} key option key (ID)
 * @param {String} value option value (label)
 */
ComboBox.prototype.setOptionLabel = function(key, value) {
	var li = this.menu.children("li[data-value='" + key.replace(/(['"])/g, '\\$1') + "']");
	li.children("a").html(value ? value : "---");
	if (li.hasClass("active")) {
		this.input.val(value ? value : "---");
	}
};

ComboBox.prototype.setWidth = function(width) {
	this.elem.css({width: width});
};

/**
 * Get currently selected option key
 * NOTE: alias of getValue()
 * @return {String} key of selected option
 */
ComboBox.prototype.getSelected = function() {
	return this.getValue();
};

/**
 * Set size
 * NOTE: alias of setValue()
 * @param {String} key of the option to select
 */
ComboBox.prototype.setSelected = function(key) {
	this.setValue(key);
};

	return ComboBox;
});;

/** WB RadioBox **/

/**
 * RadioBox control class
 * @param {Object} options
 * @param {boolean} selected
 * @param {string} name
 */
function WB_RadioBox(options, selected, name) { this.__construct(options, selected, name); }

WB_RadioBox.lastIndex = 0;
WB_RadioBox.prototype.name = null;
WB_RadioBox.prototype.elem = null;
WB_RadioBox.prototype.input = null;
WB_RadioBox.prototype.options = null;

/**
 * Construct RadioBox control
 * @param {Object} options radio box option list as object = {key: value, ...}
 * @param {boolean} selected key of the option to select by default
 * @param {string} name
 */
WB_RadioBox.prototype.__construct = function(options, selected, name) {
	var _options = options;
	var _selected = selected;
	var _name = name;
	if (typeof options !== "object") {
		_name = options;
		_options = selected;
		_selected = name;
	}
	this.name = _name ? _name : "radiobox_group" + (WB_RadioBox.lastIndex++);
	this.options = {};
	this.input = this.elem = $('<span></span>');
	if (_options) {
		for (var key in _options) {
			this.options[key] = _options[key];
			this.addOption(key, _options[key], (key === _selected));
		}
	}
};

/**
 * Get currently selected option key
 * @return key of selected option
 */
WB_RadioBox.prototype.getValue = function() {
	var val = this.input.find("input:checked").val();
	if (val === null) {
		for (var k in this.options) {
			val = this.options[k];
			break;
		}
	}
	return val;
};

/**
 * Set size
 * @param key of the option to select
 */
WB_RadioBox.prototype.setValue = function(key) {
	this.input.find("input[value='"+ key +"']").attr("checked", "checked");
};

/**
 * Add option to radio box
 * @param key option key (ID)
 * @param value option value (label)
 * @param selected if true option will be selected
 */
WB_RadioBox.prototype.addOption = function(key, value, selected) {
	this.options[key] = value;
	var opt = $('<div class="radio"><label><input type="radio" name="'+this.name+'" value="'+key+'">'
			+ ' ' + value + ' '
			+ '</label></div>');
	if (selected) opt.find("input").attr("checked", "checked");
	
	this.input.append(opt);
};

/**
 * Remove all options from radio box
 */
WB_RadioBox.prototype.removeAllOptions = function() {
	this.input.empty();
	this.options = {};
};

/**
 * Get selected option label
 * @return selected label
 */
WB_RadioBox.prototype.getSelectedLabel = function() {
	return this.input.find("input:checked").parent().text();
};

/**
 * Get currently selected option key
 * NOTE: alias of getValue()
 * @return key of selected option
 */
WB_RadioBox.prototype.getSelected = function() {
	return this.getValue();
};

/**
 * Set size
 * NOTE: alias of setValue()
 * @param key of the option to select
 */
WB_RadioBox.prototype.setSelected = function(key) {
	this.setValue(key);
};
;

/** WB FontControl **/

define('FontControl', ['ComboBox'], function(ComboBox) {
	'use strict';

/**
 * Font Control class
 * @param {Boolean} noFixedWidth
 */
var FontControl = function(noFixedWidth) { this.__construct(noFixedWidth); };

FontControl.prototype.elem = null;
FontControl.prototype.input = null;
FontControl.prototype._elem = null;

/**
 * Construct Font controll
 * @param {Boolean} noFixedWidth
 */
FontControl.prototype.__construct = function(noFixedWidth) {
	var list = null;
	this._elem = new ComboBox(list = {
		"Arial,Helvetica,sans-serif": "Arial",
		"Batang,serif": "Batang",
		"'Capture it'": "Capture it",
		"Comic Sans MS,cursive": "Comic Sans",
		"Courier New,monospace": "Courier New",
		"Dotum,sans-serif": "Dotum",
		"'Exo 2',sans-serif": "Exo 2",
		"Georgia,serif": "Georgia",
		"Gulim,sans-serif": "Gulim",
		"Helvetica,Arial,sans-serif": "Helvetica",
		"'Microsoft JhengHei',sans-serif": "JhengHei",
		"'Malgun Gothic',sans-serif": "Malgun Gothic",
		"MingLiU,sans-serif": "MingLiU",
		"Myriad Set Pro,Lucida Grande,Helvetica Neue,Verdana,sans-serif": "Myriad Set Pro",
		"'Nanum Gothic',sans-serif": "Nanum Gothic",
		"Lucida Grande,Lucida Sans Unicode,Helvetica,Arial,Verdana,sans-serif": "Lucida Grande",
		"'Open Sans',sans-serif": "Open Sans",
		"'Open Sans Condensed',sans-serif": "Open Sans Condensed",
		"PMingLiU,sans-serif": "PMingLiU",
		"'PT Sans',sans-serif": "PT Sans",
		"'PT Sans Caption',sans-serif": "PT Sans Caption",
		"'PT Sans Narrow',sans-serif": "PT Sans Narrow",
		"'Roboto',sans-serif": "Roboto",
		"'Roboto Condensed',sans-serif": "Roboto Condensed",
		"'Roboto Slab',sans-serif": "Roboto Slab",
		"Tahoma,Geneva,sans-serif": "Tahoma",
		"Times New Roman,Times,serif": "Times New Roman",
		"Trebuchet MS,sans-serif": "Trebuchet",
		"Sylfaen": "Sylfaen"
	}, "Arial,Helvetica,sans-serif");
	if (!noFixedWidth) this._elem.elem.css({width: 100});
	
	for (var k in list) {
		var opt = this._elem.getOption(k);
		if (!opt) continue;
		opt.css("font-family", k);
	}
	
	
	this.input = this._elem.input;
	this.elem = this._elem.elem;
};

/**
 * Get value
 * @return {string}
 */
FontControl.prototype.getValue = function() {
	return this._elem.getValue();
};

/**
 * Set value
 * @param {string} value value to set
 */
FontControl.prototype.setValue = function(value) {
	this._elem.setValue(value);
};
	
	return FontControl;
});
;

/** WB MenuListControl **/

define('MenuListControl', ['ComboBox', 'Service'], function(ComboBox, Service) {
	'use strict';

/**
 * Menu List Control class
 * @param {boolean} noFixedWidth
 */
var MenuListControl = function(noFixedWidth, anchorMode) { this.__construct(noFixedWidth, anchorMode); };

MenuListControl.prototype.anchorMode = null;
MenuListControl.prototype.elem = null;
MenuListControl.prototype.input = null;
MenuListControl.prototype._elem = null;
MenuListControl.prototype._maxNameLength = 24;

/**
 * Construct MenuList controll
 * @param {boolean} noFixedWidth
 */
MenuListControl.prototype.__construct = function(noFixedWidth, anchorMode) {	
	this._elem = new ComboBox();
	if (!noFixedWidth) {
		this._elem.elem.css({ width: '220px' });
	} else {
		this._maxNameLength = 38;
	}
	this.anchorMode = anchorMode ? true : false;
	this.input = this._elem.input;
	this.elem = this._elem.elem;
	this.reloadMenuList();
};

/**
 * Get item list
 * @returns {Object[]}
 */
MenuListControl.prototype.getItems = function() {
	return this._elem.getOptionsData();
};

/**
 * Reload menu list
 */
MenuListControl.prototype.reloadMenuList = function() {
	this._elem.removeAllOptions();
	var opt, cc = 0, cc2 = 0, pd = '&nbsp;&nbsp;&nbsp;&nbsp;',
		wb_builder = window.wb_builder,
		menuList = Service.menu.getElemList();
	for (var k in menuList) {
		var m = menuList[k];
		cc2 = 0;
		for (var k2 in m.items) {
			if (cc2 === 0 && cc > 0) this._elem.addSeparator();
			var mi = m.items[k2];
			var name = (typeof mi.name === 'string') ? mi.name : __tr(mi.name, wb_builder.site.getLastDefLang());
			var oriName = name;
			name = Service.element.truncate(name, this._maxNameLength) + (mi.type === 'external' ? ' (' + __('external') + ')' : '');
			opt = this._elem.addOption(('' + m.menuUID + '_' + mi.id), name, false, {menuUID: m.menuUID, menuItemId: parseInt(mi.id, 10), menuItemType: mi.type, menuItemTarget: ((mi.type === 'external') ? mi.url : mi.targetId)});
			opt.find('a').attr('title', oriName);
			opt.attr('data-type', mi.type);
			opt.attr('data-target', ((mi.type === 'external') ? mi.url : mi.targetId));
			
			if (this.anchorMode && (mi.type == 'internal' || mi.type == 'page')) {
				var anchors = (mi.targetId && (('#' + mi.targetId) in wb_builder.site.pages)) ? wb_builder.site.pages['#' + mi.targetId].anchors : [];
				for (var k3 in anchors) {
					var name2 = anchors[k3];
					var oriName2 = name2;
					name2 = Service.element.truncate(name2, this._maxNameLength);
					var opt2 = this._elem.addOption(('' + m.menuUID + '_' + mi.id + '_' + anchors[k3]), (pd + '#' + name2), false, {menuUID: m.menuUID, menuItemId: parseInt(mi.id, 10), menuItemType: mi.type, menuItemTarget: mi.targetId, menuItemAnchor: name2});
					opt2.find('a').attr('title', oriName2);
				}
			}
			
			if (mi.items) {
				for (var k3 in mi.items) {
					var mi2 = mi.items[k3];
					var name2 = (typeof mi2.name === 'string') ? mi2.name : __tr(mi2.name, wb_builder.site.getLastDefLang());
					name2 = Service.element.truncate(name2, this._maxNameLength) + (mi2.type === 'external' ? ' (' + __('external') + ')' : '');
					var opt2 = this._elem.addOption(('' + m.menuUID + '_' + mi2.id), pd + name2, false, {menuUID: m.menuUID, menuItemId: parseInt(mi2.id, 10), menuItemType: mi2.type, menuItemTarget: ((mi2.type === 'external') ? mi2.url : mi2.targetId)});
					opt2.attr('data-type', mi2.type);
					opt2.attr('data-target', ((mi2.type === 'external') ? mi2.url : mi2.targetId));
					
					if (this.anchorMode && (mi2.type == 'internal' || mi2.type == 'page')) {
						var anchors = (mi2.targetId && (('#' + mi2.targetId) in wb_builder.site.pages)) ? wb_builder.site.pages['#' + mi2.targetId].anchors : [];
						for (var k3 in anchors) {
							var name2 = anchors[k3];
							var oriName2 = name2;
							name2 = Service.element.truncate(name2, this._maxNameLength);
							var opt2 = this._elem.addOption(('' + m.menuUID + '_' + mi2.id + '_' + anchors[k3]), (pd + pd + '#' + name2), false, {menuUID: m.menuUID, menuItemId: parseInt(mi2.id, 10), menuItemType: mi2.type, menuItemTarget: mi2.targetId, menuItemAnchor: name2});
							opt2.find('a').attr('title', oriName2);
						}
					}
				}
			}
			
			cc2++;
		}
		cc++;
	}
	if (!this.anchorMode) {
		this._elem.addSeparator();
		opt = this._elem.addOption('edit-menu', __('Edit Menu'));
		opt.children('a').prepend('<span class="glyphicon glyphicon-pencil"></span> ');
		opt.off('click').on('click', function(e) {
			ComboBox.closeAll();
			Service.menu.editMenu();
			e.stopPropagation();
			return false;
		});
	}
};

/**
 * Get extended menu item descriptor
 * @return {Object}
 */
MenuListControl.prototype.getExtendedValue = function() {
	return this._elem.getValueData();
};

/**
 * Set extended menu item descriptor
 * @param {Object} value
 */
MenuListControl.prototype.setExtendedValue = function(value) {
	if (value.menuUID) {
		this._elem.setValue('' + value.menuUID + '_' + value.menuItemId + (value.menuItemAnchor ? '_' + value.menuItemAnchor : ''));
	} else {
		this.setValue(value.menuItemId);
	}
};

/**
 * Get value
 * @return {Object}
 */
MenuListControl.prototype.getValue = function() {
	return this._elem.getValueData().menuItemId;
};

/**
 * Set value
 * 
 * @param {Object} value to set
 */
MenuListControl.prototype.setValue = function(value) {
	for (var k in this._elem.optionsData) {
		if (this._elem.optionsData[k].data && this._elem.optionsData[k].data.menuItemId === parseInt(value, 10)) {
			this._elem.setValue(k);
		}
	}
};

/**
 * Get menu item info
 * 
 * @param {String} itemId menu Item id
 * @param {Object} menu
 * @param {Object} menuUID
 * @return {Object}
 */
MenuListControl.getItemInfo = function(itemId, menu, menuUID) {
	itemId = String(itemId);
	if (itemId.substring(0, 1) !== '#') {
		itemId = '#' + itemId;
	}
	var menuItem, menuId, menu_, menuItemId;
	var menus = (menu ? {'menu': menu} : Service.menu.getElemList());
	if (!menu && menuUID) {
		var mm = Service.menu.getMenuByUID(menuUID);
		if (mm) menus = {menuUID: mm};
	}
	for (menuId in menus) {
		menu_ = menus[menuId];
		for (menuItemId in menu_.items) {
			if (menuItemId === itemId) {
				return menu_.items[menuItemId];
			} else {
				menuItem = MenuListControl.getItemInfo(itemId, menu_.items[menuItemId]);
				if (menuItem) {
					return menuItem;
				}
			}
		}
	}
	
	return null;
};
 
/**
 * Open menu
 */
MenuListControl.prototype.open = function() {
	this._elem.menu.parent().addClass('open');
};

/**
 * Close menu
 */
MenuListControl.prototype.close = function() {
	this._elem.menu.parent().removeClass('open');
};

	return MenuListControl;
});;

/** WB FontStyleControl **/

/**
 * Font Style Control class
 * 
 * @author Marius Tomas <marius@profis.lt>
 * @version 1.0.0, 2012-12-15
 */
function WB_FontStyleControl() { this.__construct(); }

WB_FontStyleControl.prototype.elem = null;
WB_FontStyleControl.prototype.input = null;

/**
 * Construct Font Style controll
 */
WB_FontStyleControl.prototype.__construct = function() {	
	this.elem = $('<div class="btn-group">' +
			'<button class="btn btn-default" data-value="bold"><span class="glyphicon glyphicon-bold"></span></button>' +
			'<button class="btn btn-default" data-value="italic"><span class="glyphicon glyphicon-italic"></span></button>' +
			'<button class="btn btn-default" data-value="underline"><strong style="text-decoration: underline;">U</strong></button>' +
		'</div>');
	var lastTime = 0;
	this.elem.children('button').on('click touchend', function() {
		var nowTime = (new Date()).getTime();
		if (lastTime < (nowTime - 1000)) {
			lastTime = nowTime;
			$(this).toggleClass('active');
		}
	});
	this.input = this.elem;
};

/**
 * Get value
 * @return value
 */
WB_FontStyleControl.prototype.getValue = function() {
	var o = {};
	this.elem.children(".active").each(function() {
		o[$(this).attr("data-value")] = true;
	});
	o.css = {};
	o.css["font-weight"] = o.bold ? "bold" : "normal";
	o.css["font-style"] = o.italic ? "italic" : "normal";
	o.css["text-decoration"] = o.underline ? "underline" : "none";
	return o;
};

/**
 * Set value
 * @param value value to set
 */
WB_FontStyleControl.prototype.setValue = function(value) {
	var o = value ? value : {};
	this.elem.children().removeClass("active");
	this.elem.children().each(function() {
		if (o[$(this).attr("data-value")]) {
			$(this).addClass("active");
		}
	});
};
;

/** WB TextControl **/
define('TextControl', ['Service'], function(Service) {
	'use strict';

/**
 * TextControl component class
 * @param {boolean} needLineHeight
 * @param {string} ttplacement
 * @param {boolean} needPreview
 * @param {boolean} noStyle if true style selector will not be shown
 * @param {boolean} noAlign if true align selector will not ne shown
 * @param {boolean} horizontal if true controls will be layout in one line
 */
var TextControl = function(needLineHeight, ttplacement, needPreview, noStyle, noAlign, horizontal) { this.__construct(needLineHeight, ttplacement, needPreview, noStyle, noAlign, horizontal); };

TextControl.combine = function(_font, _size, _color, _style, _align) {
	var style = (_style ? _style.getValue() : {});
	var css = {
		font: ((style.italic ? "italic" : "normal") +
			" " + (style.bold ? "bold" : "normal") + " " + (_size ? _size.getValue() : 12) + "px" +
			(_font ? (" " + _font.getValue()) : "")),
		"text-align": (_align ? _align.getValue() : "left"),
		"text-decoration": (style.underline ? "underline" : "none"),
		color: (_color ? _color.getValue() : "#000000")
	};
	
	var val = _size ? (_size.getValue() + 2) : 14;
	if (val === 0) val = "normal"; else val = val + "px";
	css["line-height"] = val;
	
	return {
		color: (_color ? _color.getValue() : "#000000"),
		size: (_size ? _size.getValue() : 12),
		decoration: (style.underline ? "underline" : "none"),
		font: (_font ? _font.getValue() : null),
		style: (_style ? _style.getValue() : null),
		align: (_align ? _align.getValue() : "left"),
		lineHeight: (_size ? (_size.getValue() + 2) : 14),
		css: css
	};
};
/**
 * Build CSS for style definition object
 * @param {Object} styleDef
 * @param {FontControl=} fontFamily
 * @param {SizeSelector=} fontSize
 * @param {ColorPicker=} fontColor
 * @param {FontStyleControl=} fontStyle
 * @param {AlignSelector=} textAlign
 * @returns {Object}
 */
TextControl.buildCss = function(styleDef, fontFamily, fontSize, fontColor, fontStyle, textAlign, lineHeight) {
	var style = (styleDef ? styleDef : {}),
		res = {
			color: (style.color ? style.color : null),
			size: (style.size ? style.size : 0),
			font: (style.font ? style.font : null),
			style: ((typeof style.style === 'object' || style.style !== null) ? style.style : {}),
			align: (style.align ? style.align : null),
			lineHeight: (style.lineHeight ? style.lineHeight : null),
			css: {}
		};
	if (fontFamily) res.font = fontFamily.getValue();
	if (fontSize) res.size = fontSize.getValue();
	if (fontColor) res.color = fontColor.getValue();
	if (fontStyle) res.style = fontStyle.getValue();
	if (textAlign) res.align = textAlign.getValue();
	if (lineHeight) res.lineHeight = lineHeight.getValue();
	res.css.font = (
			(res.style ? ((res.style.italic ? 'italic' : 'normal') +
			' ' + (res.style.bold ? 'bold' : 'normal') + ' ') : '') +
			res.size + 'px' + (res.font ? (' ' + res.font) : '')
		);
	if (res.color) res.css.color = res.color;
	if (res.style) res.css['text-decoration'] = (res.style.underline ? 'underline' : 'none');
	if (res.align) res.css['text-align'] = res.align;
	if (res.lineHeight) {
		res.css['line-height'] = ((res.lineHeight === 0) ? 'normal' : (res.lineHeight + 'px'));
	}
	return $.extend(true, {}, res);
};
TextControl.prototype._uiElem = null;
TextControl.prototype.elem = null;
TextControl.prototype.color = null;
TextControl.prototype.size = null;
TextControl.prototype.decoration = null;
TextControl.prototype.font = null;
TextControl.prototype.style = null;
TextControl.prototype.align = null;
TextControl.prototype.lineHeight = null;
TextControl.prototype.previewText = null;

/**
 * Construct TextControl component
 * @param {boolean} needLineHeight if true line height controll will be visible
 * @param {string} ttplacement tooltip placement
 * @param {boolean} needPreview if true preview box will be shown
 * @param {boolean} noStyle if true style selector will not be shown
 * @param {boolean} noAlign if true align selector will not ne shown
 * @param {boolean} horizontal if true controls will be layout in one line
 */
TextControl.prototype.__construct = function(needLineHeight, ttplacement, needPreview, noStyle, noAlign, horizontal) {
	var thisClass = this;
	var changeFunc = (needPreview ? function() { thisClass.updatePreview(); } : null);
	this._uiElem = new Service.UIBuilder((horizontal ? (
		{type: 'FlowLayout', children: [
			{type: 'VerticalLayout', children: [
				{type: 'Label', text: __('Font')},
				{type: 'FontFamilySelector', id: 'font', change: changeFunc}
			]},
			{type: 'VerticalLayout', children: [
				{type: 'Label', text: __('Size')},
				{type: 'SizeSelector', id: 'size', change: changeFunc}
			]},
			{type: 'VerticalLayout', ignore: !needLineHeight, children: [
				{type: 'Label', text: __('Line height'),
					helpText: __('Line height 0 means line height "normal" (will be calculated by font size).'),
					helpPlacement: ttplacement
				},
				{type: 'SizeSelector', id: 'lineHeight', min: 0, change: changeFunc}
			]},
			{type: 'VerticalLayout', ignore: noStyle, children: [
				{type: 'Label', text: __('Style')},
				{type: 'FontStyleSelector', id: 'style', change: changeFunc}
			]},
			{type: 'VerticalLayout', ignore: noAlign, children: [
				{type: 'Label', text: __('Align')},
				{type: 'HAlignSelector', id: 'align', change: changeFunc}
			]},
			{type: 'VerticalLayout', children: [
				{type: 'Label', text: __('Color')},
				{type: 'ColorSelector', id: 'color', noTransparent: true, change: changeFunc}
			]}
		]}
		) : (
		{type: 'VerticalLayout', spacing: 15, children: [
			{type: 'HorizontalLayout', columnWeights: [4, 4, 4], columnWeightsSmall: [4, 4, 4], children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Font')},
					{type: 'FontFamilySelector', id: 'font', change: changeFunc}
				]},
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Size')},
					{type: 'SizeSelector', id: 'size', change: changeFunc}
				]},
				{type: 'VerticalLayout', ignore: !needLineHeight, children: [
					{type: 'Label', text: __('Line height'),
						helpText: __('Line height 0 means line height "normal" (will be calculated by font size).'),
						helpPlacement: ttplacement
					},
					{type: 'SizeSelector', id: 'lineHeight', min: 0, change: changeFunc}
				]}
			]},
			{type: 'HorizontalLayout', columnWeights: [4, 4, 4], columnWeightsSmall: [4, 4, 4], children: [
				{type: 'VerticalLayout', ignore: noAlign, children: [
					{type: 'Label', text: __('Align')},
					{type: 'HAlignSelector', id: 'align', change: changeFunc}
				]},
				{type: 'VerticalLayout', ignore: noStyle, children: [
					{type: 'Label', text: __('Style')},
					{type: 'FontStyleSelector', id: 'style', change: changeFunc}
				]},
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Color')},
					{type: 'ColorSelector', id: 'color', noTransparent: true, change: changeFunc}
				]}
			]},
			{type: 'VerticalLayout', id: 'previewBlock', visible: needPreview, children: [
				{type: 'Label', text: __('Preview')},
				{type: 'CustomContainer', id: 'previewText',
					css: {
						height: 70,
						overflow: 'hidden',
						padding: '10px',
						border: '1px solid lightgray'
					},
					init: function() {
						this.html = function(html) {
							this.getElem().html(html);
						};
					}
				}
			]}
		]}
	)));
	this.elem = this._uiElem.getElem();
	
	this.font = this._uiElem.fields.font;
	this.size = this._uiElem.fields.size;
	this.lineHeight = this._uiElem.fields.lineHeight;
	this.align = this._uiElem.fields.align;
	this.style = this._uiElem.fields.style;
	this.color = this._uiElem.fields.color;
	this.previewText = this._uiElem.fields.previewText;
};

/**
 * Get value object
 * @return object = {
 *    color: ...,
 *    size: ...,
 *    decoration: ...,
 *    font: ...,
 *    style: ...,
 *    align: ...,
 *    lineHeight: ...,
 *    css: ...
 * }
 */
TextControl.prototype.getValue = function() {
	return TextControl.buildCss(null, this.font, this.size, this.color, this.style, this.align, this.lineHeight);
};

/**
 * Set value object
 * @param obj object = {
 *    color: ...,
 *    size: ...,
 *    decoration: ...,
 *    font: ...,
 *    style: ...,
 *    align: ...,
 *    lineHeight: ...
 * }
 */
TextControl.prototype.setValue = function(obj) {
	var _obj = obj ? $.extend(true, {}, obj) : null;
	if (!_obj) _obj = {
			color: "#000000", size: 12, decoration: "none", font: "Arial,sans-serif",
			style: {}, align: "left", lineHeight: null
	};
	this.color.setValue(_obj.color);
	this.size.setValue(_obj.size ? _obj.size : 12);
	//this.decoration.setValue(_obj.decoration);
	this.font.setValue(_obj.font);
	if (this.style) this.style.setValue(_obj.style);
	if (this.align) this.align.setValue(_obj.align);
	if (this.lineHeight) {
		this.lineHeight.setValue(_obj.lineHeight);
	}
	if (this.previewText) this.updatePreview();
};

TextControl.prototype.previewTag = null;
TextControl.prototype.setPreviewTag = function(tag) {
	this.previewTag = tag ? tag : 'div';
};

TextControl.prototype.updatePreview = function() {
	var vals = this.getValue();
	var txt = document.createElement(this.previewTag ? this.previewTag : 'div');
	$(txt).append(__('Preview text')).css("margin", 0).css(vals.css);
	if (this.previewText) {
		this.previewText.html(txt);
		this.previewText.css({
			backgroundColor: WB_ColorPicker.readableColor(vals.color)
		});
	}
};

	return TextControl;
});
;

/** WB BackgroundControl **/

define('BackgroundControl', ['Service'], function(Service) {
	'use strict';

/**
 * BackgroundControl component class
 * @param {boolean} useBgAttachment
 */
var BackgroundControl = function(useBgAttachment) { this.__construct(useBgAttachment); };

BackgroundControl.index = 0;
/**
 * Checks if background is set
 * @param {Object} data
 * @returns {Boolean}
 */
BackgroundControl.isSet = function(data) {
	if (data === null || typeof data !== "object") return false;
	var img = data.image;
	if (!img || img === "null" || img === "none") img = null;
	var color = data.color;
	if (!color || color === "transparent") color = null;
	return (img || color);
};
BackgroundControl.prototype.elemUi = null;
BackgroundControl.prototype.elem = null;
BackgroundControl.prototype.onChange = null;
/**
 * If true then attachment field will be visible else invisible.
 * @type {Boolean}
 */
BackgroundControl.prototype.useAttachment = false;

/**
 * Construct BackgroundControl component
 * @param {boolean} useBgAttachment
 * @param {Object} inputPos
 */
BackgroundControl.prototype.__construct = function(useBgAttachment) {
	this.useAttachment = useBgAttachment;
	var thisClass = this, cfunc = function(fields) {
		if (thisClass.onChange && typeof thisClass.onChange === 'function') {
			thisClass.onChange.call(thisClass, fields);
		}
	};
	this.elemUi = new Service.UIBuilder({
		type: 'FlowLayout', spacing: 25, children: [
			{type: 'VerticalLayout', children: [
				{type: 'Label', text: __('Color')},
				{type: 'ColorSelector', id: 'color', noTrasparent: false,
					big: true,
					change: cfunc
				}
			]},
			{type: 'VerticalLayout', children: [
				{type: 'Label', text: __('Image')},
				{type: 'ImageSelector', id: 'image', select: cfunc}
			]},
			{type: 'VerticalLayout', children: [
				{type: 'Label', text: __('Position')},
				{type: 'AlignSelector', id: 'position', change: cfunc}
			]},
			{type: 'VerticalLayout', id: 'repeat',
				children: [
					{type: 'Label', text: __('Repeat')},
					{type: 'CheckBox', id: 'horiz', label: __('Horizontally'),
						css: {marginTop: 0},
						change: cfunc
					},
					{type: 'CheckBox', id: 'vert', label: __('Vertically'),
						change: cfunc
					}
				],
				init: function(def, fields) {
					this.getValue = function() {
						var repeat = "no-repeat";
						if (fields.horiz.getValue() && fields.vert.getValue()) {
							repeat = "repeat";
						} else if (fields.horiz.getValue()) {
							repeat = "repeat-x";
						} else if (fields.vert.getValue()) {
							repeat = "repeat-y";
						}
						return repeat;
					};
					this.setValue = function(val) {
						fields.horiz.setValue((val === "repeat-x" || val === "repeat"));
						fields.vert.setValue((val === "repeat-y" || val === "repeat"));
					};
				}
			},
			{type: 'VerticalLayout', id: 'attachmentCont', ignore: !useBgAttachment, children: [
				{type: 'Label', text: __('Attachment')/*, helpText: __("This tells if background image will scroll with content or stay fixed. This is useful only for main site/page background. If you don't know what to chose set it to scroll.")*/},
				{type: 'CheckBox', id: 'attachment', label: __("Don't scroll background"), change: cfunc}
			]}
		]
	});
	this.elem = this.elemUi.getElem();
};

/**
 * Get value object
 * @return {Object} object = {color: ..., image: ..., position: ..., repeat: ..., css: ...}
 */
BackgroundControl.prototype.getValue = function() {
	var fields = this.elemUi.fields;
	var img = fields.image.getValue();
	if (!img || img === "null") img = "none";
	var css = {
		background: (fields.color.getValue() + " " + 
			((img === "none") ? img : ("url('" + WB_Builder.urlEncode(wb_builder.makeRelUrl(img), true) + "')")) +
			" " + fields.repeat.getValue() +
			" " + ((fields.attachment && this.useAttachment) ? (fields.attachment.getValue() ? "fixed" : "scroll") : "scroll") +
			" " + fields.position.getValue())
	};
	return {
		color: fields.color.getValue(),
		image: fields.image.getValue(),
		attachment: ((fields.attachment && this.useAttachment) ? (fields.attachment.getValue() ? "fixed" : "scroll") : "scroll"),
		position: fields.position.getValue(),
		repeat: fields.repeat.getValue(),
		css: css
	};
};

/**
 * Set value object
 * @param {Object} obj value object = {color: ..., image: ..., position: ..., repeat: ...}
 */
BackgroundControl.prototype.setValue = function(obj) {
	var fields = this.elemUi.fields;
	if (!obj) obj = {
		color: "transparent", image: "none", position: "left top",
		attachment: "scroll", repeat: "repeat"
	};
	fields.color.setValue(obj.color);
	fields.image.setValue(obj.image);
	if (fields.attachment) fields.attachment.setValue((obj.attachment === "fixed"));
	fields.position.setValue(obj.position);
	fields.repeat.setValue(obj.repeat);
};

/**
 * Checks if background is set
 * @returns {Boolean}
 */
BackgroundControl.prototype.isSet = function() {
	return BackgroundControl.isSet(this.getValue());
};

/**
 * Set visibility for attachment field.
 * Note: for this to work you need to create this instance with useAttachment true.
 * @param {Boolean} use if true then attachment field will be visible else invisible.
 */
BackgroundControl.prototype.setUseAttachment = function(use) {
	if (('attachmentCont' in this.elemUi.fields)) {
		this.useAttachment = (use ? true : false);
		this.elemUi.fields.attachmentCont.setVisible(this.useAttachment);
	} else {
		this.useAttachment = false;
	}
};

	return BackgroundControl;
});
;

/** WB BorderControl **/

define('BorderControl', ['Service', 'UIButton'], function(Service, UIButton) {
	'use strict';

/**
 * BorderControl component class
 * @param {string} placement
 * @param {boolean} showRadius
 * @param {boolean} noTransparent
 */
var BorderControl = function(placement, showRadius, noTransparent) { this.__construct(placement, showRadius, noTransparent); };

/**
 * Build CSS for style definition object
 * @param {Object} styleDef
 * @param {ColorPicker=} borderColor
 * @param {DropdownBox=} borderStyle
 * @param {SizeSelector=} borderWeight
 * @param {SizeSelector=} borderRadius
 * @returns {Object}
 */
BorderControl.buildCss = function(styleDef, borderColor, borderStyle, borderWeight, borderRadius) {
	var style = (styleDef ? styleDef : {}),
		res = {
			color: (style.color ? style.color : null),
			style: (style.style ? style.style : 'none'),
			weight: (style.weight ? style.weight : 0),
			radius: ((typeof style.radius === 'undefined' || style.radius === null) ? null : (style.radius ? style.radius : 0)),
			css: {}
		};
	if (borderColor) res.color = borderColor.getValue();
	if (borderStyle) res.style = borderStyle.getValue();
	if (borderWeight) res.weight = borderWeight.getValue();
	if (borderRadius) res.radius = borderRadius.getValue();
	
	res.css.border = (res.weight + 'px ' + (res.style ? res.style : 'none') + (res.color ? (' ' + res.color) : ''));
	if (typeof res.radius !== 'undefined' && res.radius !== null) {
		res.css['border-radius'] = res.radius + 'px';
		res.css['-webkit-border-radius'] = res.radius + 'px';
		res.css['-moz-border-radius'] = res.radius + 'px';
	}
	return $.extend(true, {}, res);
};
BorderControl.prototype.elem = null;
BorderControl.prototype.btn = null;
BorderControl.prototype.preview = null;
BorderControl.prototype.panel = null;
BorderControl.prototype.color = null;
BorderControl.prototype.style = null;
BorderControl.prototype.weight = null;
BorderControl.prototype.radius = null;
BorderControl.prototype.placement = "bottom";
BorderControl.prototype.showRadius = false;
BorderControl.prototype.noTransparent = true;

/**
 * Construct BorderControl component
 * @param {string} placement
 * @param {boolean} showRadius
 * @param {boolean} noTransparent
 */
BorderControl.prototype.__construct = function(placement, showRadius, noTransparent) {
	var thisClass = this;
	this.placement = placement ? placement : this.placement;
	this.showRadius = showRadius ? showRadius : this.showRadius;
	this.noTransparent = (noTransparent !== null) ? noTransparent : this.noTransparent;
	this.elem = $('<div class="wb-border-controll"><div class="input-group">' +
			'<input type="text" class="form-control" readonly="readonly" />' +
			'<div class="input-group-btn">' +
				'<button class="btn btn-default" type="button"><span class="caret"></span></button>' +
			'</div>' +
		'</div><span class="pop"> </span><span class="prev"> </span></div>');
	this.btn = this.elem.find("button");
	this.preview = this.elem.children("span.prev");
	this.panel = new Service.UIBuilder({type: 'VerticalLayout', children: [
		{type: 'FlowLayout', children: [
			{type: 'VerticalLayout', children: [
				{type: 'Label', text: __('Weight')},
				{type: 'SizeSelector', id: 'weight', min: 0, units: 'px'}
			]},
			{type: 'VerticalLayout', children: [
				{type: 'Label', text: __('Style')},
				{type: 'DropdownBox', id: 'style', css: {width: 96},
					options: [
						{id: 'none', name: __('None')},
						{id: 'solid', name: __('Solid'), html: __('Solid') + '<span class="wb-style-span-solid"></span>'},
						{id: 'dashed', name: __('Dashed'), html: __('Dashed') + '<span class="wb-style-span-dashed"></span>'},
						{id: 'dotted', name: __('Dotted'), html: __('Dotted') + '<span class="wb-style-span-dotted"></span>'},
						{id: 'double', name: __('Double'), html: __('Double') + '<span class="wb-style-span-double"></span>'}
					],
					init: function() { this._menu.addClass('rel'); }
				}
			]},
			{type: 'VerticalLayout', children: [
				{type: 'Label', text: __('Color')},
				{type: 'ColorSelector', id: 'color', noTransparent: this.noTransparent}
			]},
			{type: 'VerticalLayout', ignore: (!this.showRadius), children: [
				{type: 'Label', text: __('Radius')},
				{type: 'SizeSelector', id: 'radius', min: 0, units: 'px'}
			]}
		]},
		{type: 'FlowLayout', spacing: 4, css: {marginTop: 4, textAlign: 'right'}, children: [
			{type: 'Button', text: __('Cancel'), styleClass: 'btn-sm',
				buttonStyle: UIButton.STYLE_DEFAULT,
				click: function() {
					var t = thisClass.elem.children('span.pop');
					t.popover('hide');
					t.popover('destroy');
					t.data('__WB_HAS_POPOVER__', false);
				}
			},
			{type: 'Button', text: __('Apply'), styleClass: 'btn-sm',
				buttonStyle: UIButton.STYLE_SUCCESS,
				click: function() {
					var t = thisClass.elem.children('span.pop');
					t.popover('hide');

					thisClass.preview.css({
						borderBottom: thisClass.weight.getValue() + 'px ' + thisClass.style.getValue() + ' ' + thisClass.color.getValue()
					});

					t.popover('destroy');
					t.data('__WB_HAS_POPOVER__', false);
				}
			}
		]}
	]});
	
	this.weight = this.panel.fields.weight;
	this.style = this.panel.fields.style;
	this.color = this.panel.fields.color;
	this.radius = this.panel.fields.radius;
	
	var pop = this.elem.children("span.pop");
	if (this.placement === "bottom") {
		pop.css({ right: "15px" });
	} else if (this.placement === "right" || this.placement === "left") {
		pop.css({ top: "50%" });
	}
	
	this.elem.children(".input-group").bind("click", function() {
		var t = thisClass.elem.children("span.pop");
		if (t.data("__WB_HAS_POPOVER__")) {
			t.popover("destroy");
			t.data("__WB_HAS_POPOVER__", false);
		}
		t.data("__WB_HAS_POPOVER__", true);
		t.popover({
			html: true,
			title: __("Border"),
			content: function() { return thisClass.panel.getElem(); },
			trigger: "manual",
			placement: thisClass.placement
		});
		t.popover("show");
		var pop = t.parent().children('.popover').eq(0),
			btn = thisClass.elem.find('.btn').eq(0),
			winW = $(window).width(),
			winSl = $(window).scrollLeft(),
			elemLeft = thisClass.elem.offset().left - winSl,
			elemOff = (btn.offset().left - winSl - elemLeft) + (btn.outerWidth(true) / 2),
			popNewW = (thisClass.showRadius ? 420 : 320),
			popL;
		if (thisClass.placement === 'top' || thisClass.placement === 'bottom') {
			if (popNewW > winW) popNewW = winW;
			popL = elemOff - (popNewW / 2);
			if ((elemLeft + popL + popNewW) > winW) popL += (winW - (elemLeft + popL + popNewW));
			if ((elemLeft + popL) < 0) popL -= (elemLeft + popL);
			pop.css({left: popL, width: popNewW, maxWidth: popNewW});
			pop.find('.arrow').eq(0).css({left: (popL * -1) + elemOff});
		} else {
			pop.css({width: popNewW, maxWidth: popNewW});
		}
	});
};

/**
 * Get value object
 * @return object = {color: ..., style: ..., weight: ..., css: ...}
 */
BorderControl.prototype.getValue = function() {
	return BorderControl.buildCss(null, this.color, this.style, this.weight, (this.showRadius ? this.radius : null));
};

/**
 * Set value object
 * @param obj object = {color: ..., style: ..., weight: ..., css: ...}
 */
BorderControl.prototype.setValue = function(obj) {
	if (!obj) obj = {
		color: "#000000", style: "solid", weight: 1
	};
	this.color.setValue(obj.color);
	this.style.setValue(obj.style);
	this.weight.setValue(obj.weight);
	if (this.showRadius)
		this.radius.setValue(obj.radius);
	this.preview.css({
		borderBottom: this.weight.getValue() + "px " + this.style.getValue() + " " + this.color.getValue()
	});
};

	return BorderControl;
});
;

/** WB TextFieldControl **/

/**
 * Text Field Control class
 * 
 * @author Marius Tomas <marius@profis.lt>
 * @version 1.0.0, 2012-08-16
 * 
 * @param {String} name
 * @param {String} value
 * @param {jQuery} prepend
 * @param {jQuery} append
 */
function WB_TextFieldControl(name, value, prepend, append) {
	this.__construct(name, value, prepend, append);
}

WB_TextFieldControl.prototype.elem = null;
WB_TextFieldControl.prototype.input = null;

/**
 * Construct Text field controll
 * @param name (optional) text field name
 * @param value (optional) text field value
 * @param prepend (optional) HTML or DOM object or jQuery selector to prepend
 * @param append (optional) HTML or DOM object or jQuery selector to append
 */
WB_TextFieldControl.prototype.__construct = function(name, value, prepend, append) {
	this.input = $('<input class="form-control" type="text" />');
	
	if (WB_Builder.isset(name)) this.input.attr("name", name);
	if (WB_Builder.isset(value)) this.input.val(value);
	
	if (prepend || append) {
		this.elem = $('<div></div>');
		this.elem.append(this.input);
		if (prepend) {
			this.elem.addClass("input-prepend");
			this.elem.prepend(this.prepareAdOn(prepend));
		}
		if (append) {
			this.elem.addClass("input-append");
			this.elem.append(this.prepareAdOn(append));
		}
	} else {
		this.elem = this.input;
	}
};

/**
 * Prepare addon for appending or prepending
 * @param el element to prepare
 */
WB_TextFieldControl.prototype.prepareAdOn = function(el) {
	var wrp = null;
	if (typeof(el) !== "object" || typeof(el.hasClass) !== "function" || !el.className) {
		wrp = $('<span class="add-on"></span>');
		wrp.append(el);
	} else {
		wrp = $(el);
		if (!el.hasClass("add-on") && !el.hasClass("btn")) {
			wrp.addClass("add-on");
		}
	}
	return wrp;
};

/**
 * Get value
 * @return value
 */
WB_TextFieldControl.prototype.getValue = function() {
	return this.input.val();
};

/**
 * Set value
 * @param value value to set
 */
WB_TextFieldControl.prototype.setValue = function(value) {
	this.input.val(value);
};
;

/** WB TextAreaControl **/

/**
 * Text Area Control class
 * @param {string=} name
 * @param {string=} value
 * @param {string=} resizable
 */
function WB_TextAreaControl(name, value, resizable) { this.__construct(name, value, resizable); }

WB_TextAreaControl.prototype.elem = null;
WB_TextAreaControl.prototype.input = null;

/**
 * Construct Text Area controll
 * @param {string=} name text area name
 * @param {string=} value text area value
 * @param {string=} resizable make text area resizable (posible values: true, "both", "vertical", "horizontal", false)
 */
WB_TextAreaControl.prototype.__construct = function(name, value, resizable) {
	this.input = this.elem = $('<textarea class="form-control"></textarea>');
	
	if (WB_Builder.isset(name)) this.elem.attr("name", name);
	if (WB_Builder.isset(value)) this.elem.val(value);
	if (!resizable) {
		this.input.css("resize", "none");
	} else if (resizable === "vertical" || resizable === "horizontal" || resizable === "both") {
		this.input.css("resize", resizable);
	}
};

/**
 * Get value
 * @return value
 */
WB_TextAreaControl.prototype.getValue = function() {
	return this.elem.val();
};

/**
 * Set value
 * @param value value to set
 */
WB_TextAreaControl.prototype.setValue = function(value) {
	this.elem.val(value);
};
;

/** WB CheckBoxControl **/

/**
 * CheckBox Control class
 * @param {string=} label
 * @param {string=} name
 * @param {string=} value
 */
function WB_CheckBoxControl(label, name, value) { this.__construct(label, name, value); }

WB_CheckBoxControl.prototype.elem = null;
WB_CheckBoxControl.prototype.input = null;

/**
 * Construct Checkbox controll
 * @param {string=} label checkbox label
 * @param {string=} name checkbox name
 * @param {string=} value checkbox value
 */
WB_CheckBoxControl.prototype.__construct = function(label, name, value) {
	this.elem = $('<div class="checkbox"></div>');
	var labelElem = $('<label>').appendTo(this.elem);
	this.input = $('<input type="checkbox" />').appendTo(labelElem);
	
	if (WB_Builder.isset(label)) labelElem.append(label);
	if (WB_Builder.isset(name)) this.input.attr("name", name);
	if (WB_Builder.isset(value)) this.setValue(value);
};

/**
 * Get value
 * @return {boolean}
 */
WB_CheckBoxControl.prototype.getValue = function() {
	return this.input.get(0).checked ? true : false;
};

/**
 * Set value
 * @param {boolean} value value to set
 */
WB_CheckBoxControl.prototype.setValue = function(value) {
	this.input.get(0).checked = value ? true : false;
};
;

/** WB RadioBoxControl **/

/**
 * RadioBox Control class
 * @param {string=} label
 * @param {string=} name
 * @param {string=} value
 * @param {string=} inputValue
 */
function WB_RadioBoxControl(label, name, value, inputValue) { this.__construct(label, name, value, inputValue); }

WB_RadioBoxControl.prototype.elem = null;
WB_RadioBoxControl.prototype.input = null;

/**
 * Construct Radiobox controll
 * @param {string=} label radiobox label
 * @param {string=} name radiobox name
 * @param {string=} value radiobox value
 * @param {string=} inputValue radiobox input value
 */
WB_RadioBoxControl.prototype.__construct = function(label, name, value, inputValue) {
	this.elem = $('<div class="radio"></div>');
	var labelElem = $('<label>').appendTo(this.elem);
	this.input = $('<input type="radio" />').appendTo(labelElem);
	
	if (WB_Builder.isset(label)) labelElem.append(label);
	if (WB_Builder.isset(name)) this.input.attr("name", name);
	if (WB_Builder.isset(value)) this.setValue(value);
	if (WB_Builder.isset(inputValue)) this.input.val(inputValue);
};

/**
 * Get value
 * @return value
 */
WB_RadioBoxControl.prototype.getValue = function() {
	return this.input.get(0).checked ? true : false;
};

/**
 * Set value
 * @param value value to set
 */
WB_RadioBoxControl.prototype.setValue = function(value) {
	this.input.get(0).checked = value ? true : false;
};
;

/** WB LinkEditControl **/

/**
 * LinkEditControl component class
 * @param {string=} value text field value
 * @param {string=} emptyMsg msg to display if no value
 * @param {string} langCode
 */
function WB_LinkEditControl(value, emptyMsg, langCode) {
	this.__construct(value, emptyMsg, langCode);
}

WB_LinkEditControl.prototype.elem = null;
WB_LinkEditControl.prototype.link = null;
WB_LinkEditControl.prototype.input = null;
WB_LinkEditControl.prototype.value = null;
WB_LinkEditControl.prototype.remBtn = null;
WB_LinkEditControl.prototype.emptyMsg = __("No link selected");

/**
 * Construct Text field controll
 * @param {string=} value text field value
 * @param {string=} emptyMsg msg to display if no value
 * @param {string} langCode
 */
WB_LinkEditControl.prototype.__construct = function(value, emptyMsg, langCode) {
	var thisClass = this;
	
	this.elem = $('<a class="wb_link" href="javascript:void(0);"></a>');
	this.input = $('<span class="txt"></span>');
	var btn = $('<span class="btn btn-default btn-xs"><span class="glyphicon glyphicon-pencil"></span></span>');
	this.remBtn = $('<span class="btn btn-default btn-xs hide" style="margin-left:5px;"><span class="glyphicon glyphicon-remove"></span></span>');
	
	this.remBtn.click(function(e) {
		e.stopPropagation();
		thisClass.clearValue();
	});
	
	this.elem.append(this.input).append(btn).append(this.remBtn);
	this.link = this.elem;
	if (langCode) {
		this.elem.wrap('<div data-lang="' + langCode + '" style="margin-bottom: 4px;"></div>');
		this.elem.before('<span>' + langCode.toUpperCase() + ': </span>');
		this.elem = this.elem.parent();
		for (var i=0, lang; (lang = wb_builder.site.languages[i]); i++) {
			if (lang.code === langCode && lang.isDefault) {
				this.elem.append('<span style="margin-left: 4px;">(' + __('Default') + ')</span>');
				break;
			}
		}
	}
	
	if (emptyMsg)
		this.emptyMsg = emptyMsg;
	if (value)
		this.setValue(value);
	else
		this.clearValue();
};

/**
 * Get value
 * @return value
 */
WB_LinkEditControl.prototype.getValue = function() {
	return this.value;
};

/**
 * Set value
 * @param value to set
 */
WB_LinkEditControl.prototype.setValue = function(value) {
	this.input.html(value).removeClass("inactive");
	this.value = value;
	this.remBtn.removeClass("hide");
};

/**
 * Remove value
 */
WB_LinkEditControl.prototype.clearValue = function() {
	
	this.input.html(this.emptyMsg).addClass("inactive");
	this.value = null;
	this.remBtn.addClass("hide");
};

;

/** WB ToolTipControl **/

define('ToolTipControl', [], function() {
	'use strict';

/**
 * ToolTip Control class
 * @param {string} label
 * @param {string} tip
 * @param {string} placement
 */
var ToolTipControl = function(label, tip, placement) { this.__construct(label, tip, placement); };

ToolTipControl.prototype.elem = null;

/**
 * Construct ToolTip controll
 * @param {string} label tooltip label text
 * @param {string} tip tooltip tip text
 * @param {string} placement tooltip placement (one of "left", "right", "top", "bottom")
 */
ToolTipControl.prototype.__construct = function(label, tip, placement) {
	this.elem = $('<span class="badge wb_badge_help">?</span>');
	
	this.elem.html(label);
	this.elem.removeAttr('title');
	this.elem.css({marginLeft: '6px', cursor: 'default' });
	var thisSelf = this, tipOver = false, initiated = false, closeTimeout = null;
	this.elem.on('mouseover focus', function() {
		if (tipOver) return;
		tipOver = true;
		thisSelf.elem.tooltip('show');
	}).on('mouseout blur', function() {
		if (!tipOver) return;
		tipOver = false;
		if (closeTimeout) clearTimeout(closeTimeout);
		closeTimeout = setTimeout(function() { if (!tipOver) thisSelf.elem.tooltip('hide'); }, 100);
	}).on('shown.bs.tooltip', function() {
		if (initiated) return;
		initiated = true;
		var tip = $(this).parent().children('.tooltip').eq(0);
		tip.on('mouseout', function() {
			if (!tipOver) return;
			tipOver = false;
			if (closeTimeout) clearTimeout(closeTimeout);
			closeTimeout = setTimeout(function () { if (!tipOver) thisSelf.elem.tooltip('hide'); }, 100);
		}).on('mouseover', function() { tipOver = true; });
	});
	if (wb_builder.rtl) {
		if (placement === 'left') placement = 'right';
		else if (placement === 'right') placement = 'left';
	}
	this.elem.tooltip({
		trigger: 'manual',
		html: true,
		title: tip,
		placement: (placement ? placement : 'top')
	});
};
	
	return ToolTipControl;
});
;

/** WB SpacingControl **/

define('SpacingControl', ['SizeSelector'], function(SizeSelector) {
	'use strict';

/**
 * Spacing control class
 */
var SpacingControl = function() { this.__construct(); };

SpacingControl.prototype.elem = null;
SpacingControl.prototype.margin = null;
SpacingControl.prototype.padding = null;
SpacingControl.prototype.panel = null;
SpacingControl.prototype.value = null;
SpacingControl.prototype.popover = null;
SpacingControl.prototype.hasPopover = false;
SpacingControl.prototype.pType = null;
SpacingControl.prototype.pPos = null;

/**
 * Construct Spacing control
 */
SpacingControl.prototype.__construct = function() {
	this.elem = $('<div class="wb-spacing-control">' +
			'<span class="lbl">' + __("margin") + '</span>' +
			'<div class="padding">' +
				'<span class="lbl">' + __("padding") + '</span>' +
				'<span class="l">0</span>' +
				'<span class="r">0</span>' +
				'<span class="t">0</span>' +
				'<span class="b">0</span>' +
				'<a href="javascript:void(0)" class="la"></a>' +
				'<a href="javascript:void(0)" class="ra"></a>' +
				'<a href="javascript:void(0)" class="ta"></a>' +
				'<a href="javascript:void(0)" class="ba"></a>' +
				'<div class="itm">' +
					'<span class="l">0</span>' +
					'<span class="r">0</span>' +
					'<span class="t">0</span>' +
					'<span class="b">0</span>' +
					'<a href="javascript:void(0)" class="la"></a>' +
					'<a href="javascript:void(0)" class="ra"></a>' +
					'<a href="javascript:void(0)" class="ta"></a>' +
					'<a href="javascript:void(0)" class="ba"></a>' +
				'</div>' +
			'</div>' +
		'</div>');
	
	this.margin = this.elem.children(".padding");
	this.padding = this.elem.children(".padding").children(".itm");
	
	var thisClass = this;
	
	this.margin.children("a.la").bind("click", function() {
		thisClass.showPopover("margin", "l");
		return false;
	});
	this.margin.children("a.ra").bind("click", function() {
		thisClass.showPopover("margin", "r");
		return false;
	});
	this.margin.children("a.ta").bind("click", function() {
		thisClass.showPopover("margin", "t");
		return false;
	});
	this.margin.children("a.ba").bind("click", function() {
		thisClass.showPopover("margin", "b");
		return false;
	});
	
	this.padding.children("a.la").bind("click", function() {
		thisClass.showPopover("padding", "l");
		return false;
	});
	this.padding.children("a.ra").bind("click", function() {
		thisClass.showPopover("padding", "r");
		return false;
	});
	this.padding.children("a.ta").bind("click", function() {
		thisClass.showPopover("padding", "t");
		return false;
	});
	this.padding.children("a.ba").bind("click", function() {
		thisClass.showPopover("padding", "b");
		return false;
	});
	
	this.panel = $('<div></div>');
	this.panel.append((this.value = new SizeSelector()).elem);
	this.value.elem.css({display: 'inline-block'});
	var buttons = $('<div style="text-align: right;"></div>');
	this.panel.append(buttons);
	var cancelBtn = $('<button class="btn btn-default" type="button"></button>');
	cancelBtn.html(__("Cancel"));
	buttons.append(cancelBtn);
	cancelBtn.bind("click", function() {
		thisClass.popover.popover("hide");
		thisClass.popover.popover("destroy");
		thisClass.hasPopover = false;
	});
	
	var saveBtn = $('<button class="btn btn-success" type="button"></button>');
	saveBtn.html(__("Apply"));
	saveBtn.css({ marginLeft: "10px" });
	buttons.append(saveBtn);
	saveBtn.bind("click", function() {
		thisClass.popover.popover("hide");
		var src = thisClass[thisClass.pType].children("." + thisClass.pPos);
		src.html(thisClass.value.getValue());
		thisClass.popover.popover("destroy");
		thisClass.hasPopover = false;
	});
};

SpacingControl.prototype.showPopover = function(type, pos) {
	var t = this[type].children("a." + pos + "a");
	if (this.hasPopover) {
		this.popover.popover("destroy");
		this.hasPopover = false;
	}
	this.hasPopover = true;
	this.pType = type;
	this.pPos = pos;
	var src = this[this.pType].children("." + this.pPos);
	this.value.setValue(src.html());
	var placement = "bottom";
	if (pos === "r") placement = "right";
	else if (pos === "l") placement = "left";
	else if (pos === "t") placement = "top";
	var thisClass = this;
	t.popover({
		html: true,
		title: __("Value"),
		content: function() { return thisClass.panel; },
		trigger: "manual",
		placement: placement
	});
	t.popover("show");
	t.parent().children(".popover").width(240);
	this.popover = t;
};

SpacingControl.prototype.parseInt = function(val) {
	var n = parseInt(val, 10);
	return isNaN(n) ? 0 : n;
};

/**
 * Get value
 * @return value
 */
SpacingControl.prototype.getValue = function() {
	var ml = this.parseInt(this.margin.children(".l").html());
	var mr = this.parseInt(this.margin.children(".r").html());
	var mt = this.parseInt(this.margin.children(".t").html());
	var mb = this.parseInt(this.margin.children(".b").html());
	var pl = this.parseInt(this.padding.children(".l").html());
	var pr = this.parseInt(this.padding.children(".r").html());
	var pt = this.parseInt(this.padding.children(".t").html());
	var pb = this.parseInt(this.padding.children(".b").html());
	var css = {
		margin: (mt + "px " + mr + "px " + mb + "px " + ml + "px"),
		padding: (pt + "px " + pr + "px " + pb + "px " + pl + "px")
	};
	return {
		marginTop: mt,
		marginRight: mr,
		marginBottom: mb,
		marginLeft: ml,
		paddingTop: pt,
		paddingRight: pr,
		paddingBottom: pb,
		paddingLeft: pl,
		css: css
	};
};

/**
 * Set value
 * @param value
 */
SpacingControl.prototype.setValue = function(value) {
	var val = value ? value : {};
	this.margin.children(".l").html(this.parseInt(val.marginLeft));
	this.margin.children(".r").html(this.parseInt(val.marginRight));
	this.margin.children(".t").html(this.parseInt(val.marginTop));
	this.margin.children(".b").html(this.parseInt(val.marginBottom));
	this.padding.children(".l").html(this.parseInt(val.paddingLeft));
	this.padding.children(".r").html(this.parseInt(val.paddingRight));
	this.padding.children(".t").html(this.parseInt(val.paddingTop));
	this.padding.children(".b").html(this.parseInt(val.paddingBottom));
};

	return SpacingControl;
});
;

/** WB StyleControl **/

define('StyleControl', ['ComboBox'], function(ComboBox) {
	'use strict';

/**
 * Style Control class
 * @param {boolean} emptyChoice include none options
 */
var StyleControl = function(emptyChoice) { this.__construct(emptyChoice); };

StyleControl.prototype.elem = null;
StyleControl.prototype.input = null;
StyleControl.prototype._elem = null;
StyleControl.prototype.emptyChoice = false;

/**
 * Construct Style controll
 * @param {boolean} emptyChoice include none options
 */
StyleControl.prototype.__construct = function(emptyChoice) {	
	this._elem = new ComboBox();
	
	this.input = this._elem.input;
	this.elem = this._elem.elem;
	if (emptyChoice)
		this.emptyChoice = true;
	this.update();
};

StyleControl.prototype.update = function() {
	this._elem.removeAllOptions();
	if (this.emptyChoice)
		this._elem.addOption('', ' - ');
	for (var i = 0; i < wb_builder.site.styles.length; i++) {
		var s = wb_builder.site.styles[i];
		var spc = (s.ident) ? ((s.ident*10) + 20) : 0;
		var li = this._elem.addOption(s.selector.substring(1), s.name);
		if (spc) li.children("a").css({ paddingLeft: spc + "px" });
	}
};

/**
 * Get value
 * @return {string}
 */
StyleControl.prototype.getValue = function() {
	return this._elem.getValue();
};

/**
 * Set value
 * @param {string} value value to set
 */
StyleControl.prototype.setValue = function(value) {
	this._elem.setValue(value);
};

	return StyleControl;
});
;

/** WB URLControl **/

define('URLControl', ['LinkDialog', 'MenuListControl'], function(LinkDialog, MenuListControl) {
	'use strict';

/**
 * URL Control component class
 * @param {Boolean} multilang
 */
var URLControl = function(multilang) { this.__construct(multilang); };

URLControl.prototype._elem = null;
URLControl.prototype.elem = null;
URLControl.prototype.linkDialog = null;
URLControl.prototype.value = null;
/** @type {Boolean} */
URLControl.prototype.multilang = null;
URLControl.elemList = [];
URLControl.reloadAll = function() {
	for (var i=0, elem; (elem = URLControl.elemList[i]); i++) {
		elem.reload();
	}
};

/**
 * Construct URL controll
 * @param {Boolean} multilang
 */
URLControl.prototype.__construct = function(multilang) {
	this.elem = $('<div class="wb-url-controll"></div>');
	this.multilang = multilang;
	this.init();
	URLControl.elemList.push(this);
};

URLControl.prototype.reload = function() {
	this._elem = null;
	this.elem.empty();
	this.init();
};

URLControl.prototype.init = function() {
	var thisClass = this;
	var langs = window.wb_builder.site.languages;
	if (langs.length && this.multilang) {
		this._elem = {};
		for (var i=0, lang; (lang = langs[i]); i++) {
			var el = new WB_LinkEditControl(null, null, lang.code);
			el.link.bind('click', function() {
				thisClass.__onClick(null, $(this).parent().attr('data-lang'));
				return false;
			});
			el.remBtn.bind('click', function() {
				thisClass.setValue(null, $(this).parent().parent().attr('data-lang'));
			});
			this._elem[lang.code] = el;
			this.elem.append(this._elem[lang.code].elem);
		}
	} else {
		this._elem = new WB_LinkEditControl();
		this._elem.link.bind('click', function() {
			thisClass.__onClick();
			return false;
		});
		this._elem.remBtn.bind('click', function() {
			thisClass.setValue(null);
		});
		this.elem.append(this._elem.elem);
	}
	this.setValue();
};

URLControl.prototype.__onClick = function(onChange, langCode) {
	var thisClass = this;
	var thisCallback = (typeof onChange === "function") ? onChange : null;
	if (!this.linkDialog) {
		this.linkDialog = new LinkDialog(__("Link properties"));
		this.linkDialog.addButton(__("Cancel"));
		this.linkDialog.addButton(__("Save"), function() {
			thisClass.setValue(thisClass.linkDialog.getInfo(), thisClass.linkDialog.langCode);
			thisClass.linkDialog.hide();
			if (thisCallback) { thisCallback.call(thisClass); }
		}, true);
	}
	this.linkDialog.langCode = langCode;
	this.linkDialog.setInfo(this.getValue(langCode));
	this.linkDialog.show();
};

/**
 * Get value
 * @param {String} langCode
 * @return {Object}
 */
URLControl.prototype.getValue = function(langCode) {
	return (langCode) ? this.value[langCode] : this.value;
};

/**
 * Set value
 * @param {Object} value to set
 * @param {String} langCode language to set value to
 */
URLControl.prototype.setValue = function(value, langCode) {
	var i, defLang, val, _el = (2 in arguments) ? arguments[2] : null; // if isset 3rd argument
	if (!_el) {
		val = $.extend(true, {}, this.value);
		if (wb_builder.site.languages.length && this.multilang) {
			if (langCode) {
				val[langCode] = this.setValue(value, langCode, this._elem[langCode]);
			} else {
				if (value || value instanceof Array && !value.length || typeof value === 'object' && !Object.keys(value).length) {
					if ('type' in value) {
						defLang = wb_builder.site.getLastDefLang();
						val[defLang] = this.setValue(value, defLang, this._elem[defLang]);
					} else if (typeof value === 'object') {
						val = {};
						for (i in this._elem) {
							val[i] = this.setValue(value[i], i, this._elem[i]);
						}
					}
				} else {
					val = {};
					for (i in this._elem) {
						val[i] = this.setValue(null, null, this._elem[i]);
					}
				}
			}
		} else {
			if (value) {
				if ('type' in value) {
					val = this.setValue(value, null, this._elem);
				} else if (typeof value === 'object') {
					defLang = wb_builder.site.getLastDefLang();
					val = this.setValue(value[defLang], null, this._elem);
				}
			} else {
				val = this.setValue(null, null, this._elem);
			}
		}
		this.value = val;
		
	} else {
		val = (value && typeof(value) === "object") ? $.extend(true, {}, value) : {};
		if (!val.type) val.type = "url";
		if (!val.url) val.url = null;
		if (!val.menuUID) val.menuUID = null;
		if (!val.anchor) val.anchor = null;
		if (!val.target) val.target = null;
		if (!val.title) val.title = null;
		
		if (val.type === "page") {
			var mi = val.anchor ? {name: '#' + val.anchor} : MenuListControl.getItemInfo(val.url, null, val.menuUID);
			if (mi) {
				_el.setValue(__tr(mi.name, wb_builder.site.getLastDefLang()));
			} else {
				_el.clearValue();
			}
		} else {
			if (val.url) {
				_el.setValue(val.url);
			} else {
				_el.clearValue();
			}
		}
		
		return val;
	}
};

URLControl.prototype.getUrlTitle = function() {
	if ('title' in this.value) {
		return this.value.title;
	} else if (typeof this.value === 'object') {
		return this.value[wb_builder.site.currSelLang].title;
	}
};

URLControl.prototype.getUrlTarget = function() {
	var target = null;
	if ('target' in this.value) {
		target = this.value.target;
	} else if (typeof this.value === 'object') {
		target = this.value[wb_builder.currSelLang].target;
	}
	if ((typeof target !== "string") && target) target = "_blank";
	return target;
};

URLControl.prototype.getUrl = function() {
	var url = null;
	if ('url' in this.value) {
		url = this.value.url;
	} else if (typeof this.value === 'object') {
		url = this.value[wb_builder.site.currSelLang].url;
	}
	if (this.value.type === "page") {
		var mi = MenuListControl.getItemInfo(this.value.url, null, this.value.menuUID);
		if (mi) {
			url = (mi.type === 'internal' || mi.type === 'page') ? ('mi:' + (this.value.menuUID ? ('' + this.value.menuUID + '_') : '') + mi.id + '/') : mi.url;
		}
	} else if (this.value.type === "email") {
		url = "mailto:" + url;
	} else if (this.value.type === "file") {

	}
	return url;
};

	window.WB_URLControl = URLControl;
	
	return URLControl;

});
;

/** WB ListControl **/

/**
 * List Control class
 * @param {Object} opt
 */
function WB_ListControl(opt) { this.__construct(opt); }

WB_ListControl.prototype.elem = null;
WB_ListControl.prototype.list = null;
WB_ListControl.prototype.input = null;
WB_ListControl.prototype.addBtn = null;
WB_ListControl.prototype.initiated = false;
WB_ListControl.prototype.options = null;
WB_ListControl.prototype.lastSelected = null;
WB_ListControl.prototype.lastSelectedLi = null;

/**
 * Construct Font controll
 * @param {Object} opt
 */
WB_ListControl.prototype.__construct = function(opt) {
	this.options = $.extend(true, {}, opt);
	
	this.elem = $('<div class="wb-list-control well"></div>');
	this.list = $('<ul class="nav nav-pills nav-stacked"></ul>');
	this.list.hide();
	this.elem.append(this.list);
	this.input = this.elem;
	var thisClass = this;
	if (!("editable" in this.options) || this.options.editable) {
		this.addBtn = $('<a class="wb-add-btn" href="javascript:void(0)"><span class="glyphicon glyphicon-plus"></span></a>');
		this.addBtn.append(__("Add item"));
		this.elem.append(this.addBtn);
		this.addBtn.bind("click", function() {
			var cls = (thisClass.options.type && typeof(thisClass.options.type) === "function") ? thisClass.options.type : (function() {});
			var obj = new cls();
			thisClass.addItem(obj);
		});
		
		this.elem.append('<div class="wb-page-tree-notice"><small><span class="glyphicon glyphicon-exclamation-sign"></span>' + __("Use Drag and Drop to sort items") + '</small></div>');
	} else {
		this.elem.css("height", "auto");
	}
};

WB_ListControl.prototype.setHeight = function(height) {
	this.list.css({ height: height, maxHeight: height });
	if (height) this.list.show();
};		

WB_ListControl.prototype.updateStyle = function() {
	if (!("editable" in this.options) || this.options.editable) {
		if (this.initiated) {
			this.list.sortable("destroy");
		}
		var thisClass = this;
		this.list.sortable({
			distance: 3,
			axis: "y",
			//containment: "parent",
			items: "> li",
			cursor: "move",
			start: function(e, ui) { thisClass.onSortStart(e, ui); },
			stop: function(e, ui) { thisClass.onSortStop(e, ui); }
		});
	}
	this.initiated = true;
	if (this.list.children("li").size() > 0) {
		this.list.show();
	} else {
		this.list.hide();
	}
};

WB_ListControl.prototype.onSortStart = function(e, ui) {
	if (this.lastSelected) {
		this.lastSelectedLi.trigger("click");
	}
	this.lastSelected = null;
	this.lastSelectedLi = null;
};

WB_ListControl.prototype.onSortStop = function(e, ui) {
	this.lastSelected = null;
	this.lastSelectedLi = null;
};

WB_ListControl.prototype.setItemIcon = function(li, icon) {
	$(li).find("span.glyphicon").attr('class', icon);
};

WB_ListControl.prototype.addItem = function(item, noStyleUpdate, icon) {
	var cls = (this.options.type && typeof(this.options.type) === "function") ? this.options.type : (function() {});
	var data = item.serialize();
	data.virtual = true;
	var obj = new cls(data);
	var thisClass = this;
	var xbtn = null;
	var li = $('<li><a href="javascript:void(0)"><span class="' + (icon ? icon : 'glyphicon glyphicon-folder-open') + '"></span></a></li>');
	if (!("editable" in this.options) || this.options.editable) {
		xbtn = $('<span class="wb-x-btn glyphicon glyphicon-remove"></span>');
		xbtn.bind("click", function() { thisClass.removeItem(li); });
	}
	li.children("a").append(" " + (obj.name ? __tr(obj.name, wb_builder.site.getLastDefLang()) : __("New Item")));
	if (!("editable" in this.options) || this.options.editable) {
		if (xbtn) li.children("a").append(xbtn);
	}
	li.wbSetClassInstance(obj);
	li.on("click", function() {
		li.parent().children("li").removeClass("active");
		li.addClass("active");
		var obj = null;
		if (thisClass.options.onSelect && typeof(thisClass.options.onSelect) === "function") {
			obj = li.wbGetClassInstance();
			thisClass.options.onSelect.call(li.get(0), obj);
		}
		if (thisClass.lastSelectedLi) thisClass.updateItem(thisClass.lastSelectedLi);
		thisClass.lastSelected = obj;
		thisClass.lastSelectedLi = li;
	});
	this.list.append(li);
	if (this.options.onAdd && typeof(this.options.onAdd) === "function") {
		this.options.onAdd.call(li, li.wbGetClassInstance());
	}
	if (!noStyleUpdate) this.updateStyle();
	return li;
};

WB_ListControl.prototype.updateItem = function(li) {
	var obj = li.wbGetClassInstance();
	var i = li.children("a").children("span.glyphicon");
	i.detach();
	li.children("a").empty();
	li.children("a").append(i.eq(0));
	li.children("a").append(" " + (obj.name ? __tr(obj.name, wb_builder.site.getLastDefLang()) : __("New Item")));
	li.children("a").append(i.eq(1));
};

WB_ListControl.prototype.removeItem = function(li, noStyleUpdate) {
	var obj = li.wbGetClassInstance();
	if (this.options.onRemove && typeof(this.options.onRemove) === "function") {
		this.options.onRemove.call(li, obj);
	}
	if (li.hasClass("active")) {
		this.lastSelected = null;
		this.lastSelectedLi = null;
	}
	li.wbSetClassInstance(null);
	li.remove();
	li.empty();
	if (!noStyleUpdate) this.updateStyle();
};

WB_ListControl.prototype.removeAllItems = function() {
	var thisClass = this;
	this.list.children("li").each(function() {
		thisClass.removeItem($(this), true);
	});
	this.lastSelected = null;
	this.lastSelectedLi = null;
	this.updateStyle();
};

WB_ListControl.prototype.selectFirst = function() {
	this.elem.find("li").eq(0).trigger("click");
};

WB_ListControl.prototype.selectItemLi = function(li) {
	if (li) li.trigger('click');
};

/**
 * Get value
 * @return value
 */
WB_ListControl.prototype.getValue = function() {
	var cls = (this.options.type && typeof(this.options.type) === "function") ? this.options.type : (function() {});
	var list = [];
	this.list.children("li").each(function() {
		var obj = $(this).wbGetClassInstance();
		var data = obj.serialize();
		data.virtual = false;
		list.push(new cls(data));
	});
	return list;
};

/**
 * Set value
 * @param value value to set
 */
WB_ListControl.prototype.setValue = function(value) {
	this.removeAllItems();
	for (var i = 0; i < value.length; i++) {
		this.addItem(value[i], true);
	}
	this.updateStyle();
};
;

/** WB RoundCornersControl **/

define('RoundCornersControl', ['SizeSelector'], function(SizeSelector) {
	'use strict';

/**
 * Font Control class
 */
var RoundCornersControl = function() { this.__construct(); };

RoundCornersControl.prototype.elem = null;
RoundCornersControl.prototype.input = null;
RoundCornersControl.prototype._lt = null;
RoundCornersControl.prototype._rt = null;
RoundCornersControl.prototype._rb = null;
RoundCornersControl.prototype._lb = null;
RoundCornersControl.prototype._lt_p = null;
RoundCornersControl.prototype._rt_p = null;
RoundCornersControl.prototype._rb_p = null;
RoundCornersControl.prototype._lb_p = null;

/**
 * Construct Font controll
 */
RoundCornersControl.prototype.__construct = function() {	
	this.elem = $('<table class="wb-roundcorner-control">' +
			"<tr><td></td><td></td><td></td><td></td></tr>" +
			"<tr><td></td><td></td><td></td><td></td></tr>" +
		"</table>");
	
	var tds = this.elem.find("td"), idx = 0, td = null;
	
	var thisClass = this;
	
	td = tds.eq(idx++);
	td.append((this._lt = new SizeSelector()).elem);
	this._lt.minValue = 0;
	this._lt.bind("change", function() { thisClass.updateStyle(); });
	td = tds.eq(idx++);
	td.append(this._lt_p = $('<div class="wb-roundcorner-control-clt"></div>'));
	td = tds.eq(idx++);
	td.append(this._rt_p = $('<div class="wb-roundcorner-control-crt"></div>'));
	td = tds.eq(idx++);
	td.append((this._rt = new SizeSelector()).elem);
	this._rt.minValue = 0;
	this._rt.bind("change", function() { thisClass.updateStyle(); });
	td = tds.eq(idx++);
	td.append((this._lb = new SizeSelector()).elem);
	this._lb.minValue = 0;
	this._lb.bind("change", function() { thisClass.updateStyle(); });
	td = tds.eq(idx++);
	td.append(this._lb_p = $('<div class="wb-roundcorner-control-clb"></div>'));
	td = tds.eq(idx++);
	td.append(this._rb_p = $('<div class="wb-roundcorner-control-crb"></div>'));
	td = tds.eq(idx++);
	td.append((this._rb = new SizeSelector()).elem);
	this._rb.minValue = 0;
	this._rb.bind("change", function() { thisClass.updateStyle(); });
	
	this.input = this.elem.find("input");
};

RoundCornersControl.prototype.updateStyle = function() {
	this._lt_p.css("border-radius", this._lt.getValue() + "px 0 0 0");
	this._rt_p.css("border-radius", "0 " + this._rt.getValue() + "px 0 0");
	this._rb_p.css("border-radius", "0 0 " + this._rb.getValue() + "px 0");
	this._lb_p.css("border-radius", "0 0 0 " + this._lb.getValue() + "px");
};

/**
 * Get value
 * @return value
 */
RoundCornersControl.prototype.getValue = function() {
	var rad = this._lt.getValue() + "px" +
		" " + this._rt.getValue() + "px" +
		" " + this._rb.getValue() + "px" +
		" " + this._lb.getValue() + "px";
	var css = {
		"border-radius": rad,
		"-moz-border-radius": rad,
		"-webkit-border-radius": rad
	};
	return {
		lt: this._lt.getValue(),
		rt: this._rt.getValue(),
		rb: this._rb.getValue(),
		lb: this._lb.getValue(),
		css: css
	};
};

/**
 * Set value
 * @param value value to set
 */
RoundCornersControl.prototype.setValue = function(value) {
	var obj = value;
	if (!obj) obj = {
		lt: 0, rt: 0, rb: 0, lb: 0
	};
	this._lt.setValue(obj.lt);
	this._rt.setValue(obj.rt);
	this._rb.setValue(obj.rb);
	this._lb.setValue(obj.lb);
	this.updateStyle();
};
	
	return RoundCornersControl;
});
;

/** WB WB_LayoutblocksControl **/

/**
 * Layout blocks Control class
 * 
 * @version 1.0.0, 2013-03-15
 */
function WB_LayoutblocksControl() { this.__construct(); }

WB_LayoutblocksControl.prototype.elem = null;
WB_LayoutblocksControl.prototype.block = "template";
WB_LayoutblocksControl.prototype.active = true;

/**
 * Construct Layout blocks Control
 */
WB_LayoutblocksControl.prototype.__construct = function() {	
	this.elem = $('<table class="lbTb active">' +
			'<tr><td data-block="template" class="template side active" rowspan="3"></td><td data-block="top" class="top"></td><td data-block="template" class="side template active" rowspan="3"></td></tr>' +
			'<tr><td data-block="middle" class="middle"></td></tr>' +
			'<tr><td data-block="bottom" class="bottom"></td></tr>' +
		"</table>");
	var thisClass = this;
	
	this.elem.find(".side").on("mouseenter", function() {
		thisClass.elem.find(".side").addClass("hover");
	}).on("mouseleave", function() {
		thisClass.elem.find(".side").removeClass("hover");
	});
	
	var tds = this.elem.find("td");
	tds.on("click", function() {
		if (thisClass.active) {
			thisClass.setValue($(this).data("block"));
		}
	});
};

/**
 * Get block list
 * @returns {Array}
 */
WB_LayoutblocksControl.prototype.getBlocks = function() {
	var blocks = [];
	this.elem.find("td[data-block]").each(function() {
		blocks.push($(this).attr("data-block"));
	});
	return blocks;
};

/**
 * Make block isset or not
 * @param {Boolean} isSet
 * @param {String} block
 */
WB_LayoutblocksControl.prototype.setIsSet = function(isSet, block) {
	if (!block) block = this.block;
	var val = (block === "template") ? "side" : block;
	if (isSet) {
		this.elem.find("." + val).addClass("isset");
	} else {
		this.elem.find("." + val).removeClass("isset");
	}
};

/**
 * Make block active or inactive
 * @param {Boolean} active
 */
WB_LayoutblocksControl.prototype.setActive = function(active) {
	this.active = active;
	if (active)
		this.elem.addClass("active");
	else 
		this.elem.removeClass("active");
};

WB_LayoutblocksControl.prototype.updateStyle = function() {
	
};

WB_LayoutblocksControl.prototype.onChange = function() {
	
};

/**
 * Get value
 * @return {String} value
 */
WB_LayoutblocksControl.prototype.getValue = function() {
	return this.block;
};

/**
 * Set value
 * @param {String} value value to set
 */
WB_LayoutblocksControl.prototype.setValue = function(value) {
	this.block = value;
	var tds = this.elem.find("td");
	tds.removeClass("active");
	if (value === "template")
		this.elem.find(".side").addClass("active");
	else
		this.elem.find("." + value).addClass("active");
	this.onChange();
};
;

/** WB UploadFieldControl **/

/**
 * Upload Field Control class
 * @param {string=} name upload field name
 * @param {string=} value
 * @param {string=} prepend
 * @param {string=} append
 */
function WB_UploadFieldControl(name, value, prepend, append) {
	this.__construct(name, value, prepend, append);
}

WB_UploadFieldControl.prototype.elem = null;
WB_UploadFieldControl.prototype._elemSub = null;
WB_UploadFieldControl.prototype.input = null;
WB_UploadFieldControl.prototype.file = null;
WB_UploadFieldControl.prototype.button = null;

/**
 * Construct Upload field controll
 * @param name (optional) upload field name
 */
WB_UploadFieldControl.prototype.__construct = function(name) {
	var thisClass = this;
	
	this.elem = $('<div>').addClass('wb-upload-field-control');
	this._elemSub = $('<div>').addClass('input-group').appendTo(this.elem);
	this.input = $('<input type="text" readonly="readonly" class="form-control" />');
	this.file = $('<input type="file" size="1" />');
	if (WB_Builder.isset(name)) this.file.attr("name", name);
	this.file.on("change", function() {
		var val = this.value;
		val = val.split(/[\\/]/);
		thisClass.input.val(val[val.length - 1]);
	});
	
	this._elemSub.append(this.input);
	this._elemSub.append(this.file);
	this._elemSub.append($('<span>').addClass('input-group-btn').append(this.button = $('<button class="btn btn-default" type="button"></button>')));
	
	this.button.html(__('Browse...'));
	
	this.elem.on("mousemove", function(e) {
		var mx = e.pageX - $(this).offset().left, my = e.pageY - $(this).offset().top;
		thisClass.file.css({
			left: (mx - thisClass.file.width() / 2) + "px",
			top: (my - thisClass.file.height() / 2) + "px"
		});
		return false;
	});
};

/**
 * Get value
 * @return value
 */
WB_UploadFieldControl.prototype.getValue = function() {
	return this.input.val();
};

/**
 * Set value
 * @param value value to set
 */
WB_UploadFieldControl.prototype.setValue = function(value) {
	this.input.val(value);
};
;

/** WB IFrameControl **/

define('IFrameControl', [], function() {
	'use strict';

/**
 * Internal Frame Control class
 * @param {string} url
 * @param {Object} params
 */
var IFrameControl = function(url, params) { this.__construct(url, params); };

IFrameControl.prototype.elem = null;
IFrameControl.prototype.url = null;
IFrameControl.prototype.params = null;

/**
 * Construct Internal Frame controll
 * @param {String} url
 * @param {Object} params
 */
IFrameControl.prototype.__construct = function(url, params) {
	this._parseUrl(url);
	this.params = (typeof params === "object") ? params : {};
	this.elem = $('<iframe src="' + this._buildUrl() + '" frameborder="0"></iframe>');
	this.elem.css({ width: "200px", height: "200px" });
};

/**
 * Parse url to extract URL params.
 * Parsed url and params will be assigned to this.url and this.params
 * @param {string} url URL to be parsed
 */
IFrameControl.prototype._parseUrl = function(url) {
	var _url = 	(url ? (url + "") : "").split("?");
	this.url = _url[0];
	var _params = (_url.length > 1) ? _url[1].split("&") : [];
	
	for (var i = 0; i < _params.length; i++) {
		var _param = _params.split("=");
		this.params[_param[0]] = (_param.length > 1) ? _param[1] : "";
	}
};

/**
 * Build URL from this.url and this.params
 * @returns {String}
 */
IFrameControl.prototype._buildUrl = function() {
	var _url = this.url;
	var _params = "";
	for (var k in this.params) {
		_params += ((_params.length > 0) ? "&" : "") + k + "=" + encodeURIComponent(this.params[k]);
	}
	return _url + ((_params.length > 0) ? ("?" + _params) : "");
};

/**
 * Set URL param
 * @param {Stirng} name param name
 * @param {String} value param value
 */
IFrameControl.prototype.setParam = function(name, value) {
	this.params[name] = value;
	this.elem.attr("src", this._buildUrl());
};

/**
 * Set URL params
 * @param {Object} params params to set
 */
IFrameControl.prototype.setParams = function(params) {
	this.params = (typeof params === "object") ? params : {};
	this.elem.attr("src", this._buildUrl());
};

/**
 * Get value (get iframe URL)
 * @return value
 */
IFrameControl.prototype.getValue = function() {
	return this._buildUrl();
};

/**
 * Set value (set iframe URL)
 * @param value value to set
 */
IFrameControl.prototype.setValue = function(value) {
	this.url = "";
	this.params = {};
	this._parseUrl(value);
	this.elem.attr("src", this._buildUrl());
};

	return IFrameControl;
});
;

/** WB FontTransformControl **/

define('FontTransformControl', ['ComboBox'], function(ComboBox) {
	'use strict';

/**
 * Font Transform Control class
 */
var FontTransformControl = function() { this.__construct(); };

FontTransformControl.prototype._elem = null;
FontTransformControl.prototype.elem = null;
FontTransformControl.prototype.input = null;

/**
 * Construct Font Transform controll
 */
FontTransformControl.prototype.__construct = function() {	
	this._elem = new ComboBox({
		"none": __("None"),
		"capitalize": __("Capitalize"),
		"uppercase": __("Upper Case"),
		"lowercase": __("Lower Case")
	}, "none");
	this._elem.elem.css({width: 100});
	
	this.input = this._elem.input;
	this.elem = this._elem.elem;
};

/**
 * Get value
 * @return {Object}
 */
FontTransformControl.prototype.getValue = function() {
	return { value: this._elem.getValue(), css: {
		"text-transform": this._elem.getValue()
	}};
};

/**
 * Set value
 * @param {Object} value value to set
 */
FontTransformControl.prototype.setValue = function(value) {
	this._elem.setValue((value && (typeof(value) === "object")) ? value.value : value);
};
	
	return FontTransformControl;
});
;

/** WB LangInputControl **/

/**
 * WB_LangInputControl Control class
 * @param {String} name
 * @param {String} value
 * @param {Boolean} isTextarea
 * @param {Boolean} resizable
 */
function WB_LangInputControl(name, value, isTextarea, resizable) {
	if (name !== '%inherit%') { this.__construct(name, value, isTextarea, resizable); }
}

WB_LangInputControl.prototype.elem = null;
WB_LangInputControl.prototype._elem = null;
WB_LangInputControl.prototype._elemBtn = null;
WB_LangInputControl.prototype._elemList = null;
WB_LangInputControl.prototype._inputElem = null;
WB_LangInputControl.prototype.name = false;
WB_LangInputControl.prototype.zIndex = false;
WB_LangInputControl.prototype.isTextarea = false;
WB_LangInputControl.prototype.events = null;
WB_LangInputControl.prototype.simpleControl = null;
WB_LangInputControl.prototype.onChange = null;
WB_LangInputControl.prototype.modified = null;
WB_LangInputControl.prototype.prevValue = null;
WB_LangInputControl.elemList = [];
WB_LangInputControl.reloadAll = function() {
	for (var i=0, langInput; (langInput = WB_LangInputControl.elemList[i]); i++) {
		langInput.reload();
	}
};
WB_LangInputControl.closeAll = function(except) {
	for (var i=0, langInput; (langInput = WB_LangInputControl.elemList[i]); i++) {
		if (except === langInput) { continue; }
		langInput._elem.removeClass('open');
	}
};
WB_LangInputControl.onDocumentClick = function(e) {
	var t = $(e.target);
	var activeLangInputControl = null;
	if (t.is('.wb-langinput-controll *')) {
		t = t.parents('.wb-langinput-controll');
		
		$.each(WB_LangInputControl.elemList, function() {
			if (t.get(0) == this.elem.get(0)) {
				activeLangInputControl = this;
				return;
			}
		});
	}
	WB_LangInputControl.closeAll(activeLangInputControl);
};

WB_LangInputControl.prototype.__construct = function(name, value, isTextarea, resizable) {
	this.name = name;
	this.isTextarea = isTextarea;
	if (!$.browser.msie) this.zIndex = 1050;
	this.resizable = resizable;
	this.events = {};
	this.elem = $('<div class="wb-langinput-controll"></div>');
	this.init();
	if (value) { this.setValue(value); }
	WB_LangInputControl.elemList.push(this);
};

WB_LangInputControl.prototype.reload = function() {
	//var width = this.getWidth();
	if (this._elem) {
		this._elem.remove();
		this._elem.empty();
		this._elem = null;
		this.elem.find('.exc-mark').remove();
		this.elem.removeClass('exc-mark-show');
		this.simpleControl = null;
	}
	this.init();
	//this.setWidth(width);
};

WB_LangInputControl.prototype.init = function() {
	var thisClass = this;
	var langs = wb_builder.site.languages;
	if (langs.length) {
		this._elem = $('<div class="input-group">' +
				'<div class="input">' +
					(thisClass.isTextarea ? '<textarea class="form-control"></textarea>' : '<input class="form-control" type="text" />') +
					'<span class="lang-label"></span>' +
				'</div>' +
				'<div class="input-list dropdown-menu"></div>' +
				'<span class="input-group-btn">' +
					'<button class="btn btn-default dropdown-toggle" type="button"><span class="caret"></span></button>' +
				'</span>' +
			'</div>');
		this._elemList = this._elem.find('.input-list').eq(0);
		this._inputElem = this._elem.find('.input > ' + (thisClass.isTextarea ? 'textarea' : 'input')).eq(0);
		this._elemBtn = this._elem.find('button').eq(0);
		this._elemBtn.attr('disabled', (langs.length === 1)).bind('click', function() {
			thisClass._elem.toggleClass('open');
			thisClass.fixDropdownPosition();
		});
		if (this.isTextarea) {
			if (!this.resizable && this.isTextarea) {
				this.getInputs().css('resize', 'none');
			} else if (this.resizable === 'vertical' || this.resizable === 'horizontal' || this.resizable === 'both') {
				this._elem.find('input').css('resize', resizable);
			}
		}
		
		for (var i=0, lang; (lang = langs[i]); i++) {
			if (lang.isDefault) {
				this.getMainInput().parent().attr('data-lang', lang.code)
					.find('span').html(lang.code.toUpperCase());
			} else {
				this._elemList.append($('<div class="input" data-lang="' + lang.code + '">' +
						(thisClass.isTextarea ? '<textarea class="form-control"></textarea>' : '<input class="form-control" type="text" />') +
						'<span class="lang-label">' + (lang.code.toUpperCase()) + '</span>' +
					'</div>'));
			}
		}
		this.getInputs().each(function() {
			$(this).bind('change', function(e) {
				thisClass.checkFilled();
				if (typeof thisClass.onChange === 'function')
					thisClass.onChange.call(thisClass, e, this.value, $(this).parent().attr('data-lang'));
			});
		});
		
	} else {
		if (thisClass.isTextarea) {
			this.simpleControl = new WB_TextAreaControl(this.name, this.value, this.resizable);
		} else {
			this.simpleControl = new WB_TextFieldControl(this.name, this.value);
		}
		this._elem = this.simpleControl.elem;
		this._inputElem = this.simpleControl.input;
		this._inputElem.bind('change', function(e) {
			if (typeof thisClass.onChange === 'function')
				thisClass.onChange.call(thisClass, e, this.value);
		});
	}
	this.elem.append(this._elem);
	
	this.modified = false;
	this.getInputs().bind('focus', function() {
		thisClass.modified = true;
	});
	this.reloadEvents();
};

WB_LangInputControl.prototype.getMainInput = function() {
	if (this.simpleControl) {
		return this.simpleControl.elem;
	} else {
		return $(this.getInputs().get(0));
	}
};

WB_LangInputControl.prototype.reloadEvents = function() {
	var inputs = this.getInputs();
	for (var i in this.events) {
		inputs.unbind(i, this.events[i]).bind(i, this.events[i]);
	}
};

WB_LangInputControl.prototype.setEvent = function(event, handler) {
	if (typeof handler !== 'function') return;
	this.events[event] = handler;
	this.reloadEvents();
};

WB_LangInputControl.prototype.fixDropdownPosition = function() {
	this._elemList.css({
		width: (this.elem.outerWidth() - this._elemBtn.outerWidth() + 1)
	});
};

WB_LangInputControl.prototype.getInputs = function(node) {
	if (this.simpleControl) {
		return this.simpleControl.input;
	} else {
		var el = (node ? node : this._elem);
		return el.find(this.isTextarea ? 'textarea' : 'input');
	}
};

WB_LangInputControl.prototype.getWidth = function() {
	if (this.simpleControl) {
		return this._elem.outerWidth();
	} else {
		return this.getMainInput().outerWidth() + 26;
	}
};

WB_LangInputControl.prototype.setWidth = function(width) {
	var iow, iiw, btnw, thisClass = this;
	if (this.simpleControl) {
		iow = this._elem.outerWidth();
		iiw = this._elem.width();
		if (!iow || !iiw) {
			setTimeout(function() {
				thisClass.setWidth(width);
			}, 20);
			return;
		}
		this._elem.css('width', (width - iow + iiw) + 'px');
	} else {
		var mainInput = this.getMainInput();
		iow = mainInput.outerWidth();
		iiw = mainInput.width();
		btnw = 26;
		if (!iow || !iiw) {
			setTimeout(function() {
				thisClass.setWidth(width);
			}, 20);
			return;
		}
		this.getInputs().css('width', (width - btnw - iow + iiw) + 'px');
	}
};

WB_LangInputControl.prototype.setVisibleExcMark = function(visible) {
	if (this.simpleControl) { return; }
	this.elem.find('.exc-mark').remove();
	if (visible) {
		var excMark = $('<div class="exc-mark" title="' + __('Missing some translations') + '" data-placement="top">!</div>');
		excMark.tooltip();
		this.elem.append(excMark);
		this.elem.addClass('exc-mark-show');
	} else {
		this.elem.removeClass('exc-mark-show');
	}
	this.fixDropdownPosition();
};

WB_LangInputControl.prototype.getValue = function() {
	if (!this.modified)
		return this.prevValue;
	
	if (this.simpleControl) {
		return this.simpleControl.getValue();
	} else {
		var thisClass = this;
		var value = {};
		this._elem.find('.input').each(function() {
			value[$(this).data('lang')] = thisClass.getInputs($(this)).val();
		});
		return value;
	}
};

WB_LangInputControl.prototype.setValue = function(value, langCode, noReset) {
	this.prevValue = value;
	if (this.simpleControl) {
		this.simpleControl.setValue(__tr(value));
	} else {
		var defaultLang = wb_builder.site.getLastDefLang();
		if (!noReset) this.reset();
		if (typeof value === 'object') {
			for (var i in value) {
				this.getInputs(this._elem.find('.input[data-lang="' + i + '"]')).val(value[i]);
			}
		} else if (typeof value === 'string') {
			langCode = langCode ? langCode : defaultLang;
			this.getInputs(this._elem.find('.input[data-lang="' + langCode + '"]')).val(value);
		}
		this.checkFilled();
	}
};

WB_LangInputControl.prototype.setDisabled = function(disabled) {
	var thisClass = this;
	if (!disabled) {
		this.getInputs().each(function() {
			$(this).removeAttr('disabled');
			thisClass.checkFilled();
		});
	} else {
		this.getInputs().each(function() {
			$(this).attr('disabled', 'disabled');
			thisClass.setVisibleExcMark(false);
		});
	}
};

WB_LangInputControl.prototype.reset = function() {
	if (this.simpleControl) {
		this.simpleControl.setValue('');
	} else {
		var inputs = this.getInputs();
		for (var i=0, input; (input = inputs[i]); i++) {
			$(input).val('');
		}
		this.setVisibleExcMark(true);
	}
};

WB_LangInputControl.prototype.checkFilled = function() {
	var filled = true;
	this.getInputs().each(function() {
		if (!$(this).val()) {
			filled = false;
			return;
		}
	});
	this.setVisibleExcMark(!filled);
};

WB_LangInputControl.prototype.focus = function() {
	this._inputElem.focus();
};
;

/** WB ContactFormControl **/

define('ContactFormControl', ['UIComponent', 'Form'], function(UIComponent, Form) {
	'use strict';
	
	var ContactFormControl = function() {
		UIComponent.prototype.constructor.call(this);
		var thisSelf = this;
		this._elem.addClass('input-group');
		this._inputElem = $('<input>').addClass('form-control')
				.attr({type: 'text', disabled: 'disabled'})
				.appendTo(this._elem);
		var btn = $('<button>').addClass('btn btn-default')
				.attr({type: 'button'})
				.append($('<span>').addClass('glyphicon glyphicon-pencil'))
				.on('click', function() {
					if (thisSelf._form) thisSelf._form.comProperties();
				});
		$('<div>').addClass('input-group-btn')
				.append(btn)
				.appendTo(this._elem);
		this.setValue(null);
	};
	
	ContactFormControl.prototype = Object.create(UIComponent.prototype);
	ContactFormControl.prototype.constructor = ContactFormControl;
	
	ContactFormControl.prototype._inputElem = null;
	ContactFormControl.prototype._form = null;
	
	/** @returns {Object} */
	ContactFormControl.prototype.getValue = function() {
		return this._form ? this._form.serialize() : null;
	};
	
	/** @param {Object} value */
	ContactFormControl.prototype.setValue = function(value) {
		var thisSelf = this;
		this._form = new Form((value && typeof value === 'object') ? value : {content: {}}, true, true);
		this._form.updateStyle = function() {
			thisSelf._inputElem.val(this.serialize().content.email);
			Form.prototype.updateStyle.call(this);
		};
		this._form.updateStyle();
	};
	
	return ContactFormControl;
});
;

/** WB TabbedPane **/

define('TabbedPane', ['UIComponent'], function(UIComponent) {
	'use strict';

/**
 * Tabbed pane controll class
 * @constructor
 */
var TabbedPane = function() { this.__construct(); };
TabbedPane.prototype = new UIComponent('%inherit%');
TabbedPane.prototype.constructor = TabbedPane;

/** @type {jQuery} */
TabbedPane.prototype.elem = null;
/** @type {jQuery} */
TabbedPane.prototype.elemNav = null;
/** @type {jQuery} */
TabbedPane.prototype.elemContent = null;
/** @type {string} */
TabbedPane.prototype.id = null;
/** @type {number} */
TabbedPane.prototype.tabIndex = 0;
/** @type {boolean} */
TabbedPane.prototype.locked = false;
/** @type {number} */
TabbedPane.paneIndex = 0;
/** @type {Object[]} */
TabbedPane.prototype._events = null;
/** @type {boolean} */
TabbedPane.prototype._navVisible = false;
TabbedPane.prototype._shownTabFunc = null;
/** @type {function} */
TabbedPane.prototype.onChange = null;

/**
 * Construct Tabbed pane controll
 */
TabbedPane.prototype.__construct = function() {
	UIComponent.prototype.constructor.call(this);
	this.id = "wb_tab_pane_" + TabbedPane.paneIndex++;
	
	this._elem.addClass('tabbable');
	this.elemNav = $('<ul>').addClass('nav nav-tabs').appendTo(this._elem);
	this.elemContent = $('<div>').addClass('tab-content').appendTo(this._elem);
	this.elemNav.hide();
	this._navVisible = false;
	this.elem = this._elem;
	this._events = [];
	this.trigger('nav-hide');
	var thisClass = this;
	this._shownTabFunc = function(e) {
		if (typeof thisClass.onChange === 'function') {
			thisClass.onChange.call(thisClass, e.target, e.relatedTarget);
		}
	};
};

/**
 * Dissable tab switching
 * @param {boolean} locked
 */
TabbedPane.prototype.setLocked = function(locked) {
	this.locked = locked;
};

/**
 * Add new tab
 * Note: if no index specified tab will be appended to the end
 * @param {string} title tab title
 * @param {number} index (optional) index to add tab at
 * @return {jQuery} tab content element as jQuery selector object
 */
TabbedPane.prototype.addTab = function(title, index) {
	var id = this.id + "_tab" + this.tabIndex++;
	var tabNav = $('<li><a data-toggle="tab"></a></li>');
	tabNav.children("a")
			.on('shown.bs.tab', this._shownTabFunc)
			.attr({href: '#' + id})
			.html(title);
	var tabContent = $('<div>').addClass('tab-pane');
	tabContent.attr("id", id);
	if (typeof(index) === "undefined" || index === null
			|| index >= this.elemNav.children().size()) {
		this.elemNav.append(tabNav);
		this.elemContent.append(tabContent);
	} else {
		this.elemNav.children().eq(index).before(tabNav);
		this.elemContent.children().eq(index).before(tabContent);
	}
	if (this.elemNav.children('li').size() > 1 && !this.locked) {
		if (!this._navVisible) {
			this.elemNav.show();
			this.trigger('nav-show');
		}
	}
	return tabContent;
};

/**
 * @param {boolean} visible
 * @param {boolean} force
 */
TabbedPane.prototype.setNavVisible = function(visible, force) {
	if (visible && (this.elemNav.children('li').length > 1 || force)) {
		if (!this._navVisible) {
			this.elemNav.show();
			this._navVisible = true;
			this.trigger('nav-show');
		}
	} else {
		if (this._navVisible) {
			this.elemNav.hide();
			this._navVisible = false;
			this.trigger('nav-hide');
		}
	}
};

/**
 * Set tab visibility
 * @param {number} index tab index
 * @param {boolean} visible tab visibility
 */
TabbedPane.prototype.setTabVisible = function(index, visible) {
	var elNav = this.elemNav.children().eq(index);
	var elCont = this.elemContent.children().eq(index);
	if (visible) {
		elNav.css({display: ''});
		elCont.css({display: ''});
	} else {
		elNav.css({display: 'none'});
		elCont.css({display: 'none'});
	}
};

/**
 * Select tab
 * @param {number} index tab index to select
 */
TabbedPane.prototype.selectTab = function(index) {
	if (this.locked) return;
	this.elemNav.children().removeClass("active");
	this.elemContent.children().removeClass("active");
	var elNav = this.elemNav.children().eq(index);
	var elCont = this.elemContent.children().eq(index);
	elNav.addClass("active");
	elCont.addClass("active");
};

/**
 * Get selected tab
 * @return {jQuery} selected tab content element as jQuery selector object
 */
TabbedPane.prototype.getSelectedTab = function() {
	var el = this.elemNav.children(".active").first();
	return el;
};

/**
 * Set fixed height for tab content
 * Note: if tab content exeeds this height scroll will appier
 * @param {number} height of the tab content 
 */
TabbedPane.prototype.setFixedHeight = function(height) {
	this.elemContent.css({
		height: height + "px",
		"overflow-y": "auto"
	});
};

/**
 * Removes scrolls on overflow and removes overflow hidden 
 */
TabbedPane.prototype.setNoScroll = function() {
	this.elemContent.css({
		"overflow-x": "",
		"overflow-y": "",
		"overflow": "visible"
	});
};

TabbedPane.prototype.on = function(event, func) {
	if (event === 'nav-show' || event === 'nav-hide') {
		this._events.push({id: event, func: func});
	} else {
		UIComponent.prototype.on.call(this, event, func);
	}
	return this;
};

TabbedPane.prototype.off = function(event, func) {
	if (event === 'nav-show' || event === 'nav-hide') {
		for (var i = (this._events.length - 1); i >= 0; i--) {
			if (this._events[i].func === func) this._events.splice(i, 1);
		}
	} else {
		UIComponent.prototype.off.call(this, event, func);
	}
	return this;
};

TabbedPane.prototype.trigger = function(event, extraParameters) {
	if (event === 'nav-show' || event === 'nav-hide') {
		for (var i = 0; i < this._events.length; i++) {
			if (this._events[i].id === event) this._events[i].func(this, extraParameters);
		}
	} else {
		UIComponent.prototype.trigger.call(this, event, extraParameters);
	}
	return this;
};
	
	window.WB_TabbedPane = TabbedPane;
	
	return TabbedPane;
});
;

/** WB Site **/

define('Site', [
	'ModeManager',
	'HelpSystem',
	'IdIndexedList',
	'MobileToolbar',
	'Dialog',
	'BackgroundControl',
	'Service',
	'URLControl',
	'UIButton',
	'SettingsBox',
	'LayoutManager'
], function(ModeManager, HelpSystem, IdIndexedList, MobileToolbar, Dialog,
			BackgroundControl,
			Service, URLControl, UIButton, SettingsBox, LayoutManager) {
	'use strict';

	/**
	 * Builder site class
	 * @param {Object} data
	 * @class WB_Site
	 */
	var Site = function(data) { if (data) this.__construct(data); };

	/** @type Page[] */
	Site.prototype.pages = null;
	Site.prototype.languages = null;
	Site.prototype.lastDefLang = null;
	Site.prototype.currSelLang = null;
	Site.prototype.frontPage = null;
	Site.prototype.styles = null;
	Site.prototype.stylesElem = null;
	Site.prototype.changeDlg = null;
	Site.prototype.siteSEODlg = null;
	Site.prototype.changeBgDlg = null;
	Site.prototype.changeSiteBgDlg = null;
	Site.prototype.faviconDlg = null;
	/** @type {Dialog} */
	Site.prototype.helpDlg = null;
	Site.prototype.analyticsId = null;
	Site.prototype.webmasterId = null;
	Site.prototype.favicon = null;
	Site.prototype.translations = null;
	/** @type Boolean */
	Site.prototype.publishWithForcedHttps = false;
	/** @type {number} */
	Site.prototype.publishWithForcedHttpsPort = 0;
	/** @type Boolean */
	Site.prototype.forceRedirectEnabled = false;
	/** @type Boolean */
	Site.prototype.forceRedirectWww = false;
	/**
	 * HTML to be added to published websites head tag
	 * @type {string}
	 */
	Site.prototype.metaHtml = null;
	/** @type Object */
	Site.prototype.modes = null;
	/** @type String */
	Site.prototype.mode = null;
	/** @type Object */
	Site.prototype.modesEnabled = null;
	Site.prototype.landing = null;
	/**
	 * If true then add dir="rtl" on site body.
	 * @type {boolean}
	 */
	Site.prototype.rtl = false;
	// Site.prototype.landingContentOffset = null;

	/**
	 * Construct builder site
	 * @param {Object} data site information data object
	 */
	Site.prototype.__construct = function(data) {
		this.applyData(data);

		if (__trr(wb_builder.helpUrl) !== false) {
			var helpBtn = $('<div>').addClass('wb_toolbar_help');
			var helpBtnClose = $('<button class="close" type="button">&times;</button>');
			helpBtnClose.on('click', function() { helpBtn.remove(); });
			helpBtn.append(helpBtnClose);
			var helpBtnAnchor = $('<a>').addClass('wb_item');
			helpBtnAnchor.attr('title', __('Help'));
			helpBtnAnchor.append('<i class="ico-tb-help"></i>');
			var thisClass = this;
			helpBtnAnchor.on('click', function() { thisClass.openHelp(__trr(wb_builder.helpUrl)); return false; });
			helpBtn.append(helpBtnAnchor);
			$(document.body).append(helpBtn);
			if (wb_builder.mobileToolbar) {
				wb_builder.mobileToolbar.addItem(MobileToolbar.Toolbar.buildItem({name: __('Help'), icon: 'icon-wb-help', click: function() {
					thisClass.openHelp(__trr(wb_builder.helpUrl));
				}}));
			}
		}
	};

	/**
	 * Switch to mode (one of ModeManager.MODE_* constants)
	 * @param {String} mode
	 */
	Site.prototype.switchMode = function(mode) {
		for (var i = 0; i < this.styles.length; i++) { this.styles[i].switchMode(mode); }
		if (!mode) return;
		if (!(this.mode in this.modes)) this.modes[this.mode] = new Site.Mode();
		this.modes[this.mode].store(this);
		if (this.mode === mode) return;
		if (!(mode in this.modes)) {
			this.modes[mode] = new Site.Mode();
			this.modes[mode].copy((ModeManager.MODE_DESKTOP in this.modes) ? this.modes[ModeManager.MODE_DESKTOP] : this.modes[this.mode]);
		}
		this.modes[mode].applyTo(this);
		this.mode = mode;
	};

	/**
	 * Apply data on site object
	 * @param {Object} data data to apply
	 */
	Site.prototype.applyData = function(data) {
		this.frontPage = null;
		this.pages = {};
		var list = data.content.pages ? data.content.pages : [];

		var page = null, p;
		var cc = 0, i, hasFront = false, firstPage;
		for (i = 0; i < list.length; i++) {
			page = new Site.Page(list[i]);
			page.copyFrom = null;
			if (page.isFront)
				hasFront = true;
			if (!firstPage)
				firstPage = page;
			this.addPage(page);
			cc++;
		}
		if (!hasFront) {
			p = this.getPage(1);
			if (p) {
				p.isFront = true;
			} else if (firstPage) {
				firstPage.isFront = true;
			}
		}

		if (cc === 0) {
			page = new Site.Page({
				id: 1, isFront: true, title: __("Home"), layout: "Empty"
			});
			this.addPage(page);
		}

		this.languages = data.content.languages ? data.content.languages : [];
		this.lastDefLang = data.content.lastDefLang ? data.content.lastDefLang : null;
		this.currSelLang = this.getLastDefLang();
		this.rtl = (data.content.rtl ? true : false);

		this.styles = [];
		list = data.content.styles ? data.content.styles : [];
		var needExtend = false;
		if (!list || !list.length) {
			list = Site.Style.defaults;
			needExtend = true;
		}
		for (i = 0; i < list.length; i++) {
			this.styles.push(new Site.Style((needExtend ? $.extend(true, {}, list[i]) : list[i])));
		}
		// reset fixed properties
		for (i = 0; i < this.styles.length; i++) {
			for (var n = 0; n < Site.Style.defaults.length; n++) {
				if (Site.Style.defaults[n].selector !== this.styles[i].selector) continue;
				this.styles[i].tag = Site.Style.defaults[n].tag;
				this.styles[i].ident = Site.Style.defaults[n].ident;
				break;
			}
		}

		this.favicon = data.content.favicon ? data.content.favicon : null;
		this.analyticsId = data.content.analyticsId ? data.content.analyticsId : null;
		this.webmasterId = data.content.webmasterId ? data.content.webmasterId : null;
		this.metaHtml = data.content.metaHtml ? data.content.metaHtml : null;
		this.landing = data.content.landing ? true : false;
		this.translations = {};

		this.updateStyle();

		if ('publishWithForcedHttps' in data.content) this.publishWithForcedHttps = data.content.publishWithForcedHttps ? true : false;
		if ('publishWithForcedHttpsPort' in data.content) this.publishWithForcedHttpsPort = parseInt(data.content.publishWithForcedHttpsPort, 10);
		if ('forceRedirectEnabled' in data.content) this.forceRedirectEnabled = data.content.forceRedirectEnabled ? true : false;
		if ('forceRedirectWww' in data.content) this.forceRedirectWww = data.content.forceRedirectWww ? true : false;

		this.mode = ModeManager.MODE_DESKTOP;
		this.modes = {}; if (data.modes) for (var k in data.modes) { this.modes[k] = new Site.Mode(data.modes[k]); }
		this.modesEnabled = (('modesEnabled' in data.content) && (typeof data.content.modesEnabled === 'object')) ? data.content.modesEnabled : {};
	};

	Site.prototype.getLastDefLang = function() {
		if (!this.lastDefLang) {
			for (var i=0, lang; (lang = this.languages[i]); i++) {
				if (lang.isDefault) {
					this.lastDefLang = lang.code;
					break;
				}
			}
		}
		return this.lastDefLang;
	};

	Site.prototype.setLastDefLang = function(langCode) {
		this.lastDefLang = langCode;
	};

	/**
	 * Serialize this instance
	 * @return {Object} object
	 */
	Site.prototype.serialize = function() {
		this.switchMode(this.mode);
		this.modes[this.mode].store(this);
		var m = this.modes[ModeManager.MODE_DESKTOP].serialize();
		var modes = {}; for (var k in this.modes) { modes[k] = this.modes[k].serialize(); }

		var pagesList = [], i;
		for (i in this.pages) {
			if (!this.pages[i]) continue;
			pagesList.push(this.pages[i].serialize());
		}
		/* pagesList.sort(function(a, b) {
			if (a.id > b.id) return 1;
			else if (a.id < b.id) return -1;
			else return 0;
		}); */
		var stylesList = [];
		for (i = 0; i < this.styles.length; i++) {
			if (!this.styles[i]) continue;
			stylesList.push(this.styles[i].serialize());
		}
		return {
			"class": "Site",
			content: {
				"pages": pagesList,
				modesEnabled: ModeManager.serialize(),
				"languages": this.languages,
				"styles": stylesList,
				"analyticsId": this.analyticsId,
				"webmasterId": this.webmasterId,
				"favicon": this.favicon,
				publishWithForcedHttps: this.publishWithForcedHttps,
				publishWithForcedHttpsPort: this.publishWithForcedHttpsPort,
				forceRedirectEnabled: this.forceRedirectEnabled,
				forceRedirectWww: this.forceRedirectWww,
				metaHtml: this.metaHtml,
				'lastDefLang': this.getLastDefLang(),
				'landing': this.landing,
				rtl: this.rtl
			},
			modes: modes
		};
	};

	Site.prototype.updatePageList = function(list) {
		var i, c, pA, pB, k, hasFront = false;
		if (list instanceof IdIndexedList) {
			for (i = 0, c = list.getItemCount(); i < c; i++) {
				pA = list.getItem(i);
				pB = this.getPage(pA.id);
				if (!this.getPage(pA.id)) { this.addPage((pB = new Site.Page(pA))); }
				if (!hasFront && pA.isFront) {
					hasFront = true;
					pB.isFront = true;
				} else {
					pB.isFront = false;
				}
			}
			for (k in this.pages) {
				pA = this.pages[k];
				if (!list.getItemById(pA.id)) {
					this.removePage(pA);
				} else if (!hasFront) {
					hasFront = true;
					pA.isFront = true;
				}
			}
		}
	};

	Site.prototype.addAnchor = function(anchor) {
		var idx, p = this.getPage(wb_builder.pageId);
		if (p && anchor) {
			idx = p.anchors.indexOf(anchor);
			if (idx < 0) p.anchors.push(anchor);
		}
	};

	Site.prototype.removeAnchor = function(anchor) {
		var idx, p = this.getPage(wb_builder.pageId);
		if (p && anchor) {
			idx = p.anchors.indexOf(anchor);
			if (idx >= 0) p.anchors.splice(idx, 1);
		}
	};

	/**
	 * Get page by id
	 * @param {Number} id page id
	 */
	Site.prototype.getPage = function(id) {
		var _id = parseInt(id, 10);
		return this.pages["#" + _id] ? this.pages["#" + _id] : null;
	};

	/**
	 * Add page to this site
	 * @param {Site.Page} page page of type WB_Site.Page
	 */
	Site.prototype.addPage = function(page) {
		this.pages["#" + parseInt(page.id, 10)] = page;
		page.site = this;
		/* if (this.frontPage) {
			page.isFront = false;
		} else if (page.isFront) {
			this.frontPage = page;
		} */
		if (page.isFront)
			this.frontPage = page;
	};

	/**
	 * Add page to this site
	 * @param {Site.Page} page page of type WB_Site.Page
	 */
	Site.prototype.removePage = function(page) {
		this.pages["#" + parseInt(page.id, 10)] = null;
		delete this.pages["#" + parseInt(page.id, 10)];
		page.site = null;
		if (this.frontPage && parseInt(this.frontPage.id, 10) === parseInt(page.id, 10)) {
			this.frontPage = null;
		}
	};

	/**
	 * Get id for new page, that is not alredy taken
	 * @param {Object} more
	 * @return {Number} new id
	 */
	Site.prototype.getFreeId = function(more) {
		for (var i = 1; i < 5000; i++) {
			if (!this.pages["#" + i]) {
				if (!more || !more["#" + i]) return i;
			}
		}
		return 1;
	};

	/**
	 * Update style
	 */
	Site.prototype.updateStyle = function() {
		if (!this.stylesElem) {
			this.stylesElem = $('<style type="text/css" id="wb_site_style_sheet"></style>');
			$("head").append(this.stylesElem);
			if (!window.createPopup) { /* For Safari */
				this.stylesElem.append(document.createTextNode(''));
			}
			this.stylesElem = null;
			for (var si = 1; si < document.styleSheets.length; si++) {
				var sheet = document.styleSheets[si];
				var sid = sheet.id ? sheet.id : (sheet.ownerNode ? sheet.ownerNode.id : null);
				if (sid === "wb_site_style_sheet") {
					this.stylesElem = sheet;
					break;
				}
			}
		}

		if (!this.stylesElem) return;
		var list = this.stylesElem.cssRules ? this.stylesElem.cssRules : this.stylesElem.rules;
		for (var i = (list.length - 1); i >= 0; i--) {
			try { this.stylesElem.deleteRule(i); } catch (ex) {}
		}
		var thisClass = this;
		var addCssRule = function(style) {
			var name = "#site " + style.selector;
			var name2 = "#WB_TextArea_maxCont " + style.selector;
			var rule_ = style.rules, rule__, m;
			if (typeof(rule_) === "object") {
				rule__ = $.extend({}, rule_);
				rule_ = [];
				for (var k in rule__) {
					rule_.push(k + ": " + thisClass._applyFontScale(k, rule__[k], style) + ";");
				}
				rule_ = rule_.join(" ");
			}
			if (thisClass.stylesElem.insertRule) {
				thisClass.stylesElem.insertRule(name + " { " + rule_ + " }", list.length);
				thisClass.stylesElem.insertRule(name2 + " { " + rule_ + " }", list.length);
			} else {
				thisClass.stylesElem.addRule(name, rule_);
				thisClass.stylesElem.addRule(name2, rule_);
			}
		};

		for (i = 0; i < this.styles.length; i++) {
			addCssRule(this.styles[i]);
			if (this.styles[i].subs) {
				for (var n = 0; n < this.styles[i].subs.length; n++) {
					this.styles[i].subs[n].fontScale = this.styles[i].fontScale;
					addCssRule(this.styles[i].subs[n]);
				}
			}
		}
		this.reloadCkIframeStyles();
	};

	Site.prototype._applyFontScale = function(key, value, style) {
		var valueApply = value, m, val;
		if (style.fontScale > 0 && style.fontScale !== 1/*  && !String(style.selector).match(/\.wb\-stl\-normal(?:\ .+|)/i) */) {
			if (key === 'font-size') {
				m = String(valueApply).match(/^([\-0-9]+)([a-z]+|)$/i);
				if (m) {
					val = Math.max(Math.round(parseInt(m[1], 10) * style.fontScale), 12);
					valueApply = String(val) + m[2];
				}
			} else if (key === 'font') {
				m = String(valueApply).match(/^(.+\ )([\-0-9]+)(px\ .+)$/i);
				if (m) {
					val = Math.max(Math.round(parseInt(m[2], 10) * style.fontScale), 12);
					valueApply = m[1] + String(val) + m[3];
				}
			} else if (key === 'line-height') {
				m = String(valueApply).match(/^([\-0-9]+)([a-z]+|)$/i);
				if (m) {
					val = Math.max(Math.round(parseInt(m[1], 10) * style.fontScale), 14);
					valueApply = String(val) + m[2];
				}
			}
		}
		return valueApply;
	};

	/**
	 * Reload styles in CKEditor iframe (Styles list now o_0)
	 */
	Site.prototype.reloadCkIframeStyles = function() {
		if (!$(".cke_panel_frame").length && !$(".cke_wysiwyg_frame").length)
			return false;
		var addCssRule = (function() {
			var addRule;

			if (typeof document.styleSheets !== "undefined" && document.styleSheets) {
				addRule = function(selector, rule, doc, el) {
					var sheets = doc.styleSheets, sheet;
					if (sheets && sheets.length) {
						sheet = sheets[sheets.length - 1];
						if (sheet.addRule) {
							sheet.addRule(selector, rule);
						} else if (typeof sheet.cssText === "string") {
							sheet.cssText = selector + " {" + rule + "}";
						} else if (sheet.insertRule && sheet.cssRules) {
							sheet.insertRule(selector + " {" + rule + "}", sheet.cssRules.length);
						}
					}
				};
			} else {
				addRule = function(selector, rule, doc, el) {
					el.appendChild(doc.createTextNode(selector + " {" + rule + "}"));
				};
			}

			return function(selector, rule, doc) {
				doc = doc || document;

				var head = doc.getElementsByTagName("head")[0];
				if (head && addRule) {
					var styleEl = doc.createElement("style");
					styleEl.type = "text/css";
					styleEl.media = "screen";
					head.appendChild(styleEl);
					addRule(selector, rule, doc, styleEl);
					styleEl = null;
				}
			};
		})();

		var i, dc = frames[frames.length - 1].document;
		for (i = 0; i < wb_builder.site.styles.length; i++) {
			var rule__, rule_ = wb_builder.site.styles[i].rules;
			if (typeof(rule_) === "object") {
				rule__ = $.extend({}, rule_);
				rule_ = [];
				for (var k in rule__) {
					rule_.push(k + ": " + rule__[k] + ";");
				}
				rule_ = rule_.join(" ");
			}
			addCssRule(wb_builder.site.styles[i].selector, rule_, dc);
			/*if (wb_builder.site.styles[i].subs) {
				for (var n = 0; n < wb_builder.site.styles[i].subs.length; n++) {
					addCssRule(wb_builder.site.styles[i].subs[n]);
				}
			}*/
		}
		return true;
	};

	/**
	 * Center popover
	 *
	 * @param el popover trigger element
	 */
	Site.prototype.centerPopover = function(el) {
		var pop = el.next(".popover");
		pop.css("left", el.position().left+el.width()/2-pop.width()/2);
	};

	/**
	 * Open Help Dialog
	 * @param {String} customUrl help URL to load
	 */
	Site.prototype.openHelp = function(customUrl) {
		if (!this.helpDlg) {
			this.helpDlg = new Dialog(__('Help'));
			this.helpDlg.dialog.addClass('wb-help-dialog');
			this.helpDlg.setSize(1024, null);
			this.helpDlg.setNoScroll();

			var iframe = $('<iframe>').css({border: 'none', width: '100%', height: 400});
			iframe.attr('frameborder', 0);
			if (customUrl) {
				iframe.attr('src', customUrl);
			} else {
				iframe.attr('src', '//site.pro/help/?bare=1&lang=' + wb_builder.locale);
			}
			this.helpDlg.setContent(iframe);
			this.helpDlg.setAutoResize(true, function(bh) {
				iframe.height(bh - 15);
			});

			if (!customUrl) {
				this.helpDlg.addButton(__('Download video tour'), function() {
					location.href = wb_builder.baseUrl + 'help-video/';
				}, false, 'btn-success').css({float: (wb_builder.rtl ? 'right' : 'left')});
			}
			this.helpDlg.addButton(__('Close'));
		}

		this.helpDlg.setVisible(true);
	};

	Site.prototype.changeFavicon = function() {
		var thisClass = this;
		var fields = null;
		if (!this.faviconDlg) {
			this.faviconDlg = new Dialog(__("Change favicon"), null, new Service.UIBuilder({
				type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Favicon')},
					{type: 'ImageSelector', id: 'imageUrl', mode: 'favicon', multyselect: false, mediatabs: false},
					{type: 'CustomContainer', styleClass: 'alert alert-info',
						css: {marginTop: 15, marginBottom: 0},
						content:
							__("Supported image formats are PNG, JPEG, GIF and ICO.") +
							'<br />' +
							__("Internet Explorer browsers only support ICO format.") +
							'<br />' +
							__("When you are using ICO format, to see changes you might need to clear browser cache and even restart browser.")
					}
				]
			}));

			fields = this.faviconDlg.fields;

			this.faviconDlg.addButton(__("Cancel"));
			this.faviconDlg.addButton(__("Apply"), function() {
				thisClass.faviconDlg.hide();

				wb_builder.pageModified = true;

				thisClass.favicon = fields.imageUrl.getValue();

			}, true);
		}
		fields = this.faviconDlg.fields;

		fields.imageUrl.setValue(this.favicon);

		this.faviconDlg.setVisible(true);
	};

	/**
	 * Show change site width dialog
	 * @param {Object} btn
	 */
	Site.prototype.changeSiteWidth = function(btn) {
		var panel = $('<div></div>');
		panel.css({ textAlign: "center" });

		var fields = {};

		panel.append(fields.width = $('<input type="text" class="span1" />'));
		fields.width.val(wb_builder.bodyInstance.siteWidth);

		panel.append("&nbsp;<span>px (1003 px " + __("recomended") + ")</span>");

		var buttons = $('<div class="clearfix"></div>');
		panel.append(buttons);

		var btnSave = $('<button class="btn btn-success pull-right"></button>');
		btnSave.html(__("Apply"));
		btnSave.css({ marginLeft: "5px" });
		btnSave.bind("click", function() {
			btn.popover("hide");

			wb_builder.pageModified = true;

			var val = fields.width.val()*1;
			wb_builder.bodyInstance.siteWidth = Math.round(isNaN(val) ? 1003 : val);
			wb_builder.bodyInstance.updateStyle();
			wb_builder.bodyInstance.fitElements();
			if (wb_builder.showLayout) wb_builder.highlightLayout(wb_builder.showLayout);

			panel.empty();
			btn.popover("destroy");
		});
		buttons.append(btnSave);

		var btnCancel = $('<button class="btn pull-right"></button>');
		btnCancel.html(__("Cancel"));
		btnCancel.bind("click", function() {
			btn.popover("hide");
			panel.empty();
			btn.popover("destroy");
		});
		buttons.append(btnCancel);

		btn.popover({
			html: true,
			title: __("Change site width"),
			content: function() { return panel; },
			trigger: "manual",
			placement: "bottom"
		});
		btn.popover("show");
		btn.next(".popover").width(300);
		this.centerPopover(btn);

	};

	/**
	 * Show change site/page SEO dialog
	 */
	Site.prototype.changeSiteSEO = function() {
		var thisClass = this;
		var fields = null;
		if (!this.siteSEODlg) {
			this.siteSEODlg = new Dialog(__("Search engine optimization"));
			this.siteSEODlg.setContent(new Service.UIBuilder({
				type: 'TabbedPane', tabs: [
					{children: [
						{type: 'HorizontalLayout', columnWeights: [4, 8], css: {marginTop: '20px'}, children: [
							{type: 'List', id: 'list',
								css: {height: 328},
								listHeight: 310,
								itemType: Service.menu.MenuItem,
								editable: false,
								init: function() {
									this.pages = {
										pages: {},
										addPage: function(page) {
											page.mis = {};
											page.addMi = function(mi) {
												this.mis["#" + mi.id] = mi;
											};
											page.getMis = function() {
												var list = [];
												for (var k in this.mis) { list.push(this.mis[k]); }
												return list;
											};
											this.pages["#" + page.id] = page;
										},
										removeAllPages: function() {
											this.pages = {};
										},
										getPage: function(pageId) {
											return this.pages["#" + pageId] ? this.pages["#" + pageId] : null;
										}
									};
								},
								select: function(fields, item) {
									var p;
									if (fields.list.getLastSelected() && fields.list.getLastSelected().type !== "external") {
										if (fields.list.getLastSelected().type === "default") {
											fields.defaultInf.title = fields.title.getValue();
											fields.defaultInf.keywords = fields.keywords.getValue();
											fields.defaultInf.description = fields.description.getValue();
										} else {
											p = fields.list.pages.getPage(fields.list.getLastSelected().targetId);
											if (p) {
												p.alias = fields.alias.getValue();
												p.title = fields.title.getValue();
												p.keywords = fields.keywords.getValue();
												p.description = fields.description.getValue();
												p.addMi(item);
											}
										}
									}
									if (item.type === "default") {
										fields.aliasBlock.setVisible(false);
										fields.title.setValue(fields.defaultInf.title);
										fields.keywords.setValue(fields.defaultInf.keywords);
										fields.description.setValue(fields.defaultInf.description);
										fields.title.setEnabled(true);
										fields.keywords.setEnabled(true);
										fields.description.setEnabled(true);
									} else if (item.type !== "external") {
										p = fields.list.pages.getPage(item.targetId);
										if (p) {
											fields.alias.setValue((p.alias ? p.alias : item.alias));
											fields.aliasBlock.setVisible(true);
											fields.title.setValue(p.title);
											fields.keywords.setValue(p.keywords);
											fields.description.setValue(p.description);
											fields.alias.setEnabled(true);
											fields.title.setEnabled(true);
											fields.keywords.setEnabled(true);
											fields.description.setEnabled(true);
										}
									} else {
										fields.alias.setValue("");
										fields.aliasBlock.setVisible(true);
										fields.title.setValue("");
										fields.keywords.setValue("");
										fields.description.setValue("");
										fields.alias.setEnabled(false);
										fields.title.setEnabled(false);
										fields.keywords.setEnabled(false);
										fields.description.setEnabled(false);
									}
								}
							},
							{type: 'VerticalLayout', children: [
								{type: 'Label', text: __('Title'),
									helpText: __("Title is critical to giving users a quick insight into the content of a result and why it's relevant to their query. It's often the primary piece of information used to decide which result to click on.")
								},
								{type: 'MultilangTextField', id: 'title'},
								{type: 'Label', text: __('Description'),
									css: {marginTop: 10},
									helpText: __("The description attribute is a good way to provide a concise, human-readable summary of each page's content. Accurate meta descriptions can help improve your clickthrough.")
								},
								{type: 'MultilangTextField', id: 'description', textArea: true},
								{type: 'Label', text: __('Keywords'),
									css: {marginTop: 10},
									helpText: __("Keywords are words or phrases your target audience would type in the search box when looking for the subject of your web page.")
								},
								{type: 'MultilangTextField', id: 'keywords', textArea: true},
								{type: 'VerticalLayout', id: 'aliasBlock', children: [
									{type: 'Label', text: __('User friendly URL'),
										css: {marginTop: 10},
										// helpText: __("URLs should be constructed in a manner that is most intelligible and friendly to humans (when possible, readable words rather than long ID numbers).")
										helpText: __('This is an alias for the page. For example if you specify value "apple" then this website page will have URL "yourwebsite.com/apple".')
									},
									{type: 'MultilangTextField', id: 'alias', onChange: function(e, value, langCode) {
										if (!value) return;
										for (var i in fields.list.pages.pages) {
											if (__tr(fields.list.pages.pages[i].alias, langCode) == value) {
												alert(__("The value \"%s\" is already assigned to page \"%s\"")
													.replace('%s', value)
													.replace('%s', __tr(fields.list.pages.pages[i].title)));
												fields.alias.setText("", langCode);
												return;
											}
										}
									}}
								]}
							]}
						]}
					]},
					{name: __('Analytics'), children: [
						{type: 'VerticalLayout', css: {marginTop: '20px'}, children: [
							{type: 'Label', text: __('Google Analytics Tracking ID'),
								helpText: __("Create google analytics profile on google analytics page for your website and paste profile ID hare (ex. UA-38401376-1)")
							},
							{type: 'TextField', id: 'analyticsId'},
							{type: 'Label', text: __('Google Webmaster Tools Code'),
								css: {marginTop: '15px'},
								helpText: __('In "Webmaster Tools" verification page choose "Alternative methods" > "HTML tag" and copy that tag to this field.')
							},
							{type: 'TextField', id: 'webmasterId'},
							{type: 'Label', text: __('Sitemap URL'),
								css: {marginTop: '15px'},
								helpText: __('You can submit this URL as a sitemap to Google Webmaster Tools.')
							},
							{type: 'CustomContainer', tag: 'pre',
								content: wb_builder.meta.sitemapUrl,
								css: {padding: '4px 6px'}
							}
						]}
					]}
				]
			}, this.siteSEODlg.fields), true);
			this.siteSEODlg.setMinBodyHeight(444);
			this.siteSEODlg.onClose = function() { HelpSystem.play(9, true, thisClass); };
			fields = this.siteSEODlg.fields;

			this.siteSEODlg.addButton(__("Cancel"));
			this.siteSEODlg.addButton(__("Apply"), function() {
				HelpSystem.play(9, true, thisClass);
				thisClass.siteSEODlg.hide();

				wb_builder.pageModified = true;

				fields.list.selectFirst();
				for (var k in fields.list.pages.pages) {
					var p_ = fields.list.pages.pages[k];
					if (p_.type !== "external") {
						var p = thisClass.getPage(p_.id);
						if (p) {
							p.alias = p_.alias;
							p.title = p_.title;
							p.keywords = p_.keywords;
							p.description = p_.description;
							var mis = p_.getMis();
							for (var i = 0; i < mis.length; i++) {
								mis[i].alias = p_.alias;
							}
						}
					}
				}
				wb_builder.meta.title = fields.defaultInf.title;
				wb_builder.meta.keywords = fields.defaultInf.keywords;
				wb_builder.meta.description = fields.defaultInf.description;

				thisClass.analyticsId = fields.analyticsId.getValue();
				thisClass.webmasterId = fields.webmasterId.getValue();
				var m = thisClass.webmasterId.match(/<meta[^>]+content="([^"]+)"[^>]+>/i);
				if (m) {
					thisClass.webmasterId = m[1];
				}
			}, true);
		}
		fields = this.siteSEODlg.fields;

		var p = this.getPage(wb_builder.pageId);
		if (p) {
			fields.alias.setValue(p.alias);
			fields.title.setValue(p.title);
			fields.keywords.setValue(p.keywords);
			fields.description.setValue(p.description);
			//this.siteSEODlg.setTitle(__('SEO for page "%s"').replace("%s", p.title));
		}
		var k, wasSelected = false, wasSelectedItem = null;
		fields.list.removeAllItems();
		fields.list.addItem(fields.defaultInf = {
			id: -1,
			type: "default",
			name: __("Default"),
			title: wb_builder.meta.title,
			keywords: wb_builder.meta.keywords,
			description: wb_builder.meta.description,
			serialize: function() { return this; }
		}, false, "glyphicon glyphicon-home");
		var elList = Service.menu.getElemList();
		for (k in elList) {
			var m = elList[k];
			//fields.list.addItem(item);
			for (var k2 in m.items) {
				var mi = m.items[k2];
				var hmi = fields.list.addItem(mi, false, (mi.type === "external") ? "glyphicon glyphicon-share-alt" : null);
				hmi.css({ marginLeft: "20px" });
				if (!wasSelected && mi.type !== "external" && mi.targetId == wb_builder.pageId) {
					wasSelected = true;
					wasSelectedItem = hmi;
					//hmi.trigger("click");
				}
				if (mi.items) {
					for (var k3 in mi.items) {
						var mi2 = mi.items[k3];
						var hmi2 = fields.list.addItem(mi2, false, (mi2.type === "external") ? "glyphicon glyphicon-share-alt" : null);
						hmi2.css({ marginLeft: "40px" });
						if (!wasSelected && mi2.type !== "external" && mi2.targetId == wb_builder.pageId) {
							wasSelected = true;
							wasSelectedItem = hmi2;
							//hmi2.trigger("click");
						}
					}
				}
			}
		}
		fields.list.pages.removeAllPages();
		for (k in this.pages) { fields.list.pages.addPage(this.pages[k].serialize()); }

		if (!wasSelected) fields.list.selectFirst(); else if (wasSelectedItem) wasSelectedItem.trigger('click');

		fields.analyticsId.setValue(this.analyticsId);
		fields.webmasterId.setValue(this.webmasterId);

		this.siteSEODlg.setVisible(true);
	};

	/**
	 * Toggle site landing
	 * @param {Boolean} landing
	 * @param {Boolean} initial
	 */
	Site.prototype.setLanding = function(landing, initial) {
		if (!initial) wb_builder.pageModified = true;
		this.landing = landing ? true : false;
		var i, j, item, menuList = Service.menu.getElemList();
		for (i in this.pages) { this.pages[i].setLanding(false); }
		for (i in menuList) { menuList[i].setLanding(false); }
		wb_builder.bodyInstance.setLandingLock(false);

		if (this.landing) {
			var homepage = null;
			for (i in this.pages) {
				if (this.pages[i].isFront) { homepage = this.pages[i]; break; }
			}
			if (homepage) {
				var landingMenu;
				mainLoop:
				for (i in menuList) {
					var menu = menuList[i];
					for (j in menu.items) {
						item = menu.items[j];
						if ((item.type === 'page' || item.type === 'internal') && item.targetId == homepage.id) {
							menu.setLanding(true);
							landingMenu = menu;
							break mainLoop;
						}
					}
				}
				if (landingMenu) {
					var page, items = {}, order = 0;
					for (i in landingMenu.items) {
						item = landingMenu.items[i];
						items[i] = item;
						for (j in item.items) {
							items[j] = item.items[j];
						}
					}
					for (i in items) {
						item = items[i];
						if ((item.type === 'page' || item.type === 'internal') && (('#' + item.targetId) in this.pages)) {
							page = this.pages['#' + item.targetId];
							page.setLanding(true, ++order);
							if (page.id == wb_builder.pageId && !page.isFront) {
								wb_builder.bodyInstance.setLandingLock(true);
							}
						}
					}
				}
			}
		}
		var landingSetting = SettingsBox.getItem('wb_Landing');
		if (landingSetting) landingSetting.setChecked(this.landing);

		LayoutManager.setPageSwitchesEnabled(this.landing);
	};

	/**
	 * Change background of site or page block
	 * @param block
	 */
	Site.prototype.changeBackground = function(block) {
		var thisClass = this;
		var fields = null;
		//initial data
		var data = {
			body: {
				bgSite : wb_builder.bodyInstance.bgSite,
				bg2Site : wb_builder.bodyInstance.bg2Site,
				width : wb_builder.bodyInstance.siteWidth
			},
			page: null,
			pages: {}
		};
		data.rd = false;

		var page;

		for (var key in this.pages) {
			page = this.pages[key];
			if (page.id !== wb_builder.pageId) {
				data.pages[page.id] = {
					top : {
						background: (page.blocks.wb_header ? page.blocks.wb_header.background : null),
						prop: (page.blocks.wb_header ? page.blocks.wb_header.height : null)
					},
					middle : {
						background: (page.blocks.wb_main ? page.blocks.wb_main.background : null),
						prop: (page.blocks.wb_main ? page.blocks.wb_main.blockPadding : null)
					},
					bottom : {
						background: (page.blocks.wb_footer ? page.blocks.wb_footer.background : null),
						prop: (page.blocks.wb_footer ? page.blocks.wb_footer.height : null)
					},
					template : {
						background: page.background,
						background2: page.background2
					}
				};
			}
		}
		page = thisClass.getPage(wb_builder.pageId);
		data.pages[wb_builder.pageId] = {
			top : {
				background: wb_builder.bodyInstance.blocks.wb_header.background,
				prop: wb_builder.bodyInstance.blocks.wb_header.elem.height()
			},
			middle : {
				background: wb_builder.bodyInstance.blocks.wb_main.background,
				prop: wb_builder.bodyInstance.blocks.wb_main.blockPadding
			},
			bottom : {
				background: wb_builder.bodyInstance.blocks.wb_footer.background,
				prop: wb_builder.bodyInstance.blocks.wb_footer.elem.height()
			},
			template : {
				background: page.background,
				background2: page.background2
			}
		};
		if (!this.changeBgDlg) {
			this.changeBgDlg = new Dialog(__("Properties"));
			this.changeBgDlg.setSize(772, null);
			this.changeBgDlg.setMinBodyHeight(300);
			this.changeBgDlg.setMaxBodyHeight(440);
			this.changeBgDlg.onClose = function() { HelpSystem.play(8, true, thisClass); };
			fields = this.changeBgDlg.fields;
			fields.data = data;
			fields.pages = {
				pages: {},
				addPage: function(page) {
					page.mis = {};
					page.addMi = function(mi) {
						this.mis["#" + mi.id] = mi;
					};
					page.getMis = function() {
						var list = [];
						for (var k in this.mis) { list.push(this.mis[k]); }
						return list;
					};
					this.pages["#" + page.id] = page;
				},
				removeAllPages: function() {
					this.pages = {};
				},
				getPage: function(pageId) {
					return this.pages["#" + pageId] ? this.pages["#" + pageId] : null;
				}
			};

			this.changeBgDlg.setContent(new Service.UIBuilder({
				type: 'HorizontalLayout', columnWeights: [3, 9], children: [
					{type: 'List', id: 'list',
						itemType: Service.menu.MenuItem,
						editable: false,
						init: function(def, fields) {
							this._control.setHeight(300);
							this.updateListIcon = function(item, li) {
								var isSet = false;
								if (item.id === -1) {
									if (BackgroundControl.isSet(fields.data.body.bgSite) || BackgroundControl.isSet(fields.data.body.bg2Site)) {
										isSet = true;
									}
								} else if (item.type !== "external" && item.targetId) {
									var page = fields.data.pages[item.targetId];
									for (var blockId in page) {
										var block = page[blockId];
										if (BackgroundControl.isSet(block.background) || BackgroundControl.isSet(block.background2)) {
											isSet = true;
											break;
										}
									}
								}
								fields.list.setItemIcon(li, "glyphicon glyphicon-" +
										((item.id === -1) ? "home" : "folder") +
										(isSet ? "-full" : ((item.id === -1) ? "" : "-open")));
							};
						},
						select: function(fields, item, li) {
							if (fields.list.getLastSelected()) this.updateListIcon(fields.list.getLastSelected(), fields.list.getLastSelectedLi());
							this.updateListIcon(item, li);
							if (item.id === -1) {
								fields.data.page = null;
								fields.layoutBlocks.setValue('template');
								fields.layoutBlocks.setActive(false);
							} else if (item.type !== 'external' && item.targetId) {
								fields.data.page = item.targetId;
								fields.layoutBlocks.setActive(true);
								fields.layoutBlocks.onChange();
							} else {
								return false;
							}
						},
						add: function(fields, item, li) {
							this.updateListIcon(item, li);
						}
					},
					{type: 'VerticalLayout', children: [
						{type: 'FlowLayout', children: [
							{type: 'LayoutBlocksControl', id: 'layoutBlocks',
								init: function() {
									this.nt = {
										'template' : __("Site Background"),
										'ptemplate' : __("Page Background"),
										'top' : __("Header Background"),
										'middle' : __("Body Background"),
										'bottom' : __("Footer Background")
									};
									this.pt = {
										'template' : __("Template Width"),
										'top' : __("Header Height"),
										'middle' : __("Body Bottom Padding"),
										'bottom' : __("Footer Height")
									};
								},
								change: function(fields) {
									var b = fields.layoutBlocks.getValue();
									var rn = (fields.data.page && b === "template") ? "ptemplate" : b;
									fields.mainTitle.setText(this.nt[rn]);
									var blocks = this.getBlocks(), blockIdx;

									if (fields.data.page) {
										fields.bgPage.setValue(fields.data.pages[fields.data.page][b].background);
										if (b === 'template') {
											fields.bg2Page.setValue(fields.data.pages[fields.data.page][b].background2);
										} else {
											fields.prop.setValue(fields.data.pages[fields.data.page][b].prop);
										}
										for (blockIdx in blocks) {
											var block = blocks[blockIdx];
											var val = false;
											if (fields.data.pages[fields.data.page][block]) {
												val = BackgroundControl.isSet(fields.data.pages[fields.data.page][block].background);
												if (!val && block === 'template' && BackgroundControl.isSet(fields.data.pages[fields.data.page][block].background2)) {
													val = true;
												}
											}
											this.setIsSet(val, block);
										}
									} else {
										fields.bgPage.setValue(fields.data.body.bgSite);
										fields.bg2Page.setValue(fields.data.body.bg2Site);
										fields.prop.setValue(fields.data.body.width);
										for (blockIdx in blocks) {
											var block_ = blocks[blockIdx];
											var val_ = false;
											if (block_ === 'template') {
												val_ = (fields.bgPage.isSet() || fields.bg2Page.isSet());
											}
											this.setIsSet(val_, block_);
										}
									}
									if (b === 'template') {
										fields.bgPage.setUseAttachment(true);
										if (fields.bg2Page.isSet()) {
											fields.moreLine.setVisible(false);
											fields.moreInfo.setVisible(true);
										} else {
											fields.moreLine.setVisible(true);
											fields.moreInfo.setVisible(false);
										}
										fields.propControl.setVisible(false);
									} else {
										fields.bgPage.setUseAttachment(false);
										fields.moreLine.setVisible(false);
										fields.moreInfo.setVisible(false);
										fields.propControl.setVisible(true);
									}
									fields.propLabel.setText(this.pt[b]);
								}
							},
							{type: 'VerticalLayout', css: {maxWidth: 360},
								children: [
									{type: 'Label', id: 'mainTitle', text: __('Site Background')},
									//new BackgroundControl(false, {image:0, position:1, repeat:2, color:3}, '<table><tr><td></td><td></td><td></td></tr><tr><td colspan="3" style="padding-top:15px;"></td></tr></table>');
									{type: 'BackgroundSelector', id: 'bgPage', useAttachment: true,
										change: function(fields) {
											if (this.t1) clearTimeout(this.t1);
											this.t1 = setTimeout(function() {
												if (fields.data.page) {
													var b = fields.layoutBlocks.getValue();
													fields.data.pages[fields.data.page][b].background = fields.bgPage.getValue();
												} else {
													fields.data.body.bgSite = fields.bgPage.getValue();
												}
											}, 50);
										}
									}
								]
							}
						]},
						{type: 'FlowLayout', id: 'propControl',
							verticalAlign: 'middle',
							css: {marginTop: 15},
							children: [
								{type: 'Label', id: 'propLabel', text: __('Template Width')},
								{type: 'SizeSelector', id: 'prop', min: 0,
									css: {marginBottom: 5},
									change: function(fields) {
										if (this.t3) clearTimeout(this.t3);
										this.t3 = setTimeout(function() {
											var b = fields.layoutBlocks.getValue();
											if (fields.data.page) {
												if (b !== 'template') {
													fields.data.pages[fields.data.page][b].prop = fields.prop.getValue();
												}
											} else {
												fields.data.body.width = fields.prop.getValue();
											}
										}, 50);
									}
								}
							]
						},
						{type: 'Button', id: 'moreLine', buttonStyle: UIButton.STYLE_LINK,
							styleClass: 'more-line',
							text: __('Add other Background over this?'),
							click: function() {
								this.setVisible(false);
								fields.moreInfo.setVisible(true);
								return false;
							}
						},
						{type: 'VerticalLayout', id: 'moreInfo',
							css: {marginTop: 15},
							children: [
								{type: 'Label', text: __('Secondary background')},
								//new BackgroundControl(false, {image:0, position:1, repeat:2, color:3}, '<table><tr><td></td><td></td><td></td><td style="padding-left:20px;"></td></tr></table>'))
								{type: 'BackgroundSelector', id: 'bg2Page',
									change: function(fields) {
										if (this.t2) clearTimeout(this.t2);
										this.t2 = setTimeout(function() {
											if (fields.data.page) {
												var b = fields.layoutBlocks.getValue();
												if (b === 'template')
													fields.data.pages[fields.data.page][b].background2 = fields.bg2Page.getValue();
											} else {
												fields.data.body.bg2Site = fields.bg2Page.getValue();
											}
										}, 50);
									}
								}
							]
						}
					]}
				]
			}, fields), true);

			this.changeBgDlg.addButton(__("Cancel"));
			this.changeBgDlg.addButton(__("Apply"), function() {
				HelpSystem.play(8, true, thisClass);
				thisClass.changeBgDlg.hide();

				wb_builder.bodyInstance.bgSite = fields.data.body.bgSite;
				wb_builder.bodyInstance.bg2Site = fields.data.body.bg2Site;
				var val = fields.data.body.width*1;
				wb_builder.bodyInstance.siteWidth = Math.round(isNaN(val) ? 1003 : val);

				$.each(fields.data.pages, function(i, pd) {
					var p = thisClass.getPage(i);
					if (p) {
						p.background = pd.template.background;
						p.background2 = pd.template.background2;
						if (parseInt(i, 10) === wb_builder.pageId) {
							wb_builder.bodyInstance.blocks.wb_header.background = pd.top.background;
							wb_builder.bodyInstance.blocks.wb_header.setSize(null, pd.top.prop);

							wb_builder.bodyInstance.blocks.wb_main.background = pd.middle.background;
							wb_builder.bodyInstance.blocks.wb_main.blockPadding = pd.middle.prop;

							wb_builder.bodyInstance.blocks.wb_footer.background = pd.bottom.background;
							wb_builder.bodyInstance.blocks.wb_footer.setSize(null, pd.bottom.prop);

							for (var blockId in wb_builder.bodyInstance.blocks) {
								wb_builder.bodyInstance.blocks[blockId].updateStyle();
								wb_builder.bodyInstance.blocks[blockId].updateSize();
							}
						}
	//					else {
							//save other pages data
							$.each(thisClass.pages, function(num, pg) {
								if (parseInt(pg.id, 10) === parseInt(i, 10)) {
									thisClass.pages[num].blocks = {
										wb_header: {
											background		: pd.top.background,
											height			: pd.top.prop
										},
										wb_main: {
											background		: pd.middle.background,
											blockPadding	: pd.middle.prop
										},
										wb_footer: {
											background		: pd.bottom.background,
											height			: pd.bottom.prop
										}
									};
								}
							});

							//for sending
							wb_builder.pageBlocksData[i] = {
								blocks: {
									wb_header: {
										content			: {
											background		: pd.top.background
										},
										height	: pd.top.prop
									},
									wb_main: {
										content			: {
											background		: pd.middle.background,
											blockPadding	: pd.middle.prop
										}
									},
									wb_footer: {
										content			: {
											background		: pd.bottom.background
										},
										height	: pd.bottom.prop
									}
								}
							};
	//					}
					}
				});

				wb_builder.bodyInstance.updateStyle();
				wb_builder.bodyInstance.fitElements();
				if (wb_builder.showLayout) wb_builder.highlightLayout(wb_builder.showLayout);

				wb_builder.pageModified = true;
			}, true);
		}
		fields = this.changeBgDlg.fields;
		fields.data = data;

		var k, wasSelected = false, noMenus = true;
		fields.list.removeAllItems();
		fields.list.addItem(fields.defaultInf = {
			id: -1,
			type: "default",
			name: __("Default (for all pages)"),
			serialize: function() { return this; }
		}, false, "glyphicon glyphicon-home");
		var elList = Service.menu.getElemList();
		for (k in elList) {
			noMenus = false;
			var m = elList[k];
			//fields.list.addItem(item);
			for (var k2 in m.items) {
				var mi = m.items[k2];
				var hmi = fields.list.addItem(mi, false, (mi.type === "external") ? "glyphicon glyphicon-share-alt" : null);
				hmi.css({ marginLeft: "20px" });
				if (block && !wasSelected && mi.type !== "external" && mi.targetId == wb_builder.pageId) {
					wasSelected = true;
					hmi.trigger("click");
				}
				if (mi.items) {
					for (var k3 in mi.items) {
						var mi2 = mi.items[k3];
						var hmi2 = fields.list.addItem(mi2, false, (mi2.type === "external") ? "glyphicon glyphicon-share-alt" : null);
						hmi2.css({ marginLeft: "40px" });
						if (block && !wasSelected && mi2.type !== "external" && mi2.targetId == wb_builder.pageId) {
							wasSelected = true;
							hmi2.trigger("click");
						}
					}
				}
			}
		}
		fields.pages.removeAllPages();
		for (k in this.pages) { fields.pages.addPage(this.pages[k].serialize()); }

		if (!block || noMenus || !wasSelected)
			fields.list.selectFirst();
		else
			fields.layoutBlocks.setValue(block);

		/*
		var p = this.getPage(wb_builder.pageId);
		if (p) {
			fields.bgPage.setValue(p.background);
			fields.bg2Page.setValue(p.background2);
			//this.changeBgDlg.setTitle(__('Background for page "%s"').replace("%s", p.title));
		}
		*/

		this.changeBgDlg.setVisible(true);
		fields.data.rd = true;
	};

	/**
	 * Show change site background dialog
	 *
	 * @deprecated => routed to site.changeBackground()
	 */
	Site.prototype.changeSiteBackground = function() {
		this.changeBackground();
		return false;
	};

	/**
	 * Show change page background dialog
	 *
	 * @deprecated => routed to site.changeBackground()
	 */
	Site.prototype.changePageBackground = function() {
		this.changeBackground('template');
		return false;
	};

	/**
	 * Show change styles dialog
	 */
	Site.prototype.changeStyles = function() {
		var thisClass = this;
		var fields = null;
		if (!this.changeStylesDlg) {
			this.changeStylesDlg = new Dialog(__("Styles"), null, new Service.UIBuilder({
				type: 'HorizontalLayout', columnWeightsSmall: [3, 9], columnWeights: [3, 9], children: [
					{type: 'List', id: 'tree',
						css: {marginBottom: 0},
						listHeight: 260,
						itemType: Site.Style,
						editable: false,
						init: function() {
							var _addItem = this.addItem;
							this.addItem = function(item, noStyleUpdate) {
								var li = _addItem.call(this, item, noStyleUpdate, 'no-icon');
								if (item.ident) {
									if (wb_builder.rtl) {
										li.css({marginRight: '20px'});
									} else {
										li.css({marginLeft: '20px'});
									}
								}
								return li;
							};
						},
						select: function(fields, item) {
							var k, style;
							if (fields.tree.getLastSelected()) {
								style = fields.tree.getLastSelected();
								style.sys.text = fields.text.getValue();
								style.sys.text.name = style.name;
								style.sys.linkNormalColor = fields.linkNormalColor.getValue();
								style.sys.linkNormalStyle = fields.linkNormalStyle.getValue();
								style.sys.linkHoverColor = fields.linkHoverColor.getValue();
								style.sys.linkHoverStyle = fields.linkHoverStyle.getValue();
								style.sys.advTextTransform = fields.advTextTransform.getValue();
								style.sys.advSpacing = fields.advSpacing.getValue();
								style.sys.advListBullet = fields.advListBullet.getValue();
								style.rules = $.extend(true, {}, style.sys.text.css, style.sys.advSpacing.css, style.sys.advTextTransform.css);
								style.subs = [];
								style.subs.push(new Site.Style({
									selector: (style.selector + " a"),
									rules: $.extend(true, {}, style.sys.text.css, { "color": style.sys.linkNormalColor }, style.sys.linkNormalStyle.css)
								}));
								style.subs.push(new Site.Style({
									selector: (style.selector + " a:hover"),
									rules: $.extend(true, {}, style.sys.text.css, { "color": style.sys.linkHoverColor }, style.sys.linkHoverStyle.css)
								}));
								style.subs.push(new Site.Style({
									selector: (style.selector + " ul"),
									rules: { "list-style-image": "url('" + (style.sys.advListBullet ? style.sys.advListBullet.replace(/\'/g, "\\'") : '') + "')" }
								}));
								for (k in style.modes) {
									style.modes[k].fontScale = (fields.fontScale[k].getValue() / 100.0);
								}
							}
							style = item;
							fields.text.setValue(style.sys.text);
							fields.text.setPreviewTag(style.tag);
							fields.linkNormalColor.setValue(style.sys.linkNormalColor);
							fields.linkNormalStyle.setValue(style.sys.linkNormalStyle);
							fields.linkHoverColor.setValue(style.sys.linkHoverColor);
							fields.linkHoverStyle.setValue(style.sys.linkHoverStyle);
							fields.advTextTransform.setValue(style.sys.advTextTransform);
							fields.advSpacing.setValue(style.sys.advSpacing);
							fields.advListBullet.setValue(style.sys.advListBullet);
							for (k in style.modes) {
								fields.fontScale[k].setValue(Math.round(style.modes[k].fontScale * 100.0));
								if (k !== ModeManager.MODE_DESKTOP) {
									if (String(style.selector).match(/\.wb\-stl\-normal(?:\ .+|)/i)) {
										// fields.fontScale[k].setValue(100);
										// fields.fontScale[k].setEnabled(false);
									} else {
										fields.fontScale[k].setEnabled(true);
									}
								}
							}
						}
					},
					{type: 'TabbedPane', tabs: [
						{name: __('Standard'), children: [
							{type: 'FontSelector', id: 'text',
								css: {marginTop: '15px'},
								needLineHeight: true,
								ttPlacement: 'left',
								needPreview: true
							}
						]},
						{name: __('Links'), children: [
							{type: 'VerticalLayout', children: [
								{type: 'Label', text: __('Link Text'), css: {marginTop: '15px'}},
								{type: 'FlowLayout', children: [
									{type: 'ColorSelector', id: 'linkNormalColor', noTransparent: true},
									{type: 'FontStyleSelector', id: 'linkNormalStyle'}
								]},
								{type: 'Label', text: __('Link Hover'), css: {marginTop: '15px'}},
								{type: 'FlowLayout', children: [
									{type: 'ColorSelector', id: 'linkHoverColor', noTransparent: true},
									{type: 'FontStyleSelector', id: 'linkHoverStyle'}
								]}
							]}
						]},
						{name: __('Advanced'), children: [
							{type: 'VerticalLayout', children: [
								{type: 'FlowLayout', css: {marginTop: '15px'}, spacing: 20, children: [
									{type: 'VerticalLayout', children: [
										{type: 'Label', text: __('Text Transform')},
										{type: 'FontTransformSelector', id: 'advTextTransform'}
									]},
									{type: 'VerticalLayout', children: [
										{type: 'Label', text: __('Margin / Padding')},
										{type: 'SpacingSelector', id: 'advSpacing'}
									]},
									{type: 'VerticalLayout', children: [
										{type: 'Label', text: __('List Options'), helpText: __('Default bullet image for list items')},
										{type: 'ImageSelector', id: 'advListBullet'}
									]}
								]},
								{type: 'Label', text: __('Font Scale for different devices'), css: {marginTop: '15px'}},
								{type: 'FlowLayout', styleClass: 'font-scale-ctrl',
									spacing: 20,
									children: [
										{type: 'VerticalLayout', children: [
											{type: 'Label', text: ModeManager.getModeName(ModeManager.MODE_TV)},
											{type: 'SizeSelector',
												units: '%', min: 1, max: 500,
												init: function(def, fields) {
													fields.fontScale[ModeManager.MODE_TV] = this;
												}
											},
											{type: 'CustomContainer', tag: 'p',
												styleClass: 'help-text',
												content: __('Recomended') + ' 120%'
											}
										]},
										{type: 'VerticalLayout', enabled: false, children: [
											{type: 'Label', text: ModeManager.getModeName(ModeManager.MODE_DESKTOP)},
											{type: 'SizeSelector',
												units: '%', min: 1, max: 500,
												init: function(def, fields) {
													fields.fontScale[ModeManager.MODE_DESKTOP] = this;
												}
											},
											{type: 'CustomContainer', styleClass: 'cover'}
										]},
										{type: 'VerticalLayout', children: [
											{type: 'Label', text: ModeManager.getModeName(ModeManager.MODE_TABLET)},
											{type: 'SizeSelector',
												units: '%', min: 1, max: 500,
												init: function(def, fields) {
													fields.fontScale[ModeManager.MODE_TABLET] = this;
												}
											},
											{type: 'CustomContainer', tag: 'p',
												styleClass: 'help-text',
												content: __('Recomended') + ' 80%'
											}
										]},
										{type: 'VerticalLayout', children: [
											{type: 'Label', text: ModeManager.getModeName(ModeManager.MODE_PHONE)},
											{type: 'SizeSelector',
												units: '%', min: 1, max: 500,
												init: function(def, fields) {
													fields.fontScale[ModeManager.MODE_PHONE] = this;
												}
											},
											{type: 'CustomContainer', tag: 'p',
												styleClass: 'help-text',
												content: __('Recomended') + ' 60%'
											}
										]}
									],
									init: function(def, fields) {
										fields.fontScale = {};
									}
								}
							]}
						]}
					]}
				]
			}));
			this.changeStylesDlg.setSize(640, null);
			fields = this.changeStylesDlg.fields;

			this.changeStylesDlg.addButton(__("Cancel"));
			this.changeStylesDlg.addButton(__("Apply"), function() {
				thisClass.changeStylesDlg.hide();

				wb_builder.pageModified = true;

				fields.tree.selectFirst(); // to apply last changes
				thisClass.styles = fields.tree.getValue();
				for (var k in thisClass.styles) {
					thisClass.styles[k].mode = thisClass.mode;
					thisClass.styles[k].modes[thisClass.styles[k].mode].applyTo(thisClass.styles[k]);
				}

				thisClass.updateStyle();

			}, true);
		}
		fields = this.changeStylesDlg.fields;

		fields.tree.removeAllItems();
		for (var i = 0; i < this.styles.length; i++) {
			fields.tree.addItem(this.styles[i]);
		}
		fields.tree.selectFirst();

		this.changeStylesDlg.setVisible(true);
	};

	/**
	 * Show change site and current page properties dialog
	 */
	Site.prototype.changeProperties = function() {
		var thisClass = this;
		var fields = null;
		if (!this.changeDlg) {
			var tabs = [];
			if (!wb_builder.isB2C) {
				tabs.push(
					{children: [
						{type: 'VerticalLayout', css: {marginTop: 15}, children: [
							{type: 'HorizontalLayout', children: [
								{type: 'CheckBox', id: 'forceHttps',
									label: __('Publish Site with forced HTTPS'),
									helpText: __('This option requires SSL to be enabled on your server.'),
									change: function(fields) { if (fields.forceHttpsPort) fields.forceHttpsPort.setEnabled(this.getValue()); }
								},
								{type: 'FlowLayout', verticalAlign: 'middle', ignore: !wb_builder.enableForcedHttpsPort, children: [
									{type: 'Label', text: __('Forced HTTPS port')},
									{type: 'TextField', id: 'forceHttpsPort', css: {width: 60}, styleClass: 'input-sm', placeholder: '443'}
								]}
							]}
						]},
						{type: 'VerticalLayout', css: {marginTop: 15}, children: [
							{type: 'CheckBox', id: 'forceRedirectEnabled', label: __('Publish Site with forced redirection'), helpText: __('After changing an option and publishing site clear browser cache.'), change: function() {
								if (this.getValue()) {
									fields.forceRedirectLine.setEnabled(true);
								} else {
									fields.forceRedirectLine.setEnabled(false);
								}
							}},
							{type: 'VerticalLayout', id: 'forceRedirectLine', css: {marginTop: 10}, enabled: false, children: [
								{type: 'RadioBox', group: 'force_redirect', id: 'forceRedirectNonWww', label: __('Redirect from www to non-www')},
								{type: 'RadioBox', group: 'force_redirect', id: 'forceRedirectWww', label: __('Redirect from non-www to www')}
							]}
						]}
					]}
				);
			}
			tabs.push(
				{name: __('Meta information'), children: [
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Meta Tags'),
							helpText: __('Meta data HTML tags to be added to sites head.')
						},
						{type: 'TextField', id: 'metaHtml', textArea: true, css: {height: 100},
							placeholder: '<meta name="some name" content="some content"/>'
						}
					]}
				]}
			);
			this.changeDlg = new Dialog(__('Site settings'), null, new Service.UIBuilder({type: 'TabbedPane', tabs: tabs}));
			this.changeDlg.setSize(570, null);
			fields = this.changeDlg.fields;

			this.changeDlg.addButton(__("Cancel"));
			this.changeDlg.addButton(__("Apply"), function() {
				thisClass.changeDlg.hide();
				if (fields.forceHttps) thisClass.publishWithForcedHttps = fields.forceHttps.getValue() ? true : false;
				if (fields.forceHttpsPort) {
					thisClass.publishWithForcedHttpsPort = parseInt(fields.forceHttpsPort.getValue(), 10);
				}
				if (fields.forceRedirectEnabled) {
					thisClass.forceRedirectEnabled = fields.forceRedirectEnabled.getValue();
					if (fields.forceRedirectWww.getValue()) thisClass.forceRedirectWww = true;
					if (fields.forceRedirectNonWww.getValue()) thisClass.forceRedirectWww = false;
				}
				thisClass.metaHtml = fields.metaHtml.getValue();
				wb_builder.pageModified = true;
			}, true);
		}
		fields = this.changeDlg.fields;
		if (fields.forceHttps) fields.forceHttps.setValue(this.publishWithForcedHttps);
		if (fields.forceHttpsPort) {
			fields.forceHttpsPort.setValue((this.publishWithForcedHttpsPort ? this.publishWithForcedHttpsPort : ''));
			fields.forceHttpsPort.setEnabled(fields.forceHttps.getValue());
		}
		if (fields.forceRedirectEnabled) {
			fields.forceRedirectEnabled.setValue(thisClass.forceRedirectEnabled);
			fields.forceRedirectEnabled.trigger('change');
			if (thisClass.forceRedirectWww) {
				fields.forceRedirectWww.setValue(true);
				fields.forceRedirectNonWww.setValue(false);
			} else {
				fields.forceRedirectWww.setValue(false);
				fields.forceRedirectNonWww.setValue(true);
			}
		}
		fields.metaHtml.setValue(this.metaHtml);

		this.changeDlg.setVisible(true);
	};

	Site.prototype.onUpdateLanguages = function() {
		WB_Languages.reloadAll();
		WB_LangInputControl.reloadAll();
		URLControl.reloadAll();
		var elems = wb_builder.bodyInstance.getContentElements();
		for (var i=0, elem; (elem = elems[i]); i++) {
			if (typeof elem.onUpdateLanguages === 'function') {
				elem.onUpdateLanguages();
			}
		}
	};

	Site.prototype.switchLanguage = function(langCode) {
		var pageWasModified = wb_builder.pageModified;
		this.currSelLang = langCode;
		var elems = wb_builder.bodyInstance.getContentElements();
		for (var i=0, elem; (elem = elems[i]); i++) {
			if (typeof elem.onSwitchLanguage === 'function') {
				elem.onSwitchLanguage(langCode);
			}
		}
		if (!pageWasModified) wb_builder.pageModified = false;
	};

	Site.Mode = (function() {
		/**
		 * @param {Site.Mode} mode
		 * @param {Object} data
		 */
		var applyData = function(mode, data) {
			//mode.fontScale = data.fontScale;
		};

		/**
		 * @param {Object} data
		 * @class WB_Site.Mode
		 */
		var self = function(data) { if (data) applyData(this, data); };
		/** @type Number */
		self.prototype.fontScale = 1;
		/** @param {Site.Mode} mode */
		self.prototype.copy = function(mode) {
			applyData(this, mode);
		};
		/** @param {Site} elem */
		self.prototype.store = function(elem) {
			applyData(this, elem);
		};
		/** @param {Site} elem */
		self.prototype.applyTo = function(elem) {
			//elem.fontScale = this.fontScale;
			elem.updateStyle();
		};
		/** @return {Object} */
		self.prototype.serialize = function() {
			return { /*fontScale: this.fontScale*/ };
		};

		return self;
	})();

	Site.Page = (function() {

		/**
		 * Builder site Page class
		 * @param {Object} data
		 * @class Page
		 * @memberOf WB_Site
		 */
		var self = function(data) { if (data) this.__construct(data); };

		self.prototype.site = null;
		self.prototype.id = 0;
		/** @type Boolean */
		self.prototype.isFront = false;
		/** @type Boolean */
		self.prototype.isSingle = false;	//the only page on site w/o menu
		/** @type String */
		self.prototype.title = "";
		/** @type String */
		self.prototype.alias = "";
		/** @type String */
		self.prototype.keywords = "";
		/** @type String */
		self.prototype.description = "";
		/** @type String */
		self.prototype.layout = "";
		/** @type String */
		self.prototype.widget = "";
		self.prototype.background = null;
		self.prototype.background2 = null;
		self.prototype.comments = null;
		self.prototype.siteWidth = null;
		self.prototype.siteHeight = null;
		self.prototype.copyFrom = null;
		self.prototype.blocks = null;
		self.prototype.anchors = null;
		/** @type Object */
		self.prototype.modes = null;
		self.prototype.landing = null;
		self.prototype.landingOrder = null;

		/**
		 * Construct builder page
		 * @param data page data object
		 */
		self.prototype.__construct = function(data) {
			this.id = parseInt(data.id, 10);
			this.isFront = data.isFront ? true : false;
			this.isSingle = data.isSingle ? true : false;
			this.title = data.title;
			this.alias = data.alias;
			this.keywords = data.keywords;
			this.description = data.description;
			this.layout = data.layout;
			this.widget = data.widget;
			this.siteWidth = data.siteWidth;
			this.siteHeight = data.siteHeight;
			this.copyFrom = data.copyFrom ? data.copyFrom : null;
			this.blocks = data.blocks ? data.blocks : {};
			this.anchors = [];
			var i;
			if (data.anchors && (typeof data.anchors === 'object') && data.anchors.length > 0) {
				for (i = 0; i < data.anchors.length; i++) { this.anchors.push(data.anchors[i]); }
			}
			this.modes = data.modes;
			if ((typeof this.modes !== 'object') || ('length' in this.modes)) this.modes = {};

			this.landing = data.landing ? true : false;
			this.landingOrder = data.landingOrder ? data.landingOrder : 0;

			this.comments = [];

			if (data.comments) {
				for (i = 0; i < data.comments.length; i++) {
					var comment = new Site.Comment(data.comments[i]);
					this.addComment(comment);
				}
			}

			this.background = data.background ? data.background : {
				color: "transparent",
				image: "none",
				position: "left top",
				repeat: "repeat",
				css: { background: "transparent none repeat scroll left top" }
			};
			this.background2 = data.background2 ? data.background2 : {
				color: "transparent",
				image: "none",
				position: "left top",
				repeat: "repeat",
				css: { background: "transparent none repeat scroll left top" }
			};
		};

		/**
		 * Serialize this instance
		 * @return {Object}
		 */
		self.prototype.serialize = function() {

			var i, items = [], modes = $.extend({}, this.modes);

			for (i = 0; i < this.comments.length; i++) {
				items.push(this.comments[i].serialize());
			}

			if (parseInt(this.id, 10) === wb_builder.pageId) {
				var sz = wb_builder.bodyInstance.getSiteSize();
				this.siteWidth = sz.width;
				this.siteHeight = sz.height;
				wb_builder.bodyInstance.switchMode(wb_builder.bodyInstance.mode);
				for (var k in wb_builder.bodyInstance.modes) {
					var mode = wb_builder.bodyInstance.modes[k];
					modes[k] = {siteWidth: mode.siteWidth, siteHeight: mode.siteHeight};
				}
				this.modes = $.extend({}, modes);
			}

			var anchors = [];
			for (i = 0; i < this.anchors.length; i++) { anchors.push(this.anchors[i]); }

			return {
				"id":			this.id,
				"isFront":		this.isFront ? true : false,
				"isSingle":		this.isSingle ? true : false,
				"title":		this.title,
				"alias":		this.alias,
				"keywords":		this.keywords,
				"description":	this.description,
				"layout":		this.layout,
				"widget":		this.widget,
				"background":	this.background,
				"background2":	this.background2,
				"comments":		items,
				"siteWidth":	this.siteWidth,
				"siteHeight":	this.siteHeight,
				"copyFrom":		this.copyFrom,
				anchors: anchors,
				modes: modes,
				landing:		this.landing,
				landingOrder:	this.landingOrder
			};
		};

		/**
		 * Should not be used for enything, this method is only temporary bugfix
		 * @return {Object}
		 */
		self.prototype.serializeBlocksBugFix = function() {
			var data = this.serialize();
			data.blocks = this.blocks;
			return data;
		};

		/**
		 * Add comment to this page
		 * @param {Site.Comment} comment
		 */
		self.prototype.addComment = function(comment) {
			if (comment.page) {
				comment.page.removeComment(comment);
			}
			comment.page = this;
			comment.index = this.comments.length;
			this.comments.push(comment);
		};

		/**
		 * Remove comment from this page
		 * @param comment comment of type WB_Site.Comment
		 */
		self.prototype.removeComment = function(comment) {
			if (comment.page && comment.page !== this) return;
			if (!comment.page) {
				comment.index = -1;
				return;
			}
			comment.page = null;
			if (comment.index >= 0 && comment.index < this.comments.length) {
				this.comments.splice(comment.index, 1);
			}
			comment.index = -1;
		};

		/**
		 * Remove all comments from this page
		 */
		self.prototype.removeAllComments = function() {
			for (var i = 0; i < this.comments.length; i++) {
				this.removeComment(this.comments[i]);
			}
		};

		/**
		 * Toggle page landing
		 * @param {boolean} landing
		 * @param order
		 */
		self.prototype.setLanding = function(landing, order) {
			this.landing = landing ? true : false;
			this.landingOrder = order;
		};

		return self;
	})();

	Site.Comment = (function() {

		/**
		 * Builder site Comment class
		 * @param {Object} data
		 * @class Comment
		 * @memberOf WB_Site
		 */
		var self = function(data) { if (data) this.__construct(data); };

		self.prototype.page = null;
		self.prototype.id = 0;
		self.prototype.index = -1;
		self.prototype.date = null;
		self.prototype.time = null;
		self.prototype.user = null;
		self.prototype.text = null;

		/**
		 * Construct comment
		 * @param {Object} data comment data object
		 */
		self.prototype.__construct = function(data) {
			if (!data) data = {};
			var dt = new Date();
			var y = dt.getFullYear();
			var m = dt.getMonth() + 1; if (m < 10) m = "0" + m;
			var d = dt.getDate(); if (d < 10) d = "0" + d;
			var h = dt.getHours(); if (h < 10) h = "0" + h;
			var i = dt.getMinutes(); if (i < 10) i = "0" + i;
			this.id = data.id;
			this.date = data.date ? data.date : y + "-" + m + "-" + d;
			this.time = data.time ? data.time : h + ":" + i;
			this.user = data.user ? data.user : "anonymous";
			this.text = data.text ? data.text : "";
		};

		/**
		 * Serialize this instance
		 * @return {Object}
		 */
		self.prototype.serialize = function() {
			return {
				id:		this.id,
				date:	this.date,
				time:	this.time,
				user:	this.user,
				text:	this.text
			};
		};

		return self;
	})();

	Site.Style = (function() {

		/**
		 * Builder site style class
		 * @param {Object} data
		 * @class WB_Site.Style
		 */
		var self = function(data) { if (data) this.__construct(data); };

		self.defaults = [
			{
				name: "Page Title", // __("Page Title")
				tag: "h4",
				ident: 0,
				selector: ".wb-stl-pagetitle",
				rules: { "font-size": "24px" },
				sys: { text: { size: 24 } }
			},
			{
				name: "Sub Title", // __("Sub Title")
				tag: "h5",
				ident: 1,
				selector: ".wb-stl-subtitle",
				rules: { "font-size": "18px" },
				sys: { text: { size: 18 } }
			},
			{
				name: "Heading 1", // __("Heading 1")
				tag: "h1",
				ident: 0,
				selector: ".wb-stl-heading1",
				rules: { "font-size": "24px" },
				sys: { text: { size: 24 } }
			},
			{
				name: "Heading 2", // __("Heading 2")
				tag: "h2",
				ident: 1,
				selector: ".wb-stl-heading2",
				rules: { "font-size": "20px" },
				sys: { text: { size: 20 } }
			},
			{
				name: "Heading 3", // __("Heading 3")
				tag: "h3",
				ident: 1,
				selector: ".wb-stl-heading3",
				rules: { "font-size": "16px" },
				sys: { text: { size: 16 } }
			},
			{
				name: "Normal", // __("Normal")
				tag: "p",
				ident: 0,
				selector: ".wb-stl-normal",
				rules: { "font-size": "12px" },
				sys: { text: { size: 12 } }
			},
			{
				name: "Highlight", // __("Highlight")
				tag: "span",
				ident: 1,
				selector: ".wb-stl-highlight",
				rules: { "font-size": "12px", "background": "yellow" },
				sys: { text: { size: 12 } }
			},
			{
				name: "Special", // __("Special")
				tag: "span",
				ident: 1,
				selector: ".wb-stl-special",
				rules: { "font-size": "12px", "font-weight": "bold", "text-decoration": "underline" },
				sys: { text: { size: 12, style: { bold: true, underline: true } } }
			},
			{
				name: "Footer", // __("Footer")
				tag: "p",
				ident: 0,
				selector: ".wb-stl-footer",
				rules: { "background": "black", "color": "#ffffff" },
				sys: { text: { color: "#ffffff" } }
			}
		];
		self.prototype.selector = null;
		self.prototype.rules = null;
		self.prototype.name = null;
		self.prototype.tag = null;
		self.prototype.ident = 0;
		self.prototype.sys = null;
		self.prototype.subs = null;
		/** @type Number */
		self.prototype.fontScale = 1;
		/** @type Object */
		self.prototype.modes = null;
		/** @type String */
		self.prototype.mode = null;

		/**
		 * Construct style
		 * @param {Object} data style data object
		 */
		self.prototype.__construct = function(data) {
			this.selector = data.selector ? (data.selector + "") : ".dummy-no-name";
			this.rules = (data.rules && typeof(data.rules) === "object") ? data.rules : {};
			this.name = data.name ? (data.name + "") : "no-name";
			this.tag = data.tag ? (data.tag + "") : "span";
			this.ident = (data.ident && !isNaN(parseInt(data.ident, 10))) ? data.ident : 0;
			this.sys = (data.sys && typeof(data.sys) === "object") ? data.sys : {};
			this.subs = [];
			var i, subs = (data.subs && typeof(data.subs) === "object") ? data.subs : [];
			for (i = 0; i < subs.length; i++) {
				this.subs.push(new Site.Style(subs[i]));
			}

			if (('fontScale' in data) && data.fontScale) this.fontScale = data.fontScale;

			this.mode = ModeManager.MODE_DESKTOP;
			this.modes = {}; if (data.modes) for (var k in data.modes) { this.modes[k] = new self.Mode(data.modes[k]); }
			var wbModes = ModeManager.getModes();
			for (i = 0; i < wbModes.length; i++) this.switchMode(wbModes[i], true);
		};

		/**
		 * Switch to mode (one of ModeManager.MODE_* constants)
		 * @param {String} mode
		 * @param {Boolean} noApply
		 */
		self.prototype.switchMode = function(mode, noApply) {
			if (!mode) return;
			if (!noApply) {
				if (!(this.mode in this.modes)) this.modes[this.mode] = new self.Mode();
				this.modes[this.mode].store(this);
				if (this.mode === mode) return;
			}
			if (!(mode in this.modes)) {
				this.modes[mode] = new self.Mode();
				if (ModeManager.MODE_DESKTOP in this.modes) this.modes[mode].copy(this.modes[ModeManager.MODE_DESKTOP]);
				if (mode === ModeManager.MODE_TV) {
					this.modes[mode].fontScale = 1.2;
				} else if (mode === ModeManager.MODE_TABLET) {
					this.modes[mode].fontScale = 0.8;
				} else if (mode === ModeManager.MODE_PHONE) {
					this.modes[mode].fontScale = 0.6;
				} else {
					this.modes[mode].fontScale = 1;
				}
			}
			if (!noApply) {
				this.modes[mode].applyTo(this);
				this.mode = mode;
			}
		};

		/**
		 * Serialize this instance
		 * @return {Object}
		 */
		self.prototype.serialize = function() {
			this.switchMode(this.mode);
			this.modes[this.mode].store(this);
			var m = this.modes[ModeManager.MODE_DESKTOP].serialize();
			var modes = {}; for (var k in this.modes) { modes[k] = this.modes[k].serialize(); }
			var subs = [];
			for (var i = 0; i < this.subs.length; i++) {
				subs.push(this.subs[i].serialize());
			}
			return {
				selector: this.selector,
				rules: $.extend(true, {}, this.rules),
				name: this.name,
				tag: this.tag,
				ident: this.ident,
				sys: $.extend(true, {}, this.sys),
				subs: subs,
				fontScale: m.fontScale,
				modes: modes
			};
		};

		self.Mode = (function() {
			/**
			 * @param {Site.Style.Mode} mode
			 * @param {Object} data
			 */
			var applyData = function(mode, data) {
				mode.fontScale = data.fontScale;
			};

			/**
			 * @param {Object} data
			 * @class WB_Site.Style.Mode
			 */
			var self = function(data) { if (data) applyData(this, data); };
			/** @type Number */
			self.prototype.fontScale = 1;
			/** @param {Site.Style.Mode} mode */
			self.prototype.copy = function(mode) {
				applyData(this, mode);
			};
			/** @param {Site.Style} elem */
			self.prototype.store = function(elem) {
				applyData(this, elem);
			};
			/** @param {Site.Style} elem */
			self.prototype.applyTo = function(elem) {
				elem.fontScale = this.fontScale;
			};
			/** @return {Object} */
			self.prototype.serialize = function() {
				return { fontScale: this.fontScale };
			};

			return self;
		})();

		return self;
	})();

	window.WB_Site = Site;

	return Site;
});
;

/** WB Body **/

define('Body', ['Service', 'ModeManager', 'ElementBox', 'Content', 'ContextMenu'], function(Service, ModeManager, ElementBox, Content, ContextMenu) {
	'use strict';

	/**
	 * Builder site Body class
	 * @param {Object} data
	 * @param {Object} elem
	 * @class
	 */
	var Body = function(data, elem) { this.__construct(data, elem); };

	Body.prototype.elem = null;
	Body.prototype.site = null;
	Body.prototype.siteRoot = null;
	Body.prototype.siteCover = null;
	Body.prototype.secBg = null;
	/** @type {Content[]} */
	Body.prototype.blocks = null;
	Body.prototype.menu = null;
	Body.prototype.activeZone = null;
	Body.prototype.siteWidth = 1003;
	Body.prototype.bgSite = null;
	Body.prototype.bg2Site = null;
	Body.prototype.siteTextFont = null;
	Body.prototype.siteLinkFontNormal = null;
	Body.prototype.siteLinkFontHover = null;
	Body.prototype.cssRuleIndexes = null;
	/** @type Object */
	Body.prototype.modes = null;
	/** @type String */
	Body.prototype.mode = null;

	/**
	 * Construct builder site body
	 * @param {Object} data body data object
	 * @param {Object} elem html dom element to create from
	 */
	Body.prototype.__construct = function(data, elem) {
		this.elem = $(elem);
		this.elem.attr({dir: (wb_builder.site.rtl ? 'rtl' : 'ltr')});
		this.site = $("#site", this.elem);
		this.siteRoot = this.site.children('.root').eq(0);
		this.siteCover = $(".site_cover", this.elem);
		this.secBg = $('<div class="wb_sbg"></div>');
		this.siteRoot.append(this.secBg);

		this.activeZone = $('<div class="wb-active-zone"></div>');
		this.site.append(this.activeZone);

		this.cssRuleIndexes = { a: -1, b: -1, c: -1 };

		this.blocks = {};
		var thisClass = this;
		$(".wb_container", this.elem).each(function() {
			if (!this.id) return;
			var bdata = data.content.blocks[this.id] ? data.content.blocks[this.id] : null;

			if (!bdata && $(".wb_container#wb_right", this.elem).length === 0 &&
					this.id === "wb_left") bdata = data.content.blocks.wb_right;
			if (!bdata && $(".wb_container#wb_left", this.elem).length === 0 &&
					this.id === "wb_right") bdata = data.content.blocks.wb_left;
			if (!bdata) bdata = {};

			if (!bdata.content) bdata.content = {};
			thisClass.blocks[this.id] = new Content(bdata, this);
			thisClass.blocks[this.id].bodyInstance = thisClass;
		});
		this.siteWidth = data.content.siteWidth ? data.content.siteWidth : this.siteWidth;
		this.bgSite = data.content.bgSite ? data.content.bgSite : {
			color: "transparent",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "transparent none repeat scroll left top" }
		};
		this.bg2Site = data.content.bg2Site ? data.content.bg2Site : {
			color: "transparent",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "transparent none repeat scroll left top" }
		};

		this.siteTextFont = data.content.siteTextFont ? data.content.siteTextFont : {	
			color: "#333333",
			size: 13,
			decoration: "none",
			font: "Arial,sans-serif",
			style: { },
			align: "left",
			lineHeight: 18, 
			css: {
				font: "normal normal 13px Arial,sans-serif",
				color: "#333333",
				"text-align": "left",
				"text-decoration": "none",
				"line-height": "18px"
			}
		};

		this.siteLinkFontNormal = data.content.siteLinkFontNormal ? data.content.siteLinkFontNormal : {	
			color: "#0088cc",
			size: 13,
			decoration: "underline",
			font: "Arial,sans-serif",
			style: { },
			align: "left",
			lineHeight: 18, 
			css: {
				font: "normal normal 13px Arial,sans-serif",
				color: "#0088cc",
				"text-align": "left",
				"text-decoration": "underline",
				"line-height": "18px"
			}
		};

		this.siteLinkFontHover = data.content.siteLinkFontHover ? data.content.siteLinkFontHover : {	
			color: "#005580",
			size: 13,
			decoration: "underline",
			font: "Arial,sans-serif",
			style: { },
			align: "left",
			lineHeight: 18, 
			css: {
				font: "normal normal 13px Arial,sans-serif",
				color: "#005580",
				"text-align": "left",
				"text-decoration": "underline",
				"line-height": "18px"
			}
		};

		this.elem.selectable({
			"filter":	".wb_element",
			"cancel":	".wb_element,.layout_border",
			//"delay":	20,
			"distance": 5,
			"start":	function(event, ui) {
				ContextMenu.hideAllMenus();
			},
			"stop":		function(event, ui) {
				Content.selectionRef = thisClass;
				WB_Element.selected = {};
				$(".ui-selected", this).each(function() {
					$(this).trigger("mouseover");
					var o = $(this).wbGetClassInstance();
					WB_Element.selected[o.id] = o;
				});
			},
			"unselected":function(event, ui) {
				$(ui.unselected).trigger("mouseout");
				var o = $(ui.unselected).wbGetClassInstance();
				WB_Element.selected[o.id] = null;
				delete WB_Element.selected[o.id];
			}
		});

		this.elem.on("click", function(e) {
			Service.element.unselectAll();
			wb_builder.clearSelections();
			e.stopPropagation();
		});


		this.updateStyle();
		this.initContextMenu(this.activeZone);
		
		var k;
		this.mode = ModeManager.MODE_DESKTOP;
		this.modes = {}; if (data.modes) for (k in data.modes) { this.modes[k] = new Body.Mode(data.modes[k]); }
		var p = wb_builder.site.getPage(wb_builder.pageId);
		if (p && ('modes' in p)) { for (k in p.modes) { this.modes[k] = new Body.Mode(p.modes[k]); } }
		this.initTouchDragging();
	};
	
	Body.prototype.setLandingLock = function(lock) {
		for (var i in this.blocks) {
			if (this.blocks[i].id === 'wb_header' || this.blocks[i].id === 'wb_footer') {
				this.blocks[i].setLocked(lock);
			}
		}
	};
	
	Body.prototype.initTouchDragging = function() {
		var target = {elem: null, pos: null},
			thisSelf = this,
			el = this.elem.get(0), //document.body,
			mousePos = function(e) {
				var ev = e.changedTouches[0], mx = 0, my = 0;
				if (ev.pageX === null && ev.clientX !== null) {
					var evDoc = (ev.target && ev.target.ownerDocument) || document;
					var doc = evDoc.documentElement;
					var body = evDoc.body;
					mx.pageX = ev.clientX +
						(doc && doc.scrollLeft || body && body.scrollLeft || 0) -
						(doc && doc.clientLeft || body && body.clientLeft || 0);
					my.pageY = ev.clientY +
						(doc && doc.scrollTop  || body && body.scrollTop  || 0) -
						(doc && doc.clientTop  || body && body.clientTop  || 0 );
				} else {
					mx = ev.pageX;
					my = ev.pageY;
				}
				return {x: mx, y: my};
			};
		el.addEventListener('touchstart', function(e) {
			var i, b, m = mousePos(e),
				elements = thisSelf.getContentElements();
			target.elem = null;
			target.pos = null;
			// multitouch do not select or drag elements
			if (e.touches.length > 1) return;
			for (i = 0; i < elements.length; i++) {
				b = elements[i].getBounds();
				if (b.pageLeft < m.x && (b.pageLeft + b.width) > m.x && b.pageTop < m.y && (b.pageTop + b.height) > m.y) {
					if (!target.elem || target.elem.zIndex < elements[i].zIndex) {
						target.elem = elements[i];
						target.pos = {x: (m.x - b.pageLeft), y: (m.y - b.pageTop)};
					}
				}
			}
			if (target.elem) {
				if (target.elem.isSelected()) {
					this.menu.show(e.changedTouches[0]);
				} else {
					Service.contextMenu.hideAll();
				}
				Service.element.unselectAll();
				target.elem.setSelected(true);
				target.elem.setControlsVisible(true);
				e.stopPropagation();
				e.preventDefault();
			}
		}, true);
		el.addEventListener('touchstop', function() {
			target.elem = null;
			target.pos = null;
		}, true);
		el.addEventListener('touchmove', function(e) {
			// multitouch do not select or drag elements
			if (e.touches.length > 1) return;
			if (target.elem && !target.elem.isLocked) {
				var m = mousePos(e),
					block = target.elem.getParent(),
					b = block.elem.offset(),
					px = m.x - b.left - target.pos.x,
					py = m.y - b.top - target.pos.y;
				if (wb_builder.snapSize > 1) {
					px = wb_builder.gridSize(px);
					py = wb_builder.gridSize(py);
				}
				target.elem.setLocation(px, py);
				e.stopPropagation();
				e.preventDefault();
			}
		}, true);
	};
	
	/**
	 * Switch to mode (one of ModeManager.MODE_* constants)
	 * @param {string} mode
	 * @param {Object} initial
	 */
	Body.prototype.switchMode = function(mode, initial) {
		for (var k in this.blocks) this.blocks[k].switchMode(mode, initial);
		if (!mode) return;
		if (!(this.mode in this.modes)) this.modes[this.mode] = new Body.Mode();
		this.modes[this.mode].store(this);
		if (this.mode === mode) return;
		if (!(mode in this.modes)) {
			this.modes[mode] = new Body.Mode();
			this.modes[mode].copy((ModeManager.MODE_DESKTOP in this.modes) ? this.modes[ModeManager.MODE_DESKTOP] : this.modes[this.mode]);
		}
		this.modes[mode].applyTo(this);
		this.mode = mode;
		
		var thisSelf = this;
		ElementBox.removeAllElements();
		if (mode === ModeManager.MODE_PHONE || mode === ModeManager.MODE_TABLET) {
			var list = thisSelf.getContentElements();
			for (var i = 0; i < list.length; i++) {
				if (list[i].isHidden(true)) {
					list[i].hide(true);
					// (function(item) {
						// ElementBox.addElement(item, function() {
							// ElementBox.removeElement(item);
							// item.show(true, false);
						// }, item.boxItemOptions());
					// })(list[i]);
				}
			}
			if ($(window).width() > 485) ElementBox.setVisible(true);
		} else {
			ElementBox.setVisible(false);
		}
	};

	/**
	 * Destroy this object
	 */
	Body.prototype.__destruct = function() {
		for (var bid in this.blocks) {
			if (typeof(this.blocks[bid].__destruct) === "function") {
				this.blocks[bid].__destruct();
			}
		}
		this.siteCover.detach();
		this.site.empty().append(this.siteCover);
	};

	/**
	 * Serialize this element
	 * @return {Object}
	 */
	Body.prototype.serialize = function() {
		this.switchMode(this.mode);
		this.modes[this.mode].store(this);
		var m = this.modes[ModeManager.MODE_DESKTOP].serialize();
		var modes = {}; for (var k in this.modes) { modes[k] = this.modes[k].serialize(); }
		return {
			"class": "Body",
			content: {
				siteWidth: m.siteWidth,
				siteHeight: m.siteHeight,
				bgSite: this.bgSite,
				bg2Site: this.bg2Site,
				siteTextFont: this.siteTextFont,
				siteLinkFontNormal: this.siteLinkFontNormal,
				siteLinkFontHover: this.siteLinkFontHover
			},
			modes: modes
		};
	};

	/**
	 * Add element to body content block
	 * @param blockId block id to add element to
	 * @param elem element to add
	 * @param noZReset no z-index sorting
	 */
	Body.prototype.addElement = function(blockId, elem, noZReset) {
		var _blockId = blockId;
		if (!this.blocks[_blockId] && _blockId === "wb_left") _blockId = "wb_right";
		if (!this.blocks[_blockId] && _blockId === "wb_right") _blockId = "wb_left";
		if (!this.blocks[_blockId]) _blockId = "wb_main";
		if (!this.blocks[_blockId]) _blockId = "wb_content";
		if (!this.blocks[_blockId]) {
			for (var k in this.blocks) {
				_blockId = k;
				break;
			}
		}
		if (this.blocks[_blockId]) {
			this.blocks[_blockId].addElement(elem, noZReset);
		}
	};

	Body.prototype.zReset = function() {
		for (var blockId in this.blocks) { this.blocks[blockId].changeElementLayer(); }
	};

	/**
	 * Get content block by id
	 * @param blockId block id
	 * @return {Content}
	 */
	Body.prototype.getContentBlock = function(blockId) {
		return this.blocks[blockId] ? this.blocks[blockId] : null;
	};

	/**
	 * Get content elements
	 * @return array of elements
	 */
	Body.prototype.getContentElements = function() {
		var list = [];
		for (var k in this.blocks) {
			var slist = this.blocks[k].getElements();
			for (var k1 in slist) {
				list[list.length] = slist[k1];
			}
		}
		return list;
	};

	/**
	 * Fit elements to content blocks in this body
	 * @param {Boolean} force ignores ignoreParentBounds setting
	 */
	Body.prototype.fitElements = function(force) {
		for (var k in this.blocks) {
			this.blocks[k].fitElements(force);
		}
	};

	/**
	 * Update size request from block element
	 * @param block
	 */
	Body.prototype.updateSize = function(block) {
		var parent = block.elem;
		while (parent.attr("id") !== "site" && (parent = parent.parent())) {
			//var pid = "";
			var maxH = 0;
			parent.children(".hbox").css("height", "");
			parent.children().each(function() {
				if ($(this).hasClass("site_cover") || $(this).hasClass("wb-active-zone") || $(this).hasClass("wb_sbg")) return;
				var height = (($(this).css("minHeight") + "").replace("px", "")*1);
				var height2 = $(this).outerHeight(true);
				var h = $(this).position().top + ((height && height > height2) ? height : height2);
				//pid = $(this).attr("id") ? $(this).attr("id") : $(this).attr("class");
				//console.log("Height: " + pid + " = " + h);
				if (h > maxH) maxH = h;
			});
			//pid = parent.attr("id") ? parent.attr("id") : parent.attr("class");
			//console.log("Update size: " + pid + " = " + maxH);
			parent.css("height", maxH + "px");
			parent.children(".hbox").each(function() {
				$(this).css("height", maxH + "px");
			});
		}
		var i, mBlock;
		for (i in this.blocks) {
			mBlock = this.blocks[i];
			if (mBlock.lock) {
				mBlock.setSize(null, mBlock.elem.height());
			}
		}
	};

	/**
	 * Update style from properties to elements and generate generatable styles
	 * call this method after changing .bg* properties to apply those changes
	 */
	Body.prototype.updateStyle = function() {
		var bg = $.extend({}, this.bgSite);
		var p = wb_builder.site.getPage(wb_builder.pageId);
		if (p && p.background && (
				(p.background.image && p.background.image !== "none") ||
				(p.background.color && p.background.color !== "transparent")
			)) {
			bg = p.background;
		}
		var css = bg.css;
		if (css.background && bg.image && bg.image !== "none") {
			css.background = css.background.replace(/url\([^\)]+\)/i, 'url("' + wb_builder.makeLocalUrl(bg.image, true) + '")');
		}
		this.site.css(css);

		var bg2 = $.extend({}, this.bg2Site);
		if (p && p.background2 && (
				(p.background2.image && p.background2.image !== "none") ||
				(p.background2.color && p.background2.color !== "transparent")
			)) {
			bg2 = p.background2;
		}
		css = bg2.css;
		if (css.background && bg2.image && bg2.image !== "none") {
			css.background = css.background.replace(/url\([^\)]+\)/i, 'url("' + wb_builder.makeLocalUrl(bg2.image, true) + '")');
		}
		this.secBg.css(css);

		this.setWidth(this.siteWidth);

		/* disable 
		this.cssRuleIndexes.a = wb_builder.addCSSRule("#" + this.site.attr("id") + "," +
			" #" + this.site.attr("id") + " p", this.siteTextFont.css,
			null, this.cssRuleIndexes.a);
		this.cssRuleIndexes.b = wb_builder.addCSSRule("#" + this.site.attr("id") + " a",
			this.siteLinkFontNormal.css, null, this.cssRuleIndexes.b);
		this.cssRuleIndexes.c = wb_builder.addCSSRule("#" + this.site.attr("id") + " a:hover",
			this.siteLinkFontHover.css, null, this.cssRuleIndexes.c);
		*/
	};

	/**
	 * Set site width
	 * @param width
	 */
	Body.prototype.setWidth = function(width) {
		var w = parseInt(width, 10), ws, ws2;
		this.siteWidth = isNaN(w) ? 0 : w;
		ws = this.siteWidth ? (this.siteWidth + 'px') : '';
		// make wider for page guides (layout lines) to fit
		ws2 = this.siteWidth ? ((this.siteWidth + 5) + 'px') : '';
		this.siteRoot.css('width', ws);
		this.site.css('min-width', ws2);
	};

	/**
	 * Get size of the site
	 * @return object = { width: ..., height: ... }
	 */
	Body.prototype.getSiteSize = function() {
		return {
			width: this.siteWidth,
			height: this.site.children(".root").height()
		};
	};

	// unused 

	Body.prototype.fixSize = function() {
		var head = document.getElementById("wb_head");
		if (head) {
			var h = $(window).height() - $(head).outerHeight(true);
			$(this.element).height(h);
		}
	};

	Body.prototype.initContextMenu = function(elem) {
		//var thisClass = this;
		this.menu = new ContextMenu("wb_body_contextmenu");

		this.pagesMenu = new ContextMenu();

		this.menu.addItem("comConfig", __("Properties"), function() {
			//thisClass.changeProperties();
			wb_builder.site.changePageBackground();
		}, null, null, null, "icon-cog");

		this.menu.bind(elem, true);
		/*this.menu.onShow = function() {
			thisClass.updateContextMenu();
		};*/
	};

	Body.Mode = (function($) {
		/** @namespace Body */

		/**
		 * @param {Body.Mode} mode
		 * @param {Object} data
		 */
		var applyData = function(mode, data) {
			mode.siteWidth = data.siteWidth;
			mode.siteHeight = data.siteHeight;
		};

		/**
		 * @param {Object} data
		 * @class Body.Mode
		 */
		var self = function(data) { if (data) applyData(this, data); };
		/** @type Number */
		self.prototype.siteWidth = 2014;
		/** @type Number */
		self.prototype.siteHeight = 2014;
		/** @param {Body.Mode} mode */
		self.prototype.copy = function(mode) {
			applyData(this, mode);
		};
		/** @param {Body} elem */
		self.prototype.store = function(elem) {
			applyData(this, { siteWidth: elem.siteWidth, siteHeight: elem.site.children('.root').eq(0).height() });
		};
		/** @param {Body} elem */
		self.prototype.applyTo = function(elem) {
			elem.siteWidth = this.siteWidth;
			elem.site.children('.root').eq(0).height(this.siteHeight);
			elem.getContentBlock('wb_main').updateSize();
		};
		/** @return {Object} */
		self.prototype.serialize = function() {
			return { siteWidth: this.siteWidth, siteHeight: this.siteHeight };
		};

		return self;
	})($);
	
	return Body;
});
;

/** WB Content **/

define('Content', ['ModeManager', 'Dialog', 'PasteDialog', 'ContextMenu'], function(ModeManager, Dialog, PasteDialog, ContextMenu) {
	'use strict';
	
	/**
	 * Container class to contain elements
	 * @param {Object} data
	 * @param {Object} elem
	 */
	var Content = function(data, elem) { this.__construct(data, elem); };

	Content.lastIndex = 0;
	Content.selectionRef = null;

	Content.prototype.elem = null;
	Content.prototype.id = null;
	Content.prototype.name = null;
	Content.prototype.container = null;
	Content.prototype.minHeight = 50;
	Content.prototype.bodyInstance = null;
	Content.prototype.menu = null;
	Content.prototype.pagesMenu = null;
	Content.prototype.activeZone = null;
	Content.prototype.grid = null;

	Content.prototype.parentAutoHeight = true;
	Content.prototype.dialog = null;
	Content.prototype.fittinOk = false;
	Content.prototype.noClasses = null;
	Content.prototype.isFlexible = true;
	Content.prototype.waitingUpdate = false;
	Content.prototype.zLayers = null;
	Content.locTip = null;
	Content.prototype.dialog = null;
	Content.prototype.pasteDialog = null;
	Content.prototype.background = null;
	Content.prototype.blockPadding = 0;
	Content.prototype.size = null;
	/** @type Object */
	Content.prototype.modes = null;
	/** @type String */
	Content.prototype.mode = null;
	Content.prototype.lock = null;
	Content.prototype.locked = null;

	/**
	 * Construct container
	 * @param data content data
	 * @param elem DOM element to construct controller from
	 */
	Content.prototype.__construct = function(data, elem) {
		var thisClass = this;
		this.elem = $(elem);
		this.elem.wbSetClassInstance(this);
		this.id = this.elem.attr("id");
		if (!this.id) this.id = "wb_content_instance" + (Content.lastIndex++);
		this.name = __("Block");
		if (this.id === "wb_header") {
			this.name = __("Header Block");
		} else if (this.id === "wb_footer") {
			this.name = __("Footer Block");
		} else if (this.id === "wb_left") {
			this.name = __("Left Block");
		} else if (this.id === "wb_right") {
			this.name = __("Right Block");
		} else if (this.id === "wb_main") {
			this.name = __("Main Block");
		}
		this.container = $('<div></div>');
		this.container.css({width: "100%", height: "100%"});
		this.elem.append(this.container);
		this.zLayers = {};

		this.isFlexible = (this.id !== "wb_header" && this.id !== "wb_footer");

		this.grid = $('<div class="wb_grid"></div>');
		this.elem.append(this.grid);

		this.activeZone = $('<div class="wb-active-zone"></div>');
		this.elem.append(this.activeZone);

		this.container.droppable({
			tolerance: "pointer",
			hoverClass: "wb-state-highlight",
			accept: ".wb_element,.wb_item",
			drop: function(e, ui) {
				var itm = ui.draggable.wbGetClassInstance();
				if (itm) {
					if (itm.dropAccepted) return false;
				} else {
					var className = ui.draggable.attr('id');
					className = className ? className.split("__")[1] : null;
					var cls = className ? wb_builder.getClassByName(className) : null;

					if (!cls) return;
					itm = new cls({content: {}});
					wb_builder.pageModified = true;
				}
				var offset = thisClass.elem.offset(); 
				itm.setLocation(ui.offset.left - offset.left, ui.offset.top - offset.top);
				thisClass.addElement(itm);
	//			if (wb_builder.showLayout)
	//				wb_builder.highlightLayout(true);
			}
		});
		
		this.blockPadding = (data.content.blockPadding && !isNaN(parseInt(data.content.blockPadding, 10)))
			? parseInt(data.content.blockPadding, 10) : this.blockPadding;
		var h;
		if (this.isFlexible) {
			h = this.elem.height();
		} else {
			h = parseInt(data.height, 10);
			if (isNaN(h)) h = this.elem.height();
			if (!h) h = 200;
		}
		this.setSize(null, h + this.blockPadding);


		this.background = (data.content && data.content.background) ? data.content.background : {
			color: "transparent",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "transparent none repeat scroll left top" }
		};

		/*this.elem.selectable({
			"filter":	".wb_element",
			"cancel":	".wb_element",
			//"delay":	20,
			"distance": 5,
			"start":	function(event, ui) {
				thisClass.menu.hide();
			},
			"stop":		function(event, ui) {
				Content.selectionRef = thisClass;
				WB_Element.selected = {};
				$(".ui-selected", this).each(function() {
					$(this).trigger("mouseover");
					var o = $(this).wbGetClassInstance();
					WB_Element.selected[o.id] = o;
				});
			},
			"unselected":function(event, ui) {
				$(ui.unselected).trigger("mouseout");
				var o = $(ui.unselected).wbGetClassInstance();
				WB_Element.selected[o.id] = null;
				delete WB_Element.selected[o.id];
			}
		});*/

		/*this.elem.bind("click", function() {
			ContextMenu.hideAllMenus();
			WB_Element.unselectAll();
		});*/

		if (!Content.locTip) {
			Content.locTip = $('<div class="wb_loctip"></div>');
			Content.locTip.css("display", "none");
			$(document.body).ready(function() {
				$(document.body).append(Content.locTip);
			});
		}

		this.mode = ModeManager.MODE_DESKTOP;
		this.modes = {}; if (data.modes) for (var k in data.modes) { this.modes[k] = new Content.Mode(data.modes[k]); }

		this.updateStyle();

		this.initContextMenu(this.activeZone);
	};
	
	Content.prototype.setLocked = function(locked) {
		this.locked = locked ? true : false;
		if (this.locked) {
			if (!this.lock) {
				this.lock = $('<div class="wb_block_lock"></div>');
				$('#site').append(this.lock);
			}
			this.setSize(null, this.elem.height());
		} else {
			if (this.lock) {
				this.lock.detach();
				this.lock.remove();
				this.lock = null;
			}
		}
		this.elem.css({ opacity: (this.locked ? 0.2 : 1) });
	};

	/**
	* Switch to mode (one of ModeManager.MODE_* constants)
	* @param {String} mode
	*/
	Content.prototype.switchMode = function(mode) {
		if (!mode) return;
		if (!(this.mode in this.modes)) this.modes[this.mode] = new Content.Mode();
		this.modes[this.mode].store(this);
		if (this.mode === mode) return;
		if (!(mode in this.modes)) {
			this.modes[mode] = new Content.Mode();
			if (ModeManager.MODE_DESKTOP in this.modes) this.modes[mode].copy(this.modes[ModeManager.MODE_DESKTOP]);
		}
		this.modes[mode].applyTo(this);
		this.mode = mode;
	};

	/**
	 * Destroy this object
	 */
	Content.prototype.__destruct = function() {
		var list = this.getElements();
		for (var lid in list) {
			this.removeElement(list[lid], true);
			if (typeof(list[lid].__destruct) === "function") {
				list[lid].__destruct();
			}
			list[lid] = null;
		}
		if (this.lock) {
			this.lock.detach();
			this.lock.remove();
			this.lock = null;
		}
	};

	/**
	 * Serialize this container
	 * @return {Object}
	 */
	Content.prototype.serialize = function() {
		this.switchMode(this.mode);
		this.modes[this.mode].store(this);
		var m = this.modes[ModeManager.MODE_DESKTOP].serialize();
		var modes = {}; for (var k in this.modes) { modes[k] = this.modes[k].serialize(); }
		return {
			"class": "Content",
			"id": this.id,
			"isCommon": false,
			content: {
				background: this.background,
				blockPadding: this.blockPadding
			},
			height: m.height,
			modes: modes
		};
	};

	/**
	 * Get element by id
	 * @param id element id
	 * @return element
	 */
	Content.prototype.getElement = function(id) {
		var list = this.getElements();
		for (var i = 0; i < list.length; i++) {
			if (list[i].id == id) return list[i];
		}
		return null;
	};

	/**
	 * Get content elements
	 * @return array of elements
	 */
	Content.prototype.getElements = function() {
		var list = [];
		this.container.children(".wb_element").each(function() {
			var inst = $(this).wbGetClassInstance();
			if (!inst) return;
			list[list.length] = inst;
		});
		return list;
	};

	/**
	 * Add element to this container
	 * @param elm element to add
	 * @param noZReset no z-index sorting
	 * @returns true on success else false
	 */
	Content.prototype.addElement = function(elm, noZReset) {
		var elem = null;
		if (elm && elm instanceof WB_Element) {
			elem = elm;
		} else if ($(elm).size() > 0 && (elm = $(elm).wbGetClassInstance()) && (elm instanceof WB_Element)) {
			elem = elm;
		}
		if (!elem) return false;
		var parent = elem.getParent();
		if (!parent || parent.id != this.id) {
			if (parent) {
				parent.removeElement(elem);
			}
			this.container.append(elem.elem);
			elem.setParent(this);
			elem.setZIndex(this.getValidZIndex(elem.getZIndex()));
			this.zLayers["z" + elem.getZIndex()] = true;
		}
		if (!noZReset) this.changeElementLayer();
		this.updateSize();
		elem.fitToParent();

		return true;
	};

	/**
	 * Remove element from this container
	 * @param elm element to remove
	 * @param noSizeUpdate if true content size will not be updated
	 * @returns true on success else false
	 */
	Content.prototype.removeElement = function(elm, noSizeUpdate) {
		var elem = null;
		if (elm && elm instanceof WB_Element) {
			elem = elm;
		} else if ($(elm).size() > 0 && (elm = $(elm).wbGetClassInstance()) && (elm instanceof WB_Element)) {
			elem = elm;
		}
		if (!elem) return false;
		elem.elem.detach();
		elem.setParent(null);
		if (!noSizeUpdate) {
			this.changeElementLayer();
			this.updateSize();
		}
		return true;
	};

	/**
	 * Get unused zIndex
	 * @param zIndex try to find index as close as this
	 * @param topMost get zIndex to be on to
	 * @return zIndex
	 */
	Content.prototype.getValidZIndex = function(zIndex, topMost) {
		var i = 0;
		topMost = (topMost || isNaN(parseInt(zIndex, 10)) || parseInt(zIndex, 10) <= 1);
		if (topMost) {
			var maxIdx = 2;
			for (var k in this.zLayers) {
				var idx = parseInt(k.substring(1), 10);
				if (isNaN(idx)) idx = 0;
				if (idx > maxIdx) maxIdx = idx;
			}

			i = maxIdx + 1;
		} else {
			i = zIndex*1 + 2;
			if (i < 2) i = 2;
			while (this.zLayers["z" + i] && i < 10000) i++;
		}
		return i;
	};

	/**
	 * Change element layer (zIndex)
	 * @param elem element as WB_Element instance
	 * @param dir direction to change layer to
	 */
	Content.prototype.changeElementLayer = function(elem, dir) {
		var list = this.getElements(), i, indexes = [], idx;
		list.sort(function(a, b) { return (a.getZIndex() - b.getZIndex()); });
		for (i = 0; i < list.length; i++) {
			indexes.push(list[i].getZIndex());
		}
		if (elem) {
			idx = -1;
			for (i = 0; i < list.length; i++) {
				if (list[i].id == elem.id) {
					idx = i;
					break;
				}
			}
			if (idx < 0) return;
			var elm = list.splice(idx, 1)[0];
			if (dir === "top" && idx < list.length) {
				list.push(elm);
			} else if (dir === "bottom" && idx > 0) {
				list.unshift(elm);
			} else if (dir === "up" && idx < list.length) {
				list.splice(idx + 1, 0, elm);
			} else if (dir === "down" && idx > 0) {
				list.splice(idx - 1, 0, elm);
			}
		}

		this.zLayers = {};
		var off = 0;
		for (i = 0; i < list.length; i++) {
			idx = parseInt(indexes[i], 10);
			if (i === 0 && idx < 2) off = 2 - idx;
			idx += off;
			list[i].setZIndex(idx);
			this.zLayers["z" + idx] = true;
		}
	};

	/**
	 * Set element size
	 * @param width width in pixels
	 * @param height height in pixels
	 */
	Content.prototype.setSize = function(width, height) {
		if (width) {
			$(this.elem).css({"width": width + "px", "minWidth": width + "px"});
		}
		if (height) {
			$(this.elem).css({"height": height + "px", "minHeight": height + "px"});
			if (this.lock) {
				this.lock.css({'height': height + 'px', 'top': (this.elem.offset().top - wb_builder.head.height() - 1) + 'px'});
			}
			//this.container.css("height", (height + 100) + "px");
		}
	};

	/**
	 * Get element width in pixels
	 * @returns width
	 */
	Content.prototype.getWidth = function() {
		return this.elem.width();
	};

	/**
	 * Get element height in pixels
	 * @returns height
	 */
	Content.prototype.getHeight = function() {
		return this.elem.height();
	};

	/**
	 * Get element bounds in pixels
	 * @param asArray set to true, to return as array instead of object
	 * @returns object = {}
	 */
	Content.prototype.getBounds = function(asArray) {
		var o = this.elem.position();
		// var h = this.getCalculatedHeight();
		var b = {
			left: o.left,
			top: o.top,
			width: this.elem.width(),
			// height: h,
			height: this.elem.height(),
			left1: o.left,
			top1: o.top,
			left2: o.left + this.elem.width(),
			// top2: o.top + h
			top2: o.top + this.elem.height()
		};
		if (asArray)
			return [ b.left, b.top, b.left2, b.top2 ];
		return b;
	};

	/**
	 * Fit elements to this content block
	 * @param {Boolean} force
	 */
	Content.prototype.fitElements = function(force) {
		var list = this.getElements(), tmpIgnoreParentBounds;
		for (var i = 0; i < list.length; i++) {
			if (force) {
				tmpIgnoreParentBounds = list[i].ignoreParentBounds;
				list[i].ignoreParentBounds = false;
			}
			list[i].fitToParent();
			if (force) {
				list[i].ignoreParentBounds = tmpIgnoreParentBounds;
			}
		}
	};

	/**
	 * Update content size
	 */
	Content.prototype.updateSize = function() {
		if (this.isFlexible) {
			var h = 0;
			this.container.children().each(function() {
				var elem = $(this).wbGetClassInstance();
				if (!elem || elem.isHidden() || elem.isHidden(true)) return true;
				var b = elem.getBounds();
				h = Math.max(h, b.top2);
			});

			if (h < this.minHeight) h = this.minHeight; // min height

			this.setSize(null, h + this.blockPadding);
			
		}
		if (this.bodyInstance) this.bodyInstance.updateSize(this);

		if (wb_builder.showLayout) {
			wb_builder.highlightLayout(true);
		}
	};
	
	Content.prototype.getCalculatedHeight = function() {
		var h = 0;
		this.container.children().each(function() {
			var elem = $(this).wbGetClassInstance();
			if (!elem || elem.isHidden() || elem.isHidden(true)) return true;
			var b = elem.getBounds();
			h = Math.max(h, b.top2);
		});
		return h;
	};

	/**
	 * Update style from properties to elements
	 */
	Content.prototype.updateStyle = function() {
		var bg = this.background;
		var css = $.extend(true, {}, bg.css);
		if (css.background && bg.image && bg.image !== "none") {
			css.background = css.background.replace(/url\([^\)]+\)/i, 'url("' + wb_builder.makeLocalUrl(bg.image) + '")');
		}
		this.elem.css(css);
		if (this.isFlexible) {
			this.elem.css({ padding: "0 0 " + this.blockPadding + "px 0" });
		}
	};

	/**
	 * @deprecated => routed to site.changeBackground()
	 */
	Content.prototype.changeProperties = function() {
		var t = {
			wb_header: 'top',
			wb_main: 'middle',
			wb_footer: 'bottom'
		};
		wb_builder.site.changeBackground(t[this.id]);
		return false;
	};

	/**
	 * Add paste to context menu
	 * @param {Object} menu
	 * @param {Object} elem
	 * @param {Boolean} update
	 */
	Content.prototype.addPaste = function(menu, elem, update) {
		if (!update) {
			menu.addItem("paste", __("Paste"), null, null, null, null, "icon-download-alt");
		}
		else {
			var thisClass = this;
			var item = menu.getItem('paste');
			var objs = wb_builder.getClipboard();
			var subs = menu.hasSubmenu('paste');
			//paste text callback
			var pasteTextCb = function(e) {
				//@FIXME reikia aptvarkyt o_0 ..o siaip veikia
				if (thisClass.pasteDialog) {
					delete thisClass.pasteDialog;
					thisClass.pasteDialog = null;
				}
				thisClass.pasteDialog = new PasteDialog(
					__("Paste")
				);
				thisClass.pasteDialog.addButton(__("Cancel"));
				thisClass.pasteDialog.addButton(__("Paste"), function() {
					var info = thisClass.pasteDialog.getInfo();
					var pos = {left: menu.pageX, top: menu.pageY};
					if (info.text) {
	//						info.text = $(info.text).text();
						info.text = '<p class="wb-stl-normal">' + info.text.replace(/\n/g, '<br />') + '</p>';
						//inside element
						if (info.inside && elem && elem.className === "TextArea") {
							elem.textDiv.html(elem.textDiv.html() + info.text);
							elem.onResize();
	//							elem.fitToParent();
						}
						//paste new element
						else {
							var itm = new WB_TextArea({content: {text:info.text}});
							var offset = thisClass.elem.offset(); 
							itm.setLocation(pos.left - offset.left, pos.top - offset.top);
							thisClass.addElement(itm);
						}
					}


					thisClass.pasteDialog.hide();
				}, true);


				thisClass.pasteDialog.showCheck((elem && elem.className === "TextArea"));

				thisClass.pasteDialog.show();
				return false;
			};

			//add submenu
			if (objs && !subs) {
				var pasteElementCb = function(e) {
					var pos = {left: menu.pageX, top: menu.pageY};
					var objs = wb_builder.getClipboard();

					for (var i = 0; i < objs.length; i++) {
						var obj = objs[i];
						obj.id = null;
						obj._copy = true; // indicate that this is copy
						obj.isCommon = false;
						obj.includePages = null;
						var cls = obj["class"] ? wb_builder.getClassByName(obj["class"]) : null;
						if (!cls) return;
						var itm = new cls(obj);

						var offset = thisClass.elem.offset(); 
						itm.setLocation(pos.left - offset.left, pos.top - offset.top);
						thisClass.addElement(itm);
					}
				};
				$(item).unbind("click");
				menu.setAction('paste', function(e, g) {
					pasteElementCb(e);
				}, true);

				var pasteMi = new ContextMenu();
				pasteMi.addItem("pasteElement", __("Paste Element"), function(e) {
					pasteElementCb(e);
				}, null, null, null, "icon-picture");
				pasteMi.addItem("pasteText", __("Paste Text"), function(e) {
					pasteTextCb(e);
				}, null, null, null, "icon-text-height");

				menu.setSubmenu('paste', pasteMi);
			}
			//no submenu
			else if (!subs && !$(item).data('pre')) {
	//			menu.removeSubmenu('paste');
				menu.setAction('paste', function() {
					pasteTextCb();
				});
				$(item).data('pre', true);
			}


			/*menu.setAction('paste', function() {

			});
			menu.addItem("paste", __("Paste"), function(e) {
				var objs = wb_builder.getClipboard();
				if (!objs) return;
				var pos = {left: e.pageX, right: e.pageY};

				for (var i = 0; i < objs.length; i++) {
					var obj = objs[i];
					obj.id = null;
					var cls = obj["class"] ? wb_builder.getClassByName(obj["class"]) : null;
					if (!cls) return;
					var itm = new cls(obj);

					var offset = thisClass.elem.offset(); 
					itm.setLocation(pos.left - offset.left, pos.top - offset.top);
					thisClass.addElement(itm);
				}
			}, null, null, null, "icon-download-alt");*/
		}
	};

	Content.prototype.initContextMenu = function(elem) {
		var thisClass = this;
		this.menu = new ContextMenu(this.id + "_contextmenu");

		if (WB_DEBUG_MODE) {
			this.menu.addItem("dbg_clsTitle", "Content", function() {}, true, true);
		}

		this.pagesMenu = new ContextMenu();
		this.menu.addItem('goTo', __("Go to page"), this.pagesMenu,
			null, null, null, "icon-folder-open");
		this.pagesMenu.setHeight(200);
		this.menu.addSeparator();

		this.addPaste(this.menu);

		this.menu.addSeparator();

		this.menu.addItem("comConfig", __("Properties"), function() {
			thisClass.changeProperties();
		}, null, null, null, "icon-cog");

		this.menu.bind(elem, true);
		this.menu.onShow = function() {
			thisClass.updateContextMenu();
		};
	};

	Content.prototype.updateContextMenu = function() {
		this.addPaste(this.menu, null, true);

		this.pagesMenu.removeAllItems();
		for (var pid in wb_builder.site.pages) {
			var p = wb_builder.site.pages[pid];
			this.pagesMenu.addItem("pages_menu_item_" + p.id, __tr(p.title, wb_builder.site.getLastDefLang()), function(e, p) {
				wb_builder.goToPage(p.id);
			}, (wb_builder.pageId === parseInt(p.id, 10)), false, p, "icon-file");
		}
	};

	Content.Mode = (function() {
		/**
		 * @param {Content.Mode} mode
		 * @param {Object} data
		 */
		var applyData = function(mode, data) {
			mode.height = data.height;
		};

		/**
		 * @param {Object} data
		 * @class Content.Mode
		 */
		var self = function(data) { if (data) applyData(this, data); };
		/** @type Number */
		self.prototype.height = 100;
		/** @param {Content.Mode} mode */
		self.prototype.copy = function(mode) {
			applyData(this, mode);
		};
		/** @param {Content} elem */
		self.prototype.store = function(elem) {
			applyData(this, elem.getBounds());
		};
		/** @param {Content} elem */
		self.prototype.applyTo = function(elem) {
			//elem.height = this.height;
		};
		/** @return {Object} */
		self.prototype.serialize = function() {
			return { height: this.height };
		};

		return self;
	})();
	
	return Content;
});
;

/** WB Element **/

define('Element', [
	'Service',
	'Content',
	'ModeManager',
	'ContextMenu',
	'ElementBox',
	'Dialog',
	'PropertyDialog'
], function(Service, Content, ModeManager, ContextMenu, ElementBox, Dialog, PropertyDialog) {
	'use strict';
	
	/**
	 * Base Element class
	 * @param {Object} data
	 * @param {boolean} initial if true then it is created on page load (or some other mass create operation)
	 * @param {boolean} virtual if true will not show options tab in properties dialog and shold not render dom nodes and limit dom event usage
	 * @constructor
	 */
	var Element = function(data, initial, virtual) { if (data) this.__construct(data, initial, virtual); };

	wb_builder.registerClass("Element", Element);

	Element.httpProtocol = ((location.protocol && location.protocol === 'https:') ? 'https' : 'http');
	Element.lastIndex = 0;
	Element.hotKeysInitiated = false;
	Element.hotKeysDisabled = false;
	Element.hotKeysCallback = function(e) {
		if (Element.hotKeysDisabled) return;
		if ($(e.target).is("input") || $(e.target).is("textarea")) return;
		var id, elem, key = null, parent = null;
		if (e.data.hotKey === "up") {
			key = {left:  0, top: -1};
		} else if (e.data.hotKey === "down") {
			key = {left:  0, top: +1};
		} else if (e.data.hotKey === "left") {
			key = {left: -1, top:  0};
		} else if (e.data.hotKey === "right") {
			key = {left: +1, top:  0};
		} else if (e.data.hotKey === "shift+up") {
			key = {left:  0, top: -10};
		} else if (e.data.hotKey === "shift+down") {
			key = {left:  0, top: +10};
		} else if (e.data.hotKey === "shift+left") {
			key = {left: -10, top:  0};
		} else if (e.data.hotKey === "shift+right") {
			key = {left: +10, top:  0};
		} else if (e.data.hotKey === "del") {
			for (id in Element.selected) {
				elem = Element.selected[id];
				if (elem.mode === ModeManager.MODE_PHONE || elem.mode === ModeManager.MODE_TABLET) {
					elem.hide(true, true);
					continue;
				} else if (elem.mode === ModeManager.MODE_TV) {
					continue;
				}
				if (elem.isLocked) {
					elem.isLockedOpts.highlight();
					continue;
				}
				wb_builder.pageModified = true;
				if (wb_builder.site.languages.length)
					elem.setVisible(wb_builder.site.currSelLang, false);
				else
					elem.remove();
			}
		}

		if (!key) return;
		for (id in Element.selected) {
			elem = Element.selected[id];
			if (!parent) parent = elem.getParent();
			var loc = elem.getLocation();
			elem.setLocation(loc.left + key.left, loc.top + key.top);
		}
		if (parent) parent.updateSize();
		for (id in Element.selected) {
			elem = Element.selected[id];
			elem.fitToParent();
		}
		e.preventDefault();
		e.stopPropagation();
	};
	Element.locTip = null;
	Element.selected = {};
	Element.unselectAll = function() {
		for (var id in Element.selected) {
			Element.selected[id].setSelected(false);
		}
		Element.selected = {};
	};
	Element.prototype.system = wb_builder;
	Element.prototype.elem = null;
	Element.prototype.parent = null;
	Element.prototype.cover = null;
	Element.prototype.id = null;
	Element.prototype.container = null;
	Element.prototype.controls = null;
	Element.prototype.isControlsVisible = true;
	Element.prototype.debug = false;
	Element.prototype.zIndex = 0;
	Element.prototype.oPos = null;
	/** @type {PropertyDialog} */
	Element.prototype.comDialog = null;

	/** @type jQuery */
	Element.prototype.editBtn = null;
	Element.prototype.moveBtn = null;
	Element.prototype.langLabel = null;
	Element.prototype.seResizeBtn = null;

	Element.prototype.hidden = false;
	Element.prototype.hiddenResp = false;
	Element.prototype.index = 0;
	Element.prototype.menu = null;
	Element.prototype._menu = null;
	Element.prototype.isCommon = false;
	Element.prototype.hlight = null;
	Element.prototype.hlight2 = null;
	Element.prototype.selection = null;
	Element.prototype.fadeEvnt = null;
	Element.prototype.isResizable = true;
	Element.prototype.isMovable = true;
	Element.prototype.isEditable = true;
	Element.prototype.isRemovable = true;
	Element.prototype.hideBorder = false;
	Element.prototype.ctrlOpacity = 1;
	Element.prototype.comDlg = null;
	Element.prototype.noPhotoBg = "#ffffff url(img/ico_tb_picture.png)" +
		" no-repeat scroll center center";
	Element.prototype.noPhotoMsg = null;
	Element.prototype.includePages = null;
	Element.prototype.contextMenuFirstIndex = 0;
	Element.prototype.isLocked = false;
	Element.prototype.isLockedOpts = null;
	Element.prototype.translations = null;
	Element.prototype.dropAccepted = true;
	Element.prototype.dragStartPos = null;
	/**
	 * If true will not show options tab in properties dialog
	 * and shold not render dom nodes and limit dom event usage.
	 * @type {boolean}
	 */
	Element.prototype.virtualElement = false;
	/** @type Boolean */
	Element.prototype.ignoreParentBounds = false;
	/** @type Object */
	Element.prototype.modes = null;
	/** @type String */
	Element.prototype.mode = null;
	/** @type Object */
	Element.prototype.modeContextOk = null;
	/** @type String */
	Element.prototype.anchor = null;

	/**
	 * Constructs element from serialized object
	 * @param data serialized object = { class: ..., id: ..., parentId: ..., x: ..., y: ..., width: ..., height: ..., zIndex: ..., content: ... }
	 * @param {boolean} initial if true then it is created on page load (or some other mass create operation)
	 * @param {boolean} virtual if true will not show options tab in properties dialog and shold not render dom nodes and limit dom event usage
	 */
	Element.prototype.__construct = function(data, initial, virtual) {
		this.virtualElement = (virtual ? true : false);
		this.system = wb_builder;
		var thisClass = this;
		var _data = (typeof(data) === "object") ? data : {};

		if (!Element.hotKeysInitiated) {
			Element.hotKeysInitiated = true;
			wb_builder.addHotKey("left", Element.hotKeysCallback);
			wb_builder.addHotKey("right", Element.hotKeysCallback);
			wb_builder.addHotKey("up", Element.hotKeysCallback);
			wb_builder.addHotKey("down", Element.hotKeysCallback);
			wb_builder.addHotKey("shift+left", Element.hotKeysCallback);
			wb_builder.addHotKey("shift+right", Element.hotKeysCallback);
			wb_builder.addHotKey("shift+up", Element.hotKeysCallback);
			wb_builder.addHotKey("shift+down", Element.hotKeysCallback);
			wb_builder.addHotKey("del", Element.hotKeysCallback);
		}
		if (!Element.locTip) {
			Element.locTip = $('<div class="wb_loctip"></div>');
			Element.locTip.css("display", "none");
			$(document.body).ready(function() {
				$(document.body).append(Element.locTip);
			});
		}

		this.includePages = (_data.includePages && typeof(_data.includePages) === "object")
			? _data.includePages : {};

		if (_data.element && typeof(_data.element) === 'object') {
			this.elem = data.element;
		} else {
			this.elem = $('<div></div>');
		}

		this.elem.addClass("wb_element");

		this.elem.wbSetClassInstance(this);
		this.index = Element.lastIndex;
		this.id = "wb_element_instance" + (Element.lastIndex++);

		this.controls = $('<div class="wb_controls"></div>');
		this.editBtn = $('<div class="wb_edit_btn"><span class="glyphicon glyphicon-pencil"></span></div>');
		this.moveBtn = $('<div class="wb_move_btn"><span class="glyphicon glyphicon-move"></span></div>');
		//var seResizeBtn = $('<div class="wb_resize_se_btn"></div>');
		this.controls.append('<div class="wb_elem_outline"></div><div class="wb_selection"></div><div class="wb_selection2"></div>');
		this.cover = $('<div class="wb_cover"></div>');
		this.controls.append(this.cover);
		this.controls.append(this.editBtn);
		this.controls.append(this.moveBtn);
		//this.elem.append(seResizeBtn);
		this.elem.append(this.controls);

		this.container = $('<div class="wb_content"></div>');
		this.elem.append(this.container);

		if( !this.isEditable ) {
			this.editBtn.css("display", "none");
			if (this.langLabel) this.langLabel.css("right", "-1px");
		}

		this.elem.draggable({
			//containment: $("#site"),
			distance: 3,
			cancel: this.container,
			start: function(e, ui) {
				thisClass.dropAccepted = false;
				thisClass.dragStartPos = $.extend({}, thisClass.getLocation());
				if (!thisClass.isSelected()) {
					for (var id in Element.selected) {
						Element.selected[id].setSelected(false);
					}
					Element.selected = {};
					thisClass.setSelected(true);
				}
				ContextMenu.hideAllMenus();
				if (wb_builder.snapSize > 1) {
					var loc = thisClass.getLocation();
					$(this).data("draggable").offset.click.left += (loc.left - wb_builder.gridSize(loc.left));
					$(this).data("draggable").offset.click.top += (loc.top - wb_builder.gridSize(loc.top));
				}
				thisClass.dragSelected("start");
				Element.locTip.css({
					display: "block",
					left: (e.pageX - 90) + "px",
					top: e.pageY + "px"
				});
				var k, el, selElems = [];
				for (k in Element.selected) {
					el = Element.selected[k];
					if (el.isLocked) continue;
					selElems.push({el: el, loc: el.getLocation()});
				}
				//selElems.push({el: thisClass, loc: thisClass.getLocation()});
				var historyFunc = null;
				wb_builder.historyAdd(selElems, historyFunc = function(selElems, isLast) {
					var i, el, selElems2 = [];
					if (isLast) {
						for (i = 0; i < selElems.length; i++) {
							el = selElems[i];
							selElems2.push({el: el.el, loc: el.el.getLocation()});
						}
						wb_builder.historyAdd(selElems2, historyFunc);
					}
					for (i = 0; i < selElems.length; i++) {
						el = selElems[i];
						el.el.setLocation(el.loc.left, el.loc.top);
						el.el.onResize();
					}
				});
			},
			drag: function(e, ui) {
				thisClass.dragSelected(null);
				Element.locTip.html(Math.round(ui.position.left) + " &times; " + Math.round(ui.position.top));
				Element.locTip.css({ left: (e.pageX - 90) + "px", top: e.pageY + "px" });
			},
			stop: function(e, ui) {
				if (wb_builder.snapSize > 1 && !thisClass.isHidden()) {
					var loc = thisClass.getLocation();
					thisClass.setLocation(
						ui.position.left = wb_builder.gridSize(loc.left),
						ui.position.top = wb_builder.gridSize(loc.top)
					);
				}
				if (!thisClass.isHidden()) thisClass.onDrag();
				//thisClass.updateContainment();
				thisClass.dragSelected("stop");
				Element.locTip.css({ display: "none", left: "0px", top: "0px" });
			}
		});
		var opts; this.initResizable(opts = {
			//autoHide: true,
			//containment: "parent",
			//grid: [wb_builder.snapSize,wb_builder.snapSize],
			//handles:	"se e s",
			//fixresize: true,
			minWidth:	64,
			minHeight:	64,
			start: function(e, ui) {
				thisClass.onStartResize(ui);
				if (wb_builder.snapSize > 1) {
					var sz = thisClass.getSize();
					thisClass.setSize(
						ui.originalSize.width = wb_builder.gridSize(sz.width),
						ui.originalSize.height = wb_builder.gridSize(sz.height)
					);
				}
				Element.locTip.css({
					display: "block",
					left: (e.pageX + 10) + "px",
					top: e.pageY + "px"
				});
				ContextMenu.hideAllMenus();
				var historyFunc = null;
				wb_builder.historyAdd(thisClass.getSize(), historyFunc = function(data, isLast) {
					if (isLast) {
						wb_builder.historyAdd(thisClass.getSize(), historyFunc);
					}
					thisClass.setSize(data.width, data.height);
					thisClass.onResize();
				});
			},
			resize: function(e, ui) {
				thisClass.updateContentSize(ui);
				Element.locTip.html(Math.round(ui.size.width) + " &times; " + Math.round(ui.size.height));
				Element.locTip.css({
					left: (e.pageX + 10) + "px",
					top: e.pageY + "px"
				});
				if (ui.size.width < 74 || ui.size.height < 36) {
					if (thisClass.langLabel) thisClass.langLabel.css({ left: "-30px", right: "", top: "-59px" });
					thisClass.editBtn.css({ left: "-30px", right: "" });
					thisClass.moveBtn.css({ left: "-30px", top: "-30px" });
				} else {
					if (thisClass.langLabel) thisClass.langLabel.css({ left: "", right: "24px", top: "-1px" });
					thisClass.editBtn.css({ left: "", right: "-1px" });
					thisClass.moveBtn.css({ left: "-1px", top: "-1px" });
				}
			},
			stop: function(e, ui) {
				thisClass.onStopResize(ui);
				if (e.skipStopEvent) return; // set in WB_Languages onResize method
				if (wb_builder.snapSize > 1) {
					var sz = thisClass.getSize();
					thisClass.setSize(
						wb_builder.gridSize(sz.width),
						wb_builder.gridSize(sz.height)
					);
				}
				thisClass.onResize();
				Element.locTip.css({display: "none", left: "0px", top: "0px"});
			}
		});
		this.elem.resizable(opts);
		this.seResizeBtn = this.elem.children(".ui-resizable-handle");

		this.elem.hover(function() {
			if (thisClass.elem.hasClass("ui-selected")) {
				thisClass.setControlsVisible(true);
				return;
			}
			thisClass.controls.stop(true, false).animate({opacity: 1}, 300);
			if (thisClass.isControlsVisible) {
				if (thisClass.langLabel) thisClass.langLabel.stop(true, false).animate({opacity: 1}, 300);
				thisClass.editBtn.stop(true, false).animate({opacity: 1}, 300);
				thisClass.moveBtn.stop(true, false).animate({opacity: 1}, 300);
			}
			thisClass.seResizeBtn.stop(true, false).animate({opacity: 1}, 300);
		}, function() {
			if (thisClass.elem.hasClass("ui-selected")) {
				thisClass.setControlsVisible(true);
				return;
			}
			if (!_data.isMenu)
				thisClass.controls.stop(true, false).delay(500).animate({opacity: 0.3}, 300);
			if (thisClass.isControlsVisible) {
				if (thisClass.langLabel) thisClass.langLabel.stop(true, false).delay(500).animate({opacity: 0}, 300);
				thisClass.editBtn.stop(true, false).delay(500).animate({opacity: 0}, 300);
				thisClass.moveBtn.stop(true, false).delay(500).animate({opacity: 0}, 300);
			}
			thisClass.seResizeBtn.stop(true, false).delay(500).animate({opacity: 0}, 300);
			//thisClass.menu.hide();
		});
		this.elem.bind("click", function(e) {
			thisClass.onClick(e);
			e.stopPropagation();
			return false;
		});

		// deserialize

		this.isCommon = _data.isCommon ? true : false;
		this.isLocked = _data.isLocked ? true : false;

		var width = _data.width ? (_data.width * 1) : 200;
		var height = _data.height ? (_data.height * 1) : 200;

		this.setSize(width, height);

		var left = _data.x ? (_data.x * 1) : 0;
		var top = _data.y ? (_data.y * 1) : 0;

		this.setLocation(left, top);
		
		this.zIndex = (_data.zIndex ? (_data.zIndex * 1) : 1);
		this.elem.css("zIndex", _data.zIndex ? (_data.zIndex * 1) : 1);

		this.initContextMenu(this.editBtn);
		if (this.menu) {
			this.updateContextMenuRemove();
			this.menu.pasiveBind(this.controls);
		}

		this.updateContentSize();
		this.elem.trigger("mouseout");

		this.noPhotoBg = this.noPhotoBg.replace("url(", "url(" + wb_builder.modBaseUrl);
		this.noPhotoMsg = $('<span class="wb_caption">' + __("Double click to change properties") + '</span>');
		this.noPhotoMsg.css({
			"display": "none",
			"position": "absolute",
			"top": "50%",
			"left": "0px",
			"width": "100%",
			"margin": "20px 0px 0px 0px",
			"padding": "0px"
		});
		this.elem.append(this.noPhotoMsg);

		if (this.isLocked) this.setLocked(this.isLocked);

		if (wb_builder.isSnapping()) wb_builder.gridSetSnap(true, this);
		
		this.anchor = (data.anchor ? data.anchor : null);
		
		this.updateShow(true);
		this.mode = ModeManager.MODE_DESKTOP;
		this.modes = {}; if (data.modes) for (var k in data.modes) { this.modes[k] = this.modeClass(data.modes[k]); }
		this.modeContextOk = {comConfig: true, hideElem: true, lock: true, order: true};
	};
	
	/**
	 * Called on resizable initialisation
	 * @param {Object} options resizable options
	 */
	Element.prototype.initResizable = function(options) {
		
	};
	
	/**
	 * @param {Object} data
	 * @return {Element.Mode}
	 */
	Element.prototype.modeClass = function(data) {
		return new Element.Mode(data);
	};

	/**
	 * Switch to mode (one of ModeManager.MODE_* constants)
	 * @param {String} mode
	 * @param {Boolean} initial
	 */
	Element.prototype.switchMode = function(mode, initial) {
		if (!mode) return;
		var isNew = false;
		if (!(this.mode in this.modes)) {
			isNew = true;
			this.modes[this.mode] = this.modeClass();
		}
		if (!initial || isNew) this.modes[this.mode].store(this);
		if (this.mode === mode) return;
		if (!(mode in this.modes)) {
			this.modes[mode] = this.modeClass();
			this.modes[mode].copy((ModeManager.MODE_DESKTOP in this.modes) ? this.modes[ModeManager.MODE_DESKTOP] : this.modes[this.mode]);
		}
		this.modes[mode].applyTo(this);
		this.mode = mode;
	};
	
	Element.prototype.boxItemOptions = function() {
		return {
			title: this.getClassType(),
			text: ('#' + this.id),
			thumb: null
		};
	};
	
	/**
	 * Serialize this element
	 * @returns {Object} object = { class: ..., id: ..., parentId: ..., x: ..., y: ..., width: ..., height: ..., zIndex: ..., content: ... }
	 */
	Element.prototype.serialize = function() {
		this.switchMode(this.mode);
		this.modes[this.mode].store(this);
		var m = this.modes[ModeManager.MODE_DESKTOP].serialize();
		var modes = {}; for (var k in this.modes) { modes[k] = this.modes[k].serialize(); }
		return {
			"class": this.getClassType(), id: this.id,
			parentId: (this.parent ? this.parent.id : null),
			//x: Math.round(b.left), y: Math.round(b.top), width: Math.round(b.width), height: Math.round(b.height),
			x: m.x, y: m.y, width: m.width, height: m.height,
			anchor: this.anchor,
			zIndex: this.getZIndex(), content: null,
			isCommon: (this.isCommon ? true : false),
			includePages: this.includePages,
			isLocked: this.isLocked,
			modes: modes
		};
	};

	/**
	 * Get element class type
	 * @returns class type
	 */
	Element.prototype.getClassType = function() {
		return this.className;
	};

	/**
	 * Get class name of this element
	 * @return class name
	 */
	Element.prototype.getClassName = function() {
		return "WB_" + this.className;
	};

	/**
	 * Callback called on click event on the element
	 * @param e event object
	 */
	Element.prototype.onClick = function(e) {
		Dialog.hideEditors = true;
		Service.textArea.hideEditors();
		ContextMenu.hideAllMenus();
		if (!wb_builder.hotKeysMod.ctrl) {
			Element.unselectAll();
			this.setSelected(true);
		} else {
			this.setSelected(!this.isSelected());
		}
		if (wb_builder.isTouchDevice) this.menu.show(e);
		wb_builder.clearSelections();
	};

	/**
	 * Callback called on element drag.
	 * This method should also be called to notify element about manual move/drag.
	 * This method can be overrided to do actions on element drag, but you shuld call it from overriden method.
	 * @param onConstruct if true means it's called from constructor
	 */
	Element.prototype.onDrag = function(onConstruct) {
		this.fitToParent();
		var parent = this.getParent();
		if (parent) parent.updateSize();
		if (!onConstruct) {
			wb_builder.pageModified = true;
		}
	};

	Element.prototype.onStartResize = function(ui) {
		
	};
	
	Element.prototype.onStopResize = function(ui) {
		
	};

	/**
	 * Callback called on element resize.
	 * This method should also be called to notify element about manual resize.
	 * This method can be overrided to do actions on element resize, but you shuld call it from overriden method.
	 * @param onConstruct if true means it's called from constructor
	 */
	Element.prototype.onResize = function(onConstruct) {
		if (this.isHidden()) return;
		var parent = this.getParent();
		if (parent) parent.updateSize();
		this.fitToParent();
		if (!onConstruct) {
			wb_builder.pageModified = true;
		}
	};

	Element.prototype.setLocked = function(lock) {
		var thisClass = this;
		if (lock) {
			this.isLocked = true;
			this.elem.draggable("disable");
			if (this.isResizable) this.elem.resizable("disable");
			this.moveBtn.children(".glyphicon").removeClass("glyphicon-move");
			this.moveBtn.children(".glyphicon").addClass("glyphicon-lock");
			this.elem.css("opacity", 1);
			this.moveBtn.css({cursor: "pointer"});
			this.moveBtn.attr("data-html", true);
			this.moveBtn.attr("data-placement", "right");
			this.moveBtn.attr("data-trigger", "hover");
			this.moveBtn.attr("title", __("Unlock this element to move\n(click icon to unlock)").replace(/\n/g, '<br />'));
			this.moveBtn.tooltip({ trigger: "hover", placement: "right", html: true });
			this.isLockedOpts = {};
			this.isLockedOpts.highlight = function() {
				if (thisClass.isLockedOpts.tooltipShown) return;
				thisClass.moveBtn.tooltip("show");
				if (thisClass.isLockedOpts.timeout) clearTimeout(thisClass.isLockedOpts.timeout);
				thisClass.isLockedOpts.timeout = setTimeout(function() {
					thisClass.moveBtn.tooltip("hide");
					thisClass.isLockedOpts.tooltipShown = false;
				}, 3000);
			};
			this.moveBtn.on("mousedown", this.isLockedOpts.canceler = function(e) {
				thisClass.isLockedOpts.isDown = true;
				e.stopPropagation();
				e.preventDefault();
				return false;
			});
			this.moveBtn.on("click", this.isLockedOpts.unlocker = function() {
				thisClass.setLocked(false);
				return false;
			});
			this.editBtn.on("mousedown", this.isLockedOpts.canceler);
			this.cover.on("mousedown", this.isLockedOpts.canceler);
			this.cover.on("mouseup", this.isLockedOpts.upper = function() {
				thisClass.isLockedOpts.isDown = false;
			});
			this.cover.on("mousemove", this.isLockedOpts.mover = function() {
				if (thisClass.isLockedOpts.isDown) {
					thisClass.setSelected(true);
					thisClass.setControlsVisible(true);
					thisClass.isLockedOpts.highlight();
					thisClass.isLockedOpts.tooltipShown = true;
				}
			});
		} else {
			this.isLocked = false;
			this.elem.draggable("enable");
			if (this.isResizable) this.elem.resizable("enable");
			this.moveBtn.children(".glyphicon").removeClass("glyphicon-lock");
			this.moveBtn.children(".glyphicon").addClass("glyphicon-move");
			this.elem.css("opacity", "");
			this.moveBtn.off({
				"mousedown": this.isLockedOpts.canceler,
				"click": this.isLockedOpts.unlocker
			});
			this.editBtn.off({"mousedown": this.isLockedOpts.canceler});
			this.cover.off({
				"mousedown": this.isLockedOpts.canceler,
				"mouseup": this.isLockedOpts.upper,
				"mousemove": this.isLockedOpts.mover
			});
			this.moveBtn.css({cursor: ""});
			this.moveBtn.removeAttr("title");
			this.moveBtn.tooltip("destroy");
		}
	};

	/**
	 * Calc selected element dragging
	 * @param stage dragging stage (start - on drag start, stop - on drag stop, NULL - on drag)
	 */
	Element.prototype.dragSelected = function(stage) {
		var thisClass = this, elem = null, k;
		if (stage === "start") {
			for (k in Element.selected) {
				elem = Element.selected[k];
				if (elem.isLocked) {
					elem.setSelected(false);
				} else {
					elem.oPos = elem.getLocation();
				}
			}
		} else if (stage !== "stop") {
			var off = this.getLocation();
			off.left -= this.oPos ? this.oPos.left : 0;
			off.top -= this.oPos ? this.oPos.top : 0;
			for (k in Element.selected) {
				elem = Element.selected[k];
				if (elem.id === thisClass.id) continue;
				elem.setLocation(elem.oPos.left + off.left, elem.oPos.top + off.top);
			}
		} else if (stage === "stop") {
			var eParent = this.getParent();
			var moveList = [], movePos = [], parentList = [];
			for (k in Element.selected) {
				elem = Element.selected[k];
				if (elem.id === thisClass.id) continue;
				if (eParent && elem.getParent() && eParent.id !== elem.getParent().id) {
					moveList.push(elem);
					movePos.push(elem.getLocation());
					parentList.push(elem.getParent());
					eParent.addElement(elem);
				}
			}
			for (var i = 0; i < moveList.length; i++) {
				elem = moveList[i];
				var gpos = eParent.elem.offset();
				var epos = movePos[i];
				var gpos2 = parentList[i].elem.offset();
				elem.setLocation(gpos2.left + epos.left - gpos.left, gpos2.top + epos.top - gpos.top);
				elem.fitToParent();
			}
		}
	};

	Element.prototype.updateContentSize = function() {
	};

	/**
	 * Update containment restrictions for element
	 */
	Element.prototype.updateContainment = function() {
		var site = $("#site");
		var cont = site.offset();
		cont.right = cont.left + site.width();
		cont.bottom = cont.top + site.height();
		//this.elem.draggable("option", "containment", [cont.left, cont.top, cont.right, cont.bottom]);
		this.elem.draggable("option", "containment", $("#site"));
	};

	/**
	 * Set text to display when element is empty (when empty message is displayed)
	 * @param text message text to display
	 */
	Element.prototype.setEmtyMessageText = function(text) {
		this.noPhotoMsg.html(text);
	};

	/**
	 * Set image to display when element is empty (when empty message is displayed)
	 * Note: image url must me relative to builder module folder (ex. img/ico_tb_picture.png)
	 * @param image message image to display
	 */
	Element.prototype.setEmtyMessageImage = function(image) {
		this.noPhotoBg = this.noPhotoBg.replace(/url\([^\)]+\)/i,
				"url(" + wb_builder.modBaseUrl + image + ")");
	};

	/**
	 * Display message to inform user how to change picture
	 * @param display if true message will be displayed else hidden
	 * @param noText (optional) (default false) set true to hide text
	 */
	Element.prototype.displayEmtyMessage = function(display, noText) {
		if (display) {
			this.elem.css("background", this.noPhotoBg);
			this.noPhotoMsg.css("display", noText ? "none" : "block");
		} else {
			this.elem.css("background", "");
			this.noPhotoMsg.css("display", "none");
		}
	};

	Element.prototype.onContextMenu = function() {
		this.menu.setVisible('paste', wb_builder.getClipboard());
	};

	Element.prototype.setResizingEnabled = function(enabled, destroy) {
		if (enabled) {
			this.elem.resizable("enable");
		} else {
			this.elem.resizable("disable").fadeTo(0, 1);
			if (destroy) {
				this.isResizable = false;
				this.elem.resizable("destroy");
			}
		}
	};

	Element.prototype.setDragginEnabled = function(enabled) {
		if (this.isLocked) return;
		if (enabled) {
			this.elem.draggable("enable");
		} else {
			this.elem.draggable("disable").fadeTo(0, 1);
		}
	};

	/**
	 * Enable/Disable controls.
	 * When controls are disabled, they are invisible.
	 * @param {Boolean} enabled
	 */
	Element.prototype.setControlsEnabled = function(enabled) {
		if (enabled) {
			this.controls.stop(true, true).show();
		} else {
			this.controls.stop(true, true).hide();
		}
	};

	/**
	 * Set controls visibility
	 * @param visible visibility
	 */
	Element.prototype.setControlsVisible = function(visible) {
		if (visible) {
			this.isControlsVisible = true;
			if (this.langLabel) this.langLabel.stop(true, true).css("opacity", 1);
			this.editBtn.stop(true, true).css("opacity", 1);
			this.moveBtn.stop(true, true).css("opacity", 1);
			this.seResizeBtn.stop(true, true).css("opacity", 1);
			this.controls.stop(true, true).css("opacity", 1);
			//this.controls.stop(true, true).css("display", "block");
			this.controls.stop(true, true).css("zIndex", 10);
			this.container.stop(true, true).css("zIndex", 1);
		} else {
			this.isControlsVisible = false;
			if (this.langLabel) this.langLabel.stop(true, true).css("opacity", 0);
			this.editBtn.stop(true, true).css("opacity", 0);
			this.moveBtn.stop(true, true).css("opacity", 0);
			this.seResizeBtn.stop(true, true).css("opacity", 0);
			this.controls.stop(true, true).css("opacity", 0.3);
			//this.controls.stop(true, true).css("display", "none");
			this.controls.stop(true, true).css("zIndex", 1);
			this.container.stop(true, true).css("zIndex", 10);
		}
	};

	/**
	 * Common element properties dialog call method
	 * Note: to add element specific properties to this dialog you can override this method
	 * @param {Object} uiDef property dialog UI definition object
	 */
	Element.prototype.comProperties = function(uiDef) {
		var thisClass = this;
		var fields = null;
		if (!this.comDialog) {
			var chkFunc, baseUiDef = {
				size: {/*width: 580, height: 520, maxBodyHeight: 460, */minBodyHeight: (this.isResizable ? 330 : 220)},
				noScroll: true,
				tabs: [
					{name: __('Options'), options: true, priority: 100, children: [
						{type: 'HorizontalLayout', children: [
							{type: 'VerticalLayout', children: [
								{type: 'VerticalLayout', id: 'sizeBlock', visible: (this.isResizable), children: [
									{type: 'Label', text: __('Size')},
									{type: 'FlowLayout', verticalAlign: 'middle', children: [
										{type: 'Label', text: __('Width'), css: {marginBottom: '0px', fontWeight: 'normal'}},
										{type: 'TextField', id: 'sizeW', css: {width: 60}, styleClass: 'input-sm'},
										{type: 'Label', text: ' px', css: {marginBottom: '0px', fontWeight: 'normal'}}
									], css: (wb_builder.rtl ? {marginLeft: '30px', textAlign: 'left'} : {marginRight: '30px', textAlign: 'right'})},
									{type: 'FlowLayout', verticalAlign: 'middle', children: [
										{type: 'Label', text: __('Height'), css: {marginBottom: '0px', fontWeight: 'normal'}},
										{type: 'TextField', id: 'sizeH', css: {width: 60}, styleClass: 'input-sm'},
										{type: 'Label', text: ' px', css: {marginBottom: '0px', fontWeight: 'normal'}}
									], css: (wb_builder.rtl ? {marginLeft: '30px', marginTop: 7, textAlign: 'left'} : {marginRight: '30px', marginTop: 7, textAlign: 'right'})}
								]},
								{type: 'VerticalLayout', id: 'positionBlock', css: {marginTop: (this.isResizable ? 15 : 0)}, children: [
									{type: 'Label', text: __('Position')},
									{type: 'FlowLayout', verticalAlign: 'middle', children: [
										{type: 'Label', text: __('From Left'), css: {marginBottom: '0px', fontWeight: 'normal'}},
										{type: 'TextField', id: 'locX', css: {width: 60}, styleClass: 'input-sm'},
										{type: 'Label', text: ' px', css: {marginBottom: '0px', fontWeight: 'normal'}}
									], css: (wb_builder.rtl ? {marginLeft: '30px', textAlign: 'left'} : {marginRight: '30px', textAlign: 'right'})},
									{type: 'FlowLayout', verticalAlign: 'middle', children: [
										{type: 'Label', text: __('From Top'), css: {marginBottom: '0px', fontWeight: 'normal'}},
										{type: 'TextField', id: 'locY', css: {width: 60}, styleClass: 'input-sm'},
										{type: 'Label', text: ' px', css: {marginBottom: '0px', fontWeight: 'normal'}}
									], css: (wb_builder.rtl ? {marginLeft: '30px', marginTop: 7, textAlign: 'left'} : {marginRight: '30px', marginTop: 7, textAlign: 'right'})}
								]},
								{type: 'VerticalLayout', id: 'anchorBlock', css: {marginTop: 15}, children: [
									{type: 'Label', text: __('Anchor name')},
									{type: 'TextField', id: 'anchorName'}
								]}
							]},
							{type: 'VerticalLayout', children: [
								{type: 'Label', text: __('Show object')},
								{type: 'RadioBox', id: 'isNotCommon',  label: __('Show in current page only'), group: 'isCommon',
									click: (chkFunc = function() {
										if (fields.isSpecCommon.getValue()) {
											fields.isCommonValues.setVisible(true);
											fields.isNotCommonValues.setVisible(false);
										} else if (fields.isNotCommon.getValue()) {
											fields.isCommonValues.setVisible(false);
											if (fields.isNotCommonValues.getElem().is('.multilang')) {
												fields.isNotCommonValues.setVisible(true);
											}
										} else {
											fields.isCommonValues.setVisible(false);
											fields.isNotCommonValues.setVisible(false);
										}
									})
								},
								{type: 'CustomContainer', id: 'isNotCommonValues', styleClass: 'well wb-comproperty-show', visible: false},
								{type: 'RadioBox', id: 'isCommon',     label: __('Show in all pages'),         group: 'isCommon',
									click: chkFunc
								},
								{type: 'RadioBox', id: 'isSpecCommon', label: __('Show in a specific pages'),  group: 'isCommon',
									click: chkFunc
								},
								{type: 'CustomContainer', id: 'isCommonValues',    styleClass: 'well wb-comproperty-show', visible: false}
							]}
						]}
					]}
				],
				buttons: [
					{name: __('Cancel')},
					{name: __('Apply'), primary: true, click: function() {
						wb_builder.pageModified = true;
				
						if (thisClass.anchor) { wb_builder.site.removeAnchor(thisClass.anchor); }
						thisClass.anchor = fields.anchorName.getText();
						if (thisClass.anchor) { wb_builder.site.addAnchor(thisClass.anchor); }

						thisClass.isCommon = (fields.isCommon.getValue() || fields.isSpecCommon.getValue());

						thisClass.includePages = {};
						if (wb_builder.site.languages.length) {
							if (fields.isNotCommon.getValue()) {
								$.each(wb_builder.site.languages, function() {
									thisClass.includePages[this.code] = false;
								});
								$('input:checked', fields.isNotCommonValues.getElem()).each(function() {
									thisClass.includePages[$(this).val()] = true;
								});
							} else if (fields.isSpecCommon.getValue()) {
								var checked = $('input:checked', fields.isCommonValues.getElem());
								if (checked.size() === wb_builder.site.languages.length * Object.keys(wb_builder.site.pages).length) {
									// if all checked
									thisClass.isCommon = true;
									thisClass.includePages = {};
								} else {
									var defLangs = {};
									$.each(wb_builder.site.languages, function() {
										defLangs[this.code] = false;
									});
									checked.each(function() {
										var val = $(this).val().split('_');
										var pid = val[0], lang = val[1];
										if (pid && lang) {
											if (typeof thisClass.includePages[pid] !== 'object') {
												thisClass.includePages[pid] = $.extend({}, defLangs);
											}
											thisClass.includePages[pid][lang] = true;
										}
									});
								}
							}
						} else {
							if (fields.isSpecCommon.getValue()) {
								$('input:checked', fields.isCommonValues.getElem()).each(function() {
									thisClass.includePages[$(this).val()] = true;
								});
							}
						}

						thisClass.setLocation(fields.locX.getValue(), fields.locY.getValue());
						if (thisClass.isResizable) {
							thisClass.setSize(fields.sizeW.getValue(), fields.sizeH.getValue());
						}
						thisClass.onResize();

						if ('callbackFunc' in baseUiDef && typeof(baseUiDef.callbackFunc) === 'function') {
							baseUiDef.callbackFunc.call(this, fields);
						}

						thisClass.updateShow();
						thisClass.comDialog.hide();
					}}
				]
			};
			// TODO: do semething if needed when extending element then call parents callbackFunc if (typeof(cfb) === "function") cfb.call(this);
			var initFunc = null;
			if ((typeof uiDef === 'object') && uiDef && ('init' in uiDef) && (typeof uiDef.init === 'function')) {
				initFunc = uiDef.init;
				uiDef.init = null;
			}
			this.comDialog = new PropertyDialog(__('Properties'), Service.UIBuilder.extendDefinition(baseUiDef, uiDef));
			if (initFunc) initFunc.call(this, this.comDialog.fields);
		}
		fields = this.comDialog.fields;
		
		fields.anchorName.setText(this.anchor);
		
		var has = (Object.keys(this.includePages).length > 0);
		if (has && this.isCommon) {
			fields.isNotCommon.setValue(false);
			fields.isCommon.setValue(false);
			fields.isSpecCommon.setValue(true);
			fields.isCommonValues.setVisible(true);
			fields.isNotCommonValues.setVisible(false);
		} else if (this.isCommon) {
			fields.isNotCommon.setValue(false);
			fields.isCommon.setValue(true);
			fields.isSpecCommon.setValue(false);
			fields.isCommonValues.setVisible(false);
			fields.isNotCommonValues.setVisible(false);
		} else {
			fields.isNotCommon.setValue(true);
			fields.isCommon.setValue(false);
			fields.isSpecCommon.setValue(false);
			fields.isCommonValues.setVisible(false);
			fields.isNotCommonValues.setVisible((wb_builder.site.languages.length > 0));
		}

		fields.isNotCommonValues.getElem().empty();
		fields.isCommonValues.getElem().empty();
		
		var i, lang, langs = wb_builder.site.languages, pid, p, td, tr;
		if (langs.length) {
			var table = $('<table></table>');
			fields.isNotCommonValues.getElem().addClass('multilang').append(table);
			p = wb_builder.site.pages['#' + wb_builder.pageId];
			tr = $('<tr><td></td></tr>');
			for (i = 0; (lang = langs[i]); i++) {
				td = $('<td>' + lang.code + '</td>');
				tr.append(td);
			}
			table.append(tr);
			tr = $('<tr><td><a href="javascript:void(0)">' + __tr(p.title) + '</a></td></tr>');
			for (i = 0; (lang = langs[i]); i++) {
				td = $('<td>' +
						'<input type="checkbox" name="isNotCommonPage" />' +
					'</td>');
				td.children('input').val(lang.code);
				if (this.isVisible(lang.code)) {
					td.children('input').get(0).checked = true;
				}
				tr.append(td);
			}
			table.append(tr);

			var table2 = $('<table></table>');
			fields.isCommonValues.getElem().append(table2);
			tr = $('<tr><td></td></tr>');
			for (i = 0; (lang = langs[i]); i++) {
				td = $('<td><a href="javascript:void(0)">' + lang.code + '</a></td>');
				tr.append(td);
			}
			table2.append(tr);
			for (pid in wb_builder.site.pages) {
				p = wb_builder.site.pages[pid];
				tr = $('<tr><td><a href="javascript:void(0)">' + __tr(p.title) + '</a></td></tr>');
				for (i = 0; (lang = langs[i]); i++) {
					td = $('<td>' +
							'<input type="checkbox" name="isNotCommonPage" />' +
						'</td>');
					td.children('input').val(p.id + '_' + lang.code);
					if (this.isVisible(lang.code, p.id)) {
						td.children('input').get(0).checked = true;
					}
					tr.append(td);
				}
				table2.append(tr);
			}
			var checkboxClick = function(tbl) {
				tbl.find('tr:first').find('a').bind('click', function() {
					var thisA = $(this);
					var checkboxes = tbl.find('input[value$="_' + thisA.html() + '"]');
					var checkedLen = tbl.find('input[value$="_' + thisA.html() + '"]:checked').length;
					if (checkboxes.length > checkedLen) {
						checkboxes.each(function() { this.checked = true; });
					} else {
						checkboxes.each(function() { this.checked = false; });
					}
				});
				tbl.find('tr td:first-child a').bind('click', function() {
					var thisA = $(this);
					var tr = thisA.parent().parent();
					var checkboxes = tr.find('input');
					var checkedLen = tr.find('input:checked').length;
					if (checkboxes.length > checkedLen) {
						checkboxes.each(function() {
							this.checked = true;
						});
					} else {
						checkboxes.each(function() {
							this.checked = false;
						});
					}
				});
			};
			checkboxClick(table);
			checkboxClick(table2);
		} else {
			fields.isNotCommonValues.getElem().removeClass('multilang');
			for (pid in wb_builder.site.pages) {
				p = wb_builder.site.pages[pid];
				var li = $('<div class="checkbox"><label>' +
						'<input type="checkbox" name="isCommonPage" /> ' + __tr(p.title) +
					'</label></div>');
				li.find("input").val(p.id);
				if (this.isVisible(null, p.id)) {
					li.find("input").get(0).checked = true;
				}
				fields.isCommonValues.getElem().append(li);
			}
		}

		var loc = this.getLocation();
		fields.locX.setValue(Math.round(loc.left));
		fields.locY.setValue(Math.round(loc.top));
		if (this.isResizable) {
			var size = this.getSize();
			fields.sizeW.setValue(Math.round(size.width));
			fields.sizeH.setValue(Math.round(size.height));
		}

		if (this.mode === ModeManager.MODE_DESKTOP) {
			this.comDialog.tabbedPane.setLocked(false);
			this.comDialog.tabbedPane.setNavVisible(true);
		} else {
			this.comDialog.tabbedPane.setLocked(false);
			this.comDialog.tabbedPane.selectTab(this.comDialog.optionsTab.index());
			this.comDialog.tabbedPane.setLocked(true);
			this.comDialog.tabbedPane.setNavVisible(false);
		}
		if (this.virtualElement && this.comDialog.optionsTab) {
			this.comDialog.tabbedPane.setTabVisible(this.comDialog.optionsTab.index(), false);
		}
		
		this.comDialog.show();
		return fields;
	};

	Element.prototype.updateShow = function(onConstruct) {
		var multilang = (wb_builder.site.languages.length > 0);
		var exclude = true;
		if (multilang) {
			for (var i=0, lang; (lang = wb_builder.site.languages[i]); i++) {
				if (this.isVisible(lang.code)) {
					exclude = false;
					break;
				}
			}
		} else {
			exclude = !this.isVisible(wb_builder.site.getLastDefLang());
		}
		var hide = (multilang && !this.isVisible());
		
		if (hide && !this.isHidden()) {
			this.hide();
			if (!onConstruct) this.parent.updateSize();
		} else if (!hide && this.isHidden()) {
			this.show();
			if (!onConstruct) this.parent.updateSize();
		}

		if (exclude) this.exclude(false, onConstruct);
	};

	/**
	 * Initialize elements context menu
	 * @param elem element (button) add context menu to
	 */
	Element.prototype.initContextMenu = function(elem) {
		var thisClass = this;
		var menu = new ContextMenu("wb_element_contextmenu" + this.index);

		if (WB_DEBUG_MODE) {
			menu.addItem("dbg_clsTitle", this.getClassType(), function() {}, true, true);
			this.contextMenuFirstIndex++;
		}

		menu.addItem("copy", __("Copy"), function() {
			var obj;
			if (thisClass.isSelected()) {
				obj = [];
				thisClass.elem.parent().children(".ui-selected").each(function() {
					var elem = $(this).wbGetClassInstance();
					if (elem) obj.push(elem.serialize());
				});
				wb_builder.setClipboard(obj);
			} else {
				obj = thisClass.serialize();
				wb_builder.setClipboard([obj]);
			}
		}, null, null, null, "glyphicon glyphicon-list-alt", true);

		//paste submenu
		menu.addItem("paste", __("Paste"), null, null, null, null, "glyphicon glyphicon-download-alt");

		menu.addSeparator();

		menu.addItem("lock", __("Lock"), function() {
			wb_builder.pageModified = true;
			var lock = !thisClass.isLocked;
			if (thisClass.isSelected()) {
				for (var k in Element.selected) {
					var elem = Element.selected[k];
					if (elem) elem.setLocked(lock);
				}
			} else {
				thisClass.setLocked(lock);
			}
		}, null, null, null, "glyphicon glyphicon-lock", true);

		if (this.isMovable) {
			var orderMi = new ContextMenu();
			orderMi.addItem("indexMax", __("Bring to front"), function() {
				wb_builder.pageModified = true;
				thisClass.parent.changeElementLayer(thisClass, "top");
			}, null, null, null, "glyphicon glyphicon-arrow-up");
			orderMi.addItem("indexMin", __("Send to back"), function() {
				wb_builder.pageModified = true;
				thisClass.parent.changeElementLayer(thisClass, "bottom");
			}, null, null, null, "glyphicon glyphicon-arrow-down");
			orderMi.addItem("indexUp", __("Bring forward"), function() {
				wb_builder.pageModified = true;
				thisClass.parent.changeElementLayer(thisClass, "up");
			}, null, null, null, "glyphicon glyphicon-arrow-up");
			orderMi.addItem("indexDown", __("Send backwards"), function() {
				wb_builder.pageModified = true;
				thisClass.parent.changeElementLayer(thisClass, "down");
			}, null, null, null, "glyphicon glyphicon-arrow-down");
			menu.addItem("order", __("Order"), orderMi, null, null, null, "glyphicon glyphicon-list");
		}


		menu.addItem("remove", __("Remove"), null, null, null, null, "glyphicon glyphicon-remove", true);

		menu.addSeparator();

		menu.addItem("comConfig", __("Properties"), function() {
			thisClass.comProperties();
		}, null, null, null, "glyphicon glyphicon-cog");

		this.menu = menu;
		menu.bind(elem);
		menu.onShow = function() {
			if (!thisClass.isSelected()) {
				Element.unselectAll();
				Service.textArea.hideEditors();
				thisClass.setSelected(true);
			}
			thisClass.updateContextMenu();
		};
	};

	Element.prototype.updateContextMenuRemove = function() {
		if (!this.menu) return;
		var removeMi = null, thisClass = this;
		this.menu.removeItem('remove');
		if (wb_builder.site.languages.length) {
			removeMi = new ContextMenu();
			removeMi.menu.addClass('wb-multi-mi-remove');
			removeMi.addItem("lang_all", __("From all languages"), function() {
				wb_builder.pageModified = true;
				if (thisClass.isSelected()) {
					for (var k in Element.selected) {
						var elem = Element.selected[k];
						if (elem.isLocked) {
							elem.isLockedOpts.highlight();
							continue;
						}
						if (elem) elem.remove();
					}
				} else {
					thisClass.remove();
				}
			});
			for (var i=0, lang; (lang = wb_builder.site.languages[i]); i++) {
				removeMi.addItem("lang_" + lang.code, lang.name, function(e, lang) {
					wb_builder.pageModified = true;
					if (thisClass.isSelected()) {
						for (var k in Element.selected) {
							var elem = Element.selected[k];
							if (elem.isLocked) {
								elem.isLockedOpts.highlight();
								continue;
							}
							elem.setVisible(lang.code, false);
						}
					} else {
						// elem cia neegzistuoja
						// elem.setVisible(lang.code, false);
					}
				}, null, null, lang);
			}
		} else {
			removeMi = function() {
				wb_builder.pageModified = true;
				if (thisClass.isSelected()) {
					for (var k in Element.selected) {
						var elem = Element.selected[k];
						if (elem.isLocked) {
							elem.isLockedOpts.highlight();
							continue;
						}
						if (elem) elem.remove();
					}
				} else {
					thisClass.remove();
				}
			};
		}
		this.menu.insertItemAt(this.menu.getIndexById('order') + 2, "remove", __("Remove"), removeMi, null, null, null, "glyphicon glyphicon-remove", true);
	};

	/**
	 * Update context menu, this method called just before menu is shown
	 */
	Element.prototype.updateContextMenu = function() {
		this.menu.setName("lock", (this.isLocked ? __("Unlock") : __("Lock")));

		if (this.parent) {
			this.parent.addPaste(this.menu, this, true);
		}

		var cc = 0;
		for (var id in Element.selected) {
			cc++;
			if (cc >= 2) break;
		}
		if (cc >= 2) {
			this.menu.setMultiMode(true);
		} else {
			this.menu.setMultiMode(false);
		}
		var items = this.menu.getItems();
		for (var i = 0; i < items.length; i++) {
			if (this.mode === ModeManager.MODE_DESKTOP) {
				this.menu.setDisabled(items[i].id, false);
			} else {
				this.menu.setDisabled(items[i].id, !(items[i].id in this.modeContextOk));
			}
		}
		if (this.mode === ModeManager.MODE_PHONE || this.mode === ModeManager.MODE_TABLET) {
			if (!this.hideElemCi) {
				var thisSelf = this;
				this.hideElemCi = this.menu.insertItemAt(this.menu.getIndexById('remove') + 2, 'hideElem', __('Hide'), function() { thisSelf.hide(true, true); }, null, null, null, 'glyphicon glyphicon-eye-open', true);
			} else {
				this.menu.setVisible('hideElem', true);
			}
		} else {
			if (this.hideElemCi) this.menu.setVisible('hideElem', false);
		}
	};

	/**
	 * Set element selected/unselected
	 * @param selected
	 */
	Element.prototype.setSelected = function(selected) {
		if (selected) {
			this.elem.addClass("ui-selected");
			Element.selected[this.id] = this;
		} else {
			this.elem.removeClass("ui-selected");
			this.elem.trigger("mouseout");
			Element.selected[this.id] = null;
			delete Element.selected[this.id];
		}
	};

	/**
	 * Tests if element is selected
	 * @return selection status
	 */
	Element.prototype.isSelected = function() {
		return this.elem.hasClass("ui-selected") ? true : false;
	};

	/**
	 * Make this element fit to parent
	 * @param {Boolean} preserveAspectRatio
	 * @param {Object} oriBounds
	 */
	Element.prototype.fitToParent = function(preserveAspectRatio, oriBounds) {
		if (!this.parent || this.isHidden() || this.ignoreParentBounds) return;
		if (typeof oriBounds !== "object") oriBounds = this.getBounds();
		var px, py, b = this.getBounds();
		this.setLocation(Math.max(b.left, 0), Math.max(b.top, 0));
		b = this.getBounds();
		// modify size if it's to big to fit in content element
		var pb = {
			"width": this.parent.getWidth(),
			"height": this.parent.getHeight()
		};
		if (b.left2 > pb.width || b.top2 > pb.height) {
			var xk = (b.left2 - pb.width) / b.width;
			var yk = (b.top2 - pb.height) / b.height;
			if (xk > 0 && xk <= 0.44) {
				this.setSize(wb_builder.gridSize(b.width * (1.0 - xk), true), b.height);
			} else if (xk > 0) {
				px = Math.max(0, b.left - (b.left2 - pb.width));
				this.setLocation(wb_builder.gridSize(px, true), b.top);
				if (b.width > pb.width)
					this.setSize(wb_builder.gridSize(pb.width, true), b.height);
			}
			b = this.getBounds(); // update bounds
			if (yk > 0 && yk <= 0.44) {
				this.setSize(b.width, wb_builder.gridSize(b.height * (1.0 - yk), true));
			} else if (yk > 0) {
				py = Math.max(0, b.top - (b.top2 - pb.height));
				this.setLocation(b.left, wb_builder.gridSize(py, true));
				if (b.height > pb.height) {
					this.setSize(b.width, wb_builder.gridSize(pb.height, true));
				}
			}
		}
		if (preserveAspectRatio) {
			b = this.getBounds(); // update bounds
			//oriSize
			var pw = b.width;
			var ph = b.width * oriBounds.height / oriBounds.width;
			if (ph > b.height) {
				pw = b.height * oriBounds.width / oriBounds.height;
				ph = b.height;
			}
			this.setSize(wb_builder.gridSize(pw, true), wb_builder.gridSize(ph, true));
			var l2 = oriBounds.left + pw;
			var t2 = oriBounds.top + ph;
			px = (l2 > pb.width) ? Math.max(0, oriBounds.left - (l2 - pb.width)) : oriBounds.left;
			py = (t2 > pb.height) ? Math.max(0, oriBounds.top - (t2 - pb.height)) : oriBounds.top;
			if (px < 0) px = 0;
			if (py < 0) py = 0;
			this.setLocation(wb_builder.gridSize(px, true), wb_builder.gridSize(py, true));
		}
	};

	/**
	 * Set minimum size of element
	 * @param {Number} width
	 * @param {Number} height
	 */
	Element.prototype.setMinSize = function(width, height) {
		if (!this.isResizable) return;
		if (width) {
			$(this.elem).css("min-width", width + "px");
			$(this.elem).resizable("option", "minWidth", width);
		}
		if (height) {
			$(this.elem).css("min-height", height + "px");
			$(this.elem).resizable("option", "minHeight", height);
		}
		this.updateContentSize();
	};

	/**
	 * Exclude this element
	 * @param {Boolean} noRemove if true element wont be removed (until page reload), only added to exclude list
	 * @param {Boolean} onConstruct
	 */
	Element.prototype.exclude = function(noRemove, onConstruct) {
		if (onConstruct) {
			this.dontAdd = true;
		} else {
			var data = this.serialize();
			wb_builder.excludedElements.push(data);
			if (!noRemove) this.remove();
		}
	};

	/**
	 * Hides element
	 * @param {Boolean} responsive if false then shows element in current language (if website is multilang); if true then shows element in tablet/phone mode
	 * @param {Boolean} updateParent if true then content height will be updated
	 */
	Element.prototype.show = function(responsive, updateParent) {
		if (responsive)
			this.hiddenResp = false;
		else
			this.hidden = false;
		
		if (!this.hiddenResp && !this.hidden) {
			this.elem.show();
			if (responsive && updateParent) this.parent.updateSize();
		}
	};

	/**
	 * Hides element
	 * @param {Boolean} responsive if false then hides element from current language (if website is multilang); if true then hides element in tablet/phone mode in recycle bin
	 * @param {Boolean} updateParentSize if true then content height will be updated
	 */
	Element.prototype.hide = function(responsive, updateParentSize) {
		if (responsive) {
			this.hiddenResp = true;
			var thisSelf = this;
			if (updateParentSize) {
				ElementBox.addElement(thisSelf, function() {
					ElementBox.removeElement(thisSelf);
					thisSelf.show(true, true);
				}, thisSelf.boxItemOptions());
				this.elem.hide();
				this.parent.updateSize();
			} else {
				ElementBox.addElement(thisSelf, function() {
					ElementBox.removeElement(thisSelf);
					thisSelf.show(true);
				}, thisSelf.boxItemOptions());
				this.elem.hide();
			}
		} else {
			this.hidden = true;
			this.elem.hide();
		}
	};
	
	/**
	 * Check if element is hidden
	 * @param {Boolean} responsive 
	 */
	Element.prototype.isHidden = function(responsive) {
		if (responsive) {
			if (this.hiddenResp) return true;
			else return false;
		} else {
			if (this.hidden) return true;
			else return false;
		}
	};
	
	/**
	 * Remove this element
	 * @param noHistory if true deletion will not be recorded to history
	 */
	Element.prototype.remove = function(noHistory) {
		if (this.parent) {
			if (!noHistory) {
				var historyFunc = null;
				wb_builder.historyAdd({
					parent: this.parent,
					data: this.serialize()
				}, historyFunc = function(data, isLast) {
					var itm;
					if (data._remove) {
						itm = data.parent.getElement(data._remove);
						if (itm) itm.remove(true);
					} else {
						var cls = data.data["class"] ? wb_builder.getClassByName(data.data["class"]) : null;
						if (!cls) return;
						itm = new cls(data.data);
						itm.mode = ModeManager.getMode();
						data.parent.addElement(itm);
						if (isLast) {
							wb_builder.historyAdd({
								_remove: itm.id,
								parent: itm.getParent()
							}, historyFunc);
						}
					}
				});
			}
			if (Element.selected[this.id]) {
				Element.selected[this.id] = null;
				delete Element.selected[this.id];
			}
			ContextMenu.hideAllMenus();
			this.parent.removeElement(this);
		}
	};

	/**
	 * Remove/restore element for specified language
	 * @param {String} langCode language code
	 * @param {Boolean} visible true to display and false to remove
	 */
	Element.prototype.setVisible = function(langCode, visible) {
		var includePages = this.includePages,
			includePagesLen = (Object.keys(this.includePages).length > 0);
		var isCommonBackup = this.isCommon,
			includePagesBackup = $.extend({}, this.includePages);
		
		var i, p, historyFunc, thisClass = this;
		wb_builder.historyAdd({
			isCommon: isCommonBackup,
			includePages: includePagesBackup
		}, historyFunc = function(data, isLast) {
			if (isLast) {
				wb_builder.historyAdd({
					isCommon: thisClass.isCommon,
					includePages: thisClass.includePages
				}, historyFunc);
			}
			thisClass.isCommon = data.isCommon;
			thisClass.includePages = data.includePages;
			thisClass.updateShow();
		});
		
		
		var allLangsFalse = {}, allLangsTrue = {};
		$.each(wb_builder.site.languages, function() {
			allLangsFalse[this.code] = false;
			allLangsTrue[this.code] = true;
		});
		if (visible) {
			if (this.isCommon && includePagesLen) {
				for (i in wb_builder.site.pages) {
					p = wb_builder.site.pages[i];
					if (!includePages[p.id]) {
						includePages[p.id] = $.extend({}, allLangsFalse);
						includePages[p.id][langCode] = true;
					}
				}
			} else if (!this.isCommon) {
				if (includePagesLen) {
					includePages[langCode] = true;
				}
			}
		} else {
			if (this.isCommon && includePagesLen) {
				for (var pid in includePages) {
					if (typeof includePages[pid] === 'object') {
						includePages[pid][langCode] = false;
						if (Object.wbCompare(includePages[pid], allLangsFalse)) {
							delete includePages[pid];
						}
					} else {
						includePages[pid] = $.extend({}, allLangsTrue);
						includePages[pid][langCode] = false;
					}
				}
			} else if (this.isCommon) {
				for (i in wb_builder.site.pages) {
					p = wb_builder.site.pages[i];
					includePages[p.id] = $.extend({}, allLangsTrue);
					includePages[p.id][langCode] = false;
				}
			} else {
				if (!includePagesLen) {
					includePages = $.extend({}, allLangsTrue);
				}
				includePages[langCode] = false;
			}
		}
		this.includePages = includePages;
		
		this.updateShow();
	};

	/**
	 * If element should be displayed by isCommon and includePages parameters
	 * @param {String} langCode language code
	 * @param {Number} pageId page ID
	 */
	Element.prototype.isVisible = function(langCode, pageId) {
		var includePages = this.includePages,
			includePagesLen = Object.keys(this.includePages).length,
			defLang = wb_builder.site.getLastDefLang();
		
		langCode = langCode ? langCode : wb_builder.site.currSelLang; // site multilang
		langCode = langCode ? langCode : defLang; // site not multilang but was earlier
		pageId = pageId ? pageId : wb_builder.pageId;
		
		if (langCode) {
			if (this.isCommon && includePagesLen) {
				if (typeof includePages[pageId] === 'object') {
					if (includePages[pageId][langCode]) return true;
					if (!(langCode in includePages[pageId]) && includePages[pageId][defLang]) return true;
				} else if (includePages[pageId]) {
					return true;
				}
			} else if (this.isCommon) {
				return true;
			} else {
				if (includePagesLen) {
					if (includePages[langCode]) return true;
					if (!(langCode in includePages) && includePages[defLang]) return true;
				} else {
					if (pageId == wb_builder.pageId) return true;
				}
			}
		} else { // site not multilang and never was
			if (this.isCommon && includePagesLen) {
				if (includePages[pageId]) return true;
			} else if (this.isCommon) {
				return true;
			} else {
				if (pageId == wb_builder.pageId) return true;
			}
		}
		return false;
	};

	/**
	 * Set parent of this element
	 * @param parent element parent to set
	 */
	Element.prototype.setParent = function(parent) {
		if (!parent) {
			this.parent = null;
		} else if (parent instanceof Content) {
			this.parent = parent;
		} else {
			throw new new TypeError("parent must be of type Content");
		}
	};

	/**
	 * Set parent of this element
	 * @return parent element parent to set
	 */
	Element.prototype.getParent = function() {
		return this.parent;
	};

	/**
	 * Set element size
	 * @param width width in pixels
	 * @param height height in pixels
	 */
	Element.prototype.setSize = function(width, height) {
		if (width)
			$(this.elem).css("width", width + "px");
		if (height)
			$(this.elem).css("height", height + "px");
		this.updateContentSize();
	};

	/**
	 * Set element location
	 * @param left relative to parent left offset in pixels
	 * @param top relative to parent top offset in pixels
	 */
	Element.prototype.setLocation = function(left, top) {
		if (left !== false && typeof(left) !== "undefined" && left !== null) {
			this.elem.css("left", left + "px");
		}
		if (top !== false && typeof(top) !== "undefined" && top !== null) {
			this.elem.css("top", top + "px");
		}
	};

	/**
	 * Get element location in pixels
	 * @returns object = { left: ..., top: ... }
	 */
	Element.prototype.getLocation = function() {
		return { left: this.elem.position().left, top: this.elem.position().top };
	};

	/**
	 * Get element size in pixels
	 * @returns object = { width: ..., height: ... }
	 */
	Element.prototype.getSize = function() {
		return { width: this.elem.width(), height: this.elem.height() };
	};

	/**
	 * Get element width in pixels
	 * @returns width
	 */
	Element.prototype.getWidth = function() {
		return this.elem.width();
	};

	/**
	 * Get element height in pixels
	 * @returns height
	 */
	Element.prototype.getHeight = function() {
		return this.elem.height();
	};

	/**
	 * Get element bounds in pixels
	 * @param asArray set to true, to return as array instead of object
	 * @returns object = {}
	 */
	Element.prototype.getBounds = function(asArray) {
		if (this.isHidden()) this.elem.show();
		var o = this.elem.position();
		var o2 = this.elem.offset();
		var b = {
			left: o.left,
			top: o.top,
			width: this.elem.width(),
			height: this.elem.height(),
			left1: o.left,
			top1: o.top,
			left2: o.left + this.elem.width(),
			top2: o.top + this.elem.height(),
			pageLeft: o2.left,
			pageTop: o2.top
		};
		if (this.isHidden()) this.elem.hide();
		if (asArray)
			return [ b.left, b.top, b.left2, b.top2 ];
		return b;
	};

	/**
	 * Get zIndex of this element
	 * @return zIndex
	 */
	Element.prototype.getZIndex = function() {
		var idx = this.elem.css("zIndex");
		idx = idx ? (idx * 1) : 1;
		return idx;
	};

	/**
	 * Set zIndex of this element
	 * @param {Number} index z index to set
	 */
	Element.prototype.setZIndex = function(index) {
		var idx = index ? (index * 1) : 1;
		this.zIndex = idx;
		this.elem.css("zIndex", idx);
	};

	/**
	 * Make local system URL
	 * 
	 * @param url url to make into local URL
	 * @return local system URL
	 */
	Element.prototype.makeLocalUrl = function(url) {
		return wb_builder.makeLocalUrl(url);
	};

	/**
	 * Make relative URL
	 * 
	 * @param url url to make into relative URL
	 * @return relative url
	 */
	Element.prototype.makeRelUrl = function(url) {
		return wb_builder.makeRelUrl(url);
	};

	/**
	 * Truncate a string
	 * 
	 * @param string 
	 * @param length max length
	 * @param end append string if truncated   
	 * 
	 * @return truncated string
	 */
	Element.truncate = function(string, length, end) {
		if (typeof(string) === "object")
			string = __tr(string);
		if (typeof(length) === "undefined")
			length = 20;
		if (typeof(end) === "undefined")
			end = '...';
		var res = string.substring(0, length);
		if (res !== string)
			res += end;
		return res;
	};

	Element.prototype.onSwitchLanguage = function(langCode) {
		this.updateShow();
		this.updateLangLabel();
	};

	Element.prototype.onUpdateLanguages = function() {
		this.updateContextMenuRemove();
		this.updateLangLabel();
	};

	Element.prototype.addLangLabel = function() {
		if (!this.langLabel) {
			this.langLabel = $('<div class="wb_lang_label" style="opacity: 0;"></div>');
			this.controls.append(this.langLabel);
		}
		this.updateLangLabel();
	};

	Element.prototype.updateLangLabel = function() {
		if (this.langLabel) {
			if (wb_builder.site.languages.length) {
				this.langLabel.show();
			} else {
				this.langLabel.hide();
			}
			if (wb_builder.site.currSelLang) {
				this.langLabel.html(wb_builder.site.currSelLang);
			}
		}
	};

	/** @class */
	Element.Mode = (function() {
		/**
		 * @param {Element.Mode} mode
		 * @param {Object} data
		 */
		var applyData = function(mode, data) {
			mode.x = data.x;
			mode.y = data.y;
			mode.width = data.width;
			mode.height = data.height;
			mode.hidden = data.hidden;
		};

		/**
		 * @param {Object} data
		 * @class
		 */
		var self = function(data) { if (data) applyData(this, data); };
		/** @type Number */
		self.prototype.x = 0;
		/** @type Number */
		self.prototype.y = 0;
		/** @type Number */
		self.prototype.width = 200;
		/** @type Number */
		self.prototype.height = 200;
		/** @type Boolean */
		self.prototype.hidden = false;
		/** @param {Element.Mode} mode */
		self.prototype.copy = function(mode) {
			applyData(this, mode);
		};
		/** @param {Element} elem */
		self.prototype.store = function(elem) {
			var b = elem.getBounds();
			b.x = b.left;
			b.y = b.top;
			b.hidden = elem.isHidden(true);
			applyData(this, b);
		};
		/** @param {Element} elem */
		self.prototype.applyTo = function(elem) {
			elem.setLocation(this.x, this.y);
			elem.setSize(this.width, this.height);
			if (this.hidden) elem.hide(true); else elem.show(true);
		};
		/** @return {Object} */
		self.prototype.serialize = function() {
			return { x: Math.round(this.x), y: Math.round(this.y), width: Math.round(this.width), height: Math.round(this.height), hidden: this.hidden };
		};

		return self;
	})();
	
	Service.element = {
		unselectAll: Element.unselectAll,
		truncate: Element.truncate
	};
	
	window.WB_Element = Element;
	
	return Element;
});
;

/** WB Plugin Wrapper **/

define('PluginWrapper', ['Element'], function(Element) {
	'use strict';
	
	/**
	 * PluginWrapper class
	 * @param {Object} data
	 */
	function PluginWrapper(data) { if (data && data !== '%inherit%') this.__construct(data); }
	
	PluginWrapper._config = { icon: null, template: null, active: false };
	
	/**
	 * Register plugin
	 * @param {String} id plugin name
	 * @param {Object} def plugin definition object
	 */
	PluginWrapper.registerPlugin = function(id, def) {
		var plugin = function(data) { if (data && data !== '%inherit%') this.__construct(data); };
		plugin.prototype = new PluginWrapper();
		plugin.prototype.className = id;
		plugin.prototype._name = id;
		plugin.prototype._def = def;
		if (!('propertyDialog' in plugin.prototype._def) || (typeof plugin.prototype._def.propertyDialog !== 'object') || plugin.prototype._def.propertyDialog === null) {
			plugin.prototype._def.propertyDialog = {};
		}
		plugin.prototype._icon = PluginWrapper._config.icon; PluginWrapper._config.icon = null;
		plugin.prototype._template = PluginWrapper._config.template; PluginWrapper._config.template = null;
		def.pluginScoped = plugin.pluginScoped = (typeof def.pluginScoped === 'object') ? def.pluginScoped : {};
		window.wb_builder.registerClass(id, plugin, true, PluginWrapper._config.active);
	};
	
	PluginWrapper.prototype = new Element();

	/** @type Object */
	PluginWrapper.prototype._def = null;
	/** @type String */
	PluginWrapper.prototype._icon = null;
	/** @type String */
	PluginWrapper.prototype._template = null;
	/** @type Object */
	PluginWrapper.prototype._data = null;
	/** @type Boolean */
	PluginWrapper.prototype._rendered = false;
	/** @type jQuery */
	PluginWrapper.prototype._isolatorElem = null;
	/** @type Window */
	PluginWrapper.prototype._isolatorElemWnd = null;
	/** @type Window */
	PluginWrapper.prototype._isolatorElemReady = false;
	/** @type Object[] */
	PluginWrapper.prototype._isolatorElemListeners = null;
	/** @type boolean */
	PluginWrapper.prototype._callbackApplied = false;
	
	PluginWrapper._extendDef = function(def) {
		var newDef = {};
		for (var k in def) { newDef[k] = def[k]; }
		return newDef;
	};
	
	/**
	 * Construct Plugin Wrapper element
	 * @param {Object} data element data object
	 */
	PluginWrapper.prototype.__construct = function(data) {
		if (!data.content || typeof data.content !== 'object' || typeof data.content.pop === 'function') data.content = {};
		data.isPublished = false;
		data.isPreview = false;
		this._def = PluginWrapper._extendDef(this._def);
		if (typeof this._def.loadAction === 'function') this._def.loadAction(data);
		Element.prototype.__construct.call(this, data);
		
		var self = this;
		
		if (typeof this._def.element === 'object' && this._def.element) {
			var elDef = this._def.element;
			if (typeof elDef.minSize === 'object' && elDef.minSize) {
				if (elDef.minSize.width) this.setMinSize(elDef.minSize.width, null);
				if (elDef.minSize.height) this.setMinSize(null, elDef.minSize.height);
			}
			if (typeof elDef.defaultSize === 'object' && elDef.defaultSize && !data.id) {
				if (elDef.defaultSize.width) this.setSize(elDef.defaultSize.width, null);
				if (elDef.defaultSize.height) this.setSize(null, elDef.defaultSize.height);
			}
			if ('resizable' in elDef && !elDef.resizable) this.setResizingEnabled(false, true);
		} else {
			self._def.element = {};
		}
		this.setEmtyMessageImage(this._icon);
		this.displayEmtyMessage(true);
		var thisClass = this;
		
		this._data = data;
		this._data.id = this.id;
		this._data.width = this.getWidth();
		this._data.height = this.getHeight();
		this.updateStyle();
		this._def.updateElement = function() { self.updateStyle(); };
		this._def.setSize = function(width, height) { self.setSize(width, height); };
		this._def.openProperties = function() { self.comProperties(); };
		this.container.css({overflow: 'hidden'});
		if (typeof this._def.loadedAction === 'function') this._def.loadedAction(data, this.container);
		this.controls.bind('dblclick', function() { self.comProperties(); });
	};
	
	/**
	 * Serialize this element
	 * @return {Object}
	 */
	PluginWrapper.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);
		data.content = (this._data.content && typeof this._data.content === 'object' && typeof this._data.content.pop !== 'function') ? this._data.content : {};
		if (typeof this._def.saveAction === 'function') this._def.saveAction(data, this.container);
		return data;
	};
	
	PluginWrapper.prototype.updateContentSize = function() {
		Element.prototype.updateContentSize.call(this);
		if (this._data) {
			this._data.width = this.getWidth();
			this._data.height = this.getHeight();
			if (typeof this._def.resizeAction === 'function') this._def.resizeAction(this._data, this.container);
		}
	};
	
	PluginWrapper.prototype.updateStyle = function() {
		if (!this._rendered || !this._def.element.renderOnce) {
			this._rendered = true;
			var html = window.Mustache.render(this._template, this._data);
			if (this._def.element.isolatedRendering) {
				var thisSelf = this;
				if (!this._isolatorElem) {
					this._isolatorElemWnd = null;
					this._isolatorElemReady = false;
					this._isolatorElemListeners = [];
					this._isolatorElem = $('<iframe>').css({
						border: 'none',
						background: 'transparent',
						padding: '0',
						margin: '0',
						width: '100%',
						height: '100%'
					}).attr({src: 'modules/builder/tpl/blank.html'}).on('load', function() {
						thisSelf._isolatorElemWnd = (thisSelf._isolatorElem.get(0).contentWindow || thisSelf._isolatorElem.get(0).contentDocument);
						thisSelf._isolatorElemWnd.xnextStickRight = function() {};
						thisSelf._isolatorElemReady = true;
						for (var i = 0; i < thisSelf._isolatorElemListeners.length; i++) {
							if (typeof thisSelf._isolatorElemListeners[i].func === 'function') {
								thisSelf._isolatorElemListeners[i].func.call(thisSelf._isolatorElemListeners[i].inst);
							}
						}
					});
					this.container.empty();
					this.container.append(this._isolatorElem);
					
				}
				if (this._isolatorElemReady) {
					$(this._isolatorElemWnd.document.body).html(html);
				} else {
					this._isolatorElemListeners.push({inst: this, func: function() { $(thisSelf._isolatorElemWnd.document.body).html(html); }});
				}
			} else {
				this.container.html(html);
			}
			this.displayEmtyMessage(html ? false : true);
		}
	};
	
	/**
	 * Extend element properties dialog
	 */
	PluginWrapper.prototype.comProperties = function() {
		var thisClass = this;
		if (!this._callbackApplied) {
			this._callbackApplied = true;
			this._def.propertyDialog.callbackFunc = function(fields) {
				if (typeof thisClass._def.applyAction === 'function') thisClass._def.applyAction(fields, thisClass._data, thisClass.container);
				thisClass.updateStyle();
			};
		}
		Element.prototype.comProperties.call(this, this._def.propertyDialog);
		if (this._callbackApplied) this._def.propertyDialog.callbackFunc = null;
		var fields = this.comDialog.fields;
		if (!fields._initiated) {
			fields._initiated = true;
		}
		if (typeof this._def.openAction === 'function') this._def.openAction(fields, this._data, this.container);
	};
	
	/**
	 * Called when property dialog is applyed
	 * @param {Object} fields property dialog field object
	 * @param {Object} data serialized data object
	 * @param {jQuery} elem
	 */
	PluginWrapper.prototype.applyAction = function(fields, data, elem) {
		
	};
	
	return PluginWrapper;
});
;

/** WB TextArea **/

define('TextArea', ['Element', 'ModeManager', 'HelpSystem', 'Dialog', 'Service'], function(Element, ModeManager, HelpSystem, Dialog, Service) {
	'use strict';
	
	/**
	 * Text Area class
	 * @param {Object} data
	 */
	var TextArea = function(data) {this.__construct(data);};

	TextArea.prototype = new Element();
	TextArea.prototype.constructor = TextArea;
	wb_builder.registerClass("TextArea", TextArea);

	TextArea.rtl = false;
	TextArea.mousedowned = false; // true if mousedown is currently triggered on text area
	TextArea.allowHideEditors = false;
	TextArea.areaActive = null;
	TextArea.editorDefaultText = '<p class="wb-stl-normal">' + __("Enter your text here") + '</p>';
	TextArea.editorInitialized = false;
	TextArea.editorInit = function() {
		if (TextArea.editorInitialized) return;
		TextArea.editorInitialized = true;

		if (!wb_builder.isTouchDevice) {
			$(function() {
				$('#body').on('click', function(e){
					if (TextArea.mousedowned && !$.browser.mozilla) {
						TextArea.mousedowned = false;
						return;
					}
					Dialog.hideEditors = true;
					TextArea.hideEditors();
				});
			});
		}
	};
	TextArea.hideEditors = function() {
		if (TextArea.editorActive) {
			TextArea.editorActive.hideEditor();
		}
	};
	TextArea.editorActive = null;
	TextArea.execCommandCallback = function(editor_id, elm, command, user_interface, value) {
		switch (command) {
			case "ForeColor":
				var elem = $(elm);
				if (elem.is("a")) {
					if (TextArea.rgb2hex(elem.css("color")) !== value.toLowerCase()) {
						elem.css("color", value);
					} else {
						elem.css("color", "");
					}
					return true;
				} else if (elem.parent().is("a")) {
					if (TextArea.rgb2hex(elem.parent().css("color")) !== value.toLowerCase()) {
						elem.parent().css("color", value);
					} else {
						elem.parent().css("color", "");
					}
					return true;
				}
			break;
		}
		return false;
	};
	TextArea.rgb2hex = function(rgb) {
		var _rgb = rgb.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
		if (!_rgb) return rgb;
		function hex(x) {
			return ("0" + parseInt(x).toString(16)).slice(-2);
		}
		return ("#" + hex(_rgb[1]) + hex(_rgb[2]) + hex(_rgb[3])).toLowerCase();
	};
	TextArea.getActiveTextArea = function() {
		var elems = wb_builder.bodyInstance.getContentElements();
		for (var i=0, elem; (elem = elems[i]); i++) {
			if (elem instanceof TextArea && elem.editor) {
				return elem;
			}
		}
	};


	TextArea.prototype.cover = false;
	TextArea.prototype.editor = null;
	TextArea.prototype.editorAttached = false;
	TextArea.prototype.lastContent = "";

	TextArea.prototype.textId = "";
	TextArea.prototype.editorId = "";
	TextArea.prototype.toolbarWidth = 350;
	TextArea.prototype.toolbarHeight = 29;
	TextArea.prototype.editor = null;
	TextArea.prototype.editorToolbar = null;
	TextArea.prototype.editorVisible = false;
	TextArea.prototype.editorChosenLanguage = null;
	TextArea.prototype.textDiv = null;
	TextArea.prototype.textDivValue = null;
	TextArea.prototype.textArea = null;
	TextArea.prototype.toolbarMover = null;

	TextArea.prototype.styleEnabled = false;
	TextArea.prototype.styleTextFont = null;
	TextArea.prototype.styleLinkFontNormal = null;
	TextArea.prototype.styleLinkFontHover = null;

	TextArea.prototype.cssRuleIndexes = null;

	/**
	 * Construct text area element
	 * @param data text area data object
	 */
	TextArea.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);
		this.addLangLabel();

		this.cssRuleIndexes = { a: -1, b: -1, c: -1 };

		CKEDITOR.timestamp = Math.random();
		TextArea.editorInit();
	//	TextArea.elemList[TextArea.elemList.length] = this;

		var thisClass = this;

		this.textId = this.id + '_text';
		this.editorId = this.id + '_editor';

		TextArea.rtl = (wb_builder.locale === 'ar_AE' || wb_builder.locale === 'he_IL' || wb_builder.locale === 'fa_IR');

		this.textDiv = $('<div id="' + this.textId + '"' + (TextArea.rtl ? ' class="rtl"' : '') + '></div>');
		this.textDiv.css({
			position: "absolute", left: "0px", top: "0px", width: "100%"
		});
		this.textDiv.on('mousedown', function() {
			TextArea.mousedowned = true;
		});
		this.textDiv.on('mouseup', function() {
			if (!$.browser.msie) TextArea.mousedowned = false;
		});
		this.container.append(this.textDiv);
		this.container.css("line-height", "normal");

		$(this.container).bind("resize", function() {
			$(thisClass.textDiv).css("width", $(thisClass.container).width());
		});

		this.controls.tooltip({ trigger: "manual", placement: "top", html: true, title: __("This element can be edited only in Desktop mode") });
		this.controls.bind("dblclick", function(e) {
			if (thisClass.debug) console.log("DoubleClick");
			if (thisClass.mode !== ModeManager.MODE_DESKTOP) {
				thisClass.controls.tooltip('show');
				setTimeout(function() {
					thisClass.controls.tooltip('hide');
				}, 3000);
				return false;
			}
			thisClass.showEditor(e.pageX, e.pageY);
		});

		this.elem.resizable("option", "handles", "e");
		this.seResizeBtn.removeClass("ui-resizable-se ui-icon-gripsmall-diagonal-se ui-icon");
		this.seResizeBtn.addClass("ui-resizable-e");
		this.setMinSize(null, 24);

		if (data && data.content && data.content.text !== null && data.content.text !== undefined) {
			this.textDivValue = data.content.text;
		} else {
			this.textDivValue = TextArea.editorDefaultText;
		}
		this.setHtml(__tr(this.textDivValue, null, TextArea.editorDefaultText));

		this.styleEnabled = false; // data.content.styleEnabled ? true : false;
		this.styleTextFont = data.content.styleTextFont ? data.content.styleTextFont : {	
			color: "#333333",
			size: 13,
			decoration: "none",
			font: "Arial,sans-serif",
			style: { },
			align: "left",
			lineHeight: 18, 
			css: {
				font: "normal normal 13px Arial,sans-serif",
				color: "#333333",
				"text-align": "left",
				"text-decoration": "none",
				"line-height": "18px"
			}
		};

		this.styleLinkFontNormal = data.content.styleLinkFontNormal ? data.content.styleLinkFontNormal : {	
			color: "#0088cc",
			size: 13,
			decoration: "underline",
			font: "Arial,sans-serif",
			style: { },
			align: "left",
			lineHeight: 18, 
			css: {
				font: "normal normal 13px Arial,sans-serif",
				color: "#0088cc",
				"text-align": "left",
				"text-decoration": "underline",
				"line-height": "18px"
			}
		};

		this.styleLinkFontHover = data.content.styleLinkFontHover ? data.content.styleLinkFontHover : {	
			color: "#005580",
			size: 13,
			decoration: "underline",
			font: "Arial,sans-serif",
			style: { },
			align: "left",
			lineHeight: 18, 
			css: {
				font: "normal normal 13px Arial,sans-serif",
				color: "#005580",
				"text-align": "left",
				"text-decoration": "underline",
				"line-height": "18px"
			}
		};

		this.elem.bind("resize", function() {
			thisClass.onResize();
		});
		if (!data.id) HelpSystem.play(3, true, this);
		this.onUpdateLanguages();
	};
	
	TextArea.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this), txt = String(__tr(this.textDivValue)).replace(/<[^>]+>/g, '');
		opts.text = txt.substring(0, 100);
		if (opts.text.length < txt.length) opts.text += '...';
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return object
	 */
	TextArea.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);
		data.content = {
			text:				this.textDivValue,
			styleEnabled:		(this.styleEnabled ? true : false),
			styleTextFont:		this.styleTextFont,
			styleLinkFontNormal:this.styleLinkFontNormal,
			styleLinkFontHover:	this.styleLinkFontHover,
			rtl:				TextArea.rtl
		};
		return data;
	};

	/**
	 * Update element style
	 */
	TextArea.prototype.updateStyle = function() {
		/* disable
		this.cssRuleIndexes.a = this.system.addCSSRule("#" + this.id + "_text," +
			" #" + this.id + "_text p", this.styleTextFont.css,
			null, this.cssRuleIndexes.a);
		this.cssRuleIndexes.b = this.system.addCSSRule("#" + this.id + "_text a",
			this.styleLinkFontNormal.css, null, this.cssRuleIndexes.b);
		this.cssRuleIndexes.c = this.system.addCSSRule("#" + this.id + "_text a:hover",
			this.styleLinkFontHover.css, null, this.cssRuleIndexes.c);
		*/
	};
	
	TextArea.prototype.setHtml = function(html) {
		html = html.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '');
		this.textDiv.html(html);
	};

	TextArea.prototype.onClick = function(e) {
		if (!this.editorVisible) {
			Element.prototype.onClick.call(this, e);
		}
	};

	TextArea.prototype.fitToParent = function() {
		Element.prototype.fitToParent.call(this);
		this.onResize();
	};

	TextArea.prototype.setParent = function(parent) {
		//var oldParent = this.parent;
		Element.prototype.setParent.call(this, parent);
	};

	TextArea.prototype.showEditor = function(x, y) {
		HelpSystem.play(3.5, true);
		if (this.debug) console.log("ShowEditor");
		var thisClass = this;

		if (this.editor) 
			return;

		TextArea.hideEditors();
		this.menu.hide();


		var styles = CKEDITOR.stylesSet.get("wb_site_styles");
		if (!styles) {
			styles = CKEDITOR.stylesSet.add("wb_site_styles", []);
		}
		styles.splice(0, styles.length); // empty array by keeping instance thesame
		for (var i = 0; i < this.system.site.styles.length; i++) {
			var s = this.system.site.styles[i];
			var selector = /^\.([^\ ]+)(?:\ |$)/i.exec(s.selector);
			if (!selector) continue;
			styles.push({
				name: s.name, element: (s.tag ? s.tag : "span"), attributes: { "class": selector[1] }
			});
		}


		//border o_0
		this.textDiv.addClass('outline1');

		if (!wb_builder.isTouchDevice) {
			this.textDiv.attr("contenteditable", "true");
		}
		this.setDragginEnabled(false);
		this.setControlsEnabled(false);
		//this.elem.draggable( 'disable' ).fadeTo(0, 1).find(".wb_controls").hide();
		Element.hotKeysDisabled = true;

		var config = {
	//		uiColor: '#9AB8F3',
			stylesSet: 'wb_site_styles'
			/* on: {
				focus: function() {
					// hack to prevent creation of empty <p/> tag at the beginning
					setTimeout(function() {
						thisClass.textDiv.caret(0);
					}, 500);
				}
			} */
		};
		this.textDiv.focus();
		if (wb_builder.isTouchDevice) {
			if (false && ($.browser.firefox || $.browser.chrome)) {
				config.baseFloatZIndex = 999;
				config.on.instanceReady = function(e) {
					setTimeout(function() {
						var h = $(window).height() - 72;
						$("#cke_WB_TextArea_maxCont").css({
							position: "absolute",
							border: 0,
							left: 0,
							top: $(window).scrollTop(),
							width: '100%',
							height: h,
							zIndex: 1000
						});
						$(".cke_contents").css({
							height: h,
							width: '100%'
						});
					}, 500);
					thisClass.system.site.reloadCkIframeStyles();
					//e.editor.execCommand("maximize"); //kazko neveikia o_0
				};
				if (!TextArea.maxCont) {
					TextArea.maxCont = $('<div id="WB_TextArea_maxCont"></div>');
					TextArea.maxCont.css({
						left: 0,
						top: 0,
						width: 100,
						height: 100,
						position: "absolute",
						zIndex: 1
					});
				}
				TextArea.maxCont.html(this.textDiv.html());
				$(document.body).append(TextArea.maxCont);
				this.editor = CKEDITOR.replace(TextArea.maxCont.attr("id"), config);

			} else {
				document.removeEventListener("touchstart", wb_builder.touchHandler, true);
				document.removeEventListener("touchmove", wb_builder.touchHandler, true);
				document.removeEventListener("touchend", wb_builder.touchHandler, true);
				document.removeEventListener("touchcancel", wb_builder.touchHandler, true);
				$(".wb-scroll-bar").hide();
				if (!TextArea.maxCont) {
					TextArea.maxCont = $('<div id="WB_TextArea_maxCont"><div class="inner3" contenteditable="true"></div></div>');
					var inner = TextArea.maxCont.find('.inner3');
					TextArea.maxCont.css({
						border: 0,
						left: 0,
						top: 0,
						width: '100%',
						height: $(window).height(),
						overflow: 'auto',
						position: "fixed",
						background: "#ffffff",
						zIndex: 1001
					});
					inner.css({
						margin: '60px 10px 10px'
					});
					var maxContBtnWrp = $('<div class="form-actions input-block-level"><span class="wb-ed-small-msg">'+ __("Full featured text editor is currently not available on touch devices") +'</span><button id="WB_TextArea_maxContBtn" class="btn btn-success pull-right">'+ __("Apply") +'</button></div>');
					var maxContBtn = maxContBtnWrp.find("button");
					maxContBtnWrp.css({
						top: 0,
						right: 0,
						marginTop: 0,
						padding: 10,
						borderBottom: '1px solid #E5E5E5',
						position: "absolute",
						zIndex: 9001
					});
					$(TextArea.maxCont).append(maxContBtnWrp);
					$(document.body).append(TextArea.maxCont);
					maxContBtn.on('click', function() {
						TextArea.hideEditors();
					});
					TextArea.maxCont.on('click', function() {
						TextArea.maxCont.find('.inner3').focus();
					});
					TextArea.maxCont.click();
				}
				var cColor = thisClass.getContentColor(true);
				TextArea.maxCont.css({background: (cColor ? cColor : '#ffffff')});
				var innerElem = TextArea.maxCont.find('.inner3');
				innerElem.html(this.textDiv.html());
				$(document.body).append(TextArea.maxCont);
				var tbHeight = TextArea.maxCont.children('.form-actions').eq(0).outerHeight(true);
				innerElem.css({marginTop: (tbHeight + 'px')});
				this.editor = true;
			}
		} else {
			if ($.browser.msie) {
				var html = this.textDiv.html();
				//console.log(html);
				html = html.replace(/(<p[^>]*>)&nbsp;(<\/p>)/ig, '$1\xad$2');
				//console.log(html);
				this.textDiv.html(html);
			}
			this.editor = CKEDITOR.inline(this.textId, config);
			setTimeout(function() {
				var el = $("#cke_" + thisClass.textId);
				el.css({"z-index": 1000});
				// el.draggable({cancel: '.cke_toolgroup, .cke_toolgroup *, .cke_combo_button, .cke_combo_button *'});
			}, 1000);
		}
		if (!wb_builder.isTouchDevice) {
			this.textDiv.on("click", function(e) {
				e.stopPropagation();
			});
			if (jQuery.browser.chrome) {
				this.textDiv.blur();
				setTimeout(function() {
					thisClass.textDiv.focus();
				}, 100);
			}
		}
		this._onStylesComboboxCreate();
		this.lastContent = this.textDiv.html();
		this.editorVisible = true;
		TextArea.editorActive = this;
		Dialog.hideEditors = false;

		this.editor.wbTextAreaInstance = this;
	};
	
	TextArea.prototype._onStylesComboboxCreate = function() {
		var thisClass = this;
		var callback = function(combo) {
			var doc = combo.children('iframe')[0].contentDocument;
			var s = doc.createElement('scr' + 'ipt');
			s.type = 'text/javascript';
			s.src = CKEDITOR.basePath + 'stylescombo.js?ts=' + (new Date()).getTime();
			doc.getElementsByTagName('head')[0].appendChild(s);
		};
		this._stylesComboboxIntervalId = setInterval(function() {
			var combo = null;
			if ((combo = $('#cke_' + thisClass.textId + ' .cke_combopanel:not(.dropdown_languages)')).length) {
				clearInterval(thisClass._stylesComboboxIntervalId);
				callback(combo);
			}
		}, 100);
	};

	TextArea.prototype.hideEditor = function() {
		HelpSystem.play(4, true);
		if (!this.editor) return;
	//	CKEDITOR.remove(this.editor);
		if (wb_builder.isTouchDevice) {

		}
		else {
			this.editor.focus();	//to close all combobox iframes (throws errors otherwise)
			this.editor.destroy();
		}

		// var editorLang = this.editor.wbCurrEditLang;
		this.editor = null;

		if (wb_builder.isTouchDevice) {
			if (TextArea.maxCont) {
				this.setHtml(TextArea.maxCont.find('.inner3').html());
				TextArea.maxCont.find('.inner3').empty();
				TextArea.maxCont.remove();
				TextArea.maxCont = null;
				document.addEventListener("touchstart", wb_builder.touchHandler, true);
				document.addEventListener("touchmove", wb_builder.touchHandler, true);
				document.addEventListener("touchend", wb_builder.touchHandler, true);
				document.addEventListener("touchcancel", wb_builder.touchHandler, true);
				$(".wb-scroll-bar").show();
			}
		} else {
			this.textDiv.removeAttr("contenteditable");
			if ($.browser.msie) {
				var html = this.textDiv.html();
				html = html.replace(/(<p[^>]*>)(?:&shy;|&shy;&shy;|&shy;&shy;&shy;)(<\/p>)/ig, '$1&nbsp;$2');
				this.textDiv.html(html);
			}
		}

		this.textDiv.off("click").removeClass('outline1');

		this.setDragginEnabled(true);
		this.setControlsEnabled(true);
		//this.elem.draggable( 'enable' ).find(".wb_controls").show();
		Element.hotKeysDisabled = false;

		this.onResize();
		if (this.getParent()) {
			this.getParent().updateSize();
			this.fitToParent();
		}

		var cont = this.textDiv.html();
		if (this.lastContent !== cont) this.system.pageModified = true;
		this.lastContent = "";
		this.editorVisible = false;
		TextArea.editorActive = null;
		this.setValue(cont, this.editorChosenLanguage);
		this.onSwitchLanguage(this.system.site.currSelLang, true);
		
		clearInterval(this._stylesComboboxIntervalId);
	};
	
	/**
	 * Get text color of content
	 * @param {boolean} contrast return contrasted color
	 * @param {Node=} elem element to get color from (internal do not use)
	 * @param {string=} parentColor color of parent element (internal do not use)
	 * @param {number=} lvl element structure level (internal do not use)
	 * @returns {string}
	 */
	TextArea.prototype.getContentColor = function(contrast, elem, parentColor, lvl) {
		if (!elem) elem = this.container.get(0);
		if (elem.nodeType === 3 && parentColor) return parentColor;
		if (!lvl) lvl = 0;
		var ident = '', identCount = lvl;
		while (identCount > 0) { ident += ' '; identCount--; }
		var style = (elem.nodeType < 3 && 'getComputedStyle' in window) ? window.getComputedStyle(elem) : null;
		var pc, color = null, colorStr = (style ? style.color : null);
		if (colorStr && (pc = colorStr.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/i))) {
			color = {r: parseInt(pc[1]), g: parseInt(pc[2]), b: parseInt(pc[3])};
		} else if (colorStr && (colorStr.length === 4 || colorStr.length === 7) && (pc = colorStr.match(/^#([0-f]+)$/i))) {
			if (pc[0].length === 3) {
				color = {r: parseInt(pc[0].substring(0, 1), 16), g: parseInt(pc[0].substring(1, 2), 16), b: parseInt(pc[0].substring(2, 3), 16)};
			} else {
				color = {r: parseInt(pc[0].substring(0, 2), 16), g: parseInt(pc[0].substring(2, 4), 16), b: parseInt(pc[0].substring(4, 6), 16)};
			}
		}
		if (color && contrast) {
			var cb = (299 * color.r + 587 * color.g + 114 * color.b) / 1000;
			if (255 - cb > cb) {
				color.r = color.g = color.b = 255;
			} else {
				color.r = color.g = color.b = 0;
			}
		}
		colorStr = color ? ('#' + ('0' + parseInt(color.r).toString(16)).slice(-2) + ('0' + parseInt(color.g).toString(16)).slice(-2) + ('0' + parseInt(color.b).toString(16)).slice(-2)) : null;
		//console.log(ident + elem.nodeName + ' (' + elem.nodeType + '): ' + (color ? ('Color: ' + colorStr) : ''));
		for (var i = 0; i < elem.childNodes.length; i++) {
			var r = this.getContentColor(contrast, elem.childNodes[i], colorStr, lvl + 1);
			if (r) return r;
		}
		return null;
	};
	
	TextArea.prototype.setValue = function(html, langCode) {
		var i, lang, newValue;
		langCode = langCode || this.system.site.currSelLang;
		if (typeof this.textDivValue === 'string') {
			if (this.system.site.languages.length) {
				newValue = {};
				for (i = 0; (lang = this.system.site.languages[i]); i++) {
					if (lang.code === langCode)
						newValue[lang.code] = html;
					else if (lang.code === this.system.site.getLastDefLang())
						newValue[lang.code] = this.textDivValue;
					else {}
						// newValue[lang.code] = '';
				}
				this.textDivValue = newValue;
			} else {
				this.textDivValue = html;
			}
		} else if (typeof this.textDivValue === 'object') {
			newValue = {};
			for (i = 0; (lang = this.system.site.languages[i]); i++) {
				if (lang.code in this.textDivValue) newValue[lang.code] = this.textDivValue[lang.code];
			}
			newValue[langCode] = html;
			this.textDivValue = newValue;
		}
	};

	/**
	 * Fit element to window horizontaly
	 * @param left horizontal element coordinate (left coordinate)
	 * @param width element width
	 * @return ajusted horizontal (left) coordinate
	 */
	TextArea.prototype.fitToWindow = function(left, width) {
		var vw = $(window).width();

		var px = left;

		if ((px + width) > vw) {
			px = left - ((px + width) - vw + 10);
		}
		return px;
	};

	TextArea.prototype.onResize = function() {
		this.system.pageModified = true;
		var w = this.getWidth();
		var h = this.textDiv.height();
		if (this.editorVisible && false) {
			var body = $(this.editor.getBody());
			var html = body.parent();

			$("#" + this.editorId + "_tbl").css("width", (w-0) + "px");
			$("#" + this.editorId + "_ifr").css("width", (w-0) + "px");
			body.css({width: (w-0) + "px", margin: "0", padding: "0", overflow: "hidden"});
			html.css({width: (w-0) + "px"});

			h = body.outerHeight(true);

			$("#" + this.editorId + "_tbl").css("height", h + "px");
			$("#" + this.editorId + "_ifr").css("height", h + "px");
		} else {
			var mh = $("p", this.textDiv).last();
			if (mh.size() > 0) {
				h -= mh.outerHeight(true) - mh.height();
			}
		}
		if (h < 10) h = 10;
		//console.log("Height: " + h);
		this.setSize(w, h);
	};

	/**
	 * Extend element properties dialog
	 */
	/*TextArea.prototype.comProperties = function() {
		WB_Element.prototype.comProperties.call(this);
		var thisClass = this;
		var fields = this.comDialog.fields;
		if (!fields.styleTextFont) {
			var gTab = this.comDialog.getGeneralTab();

			//gTab.append('<h3>' + __("Text font") + '</h3><hr />');
			gTab.append((fields.styleEnabled = new WB_CheckBoxControl(__("Enable style"))).elem);
			fields.styleEnabled.input.bind("change", function() {
				if (fields.styleEnabled.getValue()) {
					fields.styleTextFont.elem.css("opacity", 1);
					fields.styleLinkFontNormal.elem.css("opacity", 1);
					fields.styleLinkFontHover.elem.css("opacity", 1);
				} else {
					fields.styleTextFont.elem.css("opacity", 0.3);
					fields.styleLinkFontNormal.elem.css("opacity", 0.3);
					fields.styleLinkFontHover.elem.css("opacity", 0.3);
				}
			});
			gTab.append('<br />');

			gTab.append('<h3>' + __("Text font") + '</h3><hr />');
			gTab.append((fields.styleTextFont = new TextControl(true)).elem);

			gTab.append('<h3>' + __("Link font (normal)") + '</h3><hr />');
			gTab.append((fields.styleLinkFontNormal = new TextControl(true)).elem);

			gTab.append('<h3>' + __("Link font (hover)") + '</h3><hr />');
			gTab.append((fields.styleLinkFontHover = new TextControl(true)).elem);

			var cfb = fields.callbackFunc;
			fields.callbackFunc = function() {
				if (typeof(cfb) == "function") cfb.call(this);

				thisClass.styleEnabled = fields.styleEnabled.getValue();
				thisClass.styleTextFont = fields.styleTextFont.getValue();
				thisClass.styleLinkFontNormal = fields.styleLinkFontNormal.getValue();
				thisClass.styleLinkFontHover = fields.styleLinkFontHover.getValue();

				thisClass.updateStyle();
			};
		}
		fields.styleEnabled.setValue(this.styleEnabled);
		fields.styleTextFont.setValue(this.styleTextFont);
		fields.styleLinkFontNormal.setValue(this.styleLinkFontNormal);
		fields.styleLinkFontHover.setValue(this.styleLinkFontHover);
		fields.styleEnabled.input.trigger("change");
	};*/
		
	/**
	 * @param {Object} elem
	 */
	TextArea.prototype.initContextMenu = function(elem) {
		var thisClass = this;
		Element.prototype.initContextMenu.call(this, elem);

		var idx = this.contextMenuFirstIndex;

		this.menu.insertItemAt(idx++, 'editText', __("Edit text"), function() {
			var pos = thisClass.menu.menu.offset();
			thisClass.showEditor(pos.left, pos.top);
		}, null, null, null, "glyphicon glyphicon-pencil");

		this.menu.addSeparator(idx++);
	};

	TextArea.prototype.onUpdateLanguages = function() {
		Element.prototype.onUpdateLanguages.call(this);
		if (this.system.site.languages.length > 1 && typeof this.textDivValue === 'string') {
			var newValue = {};
			for (var i=0, lang; (lang = this.system.site.languages[i]); i++) {
				newValue[lang.code] = this.textDivValue;
			}
			this.textDivValue = newValue;
		}
	};

	TextArea.prototype.onSwitchLanguage = function(langCode, fromEditor) {
		if (!fromEditor) {
			Element.prototype.onSwitchLanguage.call(this, langCode);
			this.hideEditor();
		}
		this.setHtml(__tr(this.textDivValue, langCode));
		this.onResize(true);
	};
	
	Service.textArea = {
		hideEditors: function() { TextArea.hideEditors(); }
	};
	
	return TextArea;
});
;

/** WB Picture **/

define('Picture', [
	'Element',
	'Service',
	'ModeManager',
	'HelpSystem',
	'Rectangle',
	'UIButton'
], function(Element, Service, ModeManager, HelpSystem, Rectangle, UIButton) {
	'use strict';
	
	/**
	 * Picture class
	 * @param {Object} data
	 */
	var Picture = function(data) { if (data) this.__construct(data); };

	Picture.prototype = new Element();
	Picture.prototype.constructor = Picture;
	wb_builder.registerClass("Picture", Picture);

	Picture.prototype.image = null;
	Picture.prototype.imageW = null;
	Picture.prototype.imageUrl = null;
	Picture.prototype.dialog = null;
	Picture.prototype.uploader = null;
	Picture.prototype.originalSize = null;
	Picture.prototype.noReset = false;
	Picture.prototype.runtimeNoReset = false;
	Picture.prototype.imageAlt = null;
	Picture.prototype.imageUrl = null;
	Picture.prototype.imageLink = null;
	Picture.prototype.linkDialog = null;
	Picture.prototype.myEmtyMessageText = null;
	Picture.prototype.keepAspectRatio = true;
	Picture.prototype.autoHeight = false;
	Picture.prototype.imageLinkType = 'url';
	Picture.prototype.customLock = false;
	/** @type Rectangle */
	Picture.prototype.crop = null;

	/**
	 * Construct picture element
	 * @param data picture data object
	 */
	Picture.prototype.__construct = function(data) {
		this.customLock = data.customLock ? data.customLock : false;
		if (this.customLock) this.isEditable = false;
		this.ignoreParentBounds = true;

		Element.prototype.__construct.call(this, data);

		var thisClass = this;

		this.setEmtyMessageImage("img/ico_tb_picture.png");
		this.setEmtyMessageText(this.myEmtyMessageText = __("Double click to change picture"));
		this.displayEmtyMessage(true);	

		//this.setMinSize(48, 24);
		this.setMinSize(24, 14);

		// if (data.width)
			// this.elem.css("width", Math.max(data.width, 24) + "px");
		this.container.css("overflow", "hidden");

		this.imageUrl = data.content.src ? data.content.src : null;
		this.imageAlt = data.content.alt ? data.content.alt : null;
		if (this.imageUrl && this.imageUrl.indexOf("user_images/") === 0) {
			this.imageUrl = this.imageUrl.replace("user_images/", "gallery/");
		}
		this.autoHeight = (data.content.autoHeight ? true : false);
		this.crop = ('crop' in data.content) ? Rectangle.fromObject(data.content.crop) : new Rectangle();

		if (data.content.link && (typeof data.content.link === 'object')) {
			this.imageLink = data.content.link;
		} else {
			this.imageLink = {
				url: (data.content.link ? data.content.link : null),
				type: (data.content.linkType ? data.content.linkType : null),
				title: (data.content.linkTitle ? data.content.linkTitle : null),
				target: (data.content.linkTarget ? data.content.linkTarget : null)
			};
		}

		this.imageLinkType = (data.content.imageLinkType) ? data.content.imageLinkType : 'url';

		if (data.id || data._copy) {
			this.loadImage(this.getSrc());
		} else {
			thisClass.changePicture(function() {
				thisClass.resetImageSize();
			});
		}
		if( this.customLock ) {
			this.updateImageSize();
			this.setResizingEnabled(false, true);
		}
		else {
			this.controls.tooltip({ trigger: "manual", placement: "top", html: true, title: __("This element can be edited only in Desktop mode") });
			this.controls.bind("dblclick", function(e) {
				if (thisClass.debug) console.log("DoubleClick");
				if (thisClass.mode !== ModeManager.MODE_DESKTOP) {
					thisClass.controls.tooltip('show');
					setTimeout(function() {
						thisClass.controls.tooltip('hide');
					}, 3000);
					return false;
				}
				thisClass.changePicture();
			});
		}
		if (!data.id) HelpSystem.play(5, true, this);
		this.modeContextOk.resetSize = true;
	};
	
	Picture.prototype.initResizable = function(options) {
		Element.prototype.initResizable.call(this, options);
		options.handles = 'n, e, s, w, ne, se, sw, nw';
		options.fixresize = true;
	};
	
	Picture.prototype.updateContentSize = function(resizer) {
		Element.prototype.updateContentSize.call(this, resizer);
		if (!this.imageW) return;
		var dw, dh, eWidth = this.elem.width(), eHeight = this.elem.height();
		if (resizer && !resizer.originalElement.isCorner && this.crop) {
			if (this.crop.imageSize) {
				this.crop.width = this.crop.imageSize.width;
				this.crop.height = this.crop.imageSize.height;
			}
			if (this.crop.oriMainSize && this.crop.originalPosition) {
				if ((resizer.originalPosition.left - resizer.position.left) !== 0) {
					this.crop.x = Math.min(wb_builder.gridSize(this.crop.originalPosition.x + (eWidth - this.crop.oriMainSize.width)), 0);
				}
				if ((resizer.originalPosition.top - resizer.position.top) !== 0) {
					this.crop.y = Math.min(wb_builder.gridSize(this.crop.originalPosition.y + (eHeight - this.crop.oriMainSize.height)), 0);
				}
			}
			dw = this.crop.width + this.crop.x;
			dh = this.crop.height + this.crop.y;
			if (dw < eWidth) {
				dh = dh * eWidth / dw;
				dw = eWidth;
			}
			if (dh < eHeight) {
				dw = dw * eHeight / dh;
				dh = eHeight;
			}
			this.crop.width = dw - this.crop.x;
			this.crop.height = dh - this.crop.y;
		} else if (resizer && this.crop) {
			if (this.crop.koefSize && this.crop.originalPosition) {
				this.crop.x = Math.min(wb_builder.gridSize(eWidth * this.crop.koefPosition.x), 0);
				this.crop.y = Math.min(wb_builder.gridSize(eHeight * this.crop.koefPosition.y), 0);
				this.crop.width = wb_builder.gridSize(eWidth * this.crop.koefSize.width);
				this.crop.height = wb_builder.gridSize(eHeight * this.crop.koefSize.height);
			}
		}
		this.updateImageSize();
	};
	
	/**
	 * @param {Object} data
	 * @return {Picture.Mode}
	 */
	Picture.prototype.modeClass = function(data) {
		return new Picture.Mode(data);
	};
	
	/** @return {String} */
	Picture.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this), txt = String((this.imageAlt === null) ? '' : this.imageAlt).replace(/<[^>]+>/g, '');
		opts.text = txt.substring(0, 100);
		if (opts.text.length < txt.length) opts.text += '...';
		opts.thumb = this.makeLocalUrl(this.imageUrl);
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return object
	 */
	Picture.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);
		var m = this.modes[ModeManager.MODE_DESKTOP].serialize();
		data.customLock = this.customLock;
		data.content = {
			src: this.imageUrl,
			alt: this.imageAlt,
			// link: this.imageLink.url,
			// linkType: this.imageLink.type,
			// linkTitle: this.imageLink.title,
			// linkTarget: this.imageLink.target,
			link: this.imageLink,
			imageLinkType: this.imageLinkType,
			// crop: (this.crop ? this.crop.serialize() : null)
			crop: m.crop
		};
		//this.setData("width", this.image.width);
		//this.setData("height", this.image.height);

		return data;
	};
	
	Picture.prototype.onStartResize = function(ui) {
		Element.prototype.onStartResize.call(this, ui);
		if (this.crop) {
			this.crop.imageSize = {width: this.imageW.width(), height: this.imageW.height()};
			this.crop.originalPosition = {x: this.crop.x, y: this.crop.y};
			this.crop.koefPosition = {x: this.crop.x / this.elem.width(), y: this.crop.y / this.elem.height()};
			this.crop.koefSize = {width: this.crop.width / this.elem.width(), height: this.crop.height / this.elem.height()};
			this.crop.oriMainSize = {width: this.elem.width(), height: this.elem.height()};
		}
	};
	
	Picture.prototype.onStopResize = function(ui) {
		Element.prototype.onStopResize.call(this, ui);
		if (this.crop) {
			this.crop.imageSize = null;
			delete this.crop.imageSize;
			this.crop.originalPosiotion = null;
			delete this.crop.originalPosition;
			this.crop.koefPosition = null;
			delete this.crop.koefPosition;
			this.crop.koefSize = null;
			delete this.crop.koefSize;
			this.crop.oriMainSize = null;
			delete this.crop.oriMainSize;
		}
	};
	
	Picture.prototype.onResize = function() {
		Element.prototype.onResize.call(this);
		this.updateImageSize();
	};

	Picture.prototype.fitToParent = function(preserveAspectRatio, oriBounds) {
		Element.prototype.fitToParent.call(this, preserveAspectRatio, oriBounds);
		this.updateImageSize();
	};

	/**
	 * Set image url
	 * @param url image url
	 * @param onChange on change callback
	 */
	Picture.prototype.setSrc = function(url, onChange) {
		this.imageUrl = this.makeRelUrl(url);
		this.loadImage(this.makeLocalUrl(url), onChange);
	};

	/**
	 * Get image url (local url)
	 */
	Picture.prototype.getSrc = function() {
		return this.imageUrl ? this.makeLocalUrl(this.imageUrl) : null;
	};

	/**
	 * Get image url (relative url)
	 */
	Picture.prototype.getRelSrc = function() {
		return this.imageUrl ? this.makeRelUrl(this.imageUrl) : null;
	};

	Picture.prototype.updateImageSize = function() {
		if (!this.imageW) return;
		if (this.crop && this.crop.width && this.crop.height) {
			this.imageW.width(this.crop.width);
			this.imageW.height(this.crop.height);
			this.imageW.css({left: this.crop.x + 'px', top: this.crop.y + 'px'});
		} else {
			var w = this.elem.width(), h = this.elem.height();
			this.imageW.width(w);
			this.imageW.height(h);
			this.imageW.css({left: 0, top: 0});
		}
	};

	Picture.prototype.resetImageSize = function(getSize) {
		if (this.originalSize) {
			var w = this.originalSize.width;
			var h = this.originalSize.height;
			if (getSize) {
				return { width: w, height: h };
				// return { width: this.system.gridSize(w, true), height: this.system.gridSize(h, true) };
			}
	//		/var b = this.getBounds();
			this.setSize(w, h);
			this.crop.width = w;
			this.crop.height = h;
			this.crop.x = 0;
			this.crop.y = 0;
			// this.setSize(this.system.gridSize(w, true), this.system.gridSize(h, true));
			this.parent.updateSize();
			this.fitToParent();
			this.updateImageSize();
		} else {
			if (getSize) {
				return { width: 0, height: 0 };
			}
		}
	};

	Picture.prototype.loadImage = function(src, onChange) {
		var thisClass = this;
		if (this.image) {
			if (this.image.parentNode) {
				this.image.parentNode.removeChild(this.image);
			}
			delete this.image;
			this.imageW = null;
		}
		if (src) this.setEmtyMessageText(__("loading..."));
		this.image = new Image();
		this.imageW = $(this.image);
		var thisOnChange = onChange;
		// DO NOT USE VISIBILITY HIDDEN OR DISPLAY NONE IE BUG
		//this.image.style.visibility = "hidden";
		this.image.onload = function() {
			thisClass.setEmtyMessageText(thisClass.myEmtyMessageText);
			thisClass.originalSize = { width: this.width, height: this.height };
			if (thisClass.autoHeight) {
				var w = Math.min(thisClass.originalSize.width, thisClass.getWidth());
				var h = w * thisClass.originalSize.height / thisClass.originalSize.width;
				thisClass.setSize(w, h);
				thisClass.autoHeight = false;
			}
			$(thisClass.image).css({maxWidth: 'inherit', position: 'absolute'});
			$(thisClass.container).append(thisClass.image);
			thisClass.updateImageSize();
			//$(thisClass.image).css("visibility", "visible");
			thisClass.displayEmtyMessage(false);
			if (typeof thisOnChange === "function") thisOnChange.call(thisClass);
		};
		this.image.onerror = function() {
			thisClass.setEmtyMessageText(thisClass.myEmtyMessageText);
			//thisClass.image.style.visibility = "hidden";
			thisClass.displayEmtyMessage(true);

			thisClass.imageUrl = "";
		};
		this.image.src = src ? src : "";
		this.image.style.visibility = src ? "visible" : "hidden";
	};

	/**
	 * Call change picture dialog
	 * @param {Function} onChange on change callback
	 */
	Picture.prototype.changePicture = function(onChange) {
		var thisClass = this;
		var thisOnChange = onChange;

		this.dialog = Service.mediaLibrary.open(__("Change picture"), null, 'image', true);
		this.dialog.addButton(__("Cancel"));
		this.dialog.addButton(__("Select"), function() {
			var list = thisClass.dialog.getSelectedFiles();
			thisClass.system.pageModified = true;
			thisClass.setSrc(((list.length > 0) ? list[0] : null), thisOnChange);
			thisClass.dialog.hide();
		}, true);

		var url = this.getRelSrc();
		if (url) {
			this.dialog.setSelectedFiles([url]);
		} else {
			this.dialog.clearFileSelection();
		}
		this.dialog.setVisible(true);
	};

	/**
	 * Extend element properties dialog
	 */
	Picture.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 350},
			tabs: [
				{name: __('General'), children: [
					{type: 'HorizontalLayout', columnWeights: [5, 7], children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Picture')},
							{type: 'ImageSelector', id: 'imageUrl', thumbSize: 140}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Alternative Text'),
								helpText: __('Information for an image if a user for some reason cannot view it')
							},
							{type: 'MultilangTextField', id: 'alt'},
							{type: 'RadioBox', id: 'linkTypeUrl',
								css: {marginTop: 15},
								label: __('Link to another place'),
								group: 'link_type',
								value: true
							},
							{type: 'LinkSelector', id: 'urlLink',
								multilang: true,
								css: {marginLeft: '20px'},
								click: function() { fields.linkTypeUrl.setValue(true); }
							},
							{type: 'RadioBox', id: 'linkTypeEnlarge',
								label: __('Enlarge picture on click'),
								group: 'link_type',
								css: {marginTop: '10px'}
							}
						]}
					]}
				]}
			],
			init: function(fields) {
				//aspect ratio
				var aspectDiv = $('<div class="aspect-div"></div>');
				var aspectBox = $('<div class="aspect-box ico-aspect-ratio"></div>');
				aspectBox.on('click', function() {
					if ($(this).hasClass('ico-aspect-ratio')) {
						$(this).removeClass('ico-aspect-ratio');
						$(this).addClass('ico-aspect-ratio-off');
						thisClass.keepAspectRatio = false;
					}
					else {
						$(this).addClass('ico-aspect-ratio');
						$(this).removeClass('ico-aspect-ratio-off');
						thisClass.keepAspectRatio = true;
					}
				});
				aspectDiv.append(aspectBox);
				fields.sizeW.getElem().parent().css('position', 'relative').append(aspectDiv);
				//input trigger for aspect
				var aspectInputTrigger = function(w) {
					if (thisClass.keepAspectRatio) {
						var r = (thisClass.originalSize.width / thisClass.originalSize.height),
							val = parseInt((w ? fields.sizeW.getValue() : fields.sizeH.getValue()), 10);
						if (w) {
							fields.sizeH.setValue(parseInt(val / r, 10));
						} else {
							fields.sizeW.setValue(parseInt(val * r, 10));
						}
					}
				};
				fields.sizeW.on('change', function() { aspectInputTrigger(true); });
				fields.sizeH.on('change', function() { aspectInputTrigger(false); });

				var resetBtn = new UIButton(__('Reset size'), UIButton.STYLE_DEFAULT, 'glyphicon glyphicon-fullscreen');
				resetBtn.addClass('btn-xs');
				resetBtn.on('click', function() {
					var size = thisClass.resetImageSize(true);
					if (size && size.width && size.height) {
						fields.sizeW.setValue(size.width);
						fields.sizeH.setValue(size.height);
						fields.wasReset = true;
					}
				});
				fields.sizeBlock.addChild(resetBtn);
				fields.sizeBlock.applyLayoutCellCss(3, (wb_builder.rtl ? {textAlign: 'left', paddingLeft: '38px', marginTop: 4} : {textAlign: 'right', paddingRight: '38px', marginTop: 4}));
			},
			callbackFunc: function(fields) {
				thisClass.imageAlt = fields.alt.getValue();
				thisClass.imageLink = fields.urlLink.getValue();
				thisClass.imageLinkType = fields.linkTypeUrl.getValue() ? 'url' : 'enlarge';
				if (fields.wasReset) {
					var size = thisClass.resetImageSize(true);
					thisClass.crop.width = size.width;
					thisClass.crop.height = size.height;
					thisClass.crop.x = 0;
					thisClass.crop.y = 0;
				} else {
					var ratio = {
						width: parseInt(fields.sizeW.getValue()) / fields.oldSize.width,
						height: parseInt(fields.sizeH.getValue()) / fields.oldSize.height
					};
					thisClass.crop.width = parseInt(thisClass.crop.width * ratio.width);
					thisClass.crop.height = parseInt(thisClass.crop.height * ratio.height);
					thisClass.crop.x = parseInt(thisClass.crop.x * ratio.width);
					thisClass.crop.y = parseInt(thisClass.crop.y * ratio.height);
				}

				thisClass.setSrc(fields.imageUrl.getValue());
			}
		});

		fields.wasReset = false;
		fields.oldSize = this.getSize();
		fields.imageUrl.setValue(this.imageUrl);
		fields.alt.setValue(this.imageAlt);
		fields.urlLink.setValue(this.imageLink);
		if (this.imageLinkType === 'url') {
			fields.linkTypeUrl.setValue(true);
		} else {
			fields.linkTypeEnlarge.setValue(true);
		}
	};

	/**
	 * Extend element context menu
	 * @param {Object} elem
	 */
	Picture.prototype.initContextMenu = function(elem) {
		var thisClass = this;
		if( this.customLock )
			return;
		Element.prototype.initContextMenu.call(this, elem);
		var idx = this.contextMenuFirstIndex;
		this.menu.insertItemAt(idx++, 'changePicture', __("Change picture"), function() {
			thisClass.changePicture();
		}, null, null, null, "glyphicon glyphicon-picture");
		if (this.isResizable) {
			this.menu.insertItemAt(idx++, 'resetSize', __("Reset to original size"), function() {
				thisClass.system.pageModified = true;
				thisClass.resetImageSize();
			}, null, null, null, "glyphicon glyphicon-fullscreen");
		}

		this.menu.addSeparator(idx++);
	};

	Picture.prototype.remove = function(noHistory) {
		if( this.customLock )
			return;
		Element.prototype.remove.apply(this, arguments);
	};
	
	Picture.Mode = (function() {
		/**
		 * @param {Picture.Mode} mode
		 * @param {Object} data
		 */
		var applyData = function(mode, data) {
			mode.crop = Rectangle.fromObject(data.crop);
		};

		/**
		 * @param {Object} data
		 * @class WB_Picture.Mode
		 */
		var self = function(data) { Element.Mode.prototype.constructor.call(this, data); if (data) applyData(this, data); };
		self.prototype = Object.create(Element.Mode.prototype);
		/** @type Rectangle */
		self.prototype.crop = null;
		/** @param {WB_Form.Mode} mode */
		self.prototype.copy = function(mode) {
			Element.Mode.prototype.copy.call(this, mode);
			applyData(this, mode);
		};
		/** @param {WB_Form} elem */
		self.prototype.store = function(elem) {
			Element.Mode.prototype.store.call(this, elem);
			applyData(this, {
				crop: elem.crop
			});
		};
		/** @param {Picture} elem */
		self.prototype.applyTo = function(elem) {
			Element.Mode.prototype.applyTo.call(this, elem);
			elem.crop = Rectangle.fromObject(this.crop);
		};
		/** @return {Object} */
		self.prototype.serialize = function() {
			var obj = Element.Mode.prototype.serialize.call(this);
			obj.crop = this.crop.serialize();
			return obj;
		};

		return self;
	})();
	
	window.WB_Picture = Picture;
	
	return Picture;
});
;

/** WB Table **/

define('Table', [
	'Element',
	'ContextMenu',
	'ModeManager'
], function(Element, ContextMenu, ModeManager) {
	'use strict';

	/**
	 * Table class
	 * @param {Object} data
	 */
	function Table(data) { if (data) this.__construct(data); }
	
	Table.prototype = new Element();
	wb_builder.registerClass("Table", Table);
	
	Table.editor = null;
	
	Table.prototype.table = null;
	Table.prototype.tableBody = null;
	Table.prototype.cols = 0;
	Table.prototype.rows = 0;
	Table.prototype.cells = null;
	Table.prototype.resizeCells = null;
	Table.prototype.selectedCells = null;
	Table.prototype.border = null;
	Table.prototype.padding = null;
	Table.prototype.bgColor = null;
	Table.prototype.editingCell = null;
	Table.prototype._selectableConfig = null;
	Table.prototype._selectableDisabled = false;
	Table.prototype._eventsDisabled = true;
	
	Table.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);
		var thisClass = this;
		this.setMinSize(10, 10);
		
		this.cols = data.content.cols ? (data.content.cols*1) : 2;
		this.rows = data.content.rows ? (data.content.rows*1) : 2;
		
		this.border = data.content.border ? data.content.border : {
			color: "#c0c0c0",
			style: "solid",
			weight: 1,
			css: {
				border: "1px solid #c0c0c0"
			}
		};
		this.padding = (data.content.padding || data.content.padding === 0) ? data.content.padding : 2;
		this.bgColor = data.content.bgColor ? data.content.bgColor : 'transparent';
		
		this.table = $('<table>').attr({cellspacing: 0, cellpadding: 0}).append('<tbody>');
		this.table.addClass("wb_table");
		this.table.css({"border-collapse": "collapse"});
		this.tableBody = this.table.children("tbody");
		
		this.container.append(this.table);
		
		this.selectedCells = [];
		
		if (!Table.editor) {
			Table.editor = new WB_TextArea({content: {}});
			Table._showEditor = Table.editor.showEditor;
			Table.editor.showEditor = function(cell) {
				var thisClass = this;
				this.textId = cell.textId;
				this.editorId = cell.textId + '_editor';
				this.textDiv = cell.container;
				Table._showEditor.call(this);
				this.textDiv.removeClass('outline1').addClass('outline2');
				this.thisTable = cell.table;
				this.thisTable.editingCell = cell;
				this.thisTable.elem.selectable('destroy');
				this.thisTable.setEventsEnabled(false);
				this.thisTable.setControlsEnabled(false);
			};
			Table._hideEditor = Table.editor.hideEditor;
			Table.editor.hideEditor = function() {
				Table._hideEditor.call(this);
				if (!this.thisTable) return;
				this.thisTable.editingCell.text = this.textDivValue;
				this.textDiv.removeClass('outline2');
				this.thisTable.setControlsEnabled(true);
				this.thisTable.editingCell = null;
				this.thisTable.setEventsEnabled(true);
				this.thisTable.elem.selectable(this.thisTable._selectableConfig);
				this.thisTable.updateElemSize();
				this.thisTable = null;
			};
		}
		
		this.cells = {};
		var cells = data.content.cells ? data.content.cells : [];

		var r = 0, c = 0, tr, cellData, cell;
		for (r = 0; r < this.rows; r++) {
			tr = $('<tr>');
			for (c = 0; c < this.cols; c++) {
				cellData = this.getCell(r, c, cells);
				cell = new Table.TableCell(cellData);
				cell.mode = this.mode;
				cell.row = r;
				cell.col = c;
				cell.table = this;
				tr.append(cell.elem);
				this.cells['#' + cell.id] = cell;
			}
			this.tableBody.append(tr);
		}
		this.setBorder(this.border);
		this.setPadding(this.padding);
		this.setBgColor(this.bgColor);
		this.updateElemSize();
		
		this.elem.draggable("option", "handle", this.moveBtn);
		var clb = this.elem.draggable("option", "stop");
		this.elem.draggable("option", "stop", function(event, ui) {
			if (typeof clb == 'function') clb(event, ui);
			var thisClass = $(this).parent().parent().wbGetClassInstance();
			thisClass.elem.bind('mousemove', thisClass._mousemoveFunc);
		});
		this.moveBtn.bind('mousedown', function(e) {
			var thisClass = $(this).parent().parent().wbGetClassInstance();
			thisClass.elem.unbind('mousemove', thisClass._mousemoveFunc);
		});
		
		this.elem.resizable("destroy");
		this._selectableConfig = {
			filter: 'td',
			cancel: '.wb_edit_btn',
			start: function(event, ui) {
				var thisClass = $(this).wbGetClassInstance();
				thisClass.menu.hide();
				thisClass.elem.unbind('mousemove', thisClass._mousemoveFunc);
			},
			stop: function(event, ui) {
				var thisClass = $(this).wbGetClassInstance();
				thisClass.selectedCells = {};
				$('.ui-selected', this).each(function() {
					var id = $(this).data('id');
					if (id) thisClass.selectedCells['#' + id] = thisClass.cells['#' + id];
				});
				thisClass.isMouseDown = null;
				if (!thisClass._eventsDisabled) thisClass.elem.bind('mousemove', thisClass._mousemoveFunc);
			}
		};
		this.elem.selectable(this._selectableConfig);
		
		this._dblclickFunc = function(e) {
			this._selectCellByEvent(e);
			// remove helper of selectable
			setTimeout(function() { $('.ui-selectable-helper').remove(); }, 100);
			this.editCell();
		};
		this._mousemoveFunc = function(e) {
			var thisClass = $(this).wbGetClassInstance();
			if (thisClass.isMouseDown) {
				thisClass._onMouseDrag(e);
				e.stopPropagation();
				return false;
			} else {
				thisClass._onMouseMove(e);
			}
		};
		this._mousedownFunc = function(e) {
			var thisClass = $(this).wbGetClassInstance();
			if (e.button == 0 && thisClass._resolveDblclick()) {
				return thisClass._dblclickFunc.call(thisClass, e);
			}
			if (e.button == 2) {
				thisClass._selectCellByEvent(e);
			} else {
				thisClass.isMouseDown = {x: e.offsetX, y: e.offsetY};
				thisClass.container.css({'box-sizing': 'content-box', padding: '0 100px 100px 0'});
				if (thisClass.resizeCells) {
					var _resizeCells = thisClass.resizeCells;
					thisClass.resizeCells = [];
					for (var id in thisClass.cells) {
						if (thisClass.cells[id].col == _resizeCells.col) {
							thisClass.resizeCells.push(thisClass.cells[id]);
						}
					}
				}
			}
		};
		this._mouseupFunc = function(e) {
			var thisClass = $(this).wbGetClassInstance();
			thisClass.isMouseDown = null;
			thisClass.container.css({'box-sizing': '', padding: ''});
		};
		
		this.setEventsEnabled(true);
	};
	
	Table.prototype._resolveDblclick = function(e) {
		var thisClass = this;
		if (!this._clickCount) this._clickCount = 0;
		this._clickCount++;
		if (this._clickCount == 2) {
			clearTimeout(this._clickTimeout);
			this._clickCount = 0;
			return true;
		}
		this._clickTimeout = setTimeout(function() {
			thisClass._clickCount = 0;
		}, 300);
		return false;
	};
	
	Table.prototype._selectCellByEvent = function(e) {
		var cell, cx, cy, cw, ch, co, x = e.pageX, y = e.pageY;
		for (var i in this.cells) {
			cell = this.cells[i];
			co = cell.elem.offset();
			cx = co.left; cy = co.top;
			cw = cell.elem.outerWidth();
			ch = cell.elem.outerHeight();
			
			if (x >= cx && x <= cx + cw && y >= cy && y <= cy + ch) {
				if (('#' + cell.id) in this.selectedCells) break;
				for (var j in this.cells) {
					this.cells[j].elem.removeClass('ui-selected');
				}
				cell.elem.addClass('ui-selected');
				this.selectedCells = {};
				this.selectedCells['#' + cell.id] = cell;
				break;
			}
		}
	};
	
	Table.prototype.setEventsEnabled = function(enabled) {
		if (enabled && this._eventsDisabled) {
			this.elem.wbSetClassInstance(this);
			this.elem.bind('mousedown', this._mousedownFunc);
			this.elem.bind('mousemove', this._mousemoveFunc);
			this.elem.bind('mouseup', this._mouseupFunc);
			this._eventsDisabled = false;
		} else if (!enabled && !this._eventsDisabled) {
			this.elem.unbind('mousedown', this._mousedownFunc);
			this.elem.unbind('mousemove', this._mousemoveFunc);
			this.elem.unbind('mouseup', this._mouseupFunc);
			this._eventsDisabled = true;
		}
	};
	
	Table.prototype._selectableSetEnabled = function(enabled) {
		if (enabled && this._selectableDisabled && !this.editingCell) {
			this.elem.selectable('enable');
			this._selectableDisabled = false;
		} else if (!enabled && !this._selectableDisabled) {
			this.elem.selectable('disable');
			this.elem.removeClass('ui-state-disabled');
			this._selectableDisabled = true;
		}
	};
	
	Table.prototype._getModOffset = function(e) {
		var eo = this.elem.offset();
		return {x: e.pageX - eo.left, y: e.pageY - eo.top};
	};
	
	Table.prototype._onMouseDrag = function(e) {
		if (this.resizeCells && this.resizeCells.length) {
			var offset = this._getModOffset(e);
			var diffX = offset.x - this.isMouseDown.x, diffY = offset.y - this.isMouseDown.y;
			var setSize = 0;
			for (var i in this.resizeCells) {
				if (!setSize) setSize = this.resizeCells[i].width + diffX;
				this.resizeCells[i].setSize(setSize);
			}
			this.isMouseDown.x = offset.x; this.isMouseDown.y = offset.y;
			this.updateElemSize();
		}
	};
	
	Table.prototype._onMouseMove = function(e) {
		var minP = 10, x = e.offsetX, brd = this.border.weight;
		var pad = (Math.max(brd, minP) - brd) / 2, x1 = 0, x2 = brd;
		var condition = false, condPart = null;
		var firstRowCells = this.getRow(0);
		firstRowCells.sort(function(a, b) { return (a.col > b.col) ? 1 : -1; });
		for (var i in firstRowCells) {
			var cell = firstRowCells[i];
			if (cell.row > 0) continue;
			x1 += cell.width + brd;
			x2 += cell.width + brd;
			condPart = (x >= x1 - pad && x <= x2 + pad);
			if (condPart) {
				this.resizeCells = cell;
			}
			condition = condition || condPart;
		}
		if (condition) {
			this._selectableSetEnabled(false);
			this.elem.css('cursor', 'w-resize');
		} else {
			this._selectableSetEnabled(true);
			this.elem.css('cursor', '');
			this.resizeCells = null;
		}
	};
	
	Table.prototype.getFirstSelectedCell = function(fromEnd) {
		fromEnd = fromEnd ? true : false;
		if (Object.keys(this.selectedCells).length) {
			var rCell = null;
			if (fromEnd) {
				for (var id in this.selectedCells) {
					var cell = this.selectedCells[id];
					if (!rCell || cell.col > rCell.col || cell.row > rCell.row) {
						rCell = cell;
					}
				}
			} else {
				for (var id in this.selectedCells) {
					var cell = this.selectedCells[id];
					if (!rCell || cell.row < rCell.row || cell.col < rCell.col) {
						rCell = cell;
					}
				}
			}
			return rCell;
		}
		return null;
	};
	
	Table.prototype.getCell = function(row, col, cellsArr) {
		cellsArr = cellsArr ? cellsArr : this.cells;
		for (var i in cellsArr) {
			var cell = cellsArr[i];
			if (cell.row == row && cell.col == col) {
				return cell;
			}
		}
		return null;
	};
	
	Table.prototype.getLastCell = function() {
		return this.getCell(this.rows-1, this.cols-1);
	};
	
	Table.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);
		
		var cells = [];
		for (var id in this.cells) {
			cells.push(this.cells[id].serialize());
		}
		
		data.content = {
			'cols': this.cols,
			'rows': this.rows,
			'border': this.border,
			'padding': this.padding,
			'bgColor': this.bgColor,
			'cells': cells
		};
		return data;
	};
	
	Table.prototype.setSize = function(width, height, useParentFunc) {
		if (useParentFunc) {
			Element.prototype.setSize.call(this, width, height);
		} else {
			if (width) {
				if (!this.border || !this.cols || !this.cells) return;
				var currWidth = this.getWidth() - (this.cols + 1) * this.border.weight;
				var newWidth = width - (this.cols + 1) * this.border.weight;
				var ratio = newWidth / currWidth, totalWidth = 0;
				var lastCellsInRows = {};
				for (var id in this.cells) {
					var cell = this.cells[id];
					var cellWidth = Math.round(cell.width * ratio);
					cell.setSize(cellWidth);
					if (cell.row == 0) totalWidth += cellWidth;
					if (!(cell.row in lastCellsInRows) || lastCellsInRows[cell.row].col < cell.col) {
						lastCellsInRows[cell.row] = cell;
					}
				}
				var diffWidth = newWidth - totalWidth;
				for (var row in lastCellsInRows) {
					var cell = lastCellsInRows[row];
					cell.setSize(cell.width + diffWidth);
				}
				Element.prototype.setSize.call(this, width, height);
			}
			if (height) {}
		}
	};
	
	Table.prototype.updateElemSize = function() {
		var thisClass = this;
		var w = this.table.width();
		var h = this.table.height();
		if (!w || !h) {
			setTimeout(function() {
				thisClass.updateElemSize.call(thisClass);
			}, 1);
		} else {
			this.setSize(w, h, true);
			this.onResize();
		}
	};
	
	Table.prototype.getRow = function(r) {
		var row = [];
		for (var id in this.cells) {
			if (this.cells[id].row === r) {
				row.push(this.cells[id]);
			}
		}
		return row;
	};
	
	Table.prototype.getCol = function(c) {
		var col = [];
		for (var id in this.cells) {
			if (this.cells[id].col === c) {
				col.push(this.cells[id]);
			}
		}
		return col;
	};
	
	Table.prototype.refreshCellsPosition = function() {
		var thisClass = this;
		this.tableBody.find('tr').each(function(row) {
			$(this).find('td').each(function(col) {
				for (var id in thisClass.cells) {
					var cell = thisClass.cells[id];
					if (cell.elem[0] === this) {
						cell.row = row;
						cell.col = col;
						break;
					}
				}
			});
		});
	};
	
	Table.prototype.insertRow = function(above) {
		var sCell = this.getFirstSelectedCell(!above);
		if (!sCell) return;
		var tr = $('<tr></tr>');
		for (var i=0; i < this.cols; i++) {
			var cell = new Table.TableCell();
			cell.row = -1;
			cell.col = i;
			cell.table = this;
			cell.setSize(this.getCell(sCell.row, i).width);
			this.cells['#' + cell.id] = cell;
			tr.append(cell.elem);
		}
		if (above) {
			sCell.elem.parent().before(tr);
		} else {
			sCell.elem.parent().after(tr);
		}
		this.rows++;
		this.refreshCellsPosition();
		this.setBorder();
		this.setPadding();
		this.updateElemSize();
	};
	
	Table.prototype.insertColumn = function(toLeft) {
		var sCell = this.getFirstSelectedCell(!toLeft);
		if (!sCell) return;
		var sCellCol = sCell.col;
		for (var i=0; i < this.rows; i++) {
			var adjCell = this.getCell(i, sCell.col);
			var cell = new Table.TableCell();
			cell.row = i;
			cell.col = -1;
			cell.table = this;
			this.cells['#' + cell.id] = cell;
			if (toLeft) {
				adjCell.elem.before(cell.elem);
			} else {
				adjCell.elem.after(cell.elem);
			}
		}
		this.cols++;
		this.refreshCellsPosition();
		this.setBorder();
		this.setPadding();
		this.updateElemSize();
	};
	
	Table.prototype.removeRows = function() {
		var rowIndex = {};
		for (var id in this.selectedCells) {
			var cell = this.selectedCells[id];
			if (!rowIndex[cell.row]) {
				this._removeRow(cell.row);
				rowIndex[cell.row] = true;
				this.rows--;
			}
		}
		this.refreshCellsPosition();
		this.updateElemSize();
	};
	
	Table.prototype._removeRow = function(row) {
		var tr = null;
		for (var id in this.cells) {
			var cell = this.cells[id];
			if (cell.row == row) {
				if (!tr) tr = cell.elem.parent();
				cell.remove();
			}
		}
		if (tr) {
			tr.detach();
			tr = null;
		}
	};
	
	Table.prototype.removeColumns = function() {
		var colIndex = {};
		for (var id in this.selectedCells) {
			var cell = this.selectedCells[id];
			if (!colIndex[cell.col]) {
				this._removeColumn(cell.col);
				colIndex[cell.col] = true;
				this.cols--;
			}
		}
		this.refreshCellsPosition();
		this.updateElemSize();
	};
	
	Table.prototype._removeColumn = function(col) {
		for (var id in this.cells) {
			var cell = this.cells[id];
			if (cell.col == col) {
				cell.remove();
			}
		}
	};
	
	Table.prototype.mergeCells = function() {
		
	};
	
	Table.prototype.splitCells = function() {
		
	};
	
	Table.prototype.editCell = function() {
		var thisClass = this;
		var cell = null;
		for (var id in this.selectedCells) { cell = this.selectedCells[id]; break; }
		if (!cell) return;
		cell.elem.removeClass('ui-selected');
		delete this.selectedCells['#' + cell.id];
		this.menu.hide();
		Table.editor.showEditor(cell);
	};
	
	Table.prototype.clearCells = function() {
		for (var id in this.selectedCells) {
			var cell = this.selectedCells[id];
			cell.setText("&nbsp;");
			delete this.selectedCells[id];
		}
		this.updateElemSize();
	};
	
	Table.prototype.setBorder = function(border) {
		if (border !== undefined) this.border = border;
		this.table.find('td').css('border', this.border.css.border);
	};
	
	Table.prototype.setPadding = function(padding) {
		if (padding !== undefined) this.padding = padding;
		this.table.find('td > div').css('padding', this.padding + 'px');
	};
	
	Table.prototype.setBgColor = function(bgColor) {
		if (bgColor !== undefined) this.bgColor = bgColor;
		this.table.css('background-color', bgColor);
	};
	
	Table.prototype.initContextMenu = function(elem) {
		Element.prototype.initContextMenu.call(this, elem);
		var thisClass = this;
		
		var idx = this.contextMenuFirstIndex;
		
		var submenu = new ContextMenu(this.id + "_insert_sub");
		submenu.addItem('insertRowAbove', __("Row above"), function() {
			thisClass.insertRow(true);
		});
		submenu.addItem('insertRowBelow', __("Row below"), function() {
			thisClass.insertRow();
		});
		submenu.addSeparator();
		submenu.addItem('insertColumnLeft', __("Column to the left"), function() {
			thisClass.insertColumn(true);
		});
		submenu.addItem('insertColumnRight', __("Column to the right"), function() {
			thisClass.insertColumn();
		});
		this.menu.insertItemAt(idx++, 'insert', __('Insert'), submenu, null, null, null, 'glyphicon glyphicon-plus');

		submenu = new ContextMenu(this.id + "_remove_sub");
		submenu.addItem('removeRows', __("Row(s)"), function() {
			thisClass.removeRows();
		});
		submenu.addItem('removeColumns', __("Column(s)"), function() {
			thisClass.removeColumns();
		});
		submenu.addItem("removeTable", __("Table"), function() {
			thisClass.remove();
		});
		this.menu.insertItemAt(idx++, 'remove2', __('Remove'), submenu, null, null, null, 'glyphicon glyphicon-remove');
		this.submenu_remove = submenu;
		// this.menu.addItem('mergeCells', __("Merge cells"), function() {
			// thisClass.mergeCells();
		// });
		// this.menu.addItem('splitCells', __("Split cell(s)"), function() {
			// thisClass.splitCells();
		// });
		this.menu.insertItemAt(idx++, 'editCellText', __("Edit cell text"), function() {
			thisClass.editCell();
		}, null, null, null, 'glyphicon glyphicon-pencil');
		this.menu.insertItemAt(idx++, 'clearCells', __("Clear cell(s)"), function() {
			thisClass.clearCells();
		}, null, null, null, 'glyphicon glyphicon-erase');
		this.menu.addSeparator(idx++);
	};
	
	Table.prototype.updateContextMenu = function() {
		var len = Object.keys(this.selectedCells).length;
		this.menu.setDisabled('mergeCells', (len == 1));
		this.menu.setDisabled('editCellText', (len > 1));
		this.submenu_remove.setDisabled('removeRows', (this.rows == 1));
		this.submenu_remove.setDisabled('removeColumns', (this.cols == 1));
	};
	
	Table.prototype.onSwitchLanguage = function(langCode) {
		Element.prototype.onSwitchLanguage.call(this, langCode);
		for (var id in this.cells) {
			var cell = this.cells[id];
			cell.setText();
		}
	};
	
	Table.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			tabs: [
				{children: [
					{type: 'HorizontalLayout', css: {marginTop: 15}, columnWeights: [4, 4, 4], children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Background color')},
							{type: 'ColorSelector', id: 'bgColor', big: true}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Border')},
							{type: 'BorderSelector', id: 'border'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Cell padding')},
							{type: 'SizeSelector', id: 'padding', min: 0}
						]}
					]}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.setBorder(fields.border.getValue());
				thisClass.setPadding(fields.padding.getValue());
				thisClass.setBgColor(fields.bgColor.getValue());
				thisClass.updateElemSize();
			}
		});
		fields.border.setValue(thisClass.border);
		fields.padding.setValue(thisClass.padding);
		fields.bgColor.setValue(thisClass.bgColor);
	};
	
	Table.prototype.modeClass = function(data) {
		return new Table.Mode(data);
	};
	
	Table.prototype.switchMode = function(mode, initial) {
		var thisClass = this;
		Element.prototype.switchMode.call(this, mode, initial);
		for (var id in this.cells) {
			this.cells[id].switchMode(mode, initial);
		}
		setTimeout(function() {
			thisClass.updateElemSize();
		}, 20);
	};
	
	/** @class */
	Table.Mode = (function() {
		/**
		 * @param {Table.Mode} mode
		 * @param {Object} data
		 */
		var applyData = function(mode, data) {
			mode.x = data.x;
			mode.y = data.y;
			mode.hidden = data.hidden;
		};

		/**
		 * @param {Object} data
		 * @class
		 */
		var self = function(data) { if (data) applyData(this, data); };
		/** @type Number */
		self.prototype.x = 0;
		/** @type Number */
		self.prototype.y = 0;
		/** @type Boolean */
		self.prototype.hidden = false;
		/** @param {Element.Mode} mode */
		self.prototype.copy = function(mode) {
			applyData(this, mode);
		};
		/** @param {Element} elem */
		self.prototype.store = function(elem) {
			var b = elem.getBounds();
			b.x = b.left;
			b.y = b.top;
			b.hidden = elem.isHidden(true);
			applyData(this, b);
		};
		/** @param {Element} elem */
		self.prototype.applyTo = function(elem) {
			elem.setLocation(this.x, this.y);
			if (this.hidden) elem.hide(true); else elem.show(true);
		};
		/** @return {Object} */
		self.prototype.serialize = function() {
			return { x: Math.round(this.x), y: Math.round(this.y), hidden: this.hidden };
		};

		return self;
	})();
	
	(function(proto) {
		
		var TableCell = function(data) { this.__construct(data); };
		proto.TableCell = TableCell;
		
		TableCell.defaultWidth = 160;
		TableCell.defaultHeight = 30;
		TableCell.idReg = {};
		TableCell.prototype.id = null;
		TableCell.prototype.textId = null;
		TableCell.prototype.elem = null;
		TableCell.prototype.container = null;
		TableCell.prototype.table = null;
		TableCell.prototype.row = 0;
		TableCell.prototype.col = 0;
		TableCell.prototype.colspan = 1;
		TableCell.prototype.rowspan = 1;
		TableCell.prototype.width = 0;
		// TableCell.prototype.height = 0;
		TableCell.prototype.text = '<p class="wb-stl-normal" style="text-align: center;">' + __("Enter your text here") + '</p>';
		TableCell.prototype.modes = null;
		TableCell.prototype.mode = null;
		
		TableCell.prototype.__construct = function(data) {
			if (data === undefined || data === null) data = {};
			this.id = data.id ? data.id : this.getFreeId();
			this.textId = 'wb_celltext_' + this.id;
			TableCell.idReg['#' + this.id] = true;
			this.row = data.row ? (data.row*1) : this.row;
			this.col = data.col ? (data.col*1) : this.col;
			this.width = data.width ? (data.width*1) : 0;
			if (!this.width || this.width <= 0) this.width = TableCell.defaultWidth;
			// this.height = data.height ? (data.height*1) : 0;
			// if (!this.height || this.height <= 0) this.height = TableCell.defaultHeight;
			this.text = data.text ? data.text : this.text;
			this.elem = $('<td>').append('<div>');
			this.elem.data('id', this.id);
			this.container = this.elem.children('div');
			this.container.attr('id', this.textId);
			// this.setSize(this.width, this.height);
			this.setSize(this.width);
			this.setText(this.text);
			this.setColspan(data.colspan ? (data.colspan*1) : this.colspan);
			this.setRowspan(data.rowspan ? (data.rowspan*1) : this.rowspan);
			this.mode = ModeManager.MODE_DESKTOP;
			this.modes = {}; if (data.modes) for (var k in data.modes) { this.modes[k] = this.modeClass(data.modes[k]); }
		};
		
		TableCell.prototype.setText = function(text) {
			this.text = (text === undefined) ? this.text : text;
			this.container.html(__tr(this.text, null, "&nbsp;"));
		};
		
		TableCell.prototype.serialize = function() {
			this.switchMode(this.mode);
			this.modes[this.mode].store(this);
			var m = this.modes[ModeManager.MODE_DESKTOP].serialize();
			var modes = {}; for (var k in this.modes) { modes[k] = this.modes[k].serialize(); }
			return {
				'id': this.id,
				'row': this.row,
				'col': this.col,
				'width': m.width,
				'height': this.height,
				'colspan': this.colspan,
				'rowspan': this.rowspan,
				'text': this.text,
				'modes': modes
			};
		};
		
		TableCell.prototype.remove = function() {
			this.elem.detach();
			this.elem = null;
			this.table.cells['#' + this.id] = null;
			delete this.table.cells['#' + this.id];
		};
		
		TableCell.prototype.setColspan = function(colspan) {
			this.colspan = parseInt(colspan);
			this.elem.attr('colspan', ((this.colspan && this.colspan > 1) ? this.colspan : ''));
		};
		
		TableCell.prototype.setRowspan = function(rowspan) {
			this.rowspan = parseInt(rowspan);
			this.elem.attr('rowspan', ((this.rowspan && this.rowspan > 1) ? this.rowspan : ''));
		};
		
		TableCell.prototype.setSize = function(width, height) {
			var css = {};
			if (width !== undefined) {
				width *= 1;
				if (width) this.width = width;
				css.width = (width) ? width + 'px' : '';
			}
			// if (height !== undefined) {
				// height *= 1;
				// if (height) this.height = height;
				// css.height = (height) ? height + 'px' : '';
			// }
			this.container.css(css);
			// this.elem.css(css);
		};
		
		TableCell.prototype.getFreeId = function() {
			for (var i=1; i < 5000; i++) {
				if (!TableCell.idReg['#' + i]) return i;
			}
		};
		
		TableCell.prototype.modeClass = function(data) {
			return new TableCell.Mode(data);
		};
		
		TableCell.prototype.switchMode = function(mode, initial) {
			Element.prototype.switchMode.call(this, mode, initial);
			this.setSize(this.elem.width() + this.table.border.weight);
		};
		
		TableCell.Mode = (function() {
			'use strict';
			
			/**
			 * @param {TableCell.Mode} mode
			 * @param {Object} data
			 */
			var applyData = function(mode, data) {
				mode.width = data.width;
			};
			
			/**
			 * @param {Object} data
			 * @class TableCell.Mode
			 */
			var self = function(data) { if (data) applyData(this, data); };
			
			/** @type Number */
			self.prototype.width = 0;
			
			/** @param {TableCell.Mode} mode */
			self.prototype.copy = function(mode) {
				applyData(this, mode);
			};
			
			/** @param {TableCell} elem */
			self.prototype.store = function(elem) {
				applyData(this, {
					width: elem.width
				});
			};
			/** @param {TableCell} elem */
			self.prototype.applyTo = function(elem) {
				elem.setSize(this.width);
			};
			/** @return {Object} */
			self.prototype.serialize = function() {
				var obj = { width: this.width };
				return obj;
			};
			
			return self;
			
		})();
		
	})(Table);
	
	return Table;
});
;

/** WB Menu **/

define('Menu', [
	'Element',
	'Site',
	'ContextMenu',
	'ModeManager',
	'HelpSystem',
	'EditMenuItemsDialog',
	'Service',
	'Confirm',
	'TextControl',
	'TreeListControl',
	'SizeSelector'
], function(Element, Site, ContextMenu, ModeManager, HelpSystem, EditMenuItemsDialog,
			Service, Confirm, TextControl, TreeListControl, SizeSelector) {
	'use strict';
	
	var wb_builder = window.wb_builder;
	
	/**
	 * Menu class
	 * @param {Object} data
	 */
	var Menu = function(data) { if (data) this.__construct(data); };

	Menu.prototype = new Element();
	Menu.prototype.constructor = Menu;
	wb_builder.registerClass("Menu", Menu);

	Menu.lastIndex = 0;
	Menu.lastPageId = 0;
	Menu.elemList = {};
	/**
	 * Get menu by menuUID
	 * @param {String} menuUID
	 * @returns {Menu}
	 */
	Menu.getMenuByUID = function(menuUID) {
		for (var k in Menu.elemList) {
			if (Menu.elemList[k].menuUID === menuUID) {
				return Menu.elemList[k];
			}
		}
		return null;
	};
	Menu.hasPage = function(pageId, menu, extended) {
		var list = [], k, i, subList;
		if (!menu) {
			for (var k0 in Menu.elemList) {
				var m = Menu.elemList[k0];
				for (k in m.items) {
					if (!m.items[k].type || m.items[k].type === "internal" || m.items[k].type === "page") {
						if (m.items[k].targetId == pageId) {
							if (extended) {
								list.push({menuUID: m.menuUID, menuItemId: m.items[k].id});
							} else {
								list.push(m.items[k].id);
							}
						}
					}
					subList = Menu.hasPage(pageId, m.items[k], extended);
					for (i = 0; i < subList.length; i++) list.push(subList[i]);
				}
				if (m.itemsTmp && m.itemsTmp.items) {
					for (k in m.itemsTmp.items) {
						if (!m.itemsTmp.items[k].type || m.itemsTmp.items[k].type === "internal" || m.itemsTmp.items[k].type === "page") {
							if (m.itemsTmp.items[k].targetId == pageId) {
								if (extended) {
									list.push({menuUID: m.menuUID, menuItemId: m.itemsTmp.items[k].id});
								} else {
									list.push(m.itemsTmp.items[k].id);
								}
							}
						}
						subList = Menu.hasPage(pageId, m.itemsTmp.items[k], extended);
						for (i = 0; i < subList.length; i++) list.push(subList[i]);
					}
				}
			}
		} else {
			for (k in menu.items) {
				if (!menu.items[k].type || menu.items[k].type === "internal" || menu.items[k].type === "page") {
					if (menu.items[k].targetId == pageId) {
						if (extended) {
							list.push({menuUID: menu.menuUID, menuItemId: menu.items[k].id});
						} else {
							list.push(menu.items[k].id);
						}
					}
				}
				subList = Menu.hasPage(pageId, menu.items[k], extended);
				for (i = 0; i < subList.length; i++) list.push(subList[i]);
			}
		}
		return (extended ? list : WB_Builder.arrayUnique(list));
	};
	Menu.editMenu = function() {
		for (var k in Menu.elemList) {
			var m = Menu.elemList[k];
			if (m.menuElem.children("li").size() > 0) {
				m.openEditMenuItems(false);
			} else {
				m.openEditMenuItems(true);
			}
			break;
		}
	};
	Menu.getTotalPages = function(excludeMe) {
		var total = 0;
		for (var k in Menu.elemList) {
			if (Menu.elemList[k] === excludeMe) continue;
			total += Menu.elemList[k].getItemsCount();
		}
		return total;
	}
	Menu.getLandingMenu = function() {
		for (var k in Menu.elemList) {
			if (Menu.elemList[k].landing) return Menu.elemList[k];
		}
		return null;
	};
	Menu.firstMenuLoadedCallback = null;
	Menu._editDialog = null;

	/** @type {String} */
	Menu.prototype.menuUID = 0;
	Menu.prototype.menuIndex = 0;
	Menu.prototype.menuElem = null;
	Menu.prototype.menuTmp = null;
	Menu.prototype.pagesMenu = null;
	Menu.prototype.menuId = "";
	Menu.prototype.items = null;
	Menu.prototype.itemsTmp = {};
	Menu.prototype.menuType = "hmenu";
	Menu.prototype.menuItemTextTransform = null;
	Menu.prototype.menuItemPadding = 2;
	Menu.prototype.menuItemSpacing = 10;
	Menu.prototype.menuItemAlign = "left";
	Menu.prototype.txtNormal = null;
	Menu.prototype.txtHover = null;
	Menu.prototype.txtActive = null;
	Menu.prototype.bgMenu = null;
	Menu.prototype.bgSubMenu = null;
	Menu.prototype.bgMobMenu = null;
	Menu.prototype.bgItemNormal = null;
	Menu.prototype.bgItemHover = null;
	Menu.prototype.bgItemActive = null;
	Menu.prototype.brdMenu = null;
	Menu.prototype.brdNormal = null;
	Menu.prototype.brdHover = null;
	Menu.prototype.brdActive = null;
	Menu.prototype.landing = null;
	Menu.prototype.editDialog = null;
	Menu.prototype.editDialogMode = null;
	Menu.prototype.origType = null;
	Menu.prototype._elemCollapseBtn = null;

	/**
	 * Construct menu element
	 * @param data menu data object
	 */
	Menu.prototype.__construct = function(data) {
		data.isCommon = ("isCommon" in data) ? (data.isCommon ? true : false) : true;
		data.isMenu = true;

		Element.prototype.__construct.call(this, data);
		var thisClass = this;

		//clone first menu style data if empty
		if ($.isEmptyObject(data.content) && !$.isEmptyObject(Menu.elemList)) {
			//get 1st menu
			$.each(Menu.elemList, function(i, menu) {
				//params we take from menu
				var params = ['brdActive', 'brdHover', 'brdNormal', 'brdMenu', 'bgSubMenu', 'bgMobMenu', 'bgMenu', 'bgItemActive', 'bgItemHover', 'bgItemNormal', 'txtActive', 'txtHover', 'txtNormal', 'menuItemAlign', 'menuType', 'menuItemPadding', 'menuItemSpacing'];
				/*
				if (menu.elem) {
					data.height = menu.elem.height();
				}
				*/
				$.each(params, function(i, param) {
					if (menu[param])
						data.content[param] = menu[param];
				});

				return false;
			});
		}

		this.setEmtyMessageImage("img/ico_tb_menu.png");
		this.setEmtyMessageText(__("Double click to add menu items"));
		this.displayEmtyMessage(true);

		this.menuType = (data.content.menuType === "vmenu") ? "vmenu" : "hmenu";
		this.menuUID = data.content.menuUID ? data.content.menuUID : null;
		if (!this.menuUID || data._copy) this.menuUID = HasherUtil.crc32Hex('' + (new Date()).getTime());
		this.menuIndex = (Menu.lastIndex++);
		this.menuId = this.menuType + "_" + this.menuIndex;
		this.items = {};
		Menu.elemList[this.menuId] = this;

		this.menuElem = $('<ul></ul>');
		this.menuElem.addClass(this.menuType);
		this.menuElem.attr("id", this.menuId);

		//var div = $('<div class="subnav"></div>');
		/* var div = $('<div class="navbar"><div class="navbar-inner"><div class="container"></div></div></div>');
		div.css({width: "100%", height: "100%", margin: "0px", padding: "0px"});
		div.children().first().css({height: "100%"});
		div.children().first().children().first().css({height: "100%"});
		$(".container", div).append(this.menuElem);
		this.container.append(div); */
		this.container.append(this.menuElem);
		//this.controls.append(this.menuElem);
		this.container.css({ overflow: "hidden" });

		//this.cover.css("display", "none");
		this.cover.on("click mousemove", function(e) {
			var px = e.pageX, py = e.pageY, isHover = false;
			for (var k in thisClass.items) {
				var mio = thisClass.items[k].elem.offset();
				var mis = {width: thisClass.items[k].elem.width(), height: thisClass.items[k].elem.height()};
				if (px >= mio.left && px <= (mio.left + mis.width) && py >= mio.top && py <= (mio.top + mis.height)) {
					if (e.type === "click") {
						thisClass.items[k].elem.find("a").eq(0).trigger("click");
					}
					isHover = true;
					break;
				}
			}
			if (e.type === "mousemove") {
				thisClass.cover.css("cursor", (isHover ? "pointer" : "default"));
			}
		});
		// deserialize

		var menu = data.content.tree ? data.content.tree : [];
		var miList = {}, i;

		for (i = 0; i < menu.length; i++) {
			var mi = new Menu.MenuItem(menu[i]);
			miList["#" + mi.id] = mi;
		}

		for (i in miList) {
			if (miList[i].idp && parseInt(miList[i].idp, 10) !== parseInt(miList[i].id, 10) && miList["#" + miList[i].idp]) {
				miList["#" + miList[i].idp].addItem(miList[i]);
			} else {
				miList[i].idp = 0;
				this.addItem(miList[i]);
			}
		}

		this.menuType = data.content.menuType ? data.content.menuType : this.menuType;
		this.menuItemTextTransform = data.content.menuItemTextTransform ? data.content.menuItemTextTransform : null;
		this.menuItemPadding = data.content.menuItemPadding ? data.content.menuItemPadding : this.menuItemPadding;
		this.menuItemSpacing = data.content.menuItemSpacing ? data.content.menuItemSpacing : this.menuItemSpacing;
		this.menuItemAlign = data.content.menuItemAlign ? data.content.menuItemAlign : this.menuItemAlign;

		this.txtNormal = data.content.txtNormal ? data.content.txtNormal : {
			color: "#2c2c2c",
			size: 22,
			decoration: "none",
			font: "Arial,sans-serif",
			style: { },
			align: this.menuItemAlign,
			css: {
				font: "normal normal 22px Arial,sans-serif",
				color: "#2c2c2c",
				"text-decoration": "none"
			}
		};
		this.txtHover = data.content.txtHover ? data.content.txtHover : {
			color: "#43852d",
			size: 22,
			decoration: "none",
			font: "Arial,sans-serif",
			style: { },
			align: this.menuItemAlign,
			css: {
				font: "normal normal 22px Arial,sans-serif",
				color: "#43852d",
				"text-decoration": "none"
			}
		};
		this.txtActive = data.content.txtActive ? data.content.txtActive : {
			color: "#43852d",
			size: 22,
			decoration: "none",
			font: "Arial,sans-serif",
			style: { },
			align: this.menuItemAlign,
			css: {
				font: "normal normal 22px Arial,sans-serif",
				color: "#43852d",
				"text-decoration": "none"
			}
		};
		delete this.txtNormal.css["text-align"];
		delete this.txtHover.css["text-align"];
		delete this.txtActive.css["text-align"];
		this.bgItemNormal = data.content.bgItemNormal ? data.content.bgItemNormal : {
			color: "transparent",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "transparent none repeat scroll left top" }
		};
		this.bgItemHover = data.content.bgItemHover ? data.content.bgItemHover : {
			color: "transparent",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "transparent none repeat scroll left top" }
		};
		this.bgItemActive = data.content.bgItemActive ? data.content.bgItemActive : {
			color: "transparent",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "transparent none repeat scroll left top" }
		};
		this.bgMenu = data.content.bgMenu ? data.content.bgMenu : {
			color: "transparent",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "transparent none repeat scroll left top" }
		};
		this.bgSubMenu = data.content.bgSubMenu ? data.content.bgSubMenu : {
			color: "#2e2e2e",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "#2e2e2e none repeat scroll left top" }
		};
		this.bgMobMenu = data.content.bgMobMenu ? data.content.bgMobMenu : {
			color: "#bcbcbc",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "#bcbcbc none repeat scroll left top" }
		};
		this.brdMenu = data.content.brdMenu ? data.content.brdMenu : {
			color: "#000000",
			style: "none",
			weight: 0,
			css: { border: "none" }
		};
		this.brdNormal = data.content.brdNormal ? data.content.brdNormal : {
			color: "#000000",
			style: "none",
			weight: 0,
			css: { border: "none" }
		};
		this.brdHover = data.content.brdHover ? data.content.brdHover : {
			color: "#000000",
			style: "none",
			weight: 0,
			css: { border: "none" }
		};
		this.brdActive = data.content.brdActive ? data.content.brdActive : {
			color: "#000000",
			style: "none",
			weight: 0,
			css: { border: "none" }
		};
		this.landing = data.content.landing ? true : false;
		this.setMinSize(null, 24);

		// generate menu items for new menu
		if (!data.id && !data._copy) {
			var page = null, copyFrom = null;
			//find non-front page to copy from (or front if no other pages present)
			for (var pid in this.system.site.pages) {
				if (!copyFrom) copyFrom = this.system.site.pages[pid];
				if (this.system.site.pages[pid].isFront) continue;
				copyFrom = this.system.site.pages[pid];
				break;
			}
			//check if we have a page w/o menu as a single-page site
			var singlePage = null;
			$.each(this.system.site.pages, function(num, page) {
				if (page.isSingle) {
					singlePage = page;
				}
				//should have one and only (if exists)
				return false;
			});

			if (singlePage) {
				this.addItem(new Menu.MenuItem({
					name: (singlePage.title),
					targetId: singlePage.id
				}));
			}
			else {
				this.system.site.addPage((page = new Site.Page({
					id: this.system.site.getFreeId(),
					title: (__("New Item") + " 1"),
					copyFrom: (copyFrom ? copyFrom.id : null)
				})));
				this.addItem(new Menu.MenuItem({
					name: (__("New Item") + " 1"),
					targetId: page.id
				}));
			}

			this.system.site.addPage((page = new Site.Page({
				id: this.system.site.getFreeId(),
				title: (__("New Item") + " 2"),
				copyFrom: (copyFrom ? copyFrom.id : null)
			})));
			this.addItem(new Menu.MenuItem({
				name: (__("New Item") + " 2"),
				targetId: page.id
			}));
			//this.setSize(null, 40);
			setTimeout(function() {
				thisClass.resizeMenuBox();
			}, 500);
		}

		this._elemCollapseBtn = $('<a>').addClass('btn btn-default btn-collapser').appendTo(this.container);
		this._elemCollapseBtn.append('<span class="icon-bar"></span>');
		this._elemCollapseBtn.append('<span class="icon-bar"></span>');
		this._elemCollapseBtn.append('<span class="icon-bar"></span>');

		this.updateStyle();

		setTimeout(function() {
			thisClass.updateStyle();
		}, 1000);

		$(this.controls).bind("dblclick", function(e) {
			if (thisClass.menuElem.children("li").size() > 0) {
				thisClass.comProperties();
				thisClass.comDialog.tabbedPane.selectTab(0);
			} else {
				thisClass.openEditMenuItems(true);
			}
		});

		wb_builder.reloadLeftMenu();
		this.modeContextOk.goTo = true;
	};

	/** @param {String} mode */
	Menu.prototype.switchMode = function(mode) {
		Element.prototype.switchMode.call(this, mode);
		if (mode === ModeManager.MODE_PHONE) {
			this.container.addClass('collapsed');
		} else {
			this.container.removeClass('collapsed');
		}
	};
	
	/** @return {Object} */
	Menu.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this), txt = '';
		for (var k in this.items) { txt += (txt.length ? ' | ' : '') + this.items[k].name; }
		opts.text = txt.substring(0, 100);
		if (opts.text.length < txt.length) opts.text += '...';
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return object
	 */
	Menu.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);
		
		data.content = {
			menuUID: this.menuUID,
			tree: this.serializeItems(),
			menuType: this.menuType,
			menuItemTextTransform: this.menuItemTextTransform,
			menuItemPadding: this.menuItemPadding,
			menuItemSpacing: this.menuItemSpacing,
			menuItemAlign: this.menuItemAlign,
			txtNormal: this.txtNormal,
			txtHover: this.txtHover,
			txtActive: this.txtActive,
			bgItemNormal: this.bgItemNormal,
			bgItemHover: this.bgItemHover,
			bgItemActive: this.bgItemActive,
			bgMenu: this.bgMenu,
			bgSubMenu: this.bgSubMenu,
			bgMobMenu: this.bgMobMenu,
			brdMenu: this.brdMenu,
			brdNormal: this.brdNormal,
			brdHover: this.brdHover,
			brdActive: this.brdActive,
			landing: this.landing,
			// landingContentOffset: this.landingContentOffset
		};

		return data;
	};

	/**
	 * Serialize all items in this menu
	 * @param {Array} src
	 * @param {Array} dest
	 * @return object
	 */
	Menu.prototype.serializeItems = function(src, dest) {
		if (!dest) dest = [];
		if (!src) src = this.items;
		for (var i in src) {
			dest.push(src[i].serialize());
			this.serializeItems(src[i].items, dest);
		}
		return dest;
	};

	/**
	 * Add menu item
	 * @param {Menu.MenuItem} mi menu item as WB_Menu.MenuItem
	 * @param {Number} idx index to add menu item at
	 * @param {Boolean} tmp
	 */
	Menu.prototype.addItem = function(mi, idx, tmp) {
		tmp = (typeof(tmp) === "undefined") ? false : tmp; 
		if (idx === null || typeof(idx) === "undefined") idx = -1;
		if (mi.parent) {
			mi.parent.removeItem(mi, tmp);
		} else if (!tmp && mi.menu) {
			mi.menu.removeItem(mi, tmp);
		}

		var items = (tmp ? this.itemsTmp : this.items), sortedItems;

		items["#" + mi.id] = mi;
		if (!tmp) {
			if (idx >= 0 && idx < this.menuElem.children().size()) {
				$(this.menuElem.children().get(idx)).before(mi.elem);
				sortedItems = {};
				this.menuElem.children().each(function() {
					var mi = $(this).wbGetClassInstance();
					sortedItems["#" + mi.id] = mi;
				});
				items = sortedItems;
			} else {
				this.menuElem.append(mi.elem);
			}
		}
		else {
			sortedItems = {};
			var ct = 0;
			$.each(items, function(id, el){
				if (ct === idx) {
					sortedItems["#" + mi.id] = mi;
				}
				if (el.id != mi.id) {
					sortedItems["#" + el.id] = el;
				}
				ct++;
			});

			this.itemsTmp = sortedItems;
		}


		mi.idp = 0;
		mi.menu = this;
		mi.parent = null;
	};

	/**
	 * Copy and add all items from provided menu item
	 * @param {Menu.MenuItem} mi menu item
	 * @param {Menu.MenuItem} subMi menu item to add to
	 */
	Menu.prototype.addAllItems = function(mi, subMi) {
		if (subMi && subMi.menu && subMi.menu !== this) return;
		var i, k, item, target = (subMi ? subMi : this);
		if (mi instanceof TreeListControl.Item) {
			for (i = 0; i < mi.getItemCount(); i++) {
				item = new Menu.MenuItem(mi.getItem(i).getOriginal());
				target.addItem(item);
				this.addAllItems(mi.getItem(i), item);
			}
		} else {
			for (k in mi.items) {
				item = new Menu.MenuItem(mi.items[k].serialize());
				target.addItem(item);
				this.addAllItems(mi.items[k], item);
			}
		}
	};

	/**
	 * Remove menu item
	 * @param {Menu.MenuItem} mi menu item
	 * @param tmp something tmp
	 */
	Menu.prototype.removeItem = function(mi, tmp) {
		var items = tmp ? this.itemsTmp : this.items;
		items["#" + mi.id] = null;		
		delete items["#" + mi.id];

		if (!tmp) {
			mi.menu = null;
			mi.parent = null;
			mi.elem.detach();
		}
	};

	/**
	 * Remove (and dispose of) all items from menu
	 */
	Menu.prototype.removeAllItems = function() {
		for (var k in this.items) {
			var mi = this.items[k];
			this.removeItem(mi);
			mi.dispose();
		}
		// IE remembers object property positions,
		// so without this sorting do not work on IE
		this.items = {};
	};
	
	Menu.prototype.getItemsCount = function() {
		if (Object.keys) {
			return Object.keys(this.items).length;
		} else {
			var count = 0;
			for (var i in this.items) {
				count++;
			}
			return count;
		}
	};

	/**
	 * Update style
	 * @param {String} langCode
	 */
	Menu.prototype.updateStyle = function(langCode) {
		var thisClass = this;

		if (this.menuElem.children().size() === 0) {
			this.displayEmtyMessage(true);
			this.menuElem.hide();
		} else {
			this.displayEmtyMessage(false);
			this.menuElem.show();
		}

		var css = {};

		this.menuElem.removeClass("vmenu");
		this.menuElem.removeClass("hmenu");
		this.menuElem.addClass(this.menuType);

		this.menuElem.children("li").each(function() {
			$("a", this).css($.extend(
					{padding: SizeSelector.toCSS(thisClass.menuItemPadding)},
					((thisClass.menuItemTextTransform && typeof(thisClass.menuItemTextTransform) === "object") ? thisClass.menuItemTextTransform.css : {})
				));
			if ($(this).hasClass("active")) {
				css = $.extend({}, thisClass.txtActive.css);
				css = $.extend(css, thisClass.bgItemActive.css);
			} else {
				css = $.extend({}, thisClass.txtNormal.css);
				css = $.extend(css, thisClass.bgItemNormal.css);
			}
			css.background = css.background.replace("url('", "url('" + wb_builder.userBaseUrl);
			delete css["text-align"];
			$(this).children("a").css(css);
		});
		/*for (var mk in this.items) {
			var mi = this.item[mk];
			if ((!mi.type || mi.type === "internal" || mi.type === "page") && mi.targetId) {
				mi.elem.find("a").on("click", function() {
					wb_builder.goToPage(mi.targetId);
				});
			}
		}*/
		this.menuElem.children("li").css({ margin: SizeSelector.toCSS(this.menuItemSpacing) });
		this.menuElem.children("li").css(this.brdNormal.css);
		var ww = 0;
		this.menuElem.children("li").each(function() {
			if ($(this).is(':not(:visible)')) { return true; }
			ww += $(this).outerWidth(true);
		});
		//if (ww < this.getWidth()) ww = this.getWidth();
		if (this.menuType === "vmenu") {
			this.menuElem.css({ minWidth: "auto" });
		} else {
			// this.menuElem.css({ minWidth: ww + "px" });
		}
		this.menuElem.css(this.brdMenu.css);
		css = $.extend({}, this.bgMenu.css);
		css.background = css.background.replace("url('", "url('" + wb_builder.userBaseUrl);
		this.menuElem.css(css);
		this.menuElem.css("text-align", this.menuItemAlign);
		this.elem.css("text-align", this.menuItemAlign);

		if (typeof Menu.firstMenuLoadedCallback === 'function' && Object.keys(Menu.elemList).length === 1)
			Menu.firstMenuLoadedCallback();
	};

	Menu.prototype.openEditMenuItems = function(isNewItem) {
		if (!Menu._editDialog) {
			Menu._editDialog = new EditMenuItemsDialog();
			if (wb_builder.maxMenuItems > 0) {
				Menu._editDialog.setLiteVersionMessage('<div class="wb-tiny-btn">' + __('%sGo Premium%s to manage more than %d pages')
					.replace('%s', '<a' + (wb_builder.upgradeUrl ? ' href="' + wb_builder.upgradeUrl + '"' : '') + ' target="_blank">')
					.replace('%s', '</a>')
					.replace('%d', wb_builder.maxMenuItems)
				+ '</div>');
			}
		}
		if (isNewItem || !this.getItemsCount()) {
			Menu._editDialog.getNewDialog().setMenu(this, wb_builder.site.pages);
			var canAdd = (wb_builder.maxMenuItems <= 0 || Menu.getTotalPages() < wb_builder.maxMenuItems);
			Menu._editDialog.getNewDialog().setDisabled(!canAdd);
			Menu._editDialog.getNewDialog().setVisible(true);
		} else {
			Menu._editDialog.setMenu(this, wb_builder.site.pages);
			Menu._editDialog.setVisible(true);
		}
	};
	
	Menu.prototype.setLanding = function(landing) {
		this.landing = landing ? true : false;
	};

	/**
	 * Extend element properties dialog
	 */
	Menu.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 420, maxBodyHeight: 420},
			tabs: [
				{name: __('Menu Style'), children: [
					{type: 'FlowLayout', spacing: 20, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Align')},
							{type: 'HAlignSelector', id: 'menuItemAlign'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Border')},
							{type: 'BorderSelector', id: 'brdMenu'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Type')},
							{type: 'FlowLayout', id: 'menuType',
								children: [
									{type: 'RadioBox', label: __('Horizontal'), id: 'hmenu', group: ('wb_menu_' + this.id + '_menuType')},
									{type: 'RadioBox', label: __('Vertical'), id: 'vmenu', group: ('wb_menu_' + this.id + '_menuType')}
								],
								init: function() {
									this.getValue = function() {
										var val = 'hmenu';
										if (fields.hmenu.getValue()) {
											val = 'hmenu';
										} else if (fields.vmenu.getValue()) {
											val = 'vmenu';
										}
										return val;
									};
									this.setValue = function(val) {
										fields.hmenu.setValue((val === 'hmenu'));
										fields.vmenu.setValue((val === 'vmenu'));
									};
								}
							}
						]}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Background')},
						{type: 'BackgroundSelector', id: 'bgMenu'},
						{type: 'Label', text: __('Submenu background'), css: {marginTop: '10px'}},
						{type: 'BackgroundSelector', id: 'bgSubMenu'},
						{type: 'Label', text: __('Mobile menu background'), css: {marginTop: '10px'}},
						{type: 'BackgroundSelector', id: 'bgMobMenu'}
					], styleClass: 'modal-body-inscroll', css: {height: 250, overflowY: 'auto', marginTop: '10px'}}
				]},
				{name: __('Menu Item Style'), children: [
					{type: 'FlowLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Font')},
							{type: 'FontFamilySelector', id: 'txtFont'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Size')},
							{type: 'SizeSelector', id: 'txtSize'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Text Transform')},
							{type: 'FontTransformSelector', id: 'menuItemTextTransform'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Spacing')},
							{type: 'SpacingSelector', id: 'menuItemSpacing'}
						]}
					]},
					{type: 'TabbedPane', fixedHeight: 180, noScroll: true, tabs: [
						{name: __('Item'), children: [
							{type: 'FlowLayout', css: {marginTop: 10}, children: [
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Style')},
									{type: 'FontStyleSelector', id: 'textNormalStyle'}
								]},
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Color')},
									{type: 'ColorSelector', id: 'textNormalColor', noTransparent: true}
								]},
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Border')},
									{type: 'BorderSelector', id: 'brdNormal'}
								]}
							]},
							{type: 'Label', text: __('Background'), css: {marginTop: 10}},
							{type: 'BackgroundSelector', id: 'bgNormal'}
						]},
						{name: __('Item: Hover'), children: [
							{type: 'FlowLayout', css: {marginTop: 10}, children: [
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Style')},
									{type: 'FontStyleSelector', id: 'textHoverStyle'}
								]},
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Color')},
									{type: 'ColorSelector', id: 'textHoverColor', noTransparent: true}
								]},
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Border')},
									{type: 'BorderSelector', id: 'brdHover'}
								]}
							]},
							{type: 'Label', text: __('Background'), css: {marginTop: 10}},
							{type: 'BackgroundSelector', id: 'bgHover'}
						]},
						{name: __('Item: Active'), children: [
							{type: 'FlowLayout', css: {marginTop: 10}, children: [
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Style')},
									{type: 'FontStyleSelector', id: 'textActiveStyle'}
								]},
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Color')},
									{type: 'ColorSelector', id: 'textActiveColor', noTransparent: true}
								]},
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Border')},
									{type: 'BorderSelector', id: 'brdActive'}
								]}
							]},
							{type: 'Label', text: __('Background'), css: {marginTop: 10}},
							{type: 'BackgroundSelector', id: 'bgActive'}
						]}
					]}
				]}/* ,
				{name: __('Menu Landing'), children: [
					{type: 'FlowLayout', id: 'landingContent1', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Landing'), helpText: __('Enabling landing will make all pages go one after another with fixed header')},
							{type: 'DropdownBox', id: 'landing', options: [
								{id: 'none', name: __('none')},
								{id: 'vertical', name: __('Vertical landing')}
							]}
						]},
						{type: 'VerticalLayout' , children: [
							{type: 'Label', text: __('Content Top Offset'), helpText: __('The top offset of page content')},
							{type: 'FlowLayout', verticalAlign: 'middle', children: [
								{type: 'TextField', id: 'landingContentOffset', css: {width: 60}},
								{type: 'Label', text: ' px', css: {marginBottom: '0px'}}
							]}
						],
						css: {marginTop: 20}}
					]},
					{type: 'FlowLayout', id: 'landingContent2', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Landing option is available only on one menu element.')}
						]}
					]}
				]} */
			],
			callbackFunc: function(fields) {
				HelpSystem.play(7, false, thisClass);

				thisClass.menuItemAlign = fields.menuItemAlign.getValue();
				thisClass.brdMenu = fields.brdMenu.getValue();
				thisClass.menuType = fields.menuType.getValue();
				thisClass.bgMenu = fields.bgMenu.getValue();
				thisClass.bgSubMenu = fields.bgSubMenu.getValue();
				thisClass.bgMobMenu = fields.bgMobMenu.getValue();
				thisClass.brdNormal = fields.brdNormal.getValue();
				thisClass.brdHover = fields.brdHover.getValue();
				thisClass.brdActive = fields.brdActive.getValue();

				thisClass.menuItemTextTransform = fields.menuItemTextTransform.getValue();

				// backward compatibility to old format
				var spc = fields.menuItemSpacing.getValue();
				thisClass.menuItemPadding = [ spc.paddingTop, spc.paddingRight, spc.paddingBottom, spc.paddingLeft ];
				thisClass.menuItemSpacing = [ spc.marginTop, spc.marginRight, spc.marginBottom, spc.marginLeft ];

				thisClass.txtNormal = TextControl.combine(
					fields.txtFont,
					fields.txtSize,
					fields.textNormalColor,
					fields.textNormalStyle
				);
				delete thisClass.txtNormal.css["text-align"];

				thisClass.txtHover = TextControl.combine(
					fields.txtFont,
					fields.txtSize,
					fields.textHoverColor,
					fields.textHoverStyle
				);
				delete thisClass.txtHover.css["text-align"];

				thisClass.txtActive = TextControl.combine(
					fields.txtFont,
					fields.txtSize,
					fields.textActiveColor,
					fields.textActiveStyle
				);
				delete thisClass.txtActive.css["text-align"];

				thisClass.bgItemNormal = fields.bgNormal.getValue();
				thisClass.bgItemHover = fields.bgHover.getValue();
				thisClass.bgItemActive = fields.bgActive.getValue();
				
				// thisClass.setLanding(fields.landing.getValue());
				// thisClass.system.site.landingContentOffset = fields.landingContentOffset.getValue();

				thisClass.updateStyle();
				thisClass.resizeMenuBox();
			},
			close: function() { HelpSystem.play(7, false, thisClass); }
		});

		fields.menuItemAlign.setValue(this.menuItemAlign);
		fields.brdMenu.setValue(this.brdMenu);
		fields.menuType.setValue(this.menuType);
		fields.bgMenu.setValue(this.bgMenu);
		fields.bgSubMenu.setValue(this.bgSubMenu);
		fields.bgMobMenu.setValue(this.bgMobMenu);
		fields.brdNormal.setValue(this.brdNormal);
		fields.brdHover.setValue(this.brdHover);
		fields.brdActive.setValue(this.brdActive);
		// fields.landing.setValue(this.landing);
		// fields.landingContentOffset.setValue(this.system.site.landingContentOffset);
		/* if (!Menu.elemLanding || Menu.elemLanding === this) {
			fields.landingContent1._elem.show();
			fields.landingContent2._elem.hide();
		} else {
			fields.landingContent1._elem.hide();
			fields.landingContent2._elem.show();
		} */

		fields.menuItemTextTransform.setValue(this.menuItemTextTransform);

		// backward compatibility to old format
		var val;
		if (!this.menuItemPadding.length) {
			val = isNaN(parseInt(this.menuItemPadding, 10)) ? 0 : parseInt(this.menuItemPadding, 10);
			this.menuItemPadding = [val, val, val, val];
		} else if (this.menuItemPadding.length === 2) {
			this.menuItemPadding[2] = this.menuItemPadding[0];
			this.menuItemPadding[3] = this.menuItemPadding[1];
		} else if (this.menuItemPadding.length !== 4) {
			this.menuItemPadding = [0, 0, 0, 0];
		}
		if (!this.menuItemSpacing.length) {
			val = isNaN(parseInt(this.menuItemSpacing, 10)) ? 0 : parseInt(this.menuItemSpacing, 10);
			this.menuItemSpacing = [val, val, val, val];
		} else if (this.menuItemSpacing.length === 2) {
			this.menuItemSpacing[2] = this.menuItemSpacing[0];
			this.menuItemSpacing[3] = this.menuItemSpacing[1];
		} else if (this.menuItemSpacing.length !== 4) {
			this.menuItemSpacing = [0, 0, 0, 0];
		}
		fields.menuItemSpacing.setValue({
			paddingTop: this.menuItemPadding[0],
			paddingRight: this.menuItemPadding[1],
			paddingBottom: this.menuItemPadding[2],
			paddingLeft: this.menuItemPadding[3],
			marginTop: this.menuItemSpacing[0],
			marginRight: this.menuItemSpacing[1],
			marginBottom: this.menuItemSpacing[2],
			marginLeft: this.menuItemSpacing[3]
		});

		fields.txtFont.setValue(this.txtNormal.font);
		fields.txtSize.setValue(this.txtNormal.size);

		fields.textNormalColor.setValue(this.txtNormal.color);
		fields.textNormalStyle.setValue(this.txtNormal.style);
		fields.textHoverColor.setValue(this.txtHover.color);
		fields.textHoverStyle.setValue(this.txtHover.style);
		fields.textActiveColor.setValue(this.txtActive.color);
		fields.textActiveStyle.setValue(this.txtActive.style);

		fields.bgNormal.setValue(this.bgItemNormal);
		fields.bgHover.setValue(this.bgItemHover);
		fields.bgActive.setValue(this.bgItemActive);

		HelpSystem.play(6, true, this);
	};

	Menu.prototype.toggleDialogMode = function(type, fields) {
		if (this.editDialogMode === type) return;
		if (type === "add") {
			this.reloadTree(fields.miList);
			fields.miId.val(null).removeData();
			if (this.editDialog)
				this.editDialog.buttons.children("[iid='" + __("Save") + "']").html(__("Add"));
			//uncheck radios
			fields.miType.input.find("input").removeAttr("checked");
			fields.miType.input.find("input:first").attr("checked", "checked");
			fields.miType.input.find("input").change();
			//show blank radio
			fields.miType.input.find("input[value='blank']").parent().show();
			//empty fields
			fields.miName.setValue("");
			fields.miTypePages.setValue("");
			fields.miTypeUrl.setValue('http://');
			fields.miTarget.setValue("");
			if (fields.miNoMenu) { fields.miNoMenu.setValue(false); }
		}
		else {
			if (this.editDialog) {
				this.editDialog.buttons.children("[iid='" + __("Save") + "']").html(__("Save"));
				// this.editDialog.buttons.children("[iid='" + __("Save") + "']").removeClass("hide2");
			}
			//remove blank radio
			fields.miType.input.find("input[value='blank']").parent().hide();
		}
		//focus
		// fields.miName.input.focus();

		this.editDialogMode = type;
	};

	Menu.prototype.reloadTree = function(tree, noRefresh) {
		if (!noRefresh) tree.jstree("refresh", -1);
		tree.find("li").unbind("mouseenter").unbind("mouseleave").each(function() {
			var thisLi = $(this);
			var btn = thisLi.children("button.btn");
			if (btn.size() === 0) {
				btn = $('<button class="btn btn-mini btn-link jstree-x-btn"><i class="icon-remove"></i></button>').bind("click", function() {
					tree.jstree("remove", thisLi);
				});
				thisLi.append(btn);
			}
		}).mouseenter(function(e) {
			e.stopPropagation();
			var th = this;
			tree.find("button").hide();
			if ($(this).parents("li").length) {
				setTimeout(function(){
					tree.find("button").hide();
					$(th).children("button").show();
				}, 1);
			}
			else 
				$(this).children("button").show();
		}).mouseleave(function() {
			$(this).children("button").hide();
			$(this).parents("li").mouseenter();
		});
	};

	Menu.prototype.pagesPre = {};

	/**
	 * Reloads menu from a given list object
	 * @param {Array} items
	 * @param {Number} lvl
	 * @param {Object} parent
	 */
	Menu.prototype.reloadMenu = function(items, lvl, parent) {
		var thisClass = this;
		if (!lvl) {
			lvl = 0;
			//remove old items, Why not using this.removeAllItems() ?
			if (typeof this.items === 'object' && this.items !== null) {
				$.each(this.items, function(i, item){
					thisClass.removeItem(item);
				});
			}
		}
		lvl++;
		$.each(items, function(i, item) {
			item.id = String(item.id);
			item.targetId = String(item.targetId);
			item.idp = String(item.idp);
			var id = item.id.substr(0, 1) === 'p' ? item.id.substr(1) : item.id;
			var target = item.targetId.substr(0, 1) === 'p' ? item.targetId.substr(1) : item.targetId;
			var idp = item.idp.substr(0, 1) === 'p' ? item.idp.substr(1) : item.idp;
			item.idp = idp;
			var page;
			//need new page
			if (item.type && (item.type === 'internal' || item.type === 'page')) {
				if (item.id === item.targetId) {
					//page created?
					if (thisClass.pagesPre[id])
						item.targetId = thisClass.pagesPre[id];
					//create page
					else {
						page = new Site.Page({});
						page.title = item.name;
						page.id = thisClass.system.site.getFreeId();
						thisClass.system.site.addPage(page);
						item.targetId = page.id;
						thisClass.pagesPre[id] = page.id;
					}
				}
				else if (item.targetId.substr(0, 1) === 'p') {
					//page created?
					if (thisClass.pagesPre[target])
						item.targetId = thisClass.pagesPre[target];
					//create page
					else {
						page = new Site.Page({});
						page.title = item.name;
						page.id = thisClass.system.site.getFreeId();
						thisClass.system.site.addPage(page);
						item.targetId = page.id;
						thisClass.pagesPre[target] = page.id;
					}
				}
				else 
					thisClass.pagesPre[id] = target;
			}
			else if(!item.type && target && item.targetId.substr(0, 1) !== 'p') {
				thisClass.pagesPre[id] = target;
			}
			item.id = id;

			var mi = new Menu.MenuItem(item);
			if (item.items) {
				thisClass.reloadMenu(item.items, lvl, mi);
			}

			if (lvl === 1) {
				thisClass.addItem(mi);
			}
			else if (parent) {
				parent.addItem(mi, null, false);	
			}
		});
		if (lvl === 1) {
			//deleting unused pages 
			//WB_Menu.deleteUnusedPages(); // commented because it works very wrong
		}
	};

	Menu.getUsedPages = function(menu) {
		var pages = {};
		if (!$.isEmptyObject(menu.items)) {
			$.each(menu.items, function(i, item) {
				if(item.targetId && ((typeof(item.type) === "undefined" && !item.url) || (item.type === 'internal' || item.type === 'page'))) {
					pages[item.targetId] = item.id;
				}
				if (!$.isEmptyObject(item.items)) {
					pages = $.extend(pages, Menu.getUsedPages(item));
				}
			});
		}
		return pages;
	};

	Menu.getAllUsedPages = function() {
		var pages = {};

		$.each(Menu.elemList, function(num, menu) {
			pages = $.extend(pages, Menu.getUsedPages(menu));
		});

		return pages;
	};

	/**
	 * Delete unused pages
	 * @FIXME need alert to say that pages will be deleted?
	 */
	Menu.deleteUnusedPages = function() {
		//used pages id's
		var pages = Menu.getAllUsedPages();
		var pgs = {};
		$.each(pages, function(i, v) {
			pgs['#' + i] = 1; 
		});
		//if all menu items deleted - keep current page
		var keepPage = $.isEmptyObject(pgs) ? '#' + wb_builder.pageId : null;
		for (var pid in wb_builder.site.pages) {
			if (!pgs[pid] && pid != keepPage) {
				wb_builder.site.removePage(wb_builder.site.pages[pid]);
			}
			else {
				wb_builder.site.pages[pid].isSingle = true;
			}
		}
	};

	/**
	 * Resize menu parent box
	 */
	Menu.prototype.resizeMenuBox = function() {
		//parent elem
	//	var p = this.menuElem.parents(".wb_element");
		var p = this.elem;

		if (this.menuType === "hmenu") {
			//rigth pos
			var rpos = p.outerWidth() + p.position().left;

			var w = 0;
			this.menuElem.children("li").each(function(){
				if ($(this).css("display") === "none") return;
				var ew = $(this).outerWidth() + parseInt($(this).css("margin-left"), 10) + parseInt($(this).css("margin-right"), 10);
				w = w + ew;
			});


			if (w > p.width()) {
				this.setLocation(rpos - w);
				this.setSize(w);
				/*p.css("left", (rpos - w) + "px");
				p.width(w + 2);
				p.children(".wb_controls").width(w);*/
			}

		}
		else {
			var h = 0, items = this.menuElem.children("li:visible"), len = items.length;
			items.each(function(i){
				// var eh = $(this).outerHeight() + parseInt($(this).css("margin-top"), 10) + parseInt($(this).css("margin-bottom"), 10);
				var mTop = parseInt($(this).css("margin-top"), 10);
				var mBot = parseInt($(this).css("margin-bottom"), 10);
				var eh = $(this).outerHeight() + Math.max(mTop, mBot);
				if (i == len-1) eh += mBot;
				h = h + eh;
			});
			
			if (h > p.height()) {
				this.setSize(null, h);
				/*p.height(h + 2);
				p.children(".wb_controls").height(h);*/
			}
		}
		this.fitToParent();

	};

	/**
	 * Clone o_0
	 * @param {Object} obj object to clone
	 */
	Menu.prototype.cloneItems = function(obj) {
		var CloneObj = {};
		// CloneObj.clear();
		//items list iteration
		thisClass = this;
		jQuery.each(obj, function(i, val) {
			var newObject = jQuery.extend(true, {}, val);
			//menu item params
			jQuery.each(newObject, function(i, val) {
				if (i === 'items') {
					var its = {};
					jQuery.each(val, function(it, mi) {
						var nm = new Menu.MenuItem(mi);	
						nm.parent = newObject;
						its[it] = nm;
					});
					newObject[i] = its;
				}
			});

			CloneObj[i] = newObject;
		});
		return CloneObj;
	};

	Menu.prototype.initContextMenu = function(elem) {
		Element.prototype.initContextMenu.call(this, elem);

		var idx = this.contextMenuFirstIndex;	
		var thisClass = this;

		this.menu.insertItemAt(idx++, 'newMenu', __("New Menu Item"), function() {
			thisClass.openEditMenuItems(true);
		}, null, null, null, "glyphicon glyphicon-plus");
		this.menu.insertItemAt(idx++, 'editManu', __("Edit Menu"), function() {
			thisClass.openEditMenuItems(false);
		}, null, null, null, "glyphicon glyphicon-pencil");

		this.pagesMenu = new ContextMenu();

		this.menu.insertItemAt(idx++, "goTo", __("Go to page"), this.pagesMenu,
			null, null, null, "glyphicon glyphicon-folder-open");
		this.pagesMenu.setHeight(200);

		this.menu.addSeparator(idx++);
	};

	Menu.prototype.updateContextMenu = function() {
		Element.prototype.updateContextMenu.call(this);
		var thisClass = this;
		this.pagesMenu.removeAllItems();

		var ct = 1;
		var pd = '&nbsp;&nbsp;&nbsp;&nbsp;';

		var count = 0;
		for (var i in Menu.elemList) {
			if (Menu.elemList.hasOwnProperty(i)) {
				count++;
			}
		}
		var set = wb_builder.menuId;
		$.each(Menu.elemList, function(num, menu) {
			//icon-folder-close
			if (count > 1) {
				// thisClass.pagesMenu.addItem("pages_menu" + num, __('Menu') + ' ' + ct, null, false, false, null, "icon-folder-close");
				if ( ct > 1 ) {
					thisClass.pagesMenu.addSeparator(-1);
				}
			}

			$.each(menu.items, function(i, item) {
				var t = item.type ? item.type : (item.url ? 'external' : 'internal');
				var tg = (t === 'external') ? item.url : item.targetId;
				var name = Element.truncate(__tr(item.name, thisClass.system.site.getLastDefLang()), 15) + ((t === 'external') ? ' (' + __('external') + ')' : '');
				var p = thisClass.system.site.pages[tg];
				thisClass.pagesMenu.addItem("pages_menu_item_" + item.id, name, function(e, p) {
					wb_builder.menuId = item.id;
					if (t === 'internal' || t === 'page') {
						wb_builder.goToPage(tg);
					} else {
						window.open(tg, '_blank');
						window.focus();
						thisClass.pagesMenu.setSelected("pages_menu_item_" + item.id, true);
					}
				}, (wb_builder.menuId == item.id || !set), false, p, "glyphicon glyphicon-file");
				set = true;
				if (item.items) {
					$.each(item.items, function(i2, item2) {
						var t2 = item2.type ? item2.type : (item2.url ? 'external' : 'internal');
						var tg2 = (t2 === 'external') ? item2.url : item2.targetId;
						var name = Element.truncate(__tr(item2.name, thisClass.system.site.getLastDefLang()), 15) + ((t2 === 'external') ? ' (' + __('external') + ')' : '');
						var p = thisClass.system.site.pages[tg2];
						thisClass.pagesMenu.addItem("pages_menu_item_" + item2.id, pd + name, function(e, p) {
							wb_builder.menuId = item.id;
							if (t === 'internal' || t === 'page')
								wb_builder.goToPage(tg2);
							else {
								window.open(tg2, '_blank');
								window.focus();
								thisClass.pagesMenu.setSelected("pages_menu_item_" + item2.id, true);
							}
						}, (wb_builder.menuId == item2.id), false, p, "");
					});
				}
			});
			// if (count > 1) $('</optgroup>').appendTo("#menu_sel");
			ct++;
		});


		/*for (var pid in this.system.site.pages) {
			var p = this.system.site.pages[pid];
			this.pagesMenu.addItem("pages_menu_item_" + p.id, WB_Element.truncate(p.title, 15), function(e, p) {
				thisClass.system.goToPage(p.id);
			}, (wb_builder.pageId == p.id), false, p, "icon-file");
		}*/
		if (this.parent) {
			this.parent.addPaste(this.menu, this, true);
		}
	};

	Menu.prototype.exclude = function(noRemove, onConstruct) {
		if (onConstruct) {
			Element.prototype.exclude.call(this, noRemove, onConstruct);
		} else {
			Element.prototype.exclude.call(this, true);
			this.remove(false, true);
		}
	};
	
	Menu.prototype.remove = function(noHistory, noConfirm) {
		var thisClass = this;
		if (!noConfirm) {
			var thisNoHistory = noHistory;
			Confirm.showDialog(__("Delete menu"),
				$('<div class="wb_change_template_dlg">' +
					'<div class="qq">' + __("Are you sure you want to delete this menu?") + '</div>' +
					'<div class="red">' + __("Once deleted all pages this menu links to will also be deleted.") + '</div>' + 
				'</div>'), [
				{
					title: __("No, keep current menu")
				},
				{
					title: __("Yes, delete menu"),
					cssClass: "btn-danger",
					func: function() {
						thisClass.remove(thisNoHistory, true);
					}
				}
			], 480);
			Confirm.dialog.setCenterButtons(true);
			return;
		}
		this.reloadMenu({}, 0);
		Menu.elemList[this.menuId] = null;
		delete Menu.elemList[this.menuId];
		Element.prototype.remove.call(this, noHistory);
		wb_builder.reloadLeftMenu();
	};

	Menu.prototype.onSwitchLanguage = function(langCode) {
		Element.prototype.onSwitchLanguage.call(this, langCode);
		this.updateStyle(langCode);

		for (var i in this.items) {
			this.items[i].onSwitchLanguage(langCode);
		}
	};

	(function(proto) {

		/**
		 * Menu Item class
		 * @param {Object} data
		 */
		var MenuItem = function(data) { if (data) this.__construct(data); };
		proto.MenuItem = MenuItem;

		MenuItem.idReg = {};
		MenuItem.prototype.elem = null;
		MenuItem.prototype.virtual = false;
		MenuItem.prototype.menu = null;
		MenuItem.prototype.menuElem = null;
		MenuItem.prototype.parent = null;
		/** @type {Site.MenuItem} */
		MenuItem.prototype.items = null;
		MenuItem.prototype.itemCount = 0;
		MenuItem.prototype.id = 0;
		MenuItem.prototype.idp = 0;
		MenuItem.prototype.targetId = 0;
		MenuItem.prototype.anchor = 0;
		MenuItem.prototype.name = __("New Item");
		MenuItem.prototype.alias = "";
		MenuItem.prototype.url = "";
		MenuItem.prototype.type = "internal";
		MenuItem.prototype.target = "_self";
		MenuItem.prototype.copyFrom = null;
		MenuItem.prototype.isNew = false;
		MenuItem.prototype.noMenu = false;
		MenuItem.prototype._clickIsSet = false;
		/**
		 * Construct menu item element
		 * @param data menu item data object
		 */
		MenuItem.prototype.__construct = function(data) {
			this.virtual = (data && data.virtual) ? true : false;
			if (!this.virtual) {
				this.elem = $('<li><a href="javascript:void(0)"></a></li>');
				if ((!data.type || data.type === "internal" || data.type === "page") && data.targetId) {
					this.elem.find("a").on("click", function() {
						wb_builder.goToPage(data.targetId);
					});
					this._clickIsSet = true;
				}
				this.elem.wbSetClassInstance(this);
			} else {
				this.isNew = data.isNew ? true : false;
			}
			this.id = (data._ignoreId ? null : data.id);
			this.type = data.type;
			if (!this.id) this.id = this.getFreeId();
			MenuItem.idReg["#" + this.id] = true;
			this.idp = data.idp ? data.idp : 0;
			this.targetId = data.targetId ? data.targetId : data.target_id;
			this.anchor = data.anchor ? data.anchor : null;
			this.setName(__tr(data.name, wb_builder.site.getLastDefLang()) ? data.name : this.name);
			this.alias = data.alias;
			this.url = data.url;
			this.target = data.target;
			if (this.target !== "_blank") this.target = "_self";
			this.setNoMenu(data.noMenu ? true : false);
			this.type = this.type ? this.type : (this.url ? 'external' : 'internal');

			this.items = {};

			//console.log(this.name + " :: " + wb_builder.pageId + " :: " + this.targetId + " :: " + ((wb_builder.pageId == this.targetId) ? "Y" : "N"));

			if (!this.virtual) {
				if (wb_builder.pageId == this.targetId && ((!this.type && !this.url) || (this.type && (this.type === 'internal' || this.type === 'page')))) {
					this.elem.addClass("active");
				}

				this.elem.children("a").hover(
					function() {
						if ($(this).hasClass("dropdown")) {
							$(this).addClass("open");
						}
					}, function() {
						$(this).removeClass("open");
					}
				);
			}
		};

		MenuItem.prototype.updateConstruct = function() {
			var thisClass = this;
			if (!this.virtual && !this._clickIsSet) {
				if ((!this.type || this.type === "internal" || this.type === "page") && this.targetId) {
					this.elem.find("a").on("click", function() {
						wb_builder.goToPage(thisClass.targetId);
					});
					this._clickIsSet = true;
				}
			}
		};

		/**
		 * Get id for new menu item, that is not alredy taken
		 * @return new id
		 */
		MenuItem.prototype.getFreeId = function() {
			for (var i = 100; i < 5000; i++) {
				if (!MenuItem.idReg["#" + i]) 
					return i;

			}
			return 1;
		};

		/**
		 * Serialize this element
		 * @return object
		 */
		MenuItem.prototype.serialize = function() {
			var obj = {
				id:			this.id,
				idp:		((!this.idp && this.parent) ? this.parent.id : this.idp),
				type:		this.type,
				targetId:	this.targetId,
				anchor:		((this.anchor && (typeof this.anchor === 'object')) ? {name: this.anchor.name, pageId: this.anchor.pageId} : null),
				name:		this.name,
				alias:		this.alias,
				url:		this.url,
				target:		this.target,
				noMenu:		this.noMenu,
				copyFrom:	this.copyFrom
			};
			if (this.virtual) {
				obj.isNew = this.isNew ? true : false;
			}
			return obj;
		};

		/**
		 * Add submenu item
		 * @param {Menu.MenuItem} mi menu item as WB_Menu.MenuItem
		 * @param {Number} idx index to insert menu item at
		 * @param {Number} r unused
		 */
		MenuItem.prototype.addItem = function(mi, idx, tmp, r) {
			if (idx === null || typeof(idx) === "undefined") idx = -1;
			if (mi.parent) {
				mi.parent.removeItem(mi, tmp);
			} else if (mi.menu) {
				mi.menu.removeItem(mi, tmp);
			}
			if (this.virtual) {
				mi.virtual = true;
			}
			var sortedItems;
			if (!tmp) {
				if (!this.virtual) {
					if (!this.menuElem) {
						this.menuElem = $('<ul class="dropdown-menu pull-right"></ul>');
					}
					if (this.menuElem.children().length === 0) {
						this.elem.append(this.menuElem);
						this.elem.addClass("dropdown");
						this.elem.children("a").addClass("dropdown-toggle");
						this.elem.children("a").attr("data-toggle", "dropdown");
					}
				}
				if (idx >= 0 && idx < this.getItemCount()) {
					if (!this.virtual) {
						$(this.menuElem.children().get(idx)).before(mi.elem);
					}
					sortedItems = [];
					for (var k in this.items) { sortedItems.push(this.items[k]); }
					sortedItems.splice(idx, 0, mi);
					this.items = {};
					for (var i = 0; i < sortedItems.length; i++) {
						this.items["#" + sortedItems[i].id] = sortedItems[i];
					}
				} else if (!this.virtual) {
					this.menuElem.append(mi.elem);
					this.items["#" + mi.id] = mi;
				}
			}
			else {
				sortedItems = {};
				var ct = 0;
				$.each(this.items, function(id, el){
					if (ct === idx) {
						sortedItems["#" + mi.id] = mi;
					}
					if (el.id != mi.id) {
						sortedItems["#" + el.id] = el;
					}
					ct++;
				});
				this.items = sortedItems;
			}
			this.items["#" + mi.id] = mi;


			mi.menu = this.menu;
			mi.parent = this;
			mi.idp = this.id;
		};

		/**
		 * Get item by ID
		 * @param {Number} id menu item id
		 * @return {Menu.MenuItem} menu item as WB_Menu.MenuItem
		 */
		MenuItem.prototype.getItem = function(id) {
			return this.items["#" + id];
		};

		/**
		 * Remove submenu item
		 * @param {Menu.MenuItem} mi menu item as WB_Menu.MenuItem
		 * @param {Boolean} tmp
		 */
		MenuItem.prototype.removeItem = function(mi, tmp) {
			tmp = (typeof(tmp) === "undefined") ? false : tmp;
			this.items["#" + mi.id] = null;
			delete this.items["#" + mi.id];

			if (!tmp) {
				mi.menu = null;
				mi.parent = null;
				mi.idp = null;
				if (!this.virtual) {
					mi.elem.detach();
					if (this.menuElem && this.menuElem.children().length === 0) {
						this.menuElem.detach();
						this.elem.removeClass("dropdown");
						this.elem.children("a").removeClass("dropdown-toggle");
						this.elem.children("a").removeAttr("data-toggle");
					}
				}
			}
		};

		/**
		 * Dispose of item (remove from memory)
		 */
		MenuItem.prototype.dispose = function() {
			if (this.parent) {
				this.parent.removeItem(this);
			} else if (this.menu) {
				this.menu.removeItem(this);
			}
			for (var k in this.items) {
				this.items[k].dispose();
			}
			if (!this.virtual) {
				this.elem.remove();
				this.elem.empty();
				delete this.elem;
			}
		};

		/**
		 * Get item count
		 * @return {Number} item count
		 */
		MenuItem.prototype.getItemCount = function() {
			var count = 0;
			for (var k in this.items) { count++; }
			return count;
		};

		/**
		 * Get parent of this item
		 * @return parent or null
		 */
		MenuItem.prototype.getParent = function() {
			return this.parent;
		};

		/**
		 * Set menu item name
		 * @param {String} name name to set
		 * @param {String} langCode
		 */
		MenuItem.prototype.setName = function(name, langCode) {
			this.name = name;
			if (!this.virtual) {
				var trName = __tr(this.name, langCode, __tr(this.name, wb_builder.site.getLastDefLang()));
				this.elem.children("a").html(trName);
			}
		};

		MenuItem.prototype.setNoMenu = function(noMenu) {
			this.noMenu = noMenu;
			if (!this.virtual) {
				if (this.noMenu) {
					this.elem.css({display: "none"});
				} else {
					this.elem.css({display: ""});
				}
			}
		};

		MenuItem.prototype.onSwitchLanguage = function(langCode) {
			this.setName(this.name, langCode);
		};

	})(Menu);
	
	Service.menu = {
		MenuItem: Menu.MenuItem,
		getElemList: function() { return Menu.elemList; },
		getFirstMenuLoadedCallback: function() { return Menu.firstMenuLoadedCallback; },
		setFirstMenuLoadedCallback: function(func) { Menu.firstMenuLoadedCallback = func; },
		getLandingMenu: Menu.getLandingMenu,
		editMenu: Menu.editMenu,
		getMenuByUID: Menu.getMenuByUID
	};
	
	return Menu;
});
;

/** WB Gallery **/

define('Gallery', ['Element', 'Service', 'ContextMenu'], function(Element, Service, ContextMenu) {

	/**
	 * Gallery element class
	 * @param {Object} data
	 * @param {boolean} initial
	 */
	var Gallery = function(data, initial) { if (data) this.__construct(data, initial); };

	Gallery.prototype = new Element();
	Gallery.prototype.constructor = Gallery;
	wb_builder.registerClass("Gallery", Gallery);

	Gallery.config = {
		thumbWidth: 64,
		thumbHeight: 64,
		minWidth: 320,
		minHeight: 240
	};
	Gallery.selectDialog = null;
	Gallery.editDialog = null;
	Gallery.prototype.gallery_name = false;
	Gallery.prototype.type = "slideshow";
	Gallery.prototype.slideshowInterval = 5;
	Gallery.prototype.slideshowSpeed = 400;
	Gallery.prototype.images = null;
	Gallery.prototype.galleryElem = null;
	Gallery.prototype.imageIndex = 0;
	Gallery.prototype.typeSubmenu = null;
	Gallery.prototype.slideshowTimer = null;
	Gallery.prototype.displayedImage = null;
	Gallery.prototype.loadingImage = null;
	Gallery.prototype.listImgCont = null;
	Gallery.prototype.thumbImgCont = null;
	Gallery.prototype.fullThumbWidth = 0;
	Gallery.prototype.fullThumbHeight = 0;
	Gallery.prototype.bgColor = "#000000";
	Gallery.prototype.backupBgColor = null;
	Gallery.prototype.border = null;
	Gallery.prototype.padding = null;

	/**
	 * Construct gallery element
	 * @param data gallery data object
	 * @param {boolean} initial
	 */
	Gallery.prototype.__construct = function(data, initial) {
		Element.prototype.__construct.call(this, data, initial);
		var thisClass = this;

		this.setEmtyMessageImage("img/ico_tb_gallery.png");
		this.setEmtyMessageText(__("Double click to add pictures"));

		this.container.append((this.galleryElem = $('<div class="wb_gallery"></div>')));

		this.displayEmtyMessage(true);

		this.images = [];

		this.border = data.content.border ? data.content.border : {
			color: '#FFFFFF',
			style: 'solid',
			weight: 5,
			css: { border: '5px solid #FFFFFF' }
		};

		this.padding = data.content.padding ? data.content.padding : 5;
		this.type = data.content.type ? data.content.type : this.type;
		this.slideshowInterval = WB_Builder.isset(data.content.interval) ? data.content.interval : 10;
		this.slideshowSpeed = WB_Builder.isset(data.content.speed) ? data.content.speed : 400;
		this.setBgColor(data.content.bgColor ? data.content.bgColor : "#000000");
		this.images = (data.content.images && data.content.images.length)
			? data.content.images : [];
		this.render();

		this.updateMinSize(true);

		if (!this.images.length && !initial)
			thisClass.changePictures();

		this.elem.bind("resizestop", function() { thisClass.onResize(); });

		this.controls.bind("dblclick", function(e) {
			thisClass.changePictures();
		});
	};
	
	/** @return {String} */
	Gallery.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = this.type;
		if (this.images.length) opts.thumb = wb_builder.makeLocalUrl(this.images[0]);
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return object
	 */
	Gallery.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			"type":		this.type,
			"interval":	this.slideshowInterval,
			"speed":	this.slideshowSpeed,
			"bgColor":	this.bgColor,
			"images":	this.images,
			"border":	this.border,
			"padding":	this.padding
		};

		return data;
	};

	/**
	 * Display message to inform user how to change picture
	 * @param display if true message will be displayed else hidden
	 */
	Gallery.prototype.displayEmtyMessage = function(display) {
		if (display) {
			this.elem.css("background", this.noPhotoBg);
			this.noPhotoMsg.css("display", "block");
			if (this.galleryElem)
				this.galleryElem.css("display", "none");
		} else {
			this.elem.css("background", "");
			this.noPhotoMsg.css("display", "none");
			if (this.galleryElem)
				this.galleryElem.css("display", "block");
		}
	};

	Gallery.prototype.changePictures = function() {
		var thisClass = this;

		this.dialog = Service.mediaLibrary.open(__("Add pictures"), true, "image", false);

		this.dialog.addButton(__("Close"));
		this.dialog.addButton(__("Apply"), function() {
			thisClass.images = thisClass.dialog.getSelectedFiles();
			thisClass.dialog.hide();
			thisClass.render();
		}, true);

		if (this.images.length > 0) {
			this.dialog.setSelectedFiles(this.images);
		} else {
			this.dialog.clearFileSelection();
		}
		this.dialog.setVisible(true);
	};

	Gallery.prototype.render = function() {
		if (this.slideshowTimer) clearInterval(this.slideshowTimer);
		this.slideshowTimer = null;

		this.galleryElem.empty();
		if (this.images.length > 0) {
			this.displayEmtyMessage(false);
			switch (this.type) {
				case "slideshow": this.renderSlideshow(); break;
				case "list": this.renderList(); break;
				default: this.renderThumbs(); break;
			}
		} else {
			this.displayEmtyMessage(true);
		}
	};

	Gallery.prototype.renderThumbs = function() {
		this.displayedImage = null;
		this.loadingImage = null;
		this.galleryElem.html('<div style="width: 100%; height: 100%; overflow: auto;"></div>');
		var elem = this.galleryElem.children().first();
		for (var i = 0; i < this.images.length; i++) {
			this.addImage(elem, this.images[i], false);
		}
	};

	Gallery.prototype.renderSlideshow = function() {
		var thisClass = this;
		this.displayedImage = null;
		this.loadingImage = null;
		this.galleryElem.html(
			'<div class="gallery-slideshow">'+
				'<div class="gallery-slide-image" style="overflow: hidden;"></div>'+
				'<div class="gallery-slide-left"></div>'+
				'<div class="gallery-slide-right"></div>'+
			'</div>'
		);
		var cont = this.galleryElem.children().first();
		var larr = cont.children(".gallery-slide-left");
		var rarr = cont.children(".gallery-slide-right");
		this.listImgCont = cont.children(".gallery-slide-image");
		larr.css({left: "0", top: Math.floor((cont.innerHeight() - larr.height()) / 2) + "px"});
		rarr.css({right: "0", top: Math.floor((cont.innerHeight() - larr.height()) / 2) + "px"});

		larr.click(function() {
			thisClass.slideshowPrev();
		});

		rarr.click(function() {
			thisClass.slideshowNext();
		});

		this.slideshowTimer = setInterval(function(){
			thisClass.slideshowNext();
		}, this.slideshowInterval * 1000);
		this.imageIndex = -1;
		this.slideshowNext();
	};

	Gallery.prototype.renderList = function() {
		var thisClass = this;
		this.displayedImage = null;
		this.loadingImage = null;

		var w = this.getWidth();
		var h = this.getHeight();
		var tw = Gallery.config.thumbWidth;
		var th = Gallery.config.thumbHeight;

		var thumbcont = $("<div></div>");
		var callback = function() {
			var img = thisClass.imageElems[thisClass.imageIndex];
			$(img.parentNode.parentNode.parentNode).children(".tmb-selected").removeClass("tmb-selected");
			$(img.parentNode.parentNode).addClass("tmb-selected");
		};
		this.imageElems = {};
		
		//var images = [];
		for (var i = 0; i < this.images.length; i++) {
			var image = this.images[i];
			/*var img_title = "";
			var img_file = this.system.makeLocalUrl(image);
			var img_thumb = this.system.makeLocalUrl(image);*/
			var img = this.addImage(thumbcont, image, false, true);
			img.idx = i;
			img.css({cursor: "pointer"});
			this.imageElems[img.idx] = img.get(0);
			img.click(function() {
				// TODO: change image
				thisClass.imageIndex = parseInt(this.idx, 10);
				thisClass.displayImage(thisClass.listImgCont, callback);
			});

			var par = img.parent().parent();
			if (i === this.imageIndex) {
				par.addClass("tmb-selected");
				tw = Gallery.config.thumbWidth + 8;
				th = Gallery.config.thumbHeight + 8;
			}
		}

		this.fullThumbWidth = tw;
		this.fullThumbHeight = th;

		thumbcont.css({position: "absolute", left: "0", top: "5px", width: (tw * this.images.length) + "px", height: th + "px"});

		var galcont = document.createElement("DIV");
		$(galcont).css({position: "relative", width: w + "px", height: h + "px"});
		galcont.className = "gallery-list";

		var imgcont = document.createElement("DIV");
		$(imgcont).css({position: "relative", width: w + "px", height: (h - th - 10) + "px", overflow: "hidden"});
		imgcont.className = "gallery-list-image";

		var thumbdiv_in1 = document.createElement("DIV");
		$(thumbdiv_in1).css({position: "relative", "float": "left", width: "16px", height: (th + 10) + "px", cursor: "pointer"});
		thumbdiv_in1.className = "gallery-list-left";
		$(thumbdiv_in1).click(function() {
			thisClass.slideBy(-thisClass.fullThumbWidth * 3);
		});

		var thumbdiv_in2 = document.createElement("DIV");
		$(thumbdiv_in2).css({position: "relative", "float": "left", width: (w-32) + "px", height: (th + 10) + "px", overflow: "hidden"});
		thumbdiv_in2.className = "gallery-list-thumbs";

		var thumbdiv_in3 = document.createElement("DIV");
		$(thumbdiv_in3).css({position: "relative", "float": "left", width: "16px", height: (th + 10) + "px", cursor: "pointer"});
		thumbdiv_in3.className = "gallery-list-right";
		$(thumbdiv_in3).click(function() {
			thisClass.slideBy(thisClass.fullThumbWidth * 3);
		});

		var thumbdiv = document.createElement("DIV");
		$(thumbdiv).css({position: "relative", width: w + "px", height: (th + 10) + "px", overflow: "hidden"});

		$(thumbdiv_in2).append(thumbcont);

		thumbdiv.appendChild(thumbdiv_in1);
		thumbdiv.appendChild(thumbdiv_in2);
		thumbdiv.appendChild(thumbdiv_in3);

		galcont.appendChild(imgcont);
		galcont.appendChild(thumbdiv);

		this.listImgCont = $(imgcont);
		this.thumbImgCont = thumbdiv_in2;
		this.galleryElem.append(galcont);
		// this.displayImage(this.listImgCont);
		
		this.slideshowTimer = setInterval(function(){
			thisClass.slideshowNext(callback);
		}, this.slideshowInterval * 1000);
		this.imageIndex = -1;
		this.slideshowNext(callback);
	};

	Gallery.prototype.slideBy = function(delta) {
	   var cont = $(this.thumbImgCont);
	   var div = $(this.thumbImgCont.firstChild);
	   var pos = div.position();
	   var x = pos.left;
	   x -= delta;
	   var minx = -(div.width() - cont.width());
	   if( x < minx ) x = minx;
	   if( x > 0 ) x = 0;
		div.animate({left: x + "px"});
	};

	Gallery.prototype.onResize = function(onConstruct) {
		Element.prototype.onResize.call(this, onConstruct);

		var thisClass = this;
		var w = this.getWidth();
		var h = this.getHeight();

		if (this.type === "list") {
			this.galleryElem.children().first().css({width: w + "px", height: h + "px"});

			//var tw = this.fullThumbWidth;
			var th = this.fullThumbHeight;

			if (this.listImgCont) {
				this.listImgCont.css({width: w + "px", height: (h - th - 10) + "px"});
			}
			$(this.thumbImgCont).css({width: (w-32) + "px", height: (th + 10) + "px"});
			if (this.thumbImgCont) {
				$(this.thumbImgCont.parentNode).css({width: w + "px", height: (th + 10) + "px"});
			}
		}

		if (this.type === "slideshow") {
			var cont = this.galleryElem.children().first();
			var larr = cont.children(".gallery-slide-left");
			var rarr = cont.children(".gallery-slide-right");
			cont.css({width: w + "px", height: h + "px"});
			larr.css({top: Math.floor((cont.innerHeight() - larr.height()) / 2) + "px"});
			rarr.css({top: Math.floor((cont.innerHeight() - rarr.height()) / 2) + "px"});
		}

		if (this.displayedImage) {
			var size = this.displayedImage.data("_wb_size_");
			var stl = this.calcImageStyles(this.listImgCont, this.displayedImage, size);

			$(this.displayedImage).css({
				left: stl.left + "px",
				top: stl.top + "px"
			});
			var img = $(this.displayedImage).first();
			if (img && img.size()) {
				img = img.get(0);
				img.width = stl.image_width;
				img.height = stl.image_height;
			}
		}
	};

	Gallery.prototype.calcImageStyles = function(displayCont, cont, image) {
		if (image) {
			var borderWeight = (this.border.style === 'none') ? 0 : this.border.weight;
			var maxWidth = (displayCont.innerWidth() - (this.padding + borderWeight) * 2);
			var maxHeight = (displayCont.innerHeight() - (this.padding + borderWeight) * 2);

			var w = image.width + this.border.weight;
			var h = image.height + this.border.weight;
			if(w > maxWidth || h > maxHeight) { // One of these is larger than the window
				var ratio1 = w / maxWidth;
				var ratio2 = h / maxHeight;
				var ratio = (ratio1>ratio2)?ratio1:ratio2;
				w = Math.floor(w / ratio);
				h = Math.floor(h / ratio);
			}
			var imgs = {
				left: Math.floor((maxWidth - w) / 2 + this.padding),
				top: Math.floor((maxHeight - h) / 2 + this.padding),
				image_width: w,
				image_height: h
			};
			return imgs;
		}
		else {
			return {
				left: 0,
				top: 0,
				image_width: 0,
				image_height: 0
			};
		}
	};

	Gallery.prototype.displayImage = function(displayCont, callback) {
		if (!displayCont)
			return false;

		var thisClass = this;
		
		if (typeof callback === 'function') callback();

		var image = this.images[this.imageIndex];
		if (!image) return;
		var cont = $("<div></div>");
		cont.addClass("gallery-image");
		cont.css(thisClass.border.css);

		var thisDisplayCont = displayCont;
		cont.css({ display: "none", position: "absolute" });
		var img = new Image();
		//cont.append(img);
		img.alt = "";
		img.onload = function() {
			if (thisClass.displayedImage) {
				thisClass.displayedImage.fadeOut(thisClass.slideshowSpeed, function() {
					$(this).remove();
				});
			}
			var size = { width: this.width, height: this.height };
			cont.data("_wb_size_", size);
			cont.append(img);
			var stl = thisClass.calcImageStyles(thisDisplayCont, cont, size);
			cont.css({ left: stl.left + "px", top: stl.top + "px" });
			$(img).css({ width: stl.image_width + "px", height: stl.image_height + "px" });
			this.width = stl.image_width;
			this.height = stl.image_height;
			cont.fadeIn(thisClass.slideshowSpeed, function() {
				thisClass.displayedImage = (cont.parent() && cont.parent().size()) ? cont : null;
				thisClass.loadingImage = null;
			});
		};
		displayCont.append(cont);
		this.loadingImage = cont;
		img.src = this.system.makeLocalUrl(image);
	};

	Gallery.prototype.slideshowNext = function(callback) {
		if (this.images.length === 0) return;
		this.imageIndex++;
		if (this.imageIndex >= this.images.length)
			this.imageIndex = 0;
		this.displayImage(this.listImgCont, callback);
	};

	Gallery.prototype.slideshowPrev = function(callback) {
		if (this.images.length === 0) return;
		this.imageIndex--;
		if (this.imageIndex < 0)
			this.imageIndex = this.images.length - 1;
		this.displayImage(this.listImgCont, callback);
	};

	Gallery.prototype.addImage = function(cont, image, closebtn, nolightbox) {
		var img_thumb_url = this.system.makeLocalUrl(image);

		var div = $("<div></div>");
		div.addClass("wb_thumb");

		var wrp = $("<div></div>");
		wrp.css({
			zIndex: "1",
			width: Gallery.config.thumbWidth + "px",
			height: Gallery.config.thumbHeight + "px",
			overflow: "hidden"
		});
		div.append(wrp);

		var img = $('<img src="" alt="" />');
		img.get(0).onload = function() {
			var dw = this.width - Gallery.config.thumbWidth;
			var dh = this.height - Gallery.config.thumbHeight;
			var w = Gallery.config.thumbWidth, h = Gallery.config.thumbHeight;
			if (Math.abs(dw) < Math.abs(dh)) {
				w = Gallery.config.thumbWidth;
				h = Math.round(this.height * Gallery.config.thumbWidth / this.width);
			} else {
				w = Math.round(this.width * Gallery.config.thumbHeight / this.height);
				h = Gallery.config.thumbHeight;
			}
			var x = Math.round((Gallery.config.thumbWidth - w) / 2);
			var y = Math.round((Gallery.config.thumbHeight - h) / 2);
			$(this).css({left: x + "px", top: y + "px", width: w + "px", height: h + "px"});
			this.height = 1000;
		};
		img.get(0).src = img_thumb_url;
		//img.attr("alt", image.title);
		img.css({
			display: "block",
			zIndex: "1",
			maxWidth: "auto",
			position: "relative"
		});

		wrp.append(img);

		cont.append(div);
		return img;
	};

	Gallery.prototype.getImages = function() {
		return this.images;
	};

	Gallery.prototype.updateMinSize = function(onConstruct) {
		this.onResize(onConstruct);
	};

	Gallery.prototype.setType = function(type) {
		wb_builder.pageModified = true;
		this.type = type;
		this.render();
		this.updateMinSize();
	};

	Gallery.prototype.getBgColor = function() {
		return this.bgColor;
	};

	Gallery.prototype.setBgColor = function(color) {
		this.bgColor = color;
		$(this.galleryElem).css("background-color", this.bgColor);
	};

	Gallery.prototype.setFrequency = function(frequency) {
		if (frequency >= 1 && frequency <= 10) {
			this.slideshowInterval = frequency;
			this.reset();
		}
	};

	Gallery.prototype.getFrequency = function() {
		return this.slideshowInterval;
	};

	Gallery.prototype.reset = function() {
		if (this.slideshowTimer) clearInterval(this.slideshowTimer);
		var thisClass = this;
		this.slideshowTimer = setInterval(function(){
			thisClass.slideshowNext();
		}, this.slideshowInterval * 1000);
	};

	Gallery.prototype.getBackupBgColor = function() {
		return this.backupBgColor;
	};

	Gallery.prototype.setBackupBgColor = function(color) {
		this.backupBgColor = color;
	};

	Gallery.prototype.getBorder = function() {
		return this.border;
	};

	Gallery.prototype.setBorder = function(border) {
		this.border = border;
		$(this.container.find('.gallery-image')).css(this.border.css);
	};
	
	Gallery.prototype.getPadding = function() {
		return this.padding;
	};
	
	Gallery.prototype.setPadding = function(padding) {
		this.padding = padding;
	};

	/**
	 * Extend element properties dialog
	 */
	Gallery.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 384},
			tabs: [
				{children: [
					{type: 'Label', text: __('Gallery Type')},
					{type: 'CustomContainer', id: 'galleryType', init: function() {
						this._ulElem = $('<ul class="thumbnails wb_gallery_wrap">' +
							'<li data-value="thumbs"><div class="thumbnail" style="text-align: center;">' +
								'<div class="wb_gallery_type_thumbs"></div>' +
								'<div>' + __('Thumbnails') + '</div>' +
							'</div></li>' +
							'<li data-value="slideshow"><div class="thumbnail" style="text-align: center;">' +
								'<div class="wb_gallery_type_slideshow"></div>' +
								'<div>' + __('Slideshow') + '</div>' +
							'</div></li>' +
							'<li data-value="list"><div class="thumbnail" style="text-align: center;">' +
								'<div class="wb_gallery_type_list"></div>' +
								'<div>' + __('List') + '</div>' +
							'</div></li>' +
						'</ul>').appendTo(this._elem);
						
						this._ulElem.children('li').on('click', function() {
							$(this).parent().children('li').removeClass('active');
							$(this).addClass('active');
						}).css({cursor: 'pointer'});
						
						
						
						this.getValue = function() {
							var val = this._ulElem.children('li.active').attr('data-value');
							return val ? val : 'thumbs';
						};
						this.setValue = function(val) {
							this._ulElem.children('li').removeClass('active');
							var li = this._ulElem.children("li[data-value='" + val + "']");
							li.addClass('active');
						};
					}},
					{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Gallery Pictures')},
							{type: 'ImageSelector', id: 'galleryImages', multiselect: true, mediatabs: false}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Background color')},
							{type: 'ColorSelector', id: 'galleryBgColor', big: true}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Border')},
							{type: 'BorderSelector', id: 'imageBorder', noTransparent: false}
						]}
					]},
					{type: 'HorizontalLayout', css: {marginTop: 15}, columnWeights: [8, 4], children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Image change frequency (s)')},
							{type: 'SizeSelector', id: 'galleryFrequency', min: 1, max: 10, repeat: false}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Gallery padding (px)')},
							{type: 'SizeSelector', id: 'galleryPadding', min: 0, max: 999, repeat: false}
						]}
					]}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.images = fields.galleryImages.getValues();
				thisClass.setBgColor(fields.galleryBgColor.getValue());
				thisClass.setFrequency(fields.galleryFrequency.getValue());
				thisClass.setType(fields.galleryType.getValue());
				thisClass.setBorder(fields.imageBorder.getValue());
				thisClass.setPadding(fields.galleryPadding.getValue());
				//thisClass.render();
			}
		});
		
		fields.galleryType.setValue(this.type);
		fields.galleryBgColor.setValue(this.getBgColor());
		fields.galleryImages.setValues(this.images);
		fields.imageBorder.setValue(this.getBorder());
		fields.galleryFrequency.setValue(this.getFrequency());
		fields.galleryPadding.setValue(this.getPadding());
	};

	Gallery.prototype.initContextMenu = function(elem) {
		var thisClass = this;
		Element.prototype.initContextMenu.call(this, elem);

		var idx = this.contextMenuFirstIndex;

		this.menu.insertItemAt(idx++, "editGallery", __("Change pictures"), function() {
			thisClass.changePictures();
		}, null, null, null, "glyphicon glyphicon-picture");

		this.typeSubmenu = new ContextMenu(this.id + "_type_sub");
		this.typeSubmenu.addItem("gt_thumbs", __("Thumbnails"), function() {
			thisClass.setType("thumbs");
		}, null, null, null, "glyphicon glyphicon-th");
		this.typeSubmenu.addItem("gt_slide", __("Slideshow"), function() {
			thisClass.setType("slideshow");
		}, null, null, null, "glyphicon glyphicon-film");
		this.typeSubmenu.addItem("gt_list", __("List"), function() {
			thisClass.setType("list");
		}, null, null, null, "glyphicon glyphicon-align-justify");

		this.menu.insertItemAt(idx++, "changeType", __("Change type"), this.typeSubmenu,
			null, null, null, "glyphicon glyphicon-cog");

	//	this.menu.insertItemAt(idx++, "editGallery", __("Refresh"), function() {
	//		thisClass.render();
	//	}, null, null, null, "glyphicon glyphicon-refresh");

		$(this.menu.insertItemAt(idx++, "changeColor", __("Change color"), function() {

		}, null, null, null, "glyphicon glyphicon-edit")).ColorPicker({
			color: thisClass.getBgColor(),
			onShow: function (colpkr) {
				thisClass.setBackupBgColor(thisClass.getBgColor());
			},
			onHide: function (colpkr) {
				thisClass.setBgColor(thisClass.getBackupBgColor());
				$(colpkr).hide();
				return false;
			},
			onChange: function (hsb, hex, rgb) {
				thisClass.setBgColor('#' + hex);
			},
			onSubmit: function(hsb, hex, rgb, el) {
				thisClass.setBgColor('#' + hex);
				thisClass.setBackupBgColor(thisClass.getBgColor());
				$(el).ColorPickerHide();
			},
			onBeforeShow: function() {
				$(this).ColorPickerSetColor(thisClass.getBgColor());
			}
		});

		this.menu.addSeparator(idx++);
	};

	Gallery.prototype.updateContextMenu = function() {
		Element.prototype.updateContextMenu.call(this);

		var types = {gt_thumbs: "thumbs", gt_slide: "slideshow", gt_list: "list"};

		for (var k in types) {
			this.typeSubmenu.setSelected(k, this.type === types[k]);
		}
	};
	
	return Gallery;
});
;

/** WB News **/

define('News', ['Element', 'Site', 'URLControl', 'ToolTipControl', 'SizeSelector'], function(Element, Site, URLControl, ToolTipControl, SizeSelector) {
	'use strict';
	
	/**
	 * News element class
	 * @param {Object} data
	 */
	var News = function(data) { if (data) this.__construct(data); };

	News.prototype = new Element();
	News.prototype.constructor = News;
	wb_builder.registerClass("News", News);

	News.prototype.items = null;
	News.prototype.fullPosts = false;
	News.prototype.showNames = true;
	News.prototype.showDesc = true;
	News.prototype.showScroll = false;
	News.prototype.nameStyle = null;
	News.prototype.descStyle = null;
	News.prototype.numItems = 3;
	News.prototype.moreTitle = __("Read more...");

	/**
	 * Construct news element
	 * @param {Object} data news data object
	 */
	News.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setEmtyMessageImage("img/ico_tb_news.png");
		this.displayEmtyMessage(true);

		this.items = [];

		if (data.content.items) {
			for (var i = 0; i < data.content.items.length; i++) {
				var item = new News.NewsItem(data.content.items[i]);
				this.addItem(item);
			}
		}

		this.fullPosts = WB_Builder.isset(data.content.fullPosts) ? (data.content.fullPosts ? true : false) : this.fullPosts;
		this.showNames = WB_Builder.isset(data.content.showNames) ? (data.content.showNames ? true : false) : this.showNames;
		this.showDesc = WB_Builder.isset(data.content.showDesc) ? (data.content.showDesc ? true : false) : this.showDesc;
		this.showScroll = WB_Builder.isset(data.content.showScroll) ? (data.content.showScroll ? true : false) : this.showScroll;
		this.nameStyle = WB_Builder.isset(data.content.nameStyle) ? data.content.nameStyle : this.nameStyle;
		this.descStyle = WB_Builder.isset(data.content.descStyle) ? data.content.descStyle : this.descStyle;
		this.numItems = (WB_Builder.isset(data.content.numItems) && !isNaN(parseInt(data.content.numItems, 10))) ? parseInt(data.content.numItems, 10) : this.numItems;
		this.moreTitle = WB_Builder.isset(data.content.moreTitle) ? data.content.moreTitle : this.moreTitle;

		// generate news items for new menu
		if (!data.id) {
			var page = null, copyFrom = null;
			//find non-front page to copy from (or front if no other pages present)
			for (var pid in this.system.site.pages) {
				if (!copyFrom) copyFrom = this.system.site.pages[pid];
				if (this.system.site.pages[pid].isFront) continue;
				copyFrom = this.system.site.pages[pid];
				break;
			}
			this.system.site.addPage((page = new Site.Page({
				id: this.system.site.getFreeId(),
				title: (__("New News item") + " 1"),
				copyFrom: (copyFrom ? copyFrom.id : null)
			})));
			this.addItem(new News.NewsItem({
				name: (__("New News item") + " 1"),
				pageId: {
					type: "page",
					url: page.id
				}
			}));
			this.system.site.addPage((page = new Site.Page({
				id: this.system.site.getFreeId(),
				title: (__("New News item") + " 2"),
				copyFrom: (copyFrom ? copyFrom.id : null)
			})));
			this.addItem(new News.NewsItem({
				name: (__("New News item") + " 2"),
				pageId: {
					type: "page",
					url: page.id
				}
			}));		
		}

		this.updateStyle();

		var thisClass = this;
		this.controls.bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};

	/**
	 * Serialize this element
	 * @return object
	 */
	News.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		var items = [];

		for (var i = 0; i < this.items.length; i++) {
			items.push(this.items[i].serialize());
		}

		data.content = {
			fullPosts: this.fullPosts,
			showNames: this.showNames,
			showDesc: this.showDesc,
			showScroll: this.showScroll,
			nameStyle: this.nameStyle,
			descStyle: this.descStyle,
			numItems: this.numItems,
			moreTitle: this.moreTitle,
			items: items
		};

		return data;
	};

	/**
	 * Add news item
	 * @param item item to add
	 */
	News.prototype.addItem = function(item) {
		if (item.parent) {
			item.parent.removeItem(item);
			item.parent = null;
			item.index = -1;
		}
		item.parent = this;
		item.index = this.items.length;
		this.items.push(item);
		this.container.append(item.elem);
	};

	/**
	 * Remove news item
	 * @param item item to remove
	 */
	News.prototype.removeItem = function(item) {
		if (!item.parent || item.parent !== this) return;
		item.parent = null;
		if (item.index < 0 || item.index >= this.items.length) {
			item.index = -1;
			return;
		}
		this.items.splice(item.index, 1);
		item.index = -1;
		item.elem.detach();
		for (var i = 0; i < this.items.length; i++) { this.items[i].index = i; } // update indexes
	};

	/**
	 * Remove all items
	 */
	News.prototype.removeAllItems = function() {
		for (var i = (this.items.length - 1); i >= 0; i--) {
			this.removeItem(this.items[i]);
		}
		this.items = [];
	};

	/**
	 * Update element style after property changes
	 */
	News.prototype.updateStyle = function() {
		this.displayEmtyMessage(this.items.length === 0);

		if (!this.showNames) {
			$(".ttl", this.container.children()).hide();
		} else {
			$(".ttl", this.container.children()).show();
		}
		if (!this.showDesc) {
			$(".desc", this.container.children()).hide();
		} else {
			$(".desc", this.container.children()).show();
		}

		if (this.nameStyle) $(".ttl", this.container.children()).addClass(this.nameStyle);
		if (this.descStyle) $(".desc", this.container.children()).addClass(this.descStyle);

		this.container.css({
			"overflow-x": "hidden",
			"overflow-y": (this.showScroll ? "scroll" : "hidden")
		});
		this.container.children().show();
		if (this.numItems > 0) {
			var thisClass = this;
			this.container.children().each(function(idx) {
				if (idx < thisClass.numItems) return;
				$(this).hide();
			});
		}
	};

	/**
	 * Extend element properties dialog
	 */
	News.prototype.comProperties = function() {
		Element.prototype.comProperties.call(this);
		var thisClass = this;
		var fields = this.comDialog.fields;
		if (!fields.newsShowName) {
			this.comDialog.setMaxBodyHeight(500);
			this.comDialog.setNoScroll();
			this.comDialog.tabbedPane.setFixedHeight(240);
			this.comDialog.tabbedPane.setNoScroll();

			var gTab = this.comDialog.getGeneralTab();
			var td = null, tds = null, lbl = null, idx = 0;

			gTab.append(tds = $('<table>' +
					'<tr><td></td><td colspan="2"></td></tr>' +
					'<tr><td rowspan="2"></td><td></td><td></td></tr>' +
					'<tr><td></td><td></td></tr>' +
					'<tr><td></td><td colspan="2"></td></tr>' +
				'</table>'));
			tds.css({ width: "100%" });
			tds = $('td', tds);
			tds.css({ verticalAlign: "top" });

			td = tds.eq(idx++);
			td.css({ width: "50%" });
			td.append('<label>' + __("Show") + '</label>');

			td = tds.eq(idx++);
			td.append('<label>' + __("Styles") + '</label>');

			td = tds.eq(idx++);
			td.append((fields.newsShowName = new WB_CheckBoxControl(__("News Names"))).elem);
			td.append((fields.newsShowDesc = new WB_CheckBoxControl(__("News Descriptions"))).elem);
			td.append((fields.newsShowScroll = new WB_CheckBoxControl(__("Scroll"))).elem);

			td = tds.eq(idx++);
			td.css({ verticalAlign: "middle" });
			td.append('<label>' + __("Names") + '</label>');

			td = tds.eq(idx++);
			td.append((fields.newsNameStyle = new WB_StyleControl()).elem);
			fields.newsNameStyle.input.css({ width: "80px" });

			td = tds.eq(idx++);
			td.css({ verticalAlign: "middle" });
			td.append('<label>' + __("Descriptions") + '</label>');

			td = tds.eq(idx++);
			td.append((fields.newsDescStyle = new WB_StyleControl()).elem);
			fields.newsDescStyle.input.css({ width: "80px" });

			td = tds.eq(idx++);
			td.append(lbl = $('<label>' + __("Number of items to show") + '</label>'));
			td.append((fields.newsNumItems = new SizeSelector(true)).elem);
			lbl.append((new ToolTipControl("?", __('Number of items = 0 means show all items.'))).elem);

			td = tds.eq(idx++);
			td.append('<label>' + __('"Read more" link text') + '</label>');
			td.append((fields.newsMoreTitle = new WB_TextFieldControl()).elem);

			var itemsTab = this.comDialog.tabbedPane.addTab(__("Items"), 0);
			this.comDialog.tabbedPane.selectTab(0);

			itemsTab.append(tds = $('<table>' +
					'<tr><td></td><td></td></tr>' +
				'</table>'));
			tds = $('td', tds); idx = 0;
			tds.css({verticalAlign: "top"});

			td = tds.eq(idx++);
			td.css({ paddingRight: "20px" });
			td.append((fields.newslistElem = new WB_ListControl({
				type: News.NewsItem,
				onSelect: function(item) {
					if (fields.newslistElem.lastSelected) {
						fields.newslistElem.lastSelected.name = fields.newsItemName.getValue();
						fields.newslistElem.lastSelected.description = fields.newsItemDesc.getValue();
						fields.newslistElem.lastSelected.pageId = fields.newsItemPage.getValue();
					}
					fields.newsItemName.setValue(item.name);
					fields.newsItemDesc.setValue(item.description);
					fields.newsItemPage.setValue(item.pageId);
					fields.newsItem.wbSetClassInstance($(this));
					fields.newsItem.show();
				}
			})).elem);

			td = tds.eq(idx++);
			td.append(fields.newsItem = $('<div></div>'));
			fields.newsItem.hide();
			td = fields.newsItem;
			td.append('<label>' + __("Name") + '</label>');
			td.append((fields.newsItemName = new WB_TextFieldControl()).elem);
			fields.newsItemName.input.addClass("span3");
			td.append('<label>' + __("Description") + '</label>');
			td.append((fields.newsItemDesc = new WB_TextAreaControl()).elem);
			fields.newsItemDesc.input.addClass("span3");
			td.append('<label>' + __("URL") + '</label>');
			td.append((fields.newsItemPage = new URLControl()).elem);

			var cfb = fields.callbackFunc;
			fields.callbackFunc = function() {
				if (typeof(cfb) === "function") cfb.call(this);

				thisClass.showNames = fields.newsShowName.getValue();
				thisClass.showDesc = fields.newsShowDesc.getValue();
				thisClass.showScroll = fields.newsShowScroll.getValue();
				thisClass.nameStyle = fields.newsNameStyle.getValue();
				thisClass.descStyle = fields.newsDescStyle.getValue();
				thisClass.numItems = fields.newsNumItems.getValue();
				thisClass.moreTitle = fields.newsMoreTitle.getValue();

				if (fields.newslistElem.lastSelected) {
					fields.newslistElem.lastSelectedLi.trigger("click");
				}

				thisClass.removeAllItems();
				var list = fields.newslistElem.getValue();
				for (var i = 0; i < list.length; i++) {
					thisClass.addItem(list[i]);
				}

				thisClass.updateStyle();
			};
		}
		fields.newsShowName.setValue(thisClass.showNames);
		fields.newsShowDesc.setValue(thisClass.showDesc);
		fields.newsShowScroll.setValue(thisClass.showScroll);
		fields.newsNameStyle.update();
		fields.newsNameStyle.setValue(thisClass.nameStyle);
		fields.newsDescStyle.update();
		fields.newsDescStyle.setValue(thisClass.descStyle);
		fields.newsNumItems.setValue(thisClass.numItems);
		fields.newsMoreTitle.setValue(thisClass.moreTitle);

		fields.newslistElem.removeAllItems();
		for (var i = 0; i < this.items.length; i++) {
			fields.newslistElem.addItem(this.items[i]);
		}
		fields.newsItem.hide();
	};

	(function(WB_News) {

		/**
		 * News item class
		 * 
		 * @author Marius Tomas <marius@profis.lt>
		 * @version 1.0.1, 2012-09-05
		 */
		function NewsItem(data) { if (data) this.__construct(data); }
		WB_News.NewsItem = NewsItem;

		NewsItem.nextItemIdx = 0;
		NewsItem.prototype.id = null;
		NewsItem.prototype.parent = null;
		NewsItem.prototype.index = null;
		NewsItem.prototype.name = null;
		NewsItem.prototype.description = null;
		NewsItem.prototype.pageId = null;
		NewsItem.prototype.elem = null;
		NewsItem.prototype.aElem = null;
		NewsItem.prototype.dElem = null;
		NewsItem.prototype.virtual = false;

		/**
		 * Construct news item
		 * @param data news item data object
		 */
		NewsItem.prototype.__construct = function(data) {
			if (!data) data = {};
			this.id = data.id ? data.id : (NewsItem.nextItemIdx++);
			this.name = data.name ? data.name : __("New Item");
			this.description = data.description ? data.description : "";
			this.pageId = data.pageId ? data.pageId : null;
			this.virtual = data.virtual ? true : false;

			if (!this.virtual) {
				this.elem = $('<div></div>');

				this.aElem = $('<a class="ttl" href="javascript:void(0)"></a>');
				this.elem.append(this.aElem);
			}
			this.setName(this.name);

			if (!this.virtual) {
				this.dElem = $('<div class="desc"></div>');
				this.elem.append(this.dElem);
			}
			this.setDescription(this.description);
		};

		/**
		 * Serialize this element
		 * @return object
		 */
		NewsItem.prototype.serialize = function() {
			return {
				id: this.id,
				name: this.name,
				description: this.description,
				pageId: this.pageId
			};
		};

		/**
		 * Set item name
		 * @param name name to set
		 */
		NewsItem.prototype.setName = function(name) {
			this.name = name;
			if (!this.virtual) this.aElem.html(this.name);
		};

		/**
		 * Set item description
		 * @param desc description to set
		 */
		NewsItem.prototype.setDescription = function(desc) {
			this.description = desc;
			if (!this.virtual) this.dElem.html(this.description);
		};

	})(News);
	
	return News;
});
;

/** WB Blog **/

define('Blog', ['Element', 'ToolTipControl', 'SizeSelector', 'ComboBox'], function(Element, ToolTipControl, SizeSelector, ComboBox) {
	'use strict';
	
	/**
	 * Blog element class
	 * @param {Object} data
	 */
	var Blog = function(data) { if (data) this.__construct(data); };

	Blog.prototype = new Element();
	Blog.prototype.constructor = Blog;
	wb_builder.registerClass("Blog", Blog);

	Blog.prototype.items = null;
	Blog.prototype.fullPosts = false;
	Blog.prototype.onlyNames = false;
	Blog.prototype.showScroll = false;
	Blog.prototype.numItems = 3;

	/**
	 * Construct blog element
	 * @param data blog data object
	 */
	Blog.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setEmtyMessageImage("img/ico_tb_blog.png");
		this.displayEmtyMessage(true);

		this.items = [];

		if (data.content.items) {
			for (var i = 0; i < data.content.items.length; i++) {
				var item = new Blog.BlogItem(data.content.items[i]);
				this.addItem(item);
			}
		}

		this.fullPosts = data.content.fullPosts ? true : false;
		this.onlyNames = data.content.onlyNames ? true : false;
		this.showScroll = data.content.showScroll ? true : false;
		this.numItems = (data.content.numItems*1) ? data.content.numItems : 0;

		this.updateStyle();

		var thisClass = this;
		this.controls.bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};

	/**
	 * Serialize this element
	 * @return object
	 */
	Blog.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		var items = [];

		for (var i = 0; i < this.items.length; i++) {
			items.push(this.items[i].serialize());
		}

		data.content = {
			fullPosts: this.fullPosts,
			onlyNames: this.onlyNames,
			showScroll: this.showScroll,
			numItems: this.numItems,
			items: items
		};

		return data;
	};

	/**
	 * Add blog item
	 * @param item item to add
	 */
	Blog.prototype.addItem = function(item) {
		if (item.parent) {
			item.parent.removeItem(item);
			item.parent = null;
			item.index = -1;
		}
		item.parent = this;
		item.index = this.items.length;
		this.items.push(item);
		this.container.append(item.elem);
	};

	/**
	 * Remove blog item
	 * @param item item to remove
	 */
	Blog.prototype.removeItem = function(item) {
		if (!item.parent || item.parent !== this) return;
		item.parent = null;
		if (item.index < 0 || item.index >= this.items.length) {
			item.index = -1;
			return;
		}
		this.items.splice(item.index, 1);
		item.index = -1;
		item.elem.detach();
	};

	/**
	 * Remove all items
	 */
	Blog.prototype.removeAllItems = function() {
		for (var i = 0; i < this.items.length; i++) {
			this.removeItem(this.items[i]);
		}
		this.items = [];
	};

	/**
	 * Update element style after property changes
	 */
	Blog.prototype.updateStyle = function() {
		this.displayEmtyMessage(this.items.length === 0);

		if (this.onlyNames) {
			$(".desc", this.container.children()).hide();
		} else {
			$(".desc", this.container.children()).show();
		}
		this.container.css({
			"overflow-x": "hidden",
			"overflow-y": (this.showScroll ? "scroll" : "hidden")
		});
		this.container.children().show();
		if (this.numItems > 0) {
			var thisClass = this;
			this.container.children().each(function(idx) {
				if (idx < thisClass.numItems) return;
				$(this).hide();
			});
		}
	};

	/**
	 * Extend element properties dialog
	 */
	Blog.prototype.comProperties = function() {
		Element.prototype.comProperties.call(this);
		var thisClass = this;
		var fields = this.comDialog.fields;
		if (!fields.blogOnlyName) {
			this.comDialog.setMaxBodyHeight(500);
			this.comDialog.tabbedPane.setFixedHeight(240);

			var gTab = this.comDialog.getGeneralTab();
			var td = null, tds = null, lbl = null, idx = 0;

			gTab.append(tds = $('<table>' +
					'<tr><td></td><td colspan="2"></td></tr>' +
					'<tr><td rowspan="2"></td><td></td><td></td></tr>' +
					'<tr><td></td><td></td></tr>' +
					'<tr><td></td><td colspan="2"></td></tr>' +
				'</table>'));
			tds.css({ width: "100%" });
			tds = $('td', tds);
			tds.css({ verticalAlign: "top" });

			td = tds.eq(idx++);
			td.css({ width: "50%" });
			td.append('<label>' + __("Show") + '</label>');

			td = tds.eq(idx++);
			//td.append('<label>' + __("Styles") + '</label>');

			td = tds.eq(idx++);
			td.append((fields.blogOnlyName = new WB_CheckBoxControl(__("Show only names"))).elem);
			td.append((fields.blogShowScroll = new WB_CheckBoxControl(__("Show scroll"))).elem);

			td = tds.eq(idx++);
			td = tds.eq(idx++);
			td = tds.eq(idx++);
			td = tds.eq(idx++);

			td = tds.eq(idx++);
			td.append(lbl = $('<label>' + __("Number of items to show") + '</label>'));
			td.append((fields.blogNumItems = new SizeSelector(true)).elem);
			lbl.append((new ToolTipControl("?", __('Number of items = 0 means show all items.'))).elem);

			var itemsTab = this.comDialog.tabbedPane.addTab(__("Items"), 0);
			this.comDialog.tabbedPane.selectTab(0);

			itemsTab.append(tds = $('<table>' +
					'<tr><td></td><td></td></tr>' +
				'</table>'));
			tds = $('td', tds);
			tds.css({verticalAlign: "top"});

			td = tds.eq(idx++);
			fields.bloglistElem = $('<div class="wb_list"></div>');
			fields.bloglistElem.addItem = function(item) {
				var elem = $('<a class="wb_list_item"></a>');
				elem.wbSetClassInstance(item);
				elem.html(item.name);
				elem.bind("click", function() {
					$(this).parent().children().removeClass("active");
					$(this).addClass("active");
					fields.blogItemPage.removeAllOptions();
					var firstPid = null;
					for (var pid in thisClass.system.site.pages) {
						if (!firstPid) firstPid = pid;
						var p = thisClass.system.site.pages[pid];
						fields.blogItemPage.addOption(p.id, p.title);
					}
					if (!item.pageId) item.pageId = firstPid;
					fields.blogItemName.setValue(item.name);
					fields.blogItemDesc.setValue(item.description);
					fields.blogItemPage.setValue(item.pageId);
					fields.blogItem.wbSetClassInstance(elem);
					fields.blogItem.show();
				});
				fields.bloglistElem.append(elem);
			};
			td.append(fields.bloglistElem);
			fields.bloglistElem.css({
				width: "200px",
				height: "190px",
				overflowY: "scroll",
				border: "1px solid #dddddd",
				margin: "0px 10px 0px 0px"
			});
			var addBtn = $('<button class="btn"><i class="icon-plus"></i>&nbsp;' +
					__("Add item") + '</button>');
			addBtn.css({marginTop: "10px"});
			addBtn.bind("click", function() {
				fields.bloglistElem.addItem(new Blog.BlogItem());
			});
			td.append(addBtn);

			td = tds.eq(idx++);
			td.append(fields.blogItem = $('<div></div>'));
			fields.blogItem.hide();
			td = fields.blogItem;
			td.append('<label>' + __("Name") + '</label>');
			td.append((fields.blogItemName = new WB_TextFieldControl()).elem);
			fields.blogItemName.input.addClass("span3");
			fields.blogItemName.input.bind("blur change", function() {
				var elem = fields.blogItem.wbGetClassInstance();
				var item = elem.wbGetClassInstance();
				item.setName(fields.blogItemName.getValue());
				elem.html(item.name);
			});
			td.append('<label>' + __("Description") + '</label>');
			td.append((fields.blogItemDesc = new WB_TextAreaControl()).elem);
			fields.blogItemDesc.input.addClass("span3");
			fields.blogItemDesc.input.bind("blur change", function() {
				var elem = fields.blogItem.wbGetClassInstance();
				var item = elem.wbGetClassInstance();
				item.setDescription(fields.blogItemDesc.getValue());
			});
			td.append('<label>' + __("Page") + '</label>');
			td.append((fields.blogItemPage = new ComboBox()).elem);
			fields.blogItemPage.input.addClass("span3");
			fields.blogItemPage.input.bind("blur change", function() {
				var elem = fields.blogItem.wbGetClassInstance();
				var item = elem.wbGetClassInstance();
				item.pageId = fields.blogItemPage.getValue();
			});

			var cfb = fields.callbackFunc;
			fields.callbackFunc = function() {
				if (typeof(cfb) === "function") cfb.call(this);
				thisClass.onlyNames = fields.blogOnlyName.getValue();
				thisClass.showScroll = fields.blogShowScroll.getValue();
				thisClass.numItems = fields.blogNumItems.getValue();

				thisClass.removeAllItems();
				fields.bloglistElem.children().each(function() {
					thisClass.addItem($(this).wbGetClassInstance());
				});

				thisClass.updateStyle();
			};
		}
		fields.blogOnlyName.setValue(thisClass.onlyNames);
		fields.blogShowScroll.setValue(thisClass.showScroll);
		fields.blogNumItems.setValue(thisClass.numItems);

		fields.bloglistElem.empty();
		for (var i = 0; i < this.items.length; i++) {
			//console.log(this.items[i].name);
			fields.bloglistElem.addItem(this.items[i]);
		}
		fields.blogItem.hide();
	};

	(function(Blog) {

		/**
		 * Blog item class
		 * @param {Object} data
		 */
		var BlogItem = function(data) { if (data) this.__construct(data); };
		Blog.BlogItem = BlogItem;

		BlogItem.nextItemIdx = 0;
		BlogItem.prototype.id = null;
		BlogItem.prototype.parent = null;
		BlogItem.prototype.index = null;
		BlogItem.prototype.name = null;
		BlogItem.prototype.description = null;
		BlogItem.prototype.pageId = null;
		BlogItem.prototype.elem = null;
		BlogItem.prototype.aElem = null;
		BlogItem.prototype.dElem = null;

		/**
		 * Construct blog item
		 * @param data blog item data object
		 */
		BlogItem.prototype.__construct = function(data) {
			if (!data) data = {};
			this.id = data.id ? data.id : (BlogItem.nextItemIdx++);
			this.name = data.name ? data.name : __("New Item");
			this.description = data.description ? data.description : "";
			this.pageId = data.pageId ? data.pageId : null;

			this.elem = $('<div></div>');

			this.aElem = $('<a href="javascript:void(0)"></a>');
			this.elem.append(this.aElem);
			this.setName(this.name);

			this.dElem = $('<div class="desc"></div>');
			this.elem.append(this.dElem);
			this.setDescription(this.description);
		};

		/**
		 * Serialize this element
		 * @return object
		 */
		BlogItem.prototype.serialize = function() {
			return {
				id: this.id,
				name: this.name,
				description: this.description,
				pageId: this.pageId
			};
		};

		/**
		 * Set item name
		 * @param name name to set
		 */
		BlogItem.prototype.setName = function(name) {
			this.name = name;
			this.aElem.html(this.name);
		};

		/**
		 * Set item description
		 * @param desc description to set
		 */
		BlogItem.prototype.setDescription = function(desc) {
			this.description = desc;
			this.dElem.html(this.description);
		};

	})(Blog);

	return Blog;
});
;

/** WB Form **/

define('Form', [
	'Element',
	'ModeManager'
], function(Element, ModeManager) {
	
	var wb_builder = window.wb_builder;
	
	/**
	 * Form element class
	 * @param {Object} data
	 * @param {boolean} initial
	 * @param {boolean} virtual
	 */
	var Form = function(data, initial, virtual) { if (data) this.__construct(data, initial, virtual); };

	Form.prototype = new Element();
	Form.prototype.constructor = Form;
	wb_builder.registerClass("Form", Form);

	Form.defaultFields = [
		{checked: true, type: "input", name: __("Name"), options: ""},
		{checked: true, type: "input", name: __("Email"), options: ""},
		{checked: false, type: "input", name: __("Country"), options: ""},
		{checked: false, type: "input", name: __("City"), options: ""},
		{checked: false, type: "input", name: __("Address"), options: ""},
		{checked: false, type: "input", name: __("Your Field"), options: ""},
		{checked: false, type: "input", name: __("Your Field"), options: ""},
		{checked: false, type: "select", name: __("How did you find us?"), options: __("Found on google;Followed link from other site;Friend told me")},
		{checked: false, type: "select", name: __("Your Question?"), options: __("Yes;No;May be")},
		{checked: true, type: "textarea", name: __("Message"), options: ""}
	];
	Form.prototype.fields = null;
	Form.prototype.email = "";
	Form.prototype.emailFrom = "";
	Form.prototype.subject = __("Email from the site");
	Form.prototype.formSentMessage = __("Form was sent.");
	Form.prototype.button = __("Submit");
	Form.prototype.smtpEnable = false;
	Form.prototype.smtpHost = null;
	Form.prototype.smtpPort = null;
	Form.prototype.smtpEncryption = null;
	Form.prototype.smtpUsername = null;
	Form.prototype.smtpPassword = null;
	Form.prototype.recSiteKey = null;
	Form.prototype.recSecretKey = null;
	Form.prototype.form = null;
	Form.prototype.textStyle = null;
	Form.prototype.labelStyle = null;
	Form.prototype.labelColWidth = 0;
	Form.prototype.regularsTab = null;

	/**
	 * Construct form element
	 * @param {Object} data form data object
	 * @param {boolean} initial
	 * @param {boolean} virtual
	 */
	Form.prototype.__construct = function(data, initial, virtual) {
		Element.prototype.__construct.call(this, data, initial, virtual);
		this.addLangLabel();

		this.setMinSize(200, 200);
		this.container.css({overflow: "hidden"});
		this.fields = $.extend(true, {}, Form.defaultFields);
		// deserialize

		if (WB_Builder.isset(data.content.fields)) {
			this.fields = data.content.fields;
			for (var i = 0; i < Form.defaultFields.length; i++) {
				if (!this.fields[i] || typeof this.fields[i] !== 'object') this.fields[i] = Form.defaultFields[i];
				else if (!('type' in this.fields[i])) this.fields[i] = $.extend({}, Form.defaultFields[i], this.fields[i]);
			}
			this.email = data.content.email;
			this.emailFrom = data.content.emailFrom ? data.content.emailFrom : '';
			this.subject = data.content.subject ? data.content.subject : this.subject;
			this.formSentMessage = data.content.sentMessage ? data.content.sentMessage : this.formSentMessage;
			this.button = data.content.button;
			this.smtpEnable = data.content.smtpEnable ? data.content.smtpEnable : false;
			this.smtpHost = data.content.smtpHost ? data.content.smtpHost : null;
			this.smtpPort = data.content.smtpPort ? data.content.smtpPort : null;
			this.smtpEncryption = data.content.smtpEncryption ? data.content.smtpEncryption : null;
			this.smtpUsername = data.content.smtpUsername ? data.content.smtpUsername : null;
			this.smtpPassword = data.content.smtpPassword ? data.content.smtpPassword : null;
			this.recSiteKey = data.content.recSiteKey ? data.content.recSiteKey : null;
			this.recSecretKey = data.content.recSecretKey ? data.content.recSecretKey : null;
		}

		this.textStyle = data.content.textStyle ? data.content.textStyle : {
			color: "#333333",
			size: 13,
			decoration: "none",
			font: "Arial,sans-serif",
			style: { },
			align: "left",
			lineHeight: 18, 
			css: {
				font: "normal normal 13px Arial,sans-serif",
				color: "#333333",
				"text-align": "left",
				"text-decoration": "none",
				"line-height": "18px"
			}
		};

		var thisClass = this;
		this.elem.bind('resize', function() {
			var i, tds, field,
				row,
				rows = $('tr', thisClass.container),
				count = rows.length,
				w = thisClass.getWidth(),
				h = thisClass.getHeight(),
				flex,
				flexH = h - 4,
				lws = [],
				flexElem = null;
			// $('input[type=text],select,textarea', thisClass.container).css({width: w});
			for (i = 0; i < count; i++) {
				lws[i] = rows.eq(i).children('td,th').eq(0).outerWidth(true);
			}
			for (i = 0; i < count; i++) {
				row = rows.eq(i);
				flex = ($('textarea', row).size() > 0);
				if (!flex) {
					flexH -= row.outerHeight(true);
				} else {
					flexElem = $('textarea', row);
					var thh = $('th', row).outerHeight();
					if (thh < row.outerHeight(true)) {
						flexH -= thh;
					}
				}
				tds = row.children('td,th');
				if (tds.length === 2) {
					field = tds.eq(1).find('input[type=text],select,textarea').eq(0);
					// field.css({width: (w - lws[i])});
				}
			}
			if (flexElem) {
				flexElem.css({height: flexH + 'px'});
			}
		});

		this.labelStyle = WB_Builder.isset(data.content.labelStyle) ? data.content.labelStyle : this.labelStyle;

		this.updateStyle();

		setTimeout(function() { thisClass.elem.trigger("resize"); }, 1000);

		this.controls.bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};
	
	/**
	 * @param {Object} data
	 * @return {Form.Mode}
	 */
	Form.prototype.modeClass = function(data) {
		return new Form.Mode(data);
	};
	
	/** @return {String} */
	Form.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = this.subject ? this.subject : '';
		return opts;
	};
	
	/**
	 * Rechecking all form (editing) fields and styling as needed
	 */
	Form.prototype.recheckInactive = function() {

	};

	/**
	 * Serialize this element
	 * @return {Object}
	 */
	Form.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);
		var m = this.modes[ModeManager.MODE_DESKTOP].serialize();

		//var color = this.textColor;
		var d = new Date();

		data.content = {
			labelColWidth: m.labelColWidth,
			fieldsWidth:m.fieldsWidth,
			flexHeight:	m.flexHeight,
			fields:		this.fields,
			email:		this.email,
			emailFrom:	this.emailFrom,
			subject:	this.subject,
			sentMessage:this.formSentMessage,
			button:		this.button,
			smtpEnable: this.smtpEnable,
			smtpHost: this.smtpHost,
			smtpPort: this.smtpPort,
			smtpEncryption: this.smtpEncryption,
			smtpUsername: this.smtpUsername,
			smtpPassword: this.smtpPassword,
			recSiteKey: this.recSiteKey,
			recSecretKey: this.recSecretKey,
			textStyle:	this.textStyle,
			labelStyle:	this.labelStyle,
			timestamp:	d.getTime()
		};

		return data;
	};
	
	Form.prototype.switchMode = function(mode) {
		Element.prototype.switchMode.call(this, mode);
		if (mode === ModeManager.MODE_PHONE) {
			var formId = this.id + '_form';
			if (!this.mobStyle) {
				this.mobStyle = $('<style type="text/css">' +
					'#' + formId + ' table td, #' + formId + ' table th, #' + formId + ' table tr { display: block; height: auto!important; } ' +
					'#' + formId + ' table td input, #' + formId + ' table td textarea { width: 100%!important; }' +
				'</style>');
			}
			this.form.attr('id', formId);
			this.elem.prepend(this.mobStyle);
		} else {
			if (this.mobStyle) this.mobStyle.detach();
			this.form.removeAttr('id');
		}
	}

	/**
	 * Update element style after property changes
	 * @param {String} langCode
	 */
	Form.prototype.updateStyle = function(langCode) {
		langCode = langCode || this.system.site.currSelLang;
		var thisClass = this, html, field, i, w, h, fld;
		if (!this.form) {
			this.form = $('<form class="wb_form"></form>');
			this.form.bind("submit", function() { return false; });
			this.form.css({width: "100%", height: "100%"});
			this.container.append(this.form);
		}
		this.form.empty();
		html = "";
		html += '<table>';
		for (i = 0; i < 10; i++) {
			field = this.fields[i];
			if (!field || !field.checked || !__tr(field.name, langCode))
				continue;
			w = (this.labelColWidth ? (' width: ' + this.labelColWidth + 'px; white-space: normal;') : '');
			h = (field.type === 'textarea') ? '' : ' height: 1%;';
			fld = "";
			switch (field.type) {
				case "input":
					fld += '<input type="text" class="form-control form-field" value="" />';
					break;
				case "select":
					fld += '<select class="form-control form-field">';
					var opts = __tr(field.options, langCode).split(";");
					for( var j = 0; j < opts.length; j++ )
						fld += '<option>' + $.trim(opts[j]).replace("<", "&lt;").replace(">", "&gt;") + '</option>';
					fld += '</select>';
					break;
				case "textarea":
					fld += '<textarea class="form-control form-field"></textarea>';
					break;
			}
			html += '<tr>' +
					'<th style="' + h + w + '">' +
						(w ? '<div style="' + w + '">' : '') +
							__tr(field.name, langCode) + '&nbsp;&nbsp;' +
						(w ? '</div>' : '') +
					'</th>' +
					'<td style="' + h + '">' + fld + '</td>' +
				'</tr>';
		}
		if (this.recSiteKey && this.recSecretKey) {
			// reCAPTCHA is enabled
			html += '<tr>' +
						'<th style="height: 1%;">&nbsp;</th>' +
						'<td style="height: 1%;"><div class="wb-recaptcha-placeholder"><span>' + __("I'm not a robot") + '</span></div></td>' +
					'</tr>';
		}
		html += '<tr>' +
					'<td height="20" colspan="2">' +
						'<button type="submit" class="btn btn-default">' + __tr(this.button, langCode) + '</button>' +
					'</td>' +
				'</tr>' +
			'</table>';
		this.form.append(html);
		this.form.css({width: "100%", height: "100%"});

		this.form.css(this.textStyle.css);
		//$("th", this.form).css(this.textStyle.css);
		if (this.labelStyle) $("th", this.form).addClass(this.labelStyle);
		$("td", this.form).css({textAlign: "right"});

		thisClass.elem.trigger("resize");
	};

	/**
	 * Extend element properties dialog
	 */
	Form.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 356},
			tabs: [
				{name: __('Fields'), children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', spacing: 5, children: [
							{type: 'Label', text: __('Simple fields')},
							{type: 'CheckBox', id: 'formField0Enable',
								label: [{type: 'MultilangTextField', id: 'formField0', css: {top: '-7px'}}],
								change: function() {
									fields.formField0.setEnabled(fields.formField0Enable.getValue());
								},
								css: {marginTop: 11}
							},
							{type: 'CheckBox', id: 'formField1Enable',
								label: [{type: 'MultilangTextField', id: 'formField1', css: {top: '-7px'}}],
								change: function() {
									fields.formField1.setEnabled(fields.formField1Enable.getValue());
								}
							},
							{type: 'CheckBox', id: 'formField2Enable',
								label: [{type: 'MultilangTextField', id: 'formField2', css: {top: '-7px'}}],
								change: function() {
									fields.formField2.setEnabled(fields.formField2Enable.getValue());
								}
							},
							{type: 'CheckBox', id: 'formField3Enable',
								label: [{type: 'MultilangTextField', id: 'formField3', css: {top: '-7px'}}],
								change: function() {
									fields.formField3.setEnabled(fields.formField3Enable.getValue());
								}
							},
							{type: 'CheckBox', id: 'formField4Enable',
								label: [{type: 'MultilangTextField', id: 'formField4', css: {top: '-7px'}}],
								change: function() {
									fields.formField4.setEnabled(fields.formField4Enable.getValue());
								}
							},
							{type: 'CheckBox', id: 'formField5Enable',
								label: [{type: 'MultilangTextField', id: 'formField5', css: {top: '-7px'}}],
								change: function() {
									fields.formField5.setEnabled(fields.formField5Enable.getValue());
								}
							}/*,
							{type: 'CheckBox', id: 'formField6Enable',
								label: [{type: 'MultilangTextField', id: 'formField6', css: {marginTop: '-7px'}}],
								change: function() {
									fields.formField6.setEnabled(fields.formField6Enable.getValue());
								}
							}*/
						]},
						{type: 'VerticalLayout', spacing: 5, children: [
							{type: 'Label', text: __('Options')},
							{type: 'CheckBox', id: 'formField7Enable',
								label: [
									{type: 'MultilangTextField', id: 'formField7', css: {top: '-7px'}},
									{type: 'Tooltip', text: __('Write options as separate lines'), css: {position: 'absolute', left: '-8px', marginTop: 5}},
									{type: 'MultilangTextField', id: 'formField7Opts',
										textArea: true
									}
								],
								change: function() {
									fields.formField7.setEnabled(fields.formField7Enable.getValue());
									fields.formField7Opts.setEnabled(fields.formField7Enable.getValue());
								},
								css: {position: 'relative', marginTop: 11}
							},
							{type: 'CheckBox', id: 'formField8Enable',
								label: [
									{type: 'MultilangTextField', id: 'formField8', css: {top: '-7px'}},
									{type: 'Tooltip', text: __('Write options as separate lines'), css: {position: 'absolute', left: '-8px', marginTop: 5}},
									{type: 'MultilangTextField', id: 'formField8Opts',
										textArea: true
									}
								],
								change: function() {
									fields.formField8.setEnabled(fields.formField8Enable.getValue());
									fields.formField8Opts.setEnabled(fields.formField8Enable.getValue());
								},
								css: {position: 'relative', marginTop: 11}
							}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [9, 3], css: {marginTop: 5}, children: [
						{type: 'CheckBox', id: 'formField9Enable',
							label: [
								{type: 'MultilangTextField', id: 'formField9',
									css: {top: '-7px'},
									textArea: true
								}
							],
							change: function() {
								fields.formField9.setEnabled(fields.formField9Enable.getValue());
							},
							css: {margin: 0}
						},
						{type: 'MultilangTextField', id: 'formFromSubmit', css: {top: '-7px'}}
					]}
				]},
				{name: __('Email settings'), children: [
					{type: 'VerticalLayout', children: [
						{type: 'HorizontalLayout', children: [
							{type: 'VerticalLayout', children: [
								{type: 'Label', text: __('Form will be sent to this Email'),
									helpText: __('You can specify several emails separated by semicolons.')
								},
								{type: 'TextField', id: 'formFromEmail', placeholder: 'example@yourmail.com'}
							]},
							{type: 'VerticalLayout', children: [
								{type: 'Label', text: __('Form will be sent from this Email')},
								{type: 'TextField', id: 'formFromSenderEmail', placeholder: ('no-reply@' + wb_builder.siteDomain)}
							]}
						]},
						{type: 'Label', text: __('With Subject'), css: {marginTop: 15}},
						{type: 'TextField', id: 'formFromSubject'},
						{type: 'Label', text: __('Form sent Message'), css: {marginTop: 15}},
						{type: 'TextField', id: 'formFromSentMessage'}
					]},
					{type: 'CheckBox', label: __('SMTP Enable'), id: 'smtpEnable', change: function() {
						if (this.getValue()) {
							fields.smtpLine2.setEnabled(true);
							fields.smtpLine3.setEnabled(true);
						} else {
							fields.smtpLine2.setEnabled(false);
							fields.smtpLine3.setEnabled(false);
						}
					}},
					{type: 'HorizontalLayout', id: 'smtpLine2',
						columnWeights: [4, 3, 5],
						enabled: false,
						children: [
							{type: 'TextField', id: 'smtpHost',
								placeholder: __('SMTP Host'),
								title: __('SMTP Host')
							},
							{type: 'TextField', id: 'smtpPort',
								placeholder: __('SMTP Port'),
								title: __('SMTP Port')
							},
							{type: 'FlowLayout', css: {marginTop: 5}, children: [
								{type: 'RadioBox', label: __('None'), id: 'smtpEncryptionNone',
									inline: true,
									group: 'encryption',
									title: __('SMTP Encryption')
								},
								{type: 'RadioBox', label: __('TLS'), id: 'smtpEncryptionTLS',
									inline: true,
									group: 'encryption',
									title: __('SMTP Encryption')
								},
								{type: 'RadioBox', label: __('SSL'), id: 'smtpEncryptionSSL',
									inline: true,
									group: 'encryption',
									title: __('SMTP Encryption')
								}
							]}
						]
					},
					{type: 'HorizontalLayout', id: 'smtpLine3',
						css: {marginTop: 10},
						enabled: false,
						children: [
							{type: 'TextField', id: 'smtpUsername',
								placeholder: __('SMTP Username'),
								title: __('SMTP Username')
							},
							{type: 'TextField', id: 'smtpPassword',
								placeholder: __('SMTP Password'),
								title: __('SMTP Password')
							}
						]
					}
				]},
				{name: __('Settings'), children: [
					{type: 'Label', text: __('Google reCAPTCHA'),
						helpText: __('Go to %s and register new site to get keys.').replace('%s', 'https://www.google.com/recaptcha/')
					},
					{type: 'HorizontalLayout', children: [
						{type: 'TextField', id: 'recSiteKey',
							placeholder: __('Site key'),
							title: __('Site key')
						},
						{type: 'TextField', id: 'recSecretKey',
							placeholder: __('Secret key'),
							title: __('Secret key')
						}
					]},
					{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Label Style')},
							{type: 'StyleSelector', id: 'formLabelStyle', emptyChoice: true}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'FlowLayout', children: [
								{type: 'CheckBox', label: '', id: 'formLabelWidthFixed', change: function(fields) {
									fields.formLabelWidth.setEnabled(this.getValue());
								}},
								{type: 'Label', text: __('Label Column Width'), click: function(e, fields) {
									fields.formLabelWidthFixed.setValue(!fields.formLabelWidthFixed.getValue());
									fields.formLabelWidthFixed.trigger('change');
								}}
							]},
							{type: 'SizeSelector', id: 'formLabelWidth', enabled: false, noFixedWidth: true, min: 0}
						]}
					]}
				]}
			],
			callbackFunc: function(fields) {
				var m, i, j, k, field, value;
				for (k in fields) {
					if (!(m = ('' + k).match(/^formField([0-9]+)Enable$/))) continue;
					i = parseInt(m[1], 10);
					field = thisClass.fields[i];
					field.checked = fields[k].getValue();
					field.name = fields['formField' + i].getValue();
					if (field.type === 'select') {
						value = fields['formField' + i + 'Opts'].getValue();
						if (typeof value === 'object') {
							field.options = {};
							for (j in value) {
								field.options[j] = value[j].split("\n").join(';');
							}
						} else {
							field.options = value.split("\n").join(';');
						}
					}
				}
				thisClass.email = fields.formFromEmail.getValue();
				thisClass.emailFrom = fields.formFromSenderEmail.getValue();
				thisClass.subject = fields.formFromSubject.getValue();
				thisClass.formSentMessage = fields.formFromSentMessage.getValue();
				thisClass.button = fields.formFromSubmit.getValue();
				
				thisClass.smtpEnable = fields.smtpEnable.getValue();
				thisClass.smtpHost = fields.smtpHost.getText();
				thisClass.smtpPort = fields.smtpPort.getText();
				if (fields.smtpEncryptionTLS.getValue()) {
					thisClass.smtpEncryption = 'tls';
				} else if (fields.smtpEncryptionSSL.getValue()) {
					thisClass.smtpEncryption = 'ssl';
				} else {
					thisClass.smtpEncryption = null;
				}
				thisClass.smtpUsername = fields.smtpUsername.getText();
				thisClass.smtpPassword = fields.smtpPassword.getText();
				
				thisClass.recSiteKey = fields.recSiteKey.getText();
				thisClass.recSecretKey = fields.recSecretKey.getText();
				
				thisClass.labelStyle = fields.formLabelStyle.getValue();
				thisClass.labelColWidth = ((fields.formLabelWidthFixed.getValue() && fields.formLabelWidth.getValue()) ? fields.formLabelWidth.getValue() : 0);

				thisClass.updateStyle();
			}
		});
		
		var m, i, j, k, field, value;
		for (k in fields) {
			if (!(m = ('' + k).match(/^formField([0-9]+)Enable$/))) continue;
			i = parseInt(m[1], 10);
			field = (this.fields && this.fields[i]) ? this.fields[i] : Form.defaultFields[i];
			fields[k].setValue(field.checked);
			fields[k].trigger('change');
			fields['formField' + i].setValue(field.name);
			if (field.type === 'select') {
				if (typeof field.options === 'object') {
					value = {};
					for (j in field.options) {
						value[j] = field.options[j].split(';').join("\n");
					}
				} else {
					value = field.options.split(';').join("\n");
				}
				fields['formField' + i + 'Opts'].setValue(value);
			}
		}
		fields.formFromEmail.setValue(this.email);
		fields.formFromSenderEmail.setValue(this.emailFrom);
		fields.formFromSubject.setValue(this.subject);
		fields.formFromSentMessage.setValue(this.formSentMessage);
		fields.formFromSubmit.setValue(this.button);
		
		fields.smtpEnable.setValue(this.smtpEnable);
		fields.smtpEnable.trigger('change');
		fields.smtpHost.setText(this.smtpHost ? this.smtpHost : '');
		fields.smtpPort.setText(this.smtpPort ? this.smtpPort : '');
		fields.smtpEncryptionNone.setValue(true);
		fields.smtpEncryptionTLS.setValue((this.smtpEncryption === 'tls'));
		fields.smtpEncryptionSSL.setValue((this.smtpEncryption === 'ssl'));
		fields.smtpUsername.setText(this.smtpUsername ? this.smtpUsername : '');
		fields.smtpPassword.setText(this.smtpPassword ? this.smtpPassword : '');
		
		fields.recSiteKey.setText(this.recSiteKey ? this.recSiteKey : '');
		fields.recSecretKey.setText(this.recSecretKey ? this.recSecretKey : '');
		
		fields.formLabelStyle.setValue(this.labelStyle);
		fields.formLabelWidth.setValue((this.labelColWidth ? this.labelColWidth : 0));
		fields.formLabelWidthFixed.setValue((this.labelColWidth ? true : false));
		fields.formLabelWidthFixed.trigger('change');
	};

	Form.prototype.onSwitchLanguage = function(langCode) {
		Element.prototype.onSwitchLanguage.call(this, langCode);
		this.updateStyle(langCode);
	};

	Form.Mode = (function() {
		'use strict';

		/**
		 * @param {Form.Mode} mode
		 * @param {Object} data
		 */
		var applyData = function(mode, data) {
			mode.labelColWidth = (data.labelColWidth ? data.labelColWidth : 0);
			mode.fieldsWidth = data.fieldsWidth;
			mode.flexHeight = data.flexHeight;
		};

		/**
		 * @param {Object} data
		 * @class WB_Form.Mode
		 */
		var self = function(data) { Element.Mode.prototype.constructor.call(this, data); if (data) applyData(this, data); };
		self.prototype = Object.create(Element.Mode.prototype);
		/** @type Number */
		self.prototype.labelColWidth = 0;
		/** @type Number */
		self.prototype.fieldsWidth = 0;
		/** @type Number */
		self.prototype.flexHeight = 0;
		/** @param {Form.Mode} mode */
		self.prototype.copy = function(mode) {
			Element.Mode.prototype.copy.call(this, mode);
			applyData(this, mode);
		};
		/** @param {Form} elem */
		self.prototype.store = function(elem) {
			Element.Mode.prototype.store.call(this, elem);
			applyData(this, {
				labelColWidth: (elem.labelColWidth ? elem.labelColWidth : 0),
				fieldsWidth: elem.container.find('input[type=text],select,textarea').outerWidth(),
				flexHeight:	elem.container.find('textarea').outerHeight()
			});
		};
		/** @param {Form} elem */
		self.prototype.applyTo = function(elem) {
			Element.Mode.prototype.applyTo.call(this, elem);
			elem.labelColWidth = (this.labelColWidth ? this.labelColWidth : 0);
		};
		/** @return {Object} */
		self.prototype.serialize = function() {
			var obj = Element.Mode.prototype.serialize.call(this);
			obj.labelColWidth = (this.labelColWidth ? this.labelColWidth : 0);
			obj.fieldsWidth = this.fieldsWidth;
			obj.flexHeight = this.flexHeight;
			return obj;
		};

		return self;
	})();
	
	window.WB_Form = Form;
	
	return Form;
});
;

/** WB Line **/

define('Line', ['Element', 'ContextMenu'], function(Element, ContextMenu) {

	/**
	 * Line class
	 * @param {Object} data
	 */
	var Line = function(data) { if (data) this.__construct(data); };
	
	Line.prototype = new Element();
	Line.prototype.constructor = Line;
	wb_builder.registerClass("Line", Line);

	Line.styleList = [
		{ "name": __("Solid"),  "value": "solid"  },
		{ "name": __("Dashed"), "value": "dashed" },
		{ "name": __("Dotted"), "value": "dotted" },
		{ "name": __("Double"), "value": "double" }
	];
	Line.sizeList = [
		{ "name": "1px", "value": "1" },
		{ "name": "2px", "value": "2" },
		{ "name": "3px", "value": "3" },
		{ "name": "4px", "value": "4" }
	];
	Line.prototype.miOrientation = null;
	Line.prototype.miStyle = null;
	Line.prototype.miSize = null;
	Line.prototype.line = null;
	Line.prototype.orientation = 1; // 0 - vertical, 1 - horizontal
	Line.prototype.size = 3;
	Line.prototype.style = "solid";
	Line.prototype.color = "#303030";
	Line.prototype.backupColor = null;

	/**
	 * Construct line element
	 * @param {Object} data element data object
	 */
	Line.prototype.__construct = function(data) {
		if (!data.width) {
			data.width = 600;
			data.height = 100;
		}
		Element.prototype.__construct.call(this, data);
		var thisClass = this;

		this.setMinSize(1, 1);

		this.line = $("<div></div>");
		this.line.css({
			"font-size":	"1px",
			"overflow":		"hidden",
			"line-height":	"1px",
			"margin":		"0",
			"padding":		"0",
			"background":	"transparent",
			"float":		"none",
			"position":		"relative"
		});
		this.container.empty().append(this.line);
		this.orientation 	= (("orientation" in data.content) && !isNaN(data.content.orientation)) ? data.content.orientation : this.orientation;
		this.size			= data.content.size ? data.content.size : this.size;
		this.style			= data.content.style ? data.content.style : this.style;
		this.color			= data.content.color ? data.content.color : this.color;
		this.setOrientation(this.orientation);
		this.updateLineSize();

		this.elem.bind("resize", function() {
			thisClass.updateLineSize();
		});

		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};
	
	/** @return {Object} */
	Line.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this), brd = (this.size + 'px ' + this.style + ' ' + this.color);
		opts.text = '';
		opts.thumb = $('<span>').css({position: 'relative', fontSize: 1, lineHeight: 1, minHeight: 1, minWidth: 1});
		if (parseInt(this.orientation, 10) === 0) {
			opts.thumb.css({
				margin: 0,
				width: 1,
				height: '100%',
				left: '50%',
				top: 0,
				borderLeft: brd
			});
		} else {
			opts.thumb.css({
				margin: 0,
				width: '100%',
				height: 1,
				left: 0,
				top: '50%',
				borderTop: brd
			});
		}
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return {Object}
	 */
	Line.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			orientation:this.orientation,
			size:		this.size,
			style:		this.style,
			color:		this.color
		};
		return data;
	};

	Line.prototype.updateLineSize = function() {
		if (this.orientation === 0) {
			this.line.css({
				"margin":	"0 0 0 1px",
				"width":	"1px",
				"height":	"100%",
				"left":		"50%",
				"top":		"0"
			});
		} else {
			this.line.css({
				"margin":	"1px 0 0 0",
				"width":	"100%",
				"height":	"1px",
				"left":		"0",
				"top":		"50%"
			});
		}
	};

	Line.prototype.setOrientation = function(o) {
		this.orientation = o * 1;
		if (this.orientation === 0) {
			this.line.css({borderLeft: this.size + "px " + this.style + " " + this.color});
			this.line.css({borderTop: "none"});
		} else {
			this.line.css({borderLeft: "none"});
			this.line.css({borderTop: this.size + "px " + this.style + " " + this.color});
		}
	};

	Line.prototype.setBorderSize = function(s) {
		this.size = s;
		this.setOrientation(this.orientation);
	};

	Line.prototype.setStyle = function(s) {
		this.style = s;
		this.setOrientation(this.orientation);
	};

	Line.prototype.getColor = function() {
		return this.color;
	};

	Line.prototype.setColor = function(c) {
		this.color = c;
		this.setOrientation(this.orientation);
	};

	Line.prototype.getBackupColor = function() {
		return this.backupColor;
	};

	Line.prototype.setBackupColor = function(color) {
		this.backupColor = color;
	};

	/**
	 * Extend element properties dialog
	 */
	Line.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 350},
			tabs: [
				{children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Orientation')},
							{type: 'RadioBox', id: 'lineOrientationVert',  label: '|', group: (this.id + '_lineOrient'), init: function() {
								this._input.css({marginTop: 19});
								this._labelText.empty().css({
									width: 25, height: 50, marginRight: 25,
									display: 'inline-block', borderRight: '2px solid #000000', verticalAlign: 'top'
								});
							}},
							{type: 'RadioBox', id: 'lineOrientationHoriz', label: '-', group: (this.id + '_lineOrient'), init: function() {
								this._input.css({marginTop: 19});
								this._labelText.empty().css({
									width: 50, height: 27, marginBottom: 23,
									display: 'inline-block', borderBottom: '2px solid #000000', verticalAlign: 'top'
								});
							}}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Style')},
							{type: 'RadioBox', id: 'lineStyleSolid',  label: '-',   group: (this.id + '_lineStyle'), init: function() {
								this._labelText.empty().css({
									width: 100, height: 12, marginBottom: 8,
									display: 'inline-block', borderBottom: '2px solid #000000', verticalAlign: 'top'
								});
							}},
							{type: 'RadioBox', id: 'lineStyleDashed', label: '---', group: (this.id + '_lineStyle'), init: function() {
								this._labelText.empty().css({
									width: 100, height: 12, marginBottom: 8,
									display: 'inline-block', borderBottom: '2px dashed #000000', verticalAlign: 'top'
								});
							}},
							{type: 'RadioBox', id: 'lineStyleDotted', label: '...', group: (this.id + '_lineStyle'), init: function() {
								this._labelText.empty().css({
									width: 100, height: 12, marginBottom: 8,
									display: 'inline-block', borderBottom: '2px dotted #000000', verticalAlign: 'top'
								});
							}},
							{type: 'RadioBox', id: 'lineStyleDouble', label: '=',   group: (this.id + '_lineStyle'), init: function() {
								this._labelText.empty().css({
									width: 100, height: 12, marginBottom: 8,
									display: 'inline-block', borderBottom: '3px double #000000', verticalAlign: 'top'
								});
							}}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Size')},
							{type: 'SizeSelector', id: 'lineSize'},
							{type: 'Label', text: __('Color'), css: {marginTop: 15}},
							{type: 'ColorSelector', id: 'lineColor', noTransparent: true}
						]}
					]}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.setBorderSize(fields.lineSize.getValue());
				var stl = 'solid';
				if (fields.lineStyleSolid.getValue()) {
					stl = 'solid';
				} else if (fields.lineStyleDashed.getValue()) {
					stl = 'dashed';
				} else if (fields.lineStyleDotted.getValue()) {
					stl = 'dotted';
				} else if (fields.lineStyleDouble.getValue()) {
					stl = 'double';
				} 
				thisClass.setStyle(stl);
				thisClass.setColor(fields.lineColor.getValue());
				var orient = 0;
				if (fields.lineOrientationVert.getValue()) {
					orient = 0;
				} else if (fields.lineOrientationHoriz.getValue()) {
					orient = 1;
				}
				thisClass.setOrientation(orient);
				thisClass.updateLineSize();
			}
		});
		
		fields.lineOrientationVert.setValue((this.orientation === 0));
		fields.lineOrientationHoriz.setValue((this.orientation === 1));
		fields.lineSize.setValue(this.size);
		fields.lineStyleSolid.setValue((this.style === 'solid'));
		fields.lineStyleDashed.setValue((this.style === 'dashed'));
		fields.lineStyleDotted.setValue((this.style === 'dotted'));
		fields.lineStyleDouble.setValue((this.style === 'double'));
		fields.lineColor.setValue(this.color);
	};

	Line.prototype.initContextMenu = function(elem) {
		Element.prototype.initContextMenu.call(this, elem);
		var thisClass = this;

		var i, idx = this.contextMenuFirstIndex;

		this.miOrientation = new ContextMenu(this.id + "_orientation_sub");
		this.miOrientation.addItem("vertical", __("Vertical"), function() {
		   thisClass.setOrientation(0);
		   thisClass.updateLineSize();
		}, this.orientation === 0, false);
		this.miOrientation.addItem("horizontal", __("Horizontal"), function() {
		   thisClass.setOrientation(1);
		   thisClass.updateLineSize();
		}, this.orientation === 1, false);
		this.menu.insertItemAt(idx++, 'orientation', __("Orientation"), this.miOrientation, null, null, null, "glyphicon glyphicon-repeat");

		this.miStyle = new ContextMenu(this.id + "_style_sub");
		for (i = 0; i < Line.styleList.length; i++) {
			this.miStyle.addItem('style' + i, Line.styleList[i].name, function(e, style) {
			   thisClass.setStyle(style.value);
			}, this.style === Line.styleList[i].value, false, Line.styleList[i]);
		}
		this.menu.insertItemAt(idx++, 'style', __("Style"), this.miStyle, null, null, null, "glyphicon glyphicon-adjust");

		this.miSize = new ContextMenu(this.id + "_size_sub");
		for (i = 0; i < Line.sizeList.length; i++) {
			this.miSize.addItem('size' + i, Line.sizeList[i].name, function(e, size) {
				thisClass.setBorderSize(size.value);
			}, this.size == Line.sizeList[i].value, false, Line.sizeList[i]);
		}
		this.menu.insertItemAt(idx++, 'size', __("Size"), this.miSize, null, null, null, "glyphicon glyphicon-resize-full");

		$(this.menu.insertItemAt(idx++, 'changeColor', __("Change color"), function() {

		}, null, null, null, "glyphicon glyphicon-edit")).ColorPicker({
		   color: thisClass.color,
			onShow: function (colpkr) {
				thisClass.setBackupColor(thisClass.getColor());
			},
			onHide: function (colpkr) {
				thisClass.setColor(thisClass.getBackupColor());
				$(colpkr).hide();
				return false;
			},
			onChange: function (hsb, hex, rgb) {
				thisClass.setColor('#' + hex);
			},
			onSubmit: function(hsb, hex, rgb, el) {
				thisClass.setColor('#' + hex);
				thisClass.setBackupColor(thisClass.getColor());
				$(el).ColorPickerHide();
			},
			onBeforeShow: function () {
				$(this).ColorPickerSetColor(thisClass.color);
			}
		});

		this.menu.addSeparator(idx++);
	};

	Line.prototype.updateContextMenu = function() {
		Element.prototype.updateContextMenu.call(this);
		var i;
		for (i = 0; i < Line.styleList.length; i++ )
		   this.miStyle.setSelected("style" + i, this.style === Line.styleList[i].value);
		for (i = 0; i < Line.sizeList.length; i++ )
		   this.miSize.setSelected("size" + i, this.size == Line.sizeList[i].value);
		this.miOrientation.setSelected("vertical", this.orientation === 0);
		this.miOrientation.setSelected("horizontal", this.orientation === 1);
	};
	
	return Line;
});
;

/** WB Button **/

define('Button', [
	'Element',
	'ModeManager'
], function(Element, ModeManager) {
	'use strict';
	
	/**
	 * Button class
	 * @param {Object} data
	 */
	var Button = function (data) { if (data) this.__construct(data); };

	Button.prototype = new Element();
	Button.prototype.constructor = Button;
	wb_builder.registerClass("Button", Button);

	Button.prototype.text = "";
	Button.prototype.title = "";
	Button.prototype.link = "";
	Button.prototype.txt = null;
	Button.prototype.border = null;

	Button.prototype.bgNormal = null;
	Button.prototype.bgHover = null;
	Button.prototype.bgActive = null;
	Button.prototype.txtNormal = null;
	Button.prototype.txtHover = null;
	Button.prototype.txtActive = null;

	/**
	 * Construct Button element
	 * @param data element data object
	 */
	Button.prototype.__construct = function(data) {
		if (!data.width) {
			data.width = 100;
			data.height = 30;
		}
		Element.prototype.__construct.call(this, data);

		this.setMinSize(1, 1);

		this.button = $('<a class="wb_button"><span>' + __("Button") + '</span></a>');
		this.buttonClass = "wb_button-"+ this.id;
		this.button.addClass(this.buttonClass);
		this.container.append(this.button);

		this.text = (data.content.text || (typeof data.content.text === "string")) ? data.content.text : __("Just Do It!");
		this.title = (data.content.title || (typeof data.content.title === "string")) ? data.content.title : "";
		this.link = data.content.link ? data.content.link : {};
		if (typeof this.link !== "object") {
			this.link = { url: this.link };
		}

		this.txt = data.content.txt ? data.content.txt : {
			size: 14,
			decoration: "none",
			font: "Helvetica,Arial,sans-serif",
			style: { },
			align: "center",
			css: {
				"font-family": "Helvetica, Arial, sans-serif",
				"font-size": "14px",
				"text-align": "center"
			}
		};
		this.border = data.content.border ? data.content.border : {
			color: "#cccccc",
			style: "solid",
			weight: 1,
			radius: 6,
			css: { 
				border: "1px solid #cccccc",
				"border-radius"			: "6px",
				"-webkit-border-radius"	: "6px", 
				"-moz-border-radius"	: "6px"
			}
		};

		this.txtNormal = data.content.txtNormal ? data.content.txtNormal : {
			color: "#333333",
			style: { },
			align: "center",
			css: {
				color: "#333333",
				"text-decoration": "none"
			}
		};
		this.bgNormal = data.content.bgNormal ? data.content.bgNormal : {
			color: "#f5f5f5",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "#f5f5f5 none repeat scroll left top" }
		};
		this.txtHover = data.content.txtHover ? data.content.txtHover : {
			color: "#333333",
			style: { },
			align: "center",
			css: {
				color: "#333333",
				"text-decoration": "none"
			}
		};
		this.bgHover = data.content.bgHover ? data.content.bgHover : {
			color: "#E6E6E6",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "#E6E6E6 none repeat scroll left top" }
		};
		this.txtActive = data.content.txtActive ? data.content.txtActive : {
			color: "#333333",
			style: { },
			align: "center",
			css: {
				color: "#333333",
				"text-decoration": "none"
			}
		};
		this.bgActive = data.content.bgActive ? data.content.bgActive : {
			color: "#E6E6E6",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "#E6E6E6 none repeat scroll left top" }
		};

		if (data.content.padding) {
			this.button.children("span").css({padding: data.content.padding});
		}

		var thisClass = this;

		this.updateStyle(true);
		setTimeout(function() { thisClass.updateStyle(true); }, 100);

		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};

	/**
	 * @param {Object} data
	 * @return {Element.Mode}
	 */
	Button.prototype.modeClass = function(data) {
		return new Button.Mode(data);
	};
	
	/** @return {Object} */
	Button.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this), txt = String(this.text).replace(/<[^>]+>/g, '');
		opts.text = txt.substring(0, 100);
		if (opts.text.length < txt.length) opts.text += '...';
		return opts;
	};

	/**
	 * Serialize this element
	 * @return object
	 */
	Button.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);
		var m = this.modes[ModeManager.MODE_DESKTOP].serialize();

		data.content = {
			text:		this.text,
			//title:		this.title,
			link:		this.link,
			padding:	m.padding,
			txt:		this.txt,
			border:		this.border,
			txtNormal:	this.txtNormal,
			bgNormal:	this.bgNormal,
			txtHover:	this.txtHover,
			bgHover:	this.bgHover,
			txtActive:	this.txtActive,
			bgActive:	this.bgActive
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 * @param {Boolean} onConstruct if true it will prevent on pageModified flag setting
	 * @param {String} langCode
	 */
	Button.prototype.updateStyle = function(onConstruct, langCode) {
		langCode = langCode || this.system.site.currSelLang;
		this.button.css(this.txt.css);
		this.button.css(this.border.css);
		this.button.css(this.txtNormal.css);

		var bg = this.bgNormal;
		var css = $.extend(true, {}, bg.css);
		if (css.background && bg.image && bg.image !== "none") {
			css.background = css.background.replace(/url\([^\)]+\)/i, 'url("' + wb_builder.makeLocalUrl(bg.image) + '")');
		}
		this.button.css(css);
		this.button.children("span").html(__tr(this.text, langCode));

		this.onResize(onConstruct);
	};

	Button.prototype.onResize = function(onConstruct) {
		Element.prototype.onResize.call(this, onConstruct);

		var w = this.getWidth();
		var h = this.getHeight();
		
		this.button.css({ width: w + "px", height: h + "px" });

		if (this.border.weight > 0 && this.border.style !== "none") {
			w -= this.border.weight * 2;
			h -= this.border.weight * 2;
		}

		var sh = this.button.children("span").height();
		this.button.children("span").css({
			paddingTop: Math.floor((h - sh) / 2) + "px"
		});
	};

	/**
	 * Extend element properties dialog
	 */
	Button.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {/*width: 580, height: 550, maxBodyHeight: 465,*/ minBodyHeight: 380},
			tabs: [
				{children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Text')},
						{type: 'MultilangTextField', id: 'buttonText'},
						{type: 'Label', text: __('URL'), css: {marginTop: 15}},
						{type: 'LinkSelector', id: 'buttonUrl', multilang: true}
					]}
				]},
				{name: __('States'), children: [
					{type: 'FlowLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Font')},
							{type: 'FontFamilySelector', id: 'txtFont'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Size')},
							{type: 'SizeSelector', id: 'txtSize'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Align')},
							{type: 'HAlignSelector', id: 'txtAlign'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Border')},
							{type: 'BorderSelector', id: 'border', showRadius: true}
						]}
					]},
					{type: 'TabbedPane', css: {marginTop: 15}, tabs: [
						{name: __('Default'), children: [
							{type: 'FlowLayout', css: {marginTop: 15}, children: [
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Style')},
									{type: 'FontStyleSelector', id: 'textNormalStyle'}
								]},
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Color')},
									{type: 'ColorSelector', id: 'textNormalColor', noTransparent: true}
								]}
							]},
							{type: 'VerticalLayout', css: {marginTop: 15}, children: [
								{type: 'Label', text: __('Background')},
								{type: 'BackgroundSelector', id: 'bgNormal'}
							]}
						]},
						{name: __('Hover'), children: [
							{type: 'FlowLayout', css: {marginTop: 15}, children: [
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Style')},
									{type: 'FontStyleSelector', id: 'textHoverStyle'}
								]},
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Color')},
									{type: 'ColorSelector', id: 'textHoverColor', noTransparent: true}
								]}
							]},
							{type: 'VerticalLayout', css: {marginTop: 15}, children: [
								{type: 'Label', text: __('Background')},
								{type: 'BackgroundSelector', id: 'bgHover'}
							]}
						]},
						{name: __('Active'), children: [
							{type: 'FlowLayout', css: {marginTop: 15}, children: [
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Style')},
									{type: 'FontStyleSelector', id: 'textActiveStyle'}
								]},
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Color')},
									{type: 'ColorSelector', id: 'textActiveColor', noTransparent: true}
								]}
							]},
							{type: 'VerticalLayout', css: {marginTop: 15}, children: [
								{type: 'Label', text: __('Background')},
								{type: 'BackgroundSelector', id: 'bgActive'}
							]}
						]}
					]}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.text = fields.buttonText.getValue();
				//thisClass.title = fields.buttonTitle.getValue();
				thisClass.link = fields.buttonUrl.getValue();

				thisClass.txt = {
					font:	fields.txtFont.getValue(),
					size:	fields.txtSize.getValue(),
					align:	fields.txtAlign.getValue(),
					css:	{
						"font-family": fields.txtFont.getValue(),
						"font-size": fields.txtSize.getValue() + "px",
						"text-align": fields.txtAlign.getValue()
					}
				};
				thisClass.border = fields.border.getValue();

				var s = fields.textNormalStyle.getValue();
				thisClass.txtNormal = {
					style:	s,
					color:	fields.textNormalColor.getValue(),
					css: {
						color: fields.textNormalColor.getValue()
					}
				};
				thisClass.txtNormal.css["font-style"] = s.italic ? "italic" : "normal";
				thisClass.txtNormal.css["font-weight"] = s.bold ? "bold" : "normal";
				thisClass.txtNormal.css["text-decoration"] = s.underline ? "underline" : "none";

				s = fields.textHoverStyle.getValue();
				thisClass.txtHover = {
					style:	s,
					color:	fields.textHoverColor.getValue(),
					css: {
						color: fields.textHoverColor.getValue()
					}
				};
				thisClass.txtHover.css["font-style"] = s.italic ? "italic" : "normal";
				thisClass.txtHover.css["font-weight"] = s.bold ? "bold" : "normal";
				thisClass.txtHover.css["text-decoration"] = s.underline ? "underline" : "none";

				s = fields.textActiveStyle.getValue();
				thisClass.txtActive = {
					style:	s,
					color:	fields.textActiveColor.getValue(),
					css: {
						color: fields.textActiveColor.getValue()
					}
				};
				thisClass.txtActive.css["font-style"] = s.italic ? "italic" : "normal";
				thisClass.txtActive.css["font-weight"] = s.bold ? "bold" : "normal";
				thisClass.txtActive.css["text-decoration"] = s.underline ? "underline" : "none";


				thisClass.bgNormal = fields.bgNormal.getValue();
				thisClass.bgHover = fields.bgHover.getValue();
				thisClass.bgActive = fields.bgActive.getValue();
				thisClass.updateStyle();
			}
		});
		
		fields.buttonText.setValue(this.text ? this.text : "");
		//fields.buttonTitle.setValue(this.title ? this.title : "");
		fields.buttonUrl.setValue(this.link);

		fields.txtFont.setValue(thisClass.txt.font);
		fields.txtSize.setValue(thisClass.txt.size);
		fields.txtAlign.setValue(thisClass.txt.align);
		fields.border.setValue(thisClass.border);

		fields.textNormalStyle.setValue(thisClass.txtNormal.style);
		fields.textHoverStyle.setValue(thisClass.txtHover.style);
		fields.textActiveStyle.setValue(thisClass.txtActive.style);

		fields.textNormalColor.setValue(thisClass.txtNormal.color);
		fields.textHoverColor.setValue(thisClass.txtHover.color);
		fields.textActiveColor.setValue(thisClass.txtActive.color);

		fields.bgNormal.setValue(thisClass.bgNormal);
		fields.bgHover.setValue(thisClass.bgHover);
		fields.bgActive.setValue(thisClass.bgActive);

	};

	Button.prototype.onSwitchLanguage = function(langCode) {
		Element.prototype.onSwitchLanguage.call(this, langCode);
		this.updateStyle(false, langCode);
	};

	Button.Mode = (function() {
		/**
		 * @param {Button.Mode} mode
		 * @param {Object} data
		 */
		var applyData = function(mode, data) {
			mode.padding = data.padding;
		};

		/**
		 * @param {Object} data
		 * @class WB_Button.Mode
		 */
		var self = function(data) { Element.Mode.prototype.constructor.call(this, data); if (data) applyData(this, data); };
		self.prototype = Object.create(Element.Mode.prototype);
		/** @type String */
		self.prototype.padding = 0;
		/** @param {Button.Mode} mode */
		self.prototype.copy = function(mode) {
			Element.Mode.prototype.copy.call(this, mode);
			applyData(this, mode);
		};
		/** @param {Button} elem */
		self.prototype.store = function(elem) {
			Element.Mode.prototype.store.call(this, elem);
			applyData(this, {padding: (elem.button.find('span').css('padding-top') + ' 0px 0px 0px')});
		};
		/** @param {Button} elem */
		self.prototype.applyTo = function(elem) {
			Element.Mode.prototype.applyTo.call(this, elem);
		};
		/** @return {Object} */
		self.prototype.serialize = function() {
			var obj = Element.Mode.prototype.serialize.call(this);
			obj.padding = this.padding;
			return obj;
		};

		return self;
	})();
	
	window.WB_Button = Button;
	
	return Button;
});
;

/** WB Youtube **/

define('Youtube', ['Element'], function(Element) {

	/**
	 * YouTube class
	 * @param {Object} data
	 */
	var Youtube = function(data) { if (data) this.__construct(data); };

	Youtube.prototype = new Element();
	Youtube.prototype.constructor = Youtube;
	wb_builder.registerClass("Youtube", Youtube);

	Youtube.prototype.videoId = null;
	Youtube.prototype.videoUrl = null;
	Youtube.prototype.startAt = null;
	Youtube.prototype.playerMode = "iframe"; // iframe or object or hide
	Youtube.prototype.hideSelf = true;
	Youtube.prototype.player = null;
	Youtube.prototype.previewLoader = null;
	Youtube.prototype.previewReady = false;

	/**
	 * Construct YouTube element
	 * @param {Object} data element data object
	 */
	Youtube.prototype.__construct = function(data) {
		if (!data.width) {
			data.width = 420;
			data.height = 315;
		}
		Element.prototype.__construct.call(this, data);

		this.setEmtyMessageImage("img/ico_tb_youtube.png");
		this.displayEmtyMessage(true);

		if (this.hideSelf) {
			this.player = $('<div style="width: 100%; height: 100%;"><img alt="" style="width: 100%; height: 100%;" /></div>');
			this.player.css({background: "#000000", position: "relative"});
			this.player.children("img").css({position: "absolute"});
			var playBtn = $('<div></div>');
			playBtn.css({
				position: "absolute", zIndex: 4,
				left: "0px", top: "0px",
				width: "100%", height: "100%",
				background: "transparent url('" + wb_builder.modBaseUrl + "img/play_btn.png') no-repeat center center"
			});
			this.player.append(playBtn);
		} else if (this.playerMode === 'iframe') {
			this.player = $('<iframe title="YouTube video player" class="youtube-player" type="text/html"' +
				' width="560" height="345" src="about:blank" frameborder="0"></iframe>');
		} else {
			this.player = $('<object width="560" height="340" data="" type="application/x-shockwave-flash">' +
					'<param name="src" value=""></param>' +
					'<param name="movie" value=""></param>' +
					'<param name="allowFullScreen" value="true"></param>' +
					'<param name="allowscriptaccess" value="always"></param>' +
				'</object>');
		}

		this.container.append(this.player);

		this.videoId = data.content.videoId ? data.content.videoId : 'UF8uR6Z6KLc';
		this.startAt = data.content.startAt ? data.content.startAt : '';

		var thisClass = this;
		this.elem.bind("resize", function() {
			var w = thisClass.getWidth();
			var h = thisClass.getHeight();
			thisClass.player.css({ "width": w + "px", "height": h + "px" });
			thisClass.player.attr("width", w);
			thisClass.player.attr("height", h);
			if (thisClass.previewReady) {
				/*
				 * iw - 
				 * ih - h
				 */
				//alert(thisClass.previewLoader.width + "x" + thisClass.previewLoader.height);
				var img = thisClass.player.children("img");
				var iw = w;
				var ih = Math.floor(thisClass.previewLoader.height * w / thisClass.previewLoader.width);
				var px = 0;
				var py = Math.floor((h - ih) / 2);
				if (ih > h) {
					ih = h;
					iw = Math.floor(thisClass.previewLoader.width * h / thisClass.previewLoader.height);
					py = 0;
					px = Math.floor((w - iw) / 2);
				}
				img.css({width: iw + "px", height: ih + "px", left: px + "px", top: py + "px"});
			}
		});
		this.updateStyle();

		this.controls.bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};
	
	/** @return {Object} */
	Youtube.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = 'ID: ' + this.videoId;
		opts.thumb = this.getVideoImageUrl();
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return object
	 */
	Youtube.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			videoId:	this.videoId,
			startAt:	this.startAt,
			videoUrl:	this.videoUrl
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	Youtube.prototype.updateStyle = function() {
		var thisClass = this, start = (this.startAt ? this.parseTime(this.startAt) : 0);
		this.displayEmtyMessage(this.videoId ? false: true);

		this.videoUrl = this.videoId ? ((this.playerMode === 'iframe')
			? ("//www.youtube.com/embed/" + this.videoId + (start ? ('?start=' + start) : ''))
			: ("//www.youtube-nocookie.com/v/" + this.videoId + "?fs=1&amp;hl=en_US")
		) : "about:blank";
		if (this.hideSelf) {
			if (this.videoId) {
				this.previewReady = false;
				this.previewLoader = new Image();
				this.previewLoader.onload = function() {
					thisClass.previewReady = true;
					thisClass.elem.trigger("resize");
				};
				this.previewLoader.src = this.getVideoImageUrl();
				this.player.children("img").attr("src", this.getVideoImageUrl());
				this.player.css({visibility: "visible"});
			} else {
				this.player.css({visibility: "hidden"});
			}
		} else if (this.playerMode === 'iframe') {
			this.player.attr("src", this.videoUrl);
		} else {
			this.player.attr("data", this.videoUrl);
			$("param[name=src]", this.player).attr("value", this.videoUrl);
			$("param[name=movie]", this.player).attr("value", this.videoUrl);
		}
		this.elem.trigger("resize");
	};
	
	/** @return {String} */
	Youtube.prototype.getVideoImageUrl = function() {
		return this.videoId ? ('//i2.ytimg.com/vi/' + this.videoId + '/hqdefault.jpg') : null;
	};
	
	/**
	 * Extend element properties dialog
	 */
	Youtube.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			tabs: [
				{children: [
					{type: 'HorizontalLayout', columnWeights: [9, 3], children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Youtube URL or ID')},
							{type: 'TextField', id: 'videoId', init: function() {
								this.on('paste', function() {
									setTimeout(function() {
										var vidId = thisClass.extractId(fields.videoId.getValue());
										if (vidId) {
											fields.videoId.setValue(vidId);
											var frm = '<iframe width="100%" height="100%"'
													+ ' style="width: 100%; height: 100%;"'
													+ ' src="https://www.youtube.com/embed/' + vidId +'"'
													+ ' frameborder="0" allowfullscreen=""></iframe>';
											fields.videoPreview.setPreview(frm);
										} else {
											fields.videoPreview.setPreview(null);
										}
									}, 100);
								});
							}}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Start at')},
							{type: 'TextField', id: 'startAt', placeholder: '00:00'}
						]}
					]},
					{type: 'CustomContainer', id: 'videoPreview',
						styleClass: 'thumbnail',
						css: {height: 200, marginTop: 15, marginBottom: 0},
						init: function() {
							this.setPreview = function(html) {
								if (html) {
									this._elem.html(html);
									this.setVisible(true);
								} else {
									this.setVisible(false);
									this._elem.empty();
								}
							};
						}
					}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.videoId = thisClass.extractId(fields.videoId.getValue());
				thisClass.startAt = fields.startAt.getValue();
				thisClass.updateStyle();
			},
			close: function() {
				fields.videoPreview.setPreview(null);
			}
		});

		if (this.videoId) {
			fields.videoId.setValue(this.videoId);
			fields.startAt.setValue(this.startAt);
			fields.videoId.trigger('paste');
		}
	};

	/**
	 * Extract youtube video id
	 * @param {string} str URL string
	 */
	Youtube.prototype.extractId = function(str) {
		var m = null;

		try {
			if (str.indexOf("?") >= 0) {
				var url = str.split("?");
				str = "";
				if (url.length > 1) {
					url = url[1].split("&");
					for (var i = 0; i < url.length; i++) {
						var kv = url[i].split("=");
						if (kv.length < 2) continue;
						if (kv[0].toLowerCase() === "v") {
							str = kv[1];
							break;
						}
					}
				}
			} else if ((m = str.match(/^(?:(?:http|https)\:\/\/youtu\.be\/|youtu\.be\/)(.*)$/i))) {
				str = m[1];
			} else if (str.match(/^((?:http|https)\:\/\/|www\.).*$/i)) {
				str = "";
			}
			str = str.replace(/[^a-zA-Z0-9\_\-]/i, "");
		} catch(err) {}

		return str;
	};
	
	/**
	 * Parse time string
	 * @param {string} time
	 * @return {number} time in seconds
	 */
	Youtube.prototype.parseTime = function(time) {
		var h = 0, m = 0, s = 0, parts = time.split(':');
		if (parts.length >= 3) {
			h = parseInt(parts.shift(), 10);
			if (isNaN(h)) h = 0;
		}
		if (parts.length >= 2) {
			m = parseInt(parts.shift(), 10);
			if (isNaN(m)) m = 0;
		}
		s = parseInt(parts.shift(), 10);
		if (isNaN(s)) s = 0;
		
		return (h * 60 * 60) + (m * 60) + s;
	};
	
	return Youtube;
});
;

/** WB MusicPlayer **/

define('MusicPlayer', ['Element', 'ModeManager'], function(Element, ModeManager) {
	'use strict';
	
	/**
	 * MusicPlayer class
	 * @param {Object} data
	 */
	var MusicPlayer = function(data) { if (data) this.__construct(data); };

	MusicPlayer.prototype = new Element();
	MusicPlayer.prototype.constructor = MusicPlayer;
	wb_builder.registerClass("MusicPlayer", MusicPlayer);
	
	MusicPlayer.onScriptReadyOptions = {loading: false, ready: false, listeners: []};
	MusicPlayer.onScriptReady = function(inst, func) {
		if (this.onScriptReadyOptions.ready) {
			func.call(inst);
		} else {
			this.onScriptReadyOptions.listeners.push({inst: inst, func: func});	
			if (!this.onScriptReadyOptions.loading) {
				this.onScriptReadyOptions.loading = true;
				var self = this;
				$.getScript(wb_builder.modBaseUrl + 'site/js/MusicPlayer.js', function() {
					$.getScript(wb_builder.modBaseUrl + 'js/lib/audiojs/audio.min.js', function() {
						self.onScriptReadyOptions.ready = true;
						self.onScriptReadyOptions.loading = false;
						for (var i = 0; i < self.onScriptReadyOptions.listeners.length; i++) {
							self.onScriptReadyOptions.listeners[i].func.call(self.onScriptReadyOptions.listeners[i].inst);
						}
					});
				});
			}
		}
	};
	
	MusicPlayer.prototype.audioUrl = false;
	MusicPlayer.prototype.autoPlay = true;
	MusicPlayer.prototype.params = false;
	MusicPlayer.prototype.hideSelf = true;
	MusicPlayer.prototype.player = null;
	MusicPlayer.prototype.width = 200;
	MusicPlayer.prototype.height = 100;

	/**
	 * Construct MusicPlayer element
	 * @param {Object} data element data object
	 */
	MusicPlayer.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setMinSize(100, 20);

		this.setEmtyMessageImage("img/ico_tb_musicplayer.png");
		this.displayEmtyMessage(true);

		this.audioUrl = data.content.audioUrl ? data.content.audioUrl : null;
		this.autoPlay = data.content.autoPlay ? data.content.autoPlay : false;
		this.params = data.content.params ? data.content.params : null;
		this.width = data.content.width ? data.content.width : 200;
		this.height = data.content.height ? data.content.height : 100;

		this.setSize(this.width, this.height);

		if (!this.audioUrl) {
			this.audioUrl = [];
		} else if (!(this.audioUrl instanceof Array)) {
			this.audioUrl = [this.audioUrl];
		}

		var thisClass = this;
		this.elem.bind("resize", function() {
			var w = thisClass.getWidth();
			var h = thisClass.getHeight();
			$(thisClass.player).css({width: w + "px", height: h + "px"});
		});

		this.updateStyle();

		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});

	};
	
	/** @return {String} */
	MusicPlayer.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = (this.audioUrl ? this.audioUrl : '');
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return {Object}
	 */
	MusicPlayer.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);
		var m = this.modes[ModeManager.MODE_DESKTOP].serialize();

		data.content = {
			audioUrl: this.audioUrl,
			autoPlay: this.autoPlay,
			params:	this.getParamsString(m.width, m.height),
			width: m.width,
			height: m.height
		};
		return data;
	};

	/**
	 * Update element style after property changes
	 */
	MusicPlayer.prototype.updateStyle = function() {
		this.displayEmtyMessage(false);
		
		if (!this.player) {
			MusicPlayer.onScriptReady(this, function() {
				this.player = window.WBMusicPlayer.create(this.container.get(0), {noInit: true});
				this.player.addAllItems(this.audioUrl);
			});
		} else {
			this.player.removeAllItems();
			this.player.addAllItems(this.audioUrl);
		}
	};
	
	MusicPlayer.prototype.getParamsString = function(width, height) {
		var w = (width ? width : this.width), h = (height ? height : this.height),
			params = "showplaylistnumbers=0&mp3=" + this.getMP3String(this.audioUrl) + "&title=" + this.getTitleString(this.audioUrl) + "&width=" + w + "&height=" + h;
		if (this.autoPlay) { params += "&autoplay=1"; }
		return params;
	};
	
	MusicPlayer.prototype.getMP3String = function(audioUrl) {
		var paramsString = "";
		for (var i=0, url; (url = audioUrl[i]); i++) {
			paramsString += "|" + encodeURIComponent(url);
		}
		return paramsString.substring(1);
	};

	MusicPlayer.prototype.getTitleString = function(audioUrl) {
		if (!audioUrl) { audioUrl = this.audioUrl; }
		var titlesString = "";
		for (var i=0, url; (url = audioUrl[i]); i++) {
			if (url.indexOf('/') === 0)
				url = url.substring(1);
			if (url.lastIndexOf('/') === url.length - 1)
				url = url.substring(0, url.length - 1);
			var parts = url.split("/"), title;
			if ((title = parts.pop())) {
				titlesString += "|" + title;
			}
		}
		return titlesString.substring(1);
	};

	/**
	 * Extend element properties dialog
	 */
	MusicPlayer.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 330},
			tabs: [
				{children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('MP3 file(s)')},
							{type: 'ImageSelector', id: 'audioUrl',
								mode: 'audio',
								multiselect: true,
								css: {marginBottom: '20px'},
								select: function() {
									fields.testPlayer.update(this.getValues());
								}
							},
							{type: 'CheckBox', id: 'autoPlay', label: __('Start playing when page is loaded')}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Preview')},
							{type: 'CustomContainer', id: 'testPlayer',
								styleClass: 'thumbnail',
								css: {maxHeight: 210, overflowY: 'hidden'},
								init: function() {
									var player = null;
									this.update = function(audioUrl) {
										var thisSelf = this, urls = [], i;
										if (audioUrl) {
											for (i = 0; i < audioUrl.length; i++) {
												urls.push(wb_builder.userBaseUrl + audioUrl[i]);
											}
										}
										if (!player) {
											MusicPlayer.onScriptReady(this, function() {
												player = window.WBMusicPlayer.create(thisSelf._elem.get(0), {noInit: false});
												player.addAllItems(urls);
											});
										} else {
											player.removeAllItems();
											player.addAllItems(urls);
										}
									};
								}
							}
						]}
					]}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.audioUrl = fields.audioUrl.getValues();
				thisClass.autoPlay = fields.autoPlay.getValue();
				thisClass.updateStyle();
			}
		});
		
		fields.audioUrl.setValues(this.audioUrl);
		fields.autoPlay.setValue(this.autoPlay);
	};
	
	return MusicPlayer;
});
;

/** WB Facebook Like **/

define('FacebookLike', ['Element', 'ToolTipControl', 'IFrameControl'], function(Element, ToolTipControl, IFrameControl) {
	'use strict';
	
	/**
	 * FacebookLike class
	 * @param {Object} data
	 */
	var FacebookLike = function(data) { if (data) this.__construct(data); };

	FacebookLike.prototype = new Element();
	FacebookLike.prototype.constructor = FacebookLike;
	wb_builder.registerClass("FacebookLike", FacebookLike);

	FacebookLike.prototype.ifrm = false;
	FacebookLike.prototype.params = false;

	/**
	 * Construct facebook like element
	 * @param {Object} data element data object
	 */
	FacebookLike.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setMinSize(null, 24);

		this.setEmtyMessageImage("img/ico_tb_facebook_like.png");
		this.displayEmtyMessage(true);

		this.ifrm = $("<iframe></iframe>");
		this.ifrm.attr("scrolling", "no");
		this.ifrm.attr("frameborder", "0");
		this.ifrm.attr("allowTransparency", "true");
		this.ifrm.css({border: "none", overflow: "hidden"});
		this.container.append(this.ifrm);

		var thisClass = this;
		this.params = {
			url:		data.content.url ? data.content.url : location.protocol + '//' + location.host,
			//locale:		data.content.locale ? data.content.locale : "en_US",
			locale:		wb_builder.locale,
			layout:		data.content.layout ? data.content.layout : "standard",
			show_faces:	data.content.show_faces ? true : false,
			action:		data.content.action ? data.content.action : "like",
			colorscheme:data.content.colorscheme ? data.content.colorscheme : "light",
			fburl:		data.content.fburl ? data.content.fburl : "about:blank"
		};

		this.elem.bind("resize", function() {
			var w = thisClass.getWidth();
			var h = thisClass.getHeight();
			thisClass.ifrm.css({"width": w + "px", "height": h + "px"});
		});
		this.elem.bind("resizestop", function() { thisClass.updateStyle(); });

		this.updateStyle();

		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};
	
	/** @return {String} */
	FacebookLike.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = '';
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return {Object}
	 */
	FacebookLike.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			url:		this.params.url,
			// locale:		this.params.locale,
			locale:		wb_builder.locale,
			layout:		this.params.layout,
			show_faces:	this.params.show_faces,
			action:		this.params.action,
			colorscheme:this.params.colorscheme,
			fburl:		this.params.fburl
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	FacebookLike.prototype.updateStyle = function() {
		var params = this.params;
		if (typeof(params) !== "object") params = {};

		this.displayEmtyMessage(params.url ? false : true);

		params.url = params.url ? params.url : "";
		params.locale = params.locale ? params.locale : "en_US";
		params.layout = params.layout ? params.layout : "standard";
		params.show_faces = params.show_faces ? true : false;
		params.action = params.action ? params.action : "like";
		params.colorscheme = params.colorscheme ? params.colorscheme : "light";
		params.fburl = "https://www.facebook.com/plugins/like.php" +
			"?locale=" + params.locale + 
			"&href=" + encodeURIComponent(params.url) +
			"&layout=" + encodeURIComponent(params.layout) +
			"&show_faces=" + (params.show_faces ? "true" : "false") +
			"&width=" + this.getWidth() +
			"&height=" + this.getHeight() +
			"&action=" + encodeURIComponent(params.action) +
			"&colorscheme=" + encodeURIComponent(params.colorscheme);

		this.ifrm.attr("src", params.fburl);

		this.params = params;
		this.elem.trigger("resize");
	};

	/**
	 * Extend element properties dialog
	 */
	FacebookLike.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 360},
			tabs: [
				{children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('URL to Like (required)')},
							{type: 'TextField', id: 'fbUrl', change: function() {
								fields.fbPreview.setParam('href', this.getValue());
							}},
							{type: 'Label', text: __('Verb to display'),
								helpText: __("The verb to display in the button. Currently only 'like' and 'recommend' are supported."),
								css: {marginTop: '20px'}
							},
							{type: 'RadioBox', label: __('Like'),
								id: 'fbActionLike',
								group: 'fbAction',
								change: function() {
									fields.fbPreview.setParam('action', 'like');
								}
							},
							{type: 'RadioBox', label: __('Recommend'),
								id: 'fbActionRecommend',
								group: 'fbAction',
								change: function() {
									fields.fbPreview.setParam('action', 'recommend');
								}
							},
							{type: 'CheckBox', label: __('Show Faces'),
								id: 'fbShowFaces',
								helpText: __("Show profile pictures below the button."),
								css: {marginTop: '20px'},
								change: function() {
									fields.fbPreview.setParam('show_faces', (this.getValue() ? 'true' : 'false'));
								}
							}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Layout Style'),
								helpText: __('determines the size and amount of social context next to the button')
							},
							{type: 'DropdownBox', id: 'fbLayout',
								options: [
									{name: __('Standard'), id: 'standard'},
									{name: __('Count button'), id: 'button_count'},
									{name: __('Count box'), id: 'box_count'}
								],
								change: function() {
									fields.fbPreview.setParam('layout', this.getSelectedItem().getId());
								}
							},
							{type: 'Label', text: __('Color Scheme'), css: {marginTop: '20px'}},
							{type: 'RadioBox', label: __('Light'),
								id: 'fbColorSchemeLight',
								group: 'fbColorScheme',
								change: function() {
									fields.fbPreview.setParam('colorscheme', 'light');
									fields.fbPreview.css({backgroundColor: '#ffffff'}); // "#3d3d3d"
								}
							},
							{type: 'RadioBox', label: __('Dark'),
								id: 'fbColorSchemeDark',
								group: 'fbColorScheme',
								change: function() {
									fields.fbPreview.setParam('colorscheme', 'dark');
									fields.fbPreview.css({backgroundColor: '#3d3d3d'});
								}
							}
						]}
					]},
					{type: 'Label', text: __('Preview'), css: {marginTop: '20px'}},
					{type: 'IFrame', id: 'fbPreview',
						url: 'https://www.facebook.com/plugins/like.php',
						params: {
							href: this.params.url,
							locale: this.params.locale,
							show_faces: (this.params.show_faces ? 'true' : 'false'),
							layout: this.params.layout,
							action: this.params.action,
							width: 540, height: 60,
							colorscheme: this.params.colorscheme
						},
						css: {width: 540, height: 60}
					}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.params.url = fields.fbUrl.getValue();
				//thisClass.params.locale = fields.fbLocale.getValue();
				thisClass.params.layout = fields.fbLayout.getSelectedItem().getId();
				thisClass.params.show_faces = fields.fbShowFaces.getValue();
				thisClass.params.action = (fields.fbActionLike.getValue() ? 'like' : 'recommend');
				thisClass.params.colorscheme = (fields.fbColorSchemeLight.getValue() ? 'light' : 'dark');
				thisClass.updateStyle();
			}
		});
		
		fields.fbUrl.setValue(this.params.url);
		//fields.fbLocale.setValue(this.params.locale);
		var item = fields.fbLayout.getItemById(this.params.layout);
		if (!item) item = fields.fbLayout.getItem(0);
		fields.fbLayout.selectItem(item);
		fields.fbShowFaces.setValue(this.params.show_faces);
		if (this.params.action === 'like') {
			fields.fbActionLike.setValue(true);
		} else {
			fields.fbActionRecommend.setValue(true);
		}
		if (this.params.colorscheme === 'light') {
			fields.fbColorSchemeLight.setValue(true);
		} else {
			fields.fbColorSchemeDark.setValue(true);
		}
	};

	return FacebookLike;
});
;

/** WB Facebook Fans **/

define('FacebookFans', ['Element'], function(Element) {

	/**
	 * FacebookFans class
	 * @param {Object} data
	 */
	var FacebookFans = function(data) { if (data) this.__construct(data); };

	FacebookFans.prototype = new Element();
	FacebookFans.prototype.constructor = FacebookFans;
	wb_builder.registerClass("FacebookFans", FacebookFans);

	FacebookFans.prototype.ifrm = false;
	FacebookFans.prototype.cover = false;
	FacebookFans.prototype.params = false;

	/**
	 * Construct facebook fans element
	 * @param data element data object
	 */
	FacebookFans.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setMinSize(null, 24);

		this.setEmtyMessageImage("img/ico_tb_facebook_fans.png");
		this.displayEmtyMessage(true);

		this.ifrm = $("<iframe></iframe>");
		this.ifrm.attr("scrolling", "no");
		this.ifrm.attr("frameborder", "0");
		this.ifrm.attr("allowTransparency", "true");
		this.ifrm.css({border: "none", overflow: "hidden"});
		this.container.append(this.ifrm);

		var thisClass = this;
		this.params = {
			url:		data.content.url ? data.content.url : 'https://www.facebook.com/platform',
			//locale:		data.content.locale ? data.content.locale : "en_US",
			locale:		wb_builder.locale,
			small_header:	WB_Builder.isset(data.content.small_header) ? (data.content.small_header ? true : false) : true,
			hide_cover:		WB_Builder.isset(data.content.hide_cover) ? (data.content.hide_cover ? true : false) : false,
			hide_friends:	data.content.hide_friends ? true : false,
			hide_timeline:	data.content.hide_timeline ? true : false,
			fburl:		data.content.fburl ? data.content.fburl : "about:blank"
		};

		this.elem.bind("resize", function() {
			var w = thisClass.getWidth();
			var h = thisClass.getHeight();
			thisClass.ifrm.css({"width": w + "px", "height": h + "px"});
		});
		this.elem.bind("resizestop", function() { thisClass.updateStyle(); });

		this.updateStyle();

		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};

	FacebookFans.prototype.fitToParent = function() {
		return false;
	};
	
	/** @return {String} */
	FacebookFans.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = '';
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return object
	 */
	FacebookFans.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			url:		this.params.url,
			// locale:		this.params.locale,
			locale:		wb_builder.locale,
			small_header:	this.params.small_header,
			hide_cover:		this.params.hide_cover,
			hide_friends:	this.params.hide_friends,
			hide_timeline:	this.params.hide_timeline,
			fburl:		this.params.fburl
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	FacebookFans.prototype.updateStyle = function() {
		var params = this.params;
		if (typeof(params) !== "object") params = {};

		this.displayEmtyMessage(params.url ? false : true);

		params.url = params.url ? params.url : "https://www.facebook.com/platform";
		params.locale = params.locale ? params.locale : "en_US";
		params.small_header = params.small_header ? true : false;
		params.hide_cover = params.hide_cover ? true : false;
		params.hide_friends = params.hide_friends ? true : false;
		params.fburl = "https://www.facebook.com/plugins/page.php" +
			"?href=" + encodeURIComponent(params.url) +
			"&tabs=" +
			"&locale=" + params.locale +
			"&small_header=" + (params.small_header ? "true" : "false") +
			"&hide_cover=" + (params.hide_cover ? "true" : "false") +
			"&show_facepile=" + (params.hide_friends ? "false" : "true") +
			"&tabs=" + (params.hide_timeline ? "" : "timeline") +
			"&width=" + this.getWidth() +
			"&height=" + this.getHeight();

		this.ifrm.attr("src", params.fburl);

		this.params = params;

		this.elem.trigger("resize");
	};

	/**
	 * Extend element properties dialog
	 */
	FacebookFans.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 340},
			tabs: [
				{children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Profile URL (required)')},
							{type: 'TextField', id: 'fbUrl', change: function() {
								fields.fbPreview.setParam('href', this.getValue());
							}},
							{type: 'VerticalLayout', css: {marginTop: '20px', marginBottom: '20px'}, children: [
								{type: 'CheckBox', label: __('Hide cover'),
									id: 'fbHideCover',
									helpText: __('Hide cover photo in the header.'),
									change: function() {
										fields.fbPreview.setParam('hide_cover', (this.getValue() ? 'true' : 'false'));
									}
								},
								{type: 'CheckBox', label: __('Hide friends'),
									id: 'fbHideFriends',
									helpText: __("Hide faces of friends."),
									change: function() {
										fields.fbPreview.setParam('show_facepile', (this.getValue() ? 'false' : 'true'));
									}
								},
								{type: 'CheckBox', label: __('Hide timeline'),
									id: 'fbHideTimeline',
									helpText: __("Hide page timeline."),
									change: function() {
										fields.fbPreview.setParam('tabs', (this.getValue() ? '' : 'timeline'));
									}
								},
								{type: 'CheckBox', label: __('Small header'),
									id: 'fbSmallHeader',
									helpText: __('Use smaller header.'),
									change: function() {
										fields.fbPreview.setParam('small_header', (this.getValue() ? 'true' : 'false'));
									}
								}
							]}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Preview')},
							{type: 'IFrame', id: 'fbPreview',
								url: 'https://www.facebook.com/plugins/page.php',
								params: {
									href: this.params.url,
									locale: this.params.locale,
									small_header: (this.params.small_header ? 'true' : 'false'),
									hide_cover: (this.params.hide_cover ? 'true' : 'false'),
									show_facepile: (this.params.hide_friends ? 'false' : 'true'),
									tabs: (this.params.hide_timeline ? '' : 'timeline'),
									width: 260, height: 260
								},
								css: {width: 260, height: 260}
							}
						]}
					]}	
				]}
			],
			callbackFunc: function(fields) {
				thisClass.params.url = fields.fbUrl.getValue();
				//thisClass.params.locale = fields.fbLocale.getValue();
				thisClass.params.small_header = fields.fbSmallHeader.getValue();
				thisClass.params.hide_cover = fields.fbHideCover.getValue();
				thisClass.params.hide_friends = fields.fbHideFriends.getValue();
				thisClass.params.hide_timeline = fields.fbHideTimeline.getValue();
				thisClass.updateStyle();
			}
		});
		
		fields.fbUrl.setValue(this.params.url);
		//fields.fbLocale.setValue(this.params.locale);
		fields.fbSmallHeader.setValue(this.params.small_header);
		fields.fbHideCover.setValue(this.params.hide_cover);
		fields.fbHideFriends.setValue(this.params.hide_friends);
		fields.fbHideTimeline.setValue(this.params.hide_timeline);
	};
	
	return FacebookFans;
});
;

/** WB Twitter **/

define('Twitter', ['Element'], function(Element) {
	'use strict';
	
	/**
	 * Twitter class
	 * @param {Object} data
	 */
	var Twitter = function(data) { if (data) this.__construct(data); };

	Twitter.prototype = new Element();
	Twitter.prototype.constructor = Twitter;
	wb_builder.registerClass("Twitter", Twitter);

	Twitter.scriptLoaded = false;
	Twitter.defaultId = '600720083413962752'; // '356666711526739968'
	Twitter.prototype.widget = null;
	Twitter.prototype.params = null;

	/**
	 * Construct Twitter element
	 * @param {Object} data element data object
	 */
	Twitter.prototype.__construct = function(data) {
		if (!data.width) {
			data.width = 230;
			data.height = 530;
		}
		Element.prototype.__construct.call(this, data);

		this.setEmtyMessageImage("img/ico_tb_twitter.png");
		this.displayEmtyMessage(false);

		this.setMinSize(150, 100);

		this.container.css({overflow: "hidden"});
		this.container.attr("id", this.id + "_twtr-widget");

		var thisClass = this;
		if (!Twitter.scriptLoaded) {
			Twitter.scriptLoaded = true;
			window.twttr = (function (d,s,id) {
				var t, js, fjs = d.getElementsByTagName(s)[0];
				if (d.getElementById(id)) return; js=d.createElement(s); js.id=id;
				js.src="https://platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs);
				return window.twttr || (t = { _e: [], ready: function(f){ t._e.push(f); } });
			  }(document, "script", "twitter-wjs"));
		}

		var colors = (data.content.colors && typeof(data.content.colors) === "object")
			? data.content.colors : {};

		this.params = {
			id:				data.content.id ? data.content.id : Twitter.defaultId,
			numTweets:		(data.content.numTweets*1) ? (data.content.numTweets*1) : 3,		
			theme:			data.content.theme ? data.content.theme : 'light',		
			noHeader:		data.content.noHeader ? true : false,
			noFooter:		data.content.noFooter ? true : false,
			noBorders:		data.content.noBorders ? true : false,
			noScrollbar:	data.content.noScrollbar ? true : false,
			transparent:	data.content.transparent ? true : false,
			colors:			{
				border:		colors.border ? colors.border : '',
				links:		colors.links ? colors.links : '' 
			}
		};

		this.elem.bind("resizestop", function() {
			thisClass.container.children(".twitter-timeline").width(thisClass.getWidth());
			//thisClass.updateStyle();
		});


		setTimeout(function() {
			thisClass.updateStyle();
		}, 500);


		this.controls.bind("dblclick", function(e) {
			thisClass.comProperties();
		});	
	};
	
	/** @return {String} */
	Twitter.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = (this.params.id ? this.params.id : '');
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return {Object}
	 */
	Twitter.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			id:				this.params.id,
			numTweets:		this.params.numTweets,
			theme:			this.params.theme,
			noHeader:		this.params.noHeader,
			noFooter:		this.params.noFooter,
			noBorders:		this.params.noBorders,
			noScrollbar:	this.params.noScrollbar,
			transparent:	this.params.transparent,
			colors:	{
				border:		this.params.colors.border,
				links:		this.params.colors.links
			}
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	Twitter.prototype.updateStyle = function() {
		var params = this.params;
		if (typeof(params) !== "object") params = {};

		params.id = params.id ? params.id : Twitter.defaultId;

		params.theme = params.theme ? params.theme : 'light';
		params.noHeader = params.noHeader ? true : false;
		params.noFooter = params.noFooter ? true : false;
		params.noBorders = params.noBorders ? true : false;
		params.noScrollbar = params.noScrollbar ? true : false;
		params.transparent = params.transparent ? true : false;

		if (typeof(params.colors) !== "object") params.colors = {};
		params.colors.border = params.colors.border ? params.colors.border : ''; 
		params.colors.links = params.colors.links ? params.colors.links : ''; 

		this.params = params;

		this.container.empty();

		if (!window.twttr) return;

		var thisClass = this;
		try {
			var chrome = '';
			if (params.noHeader)
				chrome += (' noheader');
			if (params.noFooter)
				chrome += (' nofooter');
			if (params.noBorders)
				chrome += (' noborders');
			if (params.noScrollbar)
				chrome += (' noscrollbar');
			if (params.transparent)
				chrome += (' transparent');
			chrome = $.trim(chrome);
			var c = {
				theme: params.theme,
				chrome: chrome,
				width: params.width,
				height: params.height
			};
			if (params.numTweets)
				c.tweetLimit = params.numTweets;
			if (params.colors.border)
				c.borderColor = params.colors.border;
			if (params.colors.links)
				c.linkColor = params.colors.links;

			setTimeout(function() {
				twttr.widgets.createTimeline(
					params.id,
					document.getElementById(thisClass.container.attr("id")),
					function (el) { },
					c
				);
			}, 800);
		} catch (err) {

		}

		this.elem.trigger("resize");
		this.elem.trigger("resizestop");
	};

	/**
	 * Called when trying to filt in parent
	 */
	Twitter.prototype.fitToParent = function() {
		Element.prototype.fitToParent.call(this);
		this.elem.trigger("resizestop");
	};

	Twitter.prototype.setParent = function(parent) {
		Element.prototype.setParent.call(this, parent);
		this.updateStyle();
	};

	/**
	 * Extend element properties dialog
	 */
	Twitter.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 386},
			tabs: [
				{children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Widget Id')},
							{type: 'TextField', id: 'tweetId', change: function() {
								if (fields.tweetPreview.getParam('id') !== this.getValue()) {
									fields.tweetPreview.setParam('id', this.getValue());
								}
							}},
							{type: 'Label', text: __('Number of Tweets'), css: {marginTop: 15}},
							{type: 'SizeSelector', id: 'tweetNumTweets', min: 0, change: function() {
								fields.tweetPreview.setParam('tweetLimit', this.getValue());
							}},
							{type: 'Label', text: __('Theme'), css: {marginTop: 15}},
							{type: 'DropdownBox', id: 'tweetTheme',
								options: [
									{name: __('Light'), id: 'light'},
									{name: __('Dark'), id: 'dark'}
								],
								change: function() {
									fields.tweetPreview.setParam('theme', this.getSelectedItem().getId());
								}
							},
							{type: 'CheckBox', label: __('Hide header'),
								id: 'tweetNoHeader',
								change: function() {
									fields.tweetPreview.setParam('chrome.noheader', (this.getValue() ? true : false));
								}
							},
							{type: 'CheckBox', label: __('Hide footer'),
								id: 'tweetNoFooter',
								change: function() {
									fields.tweetPreview.setParam('chrome.nofooter', (this.getValue() ? true : false));
								}
							},
							{type: 'CheckBox', label: __('No borders'),
								id: 'tweetNoBorders',
								change: function() {
									fields.tweetPreview.setParam('chrome.noborders', (this.getValue() ? true : false));
								}
							},
							{type: 'CheckBox', label: __('Hide scrollbar'),
								id: 'tweetNoScrollbar',
								change: function() {
									fields.tweetPreview.setParam('chrome.noscrollbar', (this.getValue() ? true : false));
								}
							},
							{type: 'CheckBox', label: __('Transparent background'),
								id: 'tweetTransparent',
								change: function() {
									fields.tweetPreview.setParam('chrome.transparent', (this.getValue() ? true : false));
								}
							}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Preview')},
							{type: 'CustomContainer', id: 'tweetPreview',
								css: {height: 342, overflow: 'auto'},
								init: function() {
									var params = {
										id : Twitter.defaultId,
										tweetLimit : 3,
										width : '260',
										height : '300',
										chrome: ''
									};
									var autoUpdate = false, thisSelf = this;
									var update = function() {
										if (!window.twttr) return;
										thisSelf._elem.empty();
										try {
											twttr.widgets.createTimeline(
												params.id,
												thisSelf._elem.get(0),
												function (el) { },
												params
											);
										} catch (err) { alert(err); }
									};
									this.setAutoUpdate = function(upd) {
										autoUpdate = upd ? true : false;
										if (autoUpdate) update();
									};
									this.setParam = function(name, value) {
										if (name.substring(0, 6) === 'chrome') {
											if (value) {
												params.chrome += (' ' + name.substring(7));
											} else {
												params.chrome = params.chrome.replace(name.substring(7), '');
											}
											params.chrome = $.trim(params.chrome);
										} else {
											params[name] = value;
										}
										if (autoUpdate) update();
									};
									this.getParam = function(name) {
										return params[name];
									};
								}
							}
						]}
					]}
				]},
				{name: __('Colors'), children: [
					{type: 'Label', text: __('Border color')},
					{type: 'ColorSelector', id: 'tweetColBorder', change: function() {
						fields.tweetPreview.setParam('borderColor', this.getValue());
					}},
					{type: 'Label', text: __('Links color'), css: {marginTop: 15}},
					{type: 'ColorSelector', id: 'tweetColLinks', change: function() {
						fields.tweetPreview.setParam('linkColor', this.getValue());
					}}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.params.id = fields.tweetId.getValue();
				thisClass.params.numTweets = fields.tweetNumTweets.getValue();
				thisClass.params.theme = fields.tweetTheme.getValue();
				thisClass.params.noHeader = fields.tweetNoHeader.getValue();
				thisClass.params.noFooter = fields.tweetNoFooter.getValue();
				thisClass.params.noBorders = fields.tweetNoBorders.getValue();
				thisClass.params.noScrollbar = fields.tweetNoScrollbar.getValue();
				thisClass.params.transparent = fields.tweetTransparent.getValue();
				thisClass.params.colors.border = fields.tweetColBorder.getValue();
				thisClass.params.colors.links = fields.tweetColLinks.getValue();

				thisClass.updateStyle();
			}
		});
		
		fields.tweetPreview.setAutoUpdate(false);
		fields.tweetId.setValue(this.params.id);
		fields.tweetNumTweets.setValue(this.params.numTweets);
		fields.tweetTheme.setValue(this.params.theme);
		fields.tweetNoHeader.setValue(this.params.noHeader);
		fields.tweetNoFooter.setValue(this.params.noFooter);
		fields.tweetNoBorders.setValue(this.params.noBorders);
		fields.tweetNoScrollbar.setValue(this.params.noScrollbar);
		fields.tweetTransparent.setValue(this.params.transparent);
		fields.tweetColBorder.setValue(this.params.colors.border);
		fields.tweetColLinks.setValue(this.params.colors.links);
		fields.tweetPreview.setAutoUpdate(true);
	};
	
	return Twitter;
});
;

/** WB FlickrGallery **/

define('FlickrGallery', ['Element'], function(Element) {
	'use strict';
	
	/**
	 * FlickrGallery class
	 * @param {Object} data
	 */
	var FlickrGallery = function(data) { if (data) this.__construct(data); };

	FlickrGallery.prototype = new Element();
	FlickrGallery.prototype.constructor = FlickrGallery;
	wb_builder.registerClass("FlickrGallery", FlickrGallery);

	FlickrGallery.prototype.galleryObject = null;
	FlickrGallery.prototype.params = false;

	/**
	 * Construct FlickrGallery element
	 * @param {Object} data element data object
	 */
	FlickrGallery.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setEmtyMessageImage("img/ico_tb_flickr_gallery.png");
		this.displayEmtyMessage(true);

		this.setMinSize(null, 24);

		this.container.css({overflow: "hidden"});

		var thisClass = this;

		this.params = {
			url:	data.content.url ? data.content.url : null,
			uid:	data.content.uid ? data.content.uid : null,
			isSet:	data.content.isSet ? true : false,
			iid:	data.content.iid ? data.content.iid : null,
			mv:		data.content.mv ? data.content.mv : "",
			fv:		data.content.fv ? data.content.fv : ""
		};

		this.updateStyle();

		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};
	
	/** @return {String} */
	FlickrGallery.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = (this.params.uid ? this.params.uid : '');
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return {Object}
	 */
	FlickrGallery.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			url:	this.params.url,
			uid:	this.params.uid,
			isSet:	this.params.isSet,
			iid:	this.params.iid,
			mv:		this.params.mv,
			fv:		this.params.fv
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	FlickrGallery.prototype.updateStyle = function() {
		var params = this.params;
		if (typeof(params) !== "object") params = {};

		params.url = params.url ? params.url : null;
		params.uid = params.uid ? params.uid : null;
		params.isSet = params.isSet ? params.isSet : false;
		params.iid = params.iid ? params.iid : null;

		params.mv = "http://www.flickr.com/apps/slideshow/show.swf?v=107931";
		params.fv = "offsite=true" +
			"&lang=en-us" +
			"&page_show_url=" + encodeURI("/photos/" + params.uid +
				(params.isSet ? "/sets" : "") + 
				(params.iid ? ("/" + params.iid) : "") + "/show/") +
			"&page_show_back_url=" + encodeURI("/photos/" + params.uid +
				(params.isSet ? "/sets" : "") +
				(params.iid ? ("/" + params.iid) : "") + "/") +
			(params.isSet
				? ("&set_id=" + (params.iid ? encodeURI(params.iid) : ""))
				: ("&user_id=" + encodeURI(params.uid))) +
			"&jump_to=" + ((!params.isSet && params.iid) ? encodeURI(params.iid) : "");

		this.params = params;

		if (this.galleryObject) {
			this.galleryObject.remove();
			this.galleryObject.empty();
			this.galleryObject = null;
		}

		if (params.uid) {
			this.galleryObject = $('<object></object>');
			this.galleryObject.attr("data", params.mv);
			this.galleryObject.attr("type", "application/x-shockwave-flash");
			this.galleryObject.css({width: "100%", height: "100%"});
			var p = $('<param name="movie" />');
			p.val(params.mv);
			this.galleryObject.append(p);
			this.galleryObject.append('<param name="menu" value="false" />');
			this.galleryObject.append('<param name="allowFullScreen" value="false" />');
			this.galleryObject.append('<param name="wmode" value="transparent" />');
			p = $('<param name="flashvars" />');
			p.val(params.fv);
			this.galleryObject.append(p);
			this.container.append(this.galleryObject);

			this.displayEmtyMessage(false);
		} else {
			this.displayEmtyMessage(true);
		}

		this.elem.trigger("resize");
	};

	/**
	 * Extend element properties dialog
	 */
	FlickrGallery.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 330},
			tabs: [
				{children: [
					{type: 'VerticalLayout', fluid: true, children: [
						{type: 'Label', text: __('Flickr gallery or set URL')},
						{type: 'TextField', id: 'flickrUrl', fixedWidth: 12},
						{type: 'CustomContainer', css: {fontSize: '12px', color: '#999999'}, init: function() {
							this._elem.text(__('Ex.') + ' http://www.flickr.com/photos/gifrancis/galleries/72157622562924322/');
						}}
					]}
				]}
			],
			callbackFunc: function(fields) {
				var p = thisClass.params;

				p.uid = null;
				p.isSet = false;
				p.iid = null;
				p.url = fields.flickrUrl.getValue();
				var url = p.url.split("/photos/");
				url = (url.length > 1) ? url[1] : null;
				if (url) {
					url = url.split("/");
					p.uid = url[0];
					p.isSet = ((url.length > 1) && url[1].toLowerCase() === "sets");
					if (!p.isSet && url.length > 1 && /^[0-9]+$/i.test(url[1])) {
						p.iid = url[1];
					} else if (p.isSet && url.length > 2 && /^[0-9]+$/i.test(url[2])) {
						p.iid = url[2];
					}
				}
				if (!(/^[0-9]+\@[a-zA-Z0-9]+$/i.test(p.uid))) {
					window.jsonFlickrApi = function(res) {
						if (res.user.id) {
							thisClass.params.uid = res.user.id;
							thisClass.updateStyle();
						}
					};
					//var uid = (p.uid + "").escapeEx();
					p.uid = null;
					thisClass.params = p;
					thisClass.updateStyle();
					$.getScript("https://api.flickr.com/services/rest/?" +
						"method=flickr.urls.lookupUser" +
						"&format=json" +
						"&api_key=83907c66938b15201d5ad2f56026cc97" +
						"&url=" + p.url);
				} else {
					thisClass.params = p;
					thisClass.updateStyle();
				}

				thisClass.updateStyle();
			}
		});
		
		fields.flickrUrl.setValue(this.params.url);
	};
	
	return FlickrGallery;
});
;

/** WB CustomHtml **/

define('CustomHtml', ['Element', 'Service'], function(Element, Service) {
	'use strict';
	
	/**
	 * CustomHtml class
	 * @param {Object} data
	 */
	var CustomHtml = function(data) { if (data) this.__construct(data); };

	CustomHtml.prototype = new Element();
	CustomHtml.prototype.constructor = CustomHtml;
	wb_builder.registerClass("CustomHtml", CustomHtml);

	CustomHtml.prototype.customHtml = null;
	CustomHtml.prototype.customHtmlDeactivate = true;

	/**
	 * Construct custom html element
	 * @param data element data object
	 */
	CustomHtml.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setEmtyMessageImage("img/ico_tb_html.png");
		this.displayEmtyMessage(true);

		this.setMinSize(null, 24);

		this.container.css({overflow: "hidden"});

		this.customHtml = data.content.html ? data.content.html : null;
		// this.customHtmlDeactivate = (typeof data.content.htmlDeactivate === 'undefined' || data.content.htmlDeactivate) ? true : false;
		// Always deactivate, because to many broken scripts from users break builder
		// and because of that we need to manually disable them.
		this.customHtmlDeactivate = true;

		this.updateStyle();

		var thisClass = this;
		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};
	
	/** @return {String} */
	CustomHtml.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = '';
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return {Object}
	 */
	CustomHtml.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			html: (this.customHtml ? this.customHtml : ""),
			htmlDeactivate: this.customHtmlDeactivate
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	CustomHtml.prototype.updateStyle = function() {
		if (this.customHtmlDeactivate) {
			this.displayEmtyMessage(true);
			this.container.html("");
		} else {
			this.displayEmtyMessage(this.customHtml ? false : true);

			try {
				var m, maxCycles = 1000,
					html = this.customHtml ? this.customHtml : "",
					rg = /['"]gallery\/[^'"]+\-ts[0-9]+\.[^\.'"]+['"]/;
				while (maxCycles > 0 && (m = html.match(rg))) {
					html = html.replace(m[0], m[0].substring(0, 1) + wb_builder.userBaseUrl + m[0].substring(1));
					maxCycles--;
				}
				this.container.html(html);
			} catch(ex) {}
		}
	};

	/**
	 * Extend element properties dialog
	 */
	CustomHtml.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 330},
			tabs: [
				{children: [
					{type: 'VerticalLayout', fluid: true, children: [
						{type: 'CheckBox', label: __('Deacitvate content while in builder (recomended)'),
							id: 'customHtmlDeactivate',
							helpText: __("Some scripts may interfere with a Zyro Builder, so it's recomended to deactivate them. Failing to do so may result in inaccessable page in builder.")
						},
						{type: 'HorizontalLayout', css: {marginTop: 15}, columnWeights: [9, 3], children: [
							{type: 'Label', text: __('HTML code')},
							{type: 'Button', text: __('Insert'),
								icon: 'glyphicon glyphicon-picture',
								styleClass: 'btn-xs pull-right',
								click: function(e, fields) {
									if (!this.libDlg) {
										this.libDlg = Service.mediaLibrary.open(__('Select media'), false, 'all', false);
										var dlg = this.libDlg;
										dlg.addButton(__('Cancel'));
										dlg.addButton(__('Select'), function() {
											var list = dlg.getSelectedFiles(false);
											if (list.length > 0) {
												fields.customHtml.focus();
												fields.customHtml.insertAtCursor(list[0]);
											}
											dlg.hide();
										}, true);
									}
									this.libDlg.clearFileSelection();
									this.libDlg.show();
								}
							}
						]},
						{type: 'TextField', id: 'customHtml', textArea: true, fixedWidth: 12, css: {height: 214, marginBottom: 0}}
					]}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.customHtml = fields.customHtml.getValue();
				thisClass.customHtmlDeactivate = fields.customHtmlDeactivate.getValue();
				thisClass.updateStyle();
			}
		});
		
		fields.customHtml.setValue(this.customHtml ? this.customHtml : '');
		fields.customHtmlDeactivate.setValue(this.customHtmlDeactivate);
	};
	
	return CustomHtml;
});
;

/** WB BookmarksShare **/

define('BookmarksShare', ['Element', 'ToolTipControl'], function(Element, ToolTipControl) {
	'use strict';
	
	/**
	 * BookmarksShare class
	 * @param {Object} data
	 */
	var BookmarksShare = function(data) { if (data) this.__construct(data); };

	BookmarksShare.prototype = new Element();
	BookmarksShare.prototype.constructor = BookmarksShare;
	wb_builder.registerClass("BookmarksShare", BookmarksShare);

	BookmarksShare.scriptLoaded = false;
	BookmarksShare.prototype.widget = null;
	BookmarksShare.prototype.params = null;

	/**
	 * Construct BookmarksShare element
	 * @param {Object} data element data object
	 */
	BookmarksShare.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setEmtyMessageImage("img/ico_tb_share.png");
		this.displayEmtyMessage(true);

		this.setMinSize(null, 24);

		this.container.css({overflow: "hidden"});
		this.container.attr("id", this.id + "_addthis-widget");

		var thisClass = this;
		if (!BookmarksShare.scriptLoaded) {
			BookmarksShare.scriptLoaded = true;
			$.getScript("http://s7.addthis.com/js/250/addthis_widget.js#domready=1", function() {
				thisClass.updateStyle();
			});
		}
		/* wb_builder.addCSSRule('.demo.addthis_button_facebook',
			'background: transparent url("images/bookmarks_share_demo.png") no-repeat left 0px;'+
			'width: 126px; height: 20px; display: block; float: left; padding: 0; margin: 0;'+
			'text-decoration: none; border: none;');
		wb_builder.addCSSRule('.demo.addthis_button_twitter',
			'background: transparent url("images/bookmarks_share_demo.png") no-repeat left -20px;'+
			'width: 126px; height: 20px; display: block; float: left; padding: 0; margin: 0;'+
			'text-decoration: none; border: none;');
		wb_builder.addCSSRule('.demo.addthis_button_email',
			'background: transparent url("images/bookmarks_share_demo.png") no-repeat left -40px;'+
			'width: 126px; height: 20px; display: block; float: left; padding: 0; margin: 0;'+
			'text-decoration: none; border: none;');
		wb_builder.addCSSRule('.demo.addthis_button_google',
			'background: transparent url("images/bookmarks_share_demo.png") no-repeat left -60px;'+
			'width: 126px; height: 20px; display: block; float: left; padding: 0; margin: 0;'+
			'text-decoration: none; border: none;');
		wb_builder.addCSSRule('.demo.addthis_button_print',
			'background: transparent url("images/bookmarks_share_demo.png") no-repeat left -80px;'+
			'width: 126px; height: 20px; display: block; float: left; padding: 0; margin: 0;'+
			'text-decoration: none; border: none;');
		wb_builder.addCSSRule('.demo.addthis_button_compact',
			'background: transparent url("images/bookmarks_share_demo.png") no-repeat left -100px;'+
			'width: 126px; height: 20px; display: block; float: left; padding: 0; margin: 0;'+
			'text-decoration: none; border: none;');
		wb_builder.addCSSRule('.demo.addthis_button_facebook_like',
			'background: transparent url("images/bookmarks_share_demo.png") no-repeat left -120px;'+
			'width: 126px; height: 20px; display: block; float: left; padding: 0; margin: 0;'+
			'text-decoration: none; border: none;');
		wb_builder.addCSSRule('.demo.addthis_button_tweet',
			'background: transparent url("images/bookmarks_share_demo.png") no-repeat left -140px;'+
			'width: 126px; height: 20px; display: block; float: left; padding: 0; margin: 0;'+
			'text-decoration: none; border: none;');
		wb_builder.addCSSRule('.demo.addthis_button_google_plusone',
			'background: transparent url("images/bookmarks_share_demo.png") no-repeat left -160px;'+
			'width: 126px; height: 20px; display: block; float: left; padding: 0; margin: 0;'+
			'text-decoration: none; border: none;');
		wb_builder.addCSSRule('.demo.addthis_button',
			'background: transparent url("images/bookmarks_share_demo.png") no-repeat left -180px;'+
			'width: 126px; height: 20px; display: block; float: left; padding: 0; margin: 0;'+
			'text-decoration: none; border: none;'); */

		var buttons = (data.content.buttons && typeof(data.content.buttons) === "object") ?
			data.content.buttons : {
				facebook: true,
				twitter: true,
				email: true
			};

		this.params = {
			user: data.content.user ? data.content.user : "",
			size: data.content.size ? data.content.size : "16x16",
			buttons: {
				facebook:		buttons.facebook ? true : false,
				twitter:		buttons.twitter ? true : false,
				email:			buttons.email ? true : false,
				google:			buttons.google ? true : false,
				print:			buttons.print ? true : false,
				compact:		buttons.compact ? true : false,
				counter_bubble:	buttons.counter_bubble ? true : false,
				facebook_like:	buttons.facebook_like ? true : false,
				tweet:			buttons.tweet ? true : false,
				google_plusone:	buttons.google_plusone ? true : false,
				share:			buttons.share ? true : false
			}
		};

		this.updateStyle();

		this.controls.bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};
	
	/** @return {String} */
	BookmarksShare.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = '';
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return object
	 */
	BookmarksShare.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			user: this.params.user,
			size: this.params.size,
			buttons: {
				facebook:	this.params.buttons.facebook,
				twitter:	this.params.buttons.twitter,
				email:		this.params.buttons.email,
				google:		this.params.buttons.google,
				print:		this.params.buttons.print,
				compact:	this.params.buttons.compact,
				counter_bubble:	this.params.buttons.counter_bubble,
				facebook_like:	this.params.buttons.facebook_like,
				tweet:			this.params.buttons.tweet,
				google_plusone:	this.params.buttons.google_plusone,
				share:		this.params.buttons.share
			}
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	BookmarksShare.prototype.updateStyle = function() {
		var params = this.params;
		if (typeof(params) !== "object") params = {};

		this.container.empty();

		params.user = params.user ? params.user : "";
		params.size = params.size ? params.size : "16x16";

		if (typeof(params.buttons) !== "object") params.buttons = {"share": true};
		params.buttons.facebook = params.buttons.facebook ? params.buttons.facebook : false;
		params.buttons.twitter = params.buttons.twitter ? params.buttons.twitter : false;
		params.buttons.email = params.buttons.email ? params.buttons.email : false;
		params.buttons.google = params.buttons.google ? params.buttons.google : false;
		params.buttons.print = params.buttons.print ? params.buttons.print : false;
		params.buttons.compact = params.buttons.compact ? params.buttons.compact : false;
		params.buttons.counter_bubble = params.buttons.counter_bubble ? params.buttons.counter_bubble : false;
		params.buttons.facebook_like = params.buttons.facebook_like ? params.buttons.facebook_like : false;
		params.buttons.tweet = params.buttons.tweet ? params.buttons.tweet : false;
		params.buttons.google_plusone = params.buttons.google_plusone ? params.buttons.google_plusone : false;
		params.buttons.share = params.buttons.share ? params.buttons.share : false;

		this.params = params;

		this.container.children("a").css("display", "none");

		var cc = 0;
		for (var k in params.buttons) {
			if (!params.buttons[k]) continue;
			var kid = this.id + "_" + k;
			var kc = "addthis_button_" + k;
			if (k === "counter_bubble") kc = "addthis_counter addthis_bubble_style";
			if (k === "share") kc = "addthis_button";

			if (this.container.children("#" + kid).length === 0) {
				this.container.append('<a id="' + kid + '"' +
					' style="float: left;' + ((cc > 0) ? ' margin-left: 4px;' : '') + '"' +
					' class="' + kc + '"></a>');
			} else {
				this.container.children("#" + kid).css("display", "block");
				this.container.children("#" + kid).parent().append(this.container.children("#" + kid));
			}
			cc++;
		}
		this.displayEmtyMessage((cc > 0) ? false : true);
		if (params.size === "32x32") {
			this.container.children("a").addClass("addthis_32x32_style");
		} else {
			this.container.children("a").removeClass("addthis_32x32_style");
		}
		this.container.children("div").remove();
		var config = {};
		var share_config = {};
		if (window.addthis) {
			addthis.toolbox(this.container.get(0), config, share_config);
		}
	};

	/**
	 * Extend element properties dialog
	 */
	BookmarksShare.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 356},
			tabs: [
				{children: [
					{type: 'Label', text: __('Size')},
					{type: 'DropdownBox', id: 'shareSize', options: [
						{name: __('16x16'), id: '16x16'},
						{name: __('32x32'), id: '32x32'}
					]},
					{type: 'Label', text: __('Buttons'), css: {marginTop: '20px'}},
					{type: 'HorizontalLayout', children: [
						//'<img src="' + wb_builder.modBaseUrl + 'img/addthis_facebook.png" /> '
						//'<img src="' + wb_builder.modBaseUrl + 'img/addthis_twitter.png /> '
						//'<img src="' + wb_builder.modBaseUrl + 'img/addthis_email.png" /> '
						{type: 'CheckBox', label: __('Facebook'), id: 'shareBtnFacebook'},
						{type: 'CheckBox', label: __('Twitter'), id: 'shareBtnTwitter'},
						{type: 'CheckBox', label: __('Email'), id: 'shareBtnEmail'}
					]},
					{type: 'HorizontalLayout', children: [
						//'<img src="' + wb_builder.modBaseUrl + 'img/addthis_google.png" /> '
						//'<img src="' + wb_builder.modBaseUrl + 'img/addthis_print.png" /> '
						//'<img src="' + wb_builder.modBaseUrl + 'img/addthis_more.png" /> '
						{type: 'CheckBox', label: __('Google'), id: 'shareBtnGoogle'},
						{type: 'CheckBox', label: __('Print'), id: 'shareBtnPrint'},
						{type: 'CheckBox', label: __('More'), id: 'shareBtnCompact'}
					]},
					{type: 'HorizontalLayout', children: [
						{type: 'CheckBox', label: __('Facebook like'), id: 'shareBtnFacebookLike'},
						{type: 'CheckBox', label: __('Tweet button'), id: 'shareBtnTweet'},
						{type: 'CheckBox', label: __('Google Plus'), id: 'shareBtnGooglePlusone'}
					]},
					{type: 'HorizontalLayout', children: [
						{type: 'CheckBox', label: __('AddThis share'), id: 'shareBtnShare'}
					]},
					{type: 'Label', text: __('Profile ID (optional)'),
						helpText: __('AddThis.com profile ID. You can register to get statistics.'),
						css: {marginTop: '20px'}
					},
					{type: 'TextField', id: 'shareUser'}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.params.user = fields.shareUser.getValue();
				thisClass.params.size = fields.shareSize.getSelectedItem().getId();
				thisClass.params.buttons.facebook = fields.shareBtnFacebook.getValue();
				thisClass.params.buttons.twitter = fields.shareBtnTwitter.getValue();
				thisClass.params.buttons.email = fields.shareBtnEmail.getValue();
				thisClass.params.buttons.google = fields.shareBtnGoogle.getValue();
				thisClass.params.buttons.print = fields.shareBtnPrint.getValue();
				thisClass.params.buttons.compact = fields.shareBtnCompact.getValue();
				//thisClass.params.buttons.counter_bubble = fields.shareBtnCounterBubble.getValue();
				thisClass.params.buttons.facebook_like = fields.shareBtnFacebookLike.getValue();
				thisClass.params.buttons.tweet = fields.shareBtnTweet.getValue();
				thisClass.params.buttons.google_plusone = fields.shareBtnGooglePlusone.getValue();
				thisClass.params.buttons.share = fields.shareBtnShare.getValue();

				thisClass.updateStyle();
			}
		});
		
		fields.shareUser.setValue(this.params.user);
		var item = fields.shareSize.getItemById(this.params.size);
		if (!item) item = fields.shareSize.getItem(0);
		fields.shareSize.selectItem(item);
		fields.shareBtnFacebook.setValue(this.params.buttons.facebook);
		fields.shareBtnTwitter.setValue(this.params.buttons.twitter);
		fields.shareBtnEmail.setValue(this.params.buttons.email);
		fields.shareBtnGoogle.setValue(this.params.buttons.google);
		fields.shareBtnPrint.setValue(this.params.buttons.print);
		fields.shareBtnCompact.setValue(this.params.buttons.compact);
		//fields.shareBtnCounterBubble.setValue(this.params.buttons.counter_bubble);
		fields.shareBtnFacebookLike.setValue(this.params.buttons.facebook_like);
		fields.shareBtnTweet.setValue(this.params.buttons.tweet);
		fields.shareBtnGooglePlusone.setValue(this.params.buttons.google_plusone);
		fields.shareBtnShare.setValue(this.params.buttons.share);
	};
	
	return BookmarksShare;
});
;

/** WB GoogleMaps **/

define('GoogleMaps', ['Element'], function(Element) {
	
	var wb_builder = window.wb_builder;
	
	/**
	 * GoogleMaps class
	 * @param {Object} data
	 */
	var GoogleMaps = function(data) { if (data) this.__construct(data); };

	GoogleMaps.prototype = new Element();
	GoogleMaps.prototype.constructor = GoogleMaps;
	wb_builder.registerClass("GoogleMaps", GoogleMaps);

	GoogleMaps.scriptLoaded = false;
	GoogleMaps.prototype.mapDiv = null;
	GoogleMaps.prototype.map = null;
	GoogleMaps.prototype.mapMarker = null;
	GoogleMaps.prototype.params = false;
	GoogleMaps.prototype.mapAddress = null;

	/**
	 * Construct GoogleMaps element
	 * @param data element data object
	 */
	GoogleMaps.prototype.__construct = function(data) {
		if (!data.width) {
			data.width = 602;
			data.height = 327;
		}
		Element.prototype.__construct.call(this, data);

		this.setMinSize(null, 24);

		this.setEmtyMessageImage("img/ico_tb_google_maps.png");
		this.displayEmtyMessage(true);

		this.map = null;
		this.mapMarker = null;

		var thisClass = this;

		if (!GoogleMaps.scriptLoaded) {
			GoogleMaps.scriptLoaded = true;
			window["WB_GoogleMaps_script_fn" + this.id] = function() {
				thisClass.updateStyle();
			};
			var region, lang, locale = (wb_builder.locale ? wb_builder.locale : null);
			if (wb_builder.site.currSelLang) {
				lang = wb_builder.getLanguageByCode(wb_builder.site.currSelLang);
				if (lang) locale = lang.locale;
			}
			region = (locale && locale.indexOf('_') >= 0) ? locale.split('_')[1].toUpperCase() : null;
			$.getScript(Element.httpProtocol + "://maps.googleapis.com/maps/api/js?v=3.exp&key=" + wb_builder.mapsConfig.googleMapsApiKey + "&sensor=false" +
					(region ? ("&region=" + region + "&language=" + locale) : '') +
					"&callback=WB_GoogleMaps_script_fn" + this.id + "&libraries=places");
		}
		
		this.params = {
			address:	data.content.address ? data.content.address : (wb_builder.mapsConfig.address ? wb_builder.mapsConfig.address : "Liberty Island, New York, NY 10004"),
			ll:			data.content.ll ? data.content.ll : (wb_builder.mapsConfig.ll ? wb_builder.mapsConfig.ll : "40.689247,-74.044502"),
			zoom:		data.content.zoom ? data.content.zoom*1 : 16,
			mapTypeId:	data.content.mapTypeId ? data.content.mapTypeId : null,
			key:		(data.content.key ? data.content.key : null)
		};

		this.updateStyle();

		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};
	
	/** @return {Object} */
	GoogleMaps.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = (('address' in this.params) && this.params.address) ? this.params.address : '';
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return object
	 */
	GoogleMaps.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			address:	this.params.address,
			ll:			this.params.ll,
			zoom:		this.params.zoom,
			mapTypeId:	this.params.mapTypeId,
			key:		this.params.key
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	GoogleMaps.prototype.updateStyle = function() {
		var prms = this.params;
		if (typeof(prms) !== "object") prms = {};

		prms.address = prms.address ? prms.address : "";
		prms.ll = prms.ll ? prms.ll : "";
		prms.zoom = prms.zoom ? prms.zoom*1 : 0;
		prms.mapTypeId = prms.mapTypeId ? prms.mapTypeId : null;

		prms.width = prms.width ? prms.width : Math.round(this.getWidth());
		prms.height = prms.height ? prms.height : Math.round(this.getHeight());

		this.params = prms;
		var thisClass = this;
		var google = window.google;
		
		if (prms.ll && google) {
			if (!this.map) {
				if (!this.mapDiv) {
					this.mapDiv = $('<div>').css({width: '100%', height: '100%'}).appendTo(this.container);
				}

				if (!prms.mapTypeId) prms.mapTypeId = google.maps.MapTypeId.ROADMAP;

				setTimeout(function() {
					var zeroll = new google.maps.LatLng(0, 0);
					thisClass.map = new google.maps.Map(thisClass.mapDiv.get(0), {
						zoom: 0,
						center: zeroll,
						mapTypeId: google.maps.MapTypeId.ROADMAP
					});

					thisClass.mapMarker = new google.maps.Marker({
						position: zeroll,
						clickable: false,
						map: thisClass.map
					});
				}, 50);
			}

			setTimeout(function() {
				var ll = prms.ll.split(",");
				ll[0] *= 1; ll[1] *= 1;
				thisClass.map.setZoom(prms.zoom*1);
				thisClass.map.setCenter(new google.maps.LatLng(ll[0], ll[1]));
				thisClass.mapMarker.setPosition(new google.maps.LatLng(ll[0], ll[1]));
				thisClass.map.setMapTypeId(prms.mapTypeId);
			}, 60);

			this.mapDiv.css("display", "block");
			this.displayEmtyMessage(false);
		} else {
			if (this.mapDiv) this.mapDiv.css("display", "none");
			this.displayEmtyMessage(true);
		}

		this.elem.trigger("resize");
	};

	/**
	 * Extend element properties dialog
	 */
	GoogleMaps.prototype.comProperties = function() {
		var google = window.google;
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 386},
			tabs: [
				{children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('API Key'), helpText: __('Get API Key from %s').replace('%s', '<a href="https://developers.google.com/maps/documentation/javascript/get-api-key" target="_blank">https://developers.google.com<br/>/maps/documentation/javascript<br/>/get-api-key</a>')},
						{type: 'TextField', id: 'gmapKey'}
					]},
					{type: 'HorizontalLayout', columnWeights: [8, 4], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Address'), helpText: __('The same as in Google Maps')},
							{type: 'TextField', id: 'gmapAddress'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Zoom level'), helpText: __('ex. 4')},
							{type: 'SizeSelector', id: 'gmapZoomLevel'}
						]}
					]},
					{type: 'Label', text: __('Drag marker to set your location'), css: {marginTop: 15}},
					{type: 'CustomContainer', id: 'gmap', init: function() {
						var gmap, gmapMarker, gmapInit = false,
							gmapElem = this._elem.get(0),
							mapAddress,
							addressLatLng = null,
							changeAddress = function(loc) {
								if (!(loc instanceof Array && (0 in loc) && (1 in loc))) {
									var places = mapAddress.getPlaces(), l;
									for (var i=0, place; (place = places[i]); i++) {
										if (place && place.geometry && (l = place.geometry.location)) {
											loc = [l.lat(), l.lng()];
										}
									}
									if (!loc) { return; }
								}
								addressLatLng = loc[0] + ',' + loc[1];
								gmap.setCenter(new google.maps.LatLng(loc[0], loc[1]));
								gmapMarker.setPosition(new google.maps.LatLng(loc[0], loc[1]));
							};
						this.getLatLng = function() { return addressLatLng; };
						this.setLatLng = function(latLng) {
							if (!latLng) return;
							addressLatLng = latLng;
							var ll = addressLatLng.split(","); ll[0] *= 1; ll[1] *= 1;
							gmap.setCenter(new google.maps.LatLng(ll[0], ll[1]));
							gmapMarker.setPosition(new google.maps.LatLng(ll[0], ll[1]));
						};
						this.getMapTypeId = function() { return gmap.getMapTypeId(); };
						this.setMapTypeId = function(mapTypeId) {
							if (!mapTypeId) return;
							gmap.setMapTypeId(mapTypeId);
						};
						this.setZoom = function(zoom) { gmap.setZoom(zoom * 1); };
						this.initOnView = function() {
							if (gmapInit) return;
							gmapInit = true;
							// Google Maps requires hardcoded width to work
							this.css({width: this._elem.width()});
							var zeroll = new google.maps.LatLng(0, 0);
							gmap = new google.maps.Map(gmapElem, {
								zoom: 0,
								center: zeroll,
								mapTypeId: google.maps.MapTypeId.ROADMAP,
								streetViewControl: false
							});
							gmapMarker = new google.maps.Marker({
								position: zeroll,
								draggable: true,
								clickable: false,
								optimized: false,
								map: gmap
							});
							google.maps.event.addListener(gmapMarker, 'dragend', function() {
								var pos = this.getPosition();
								fields.gmapAddress.setText(pos.lat() + ', ' + pos.lng());
								changeAddress([pos.lat(), pos.lng()]);
							});
							google.maps.event.addListener(gmap, 'zoom_changed', function() {
								fields.gmapZoomLevel.setValue(this.getZoom());
							});
							fields.gmapZoomLevel.on('change', function() {
								gmap.setZoom(fields.gmapZoomLevel.getValue()*1);
							});
							fields.gmapAddress.on('change', function() {
								var _this = this;
								setTimeout(function() {
									_this.focus();
									google.maps.event.trigger(_this, 'keydown', {keyCode: 13});
									_this.blur();
								}, 50);
							});
							mapAddress = new google.maps.places.SearchBox(fields.gmapAddress.getElem().get(0));
							google.maps.event.addListener(mapAddress, 'places_changed', function() {
								changeAddress();
							});
						};
					}, styleClass: 'wb_gmap', css: {height: 234, border: '1px solid #aaaaaa'}}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.params.address = fields.gmapAddress.getText();
				thisClass.params.zoom = fields.gmapZoomLevel.getValue();
				thisClass.params.mapTypeId = fields.gmap.getMapTypeId();
				thisClass.params.ll = fields.gmap.getLatLng();
				thisClass.params.key = fields.gmapKey.getValue();
				thisClass.updateStyle();
			},
			open: function(fields) {
				// Google Maps can only be initialized on visible elements
				fields.gmap.initOnView();
				fields.gmap.setZoom(fields.gmapZoomLevel.getValue());
				fields.gmap.setLatLng(thisClass.params.ll);
				fields.gmap.setMapTypeId(thisClass.params.mapTypeId);
			}
		});
		
		fields.gmapAddress.setText(this.params.address);
		fields.gmapZoomLevel.setValue(this.params.zoom);
		fields.gmapKey.setValue(this.params.key);
	};
	
	return GoogleMaps;
});
;

/** WB GoogleAdSense **/

define('GoogleAdSense', ['Element', 'Dialog'], function(Element, Dialog) {
	'use strict';
	
	/**
	 * GoogleAdSense class
	 * @param {Object} data
	 */
	var GoogleAdSense = function(data) { if (data) this.__construct(data); };

	GoogleAdSense.prototype = new Element();
	GoogleAdSense.prototype.constructor = GoogleAdSense;
	wb_builder.registerClass("GoogleAdSense", GoogleAdSense);

	GoogleAdSense.prototype.ifrm = false;
	GoogleAdSense.prototype.params = false;
	GoogleAdSense.prototype.bg = false;
	GoogleAdSense.prototype.htmlDeactivate = true;

	/**
	 * Construct GoogleAdSense element
	 * @param {Object} data element data object
	 */
	GoogleAdSense.prototype.__construct = function(data) {
		if (!data.width) {
			data.width = 200;
			data.height = 200;
		}
		Element.prototype.__construct.call(this, data);

		this.setEmtyMessageImage("img/ico_tb_google_adsense.png");
		this.displayEmtyMessage(true);

		this.htmlDeactivate = (typeof data.content.htmlDeactivate === 'undefined' || data.content.htmlDeactivate) ? true : false;

		this.setMinSize(null, 24);

		this.container.css({overflow: "hidden"});

		var ln = $.inArray(CKEDITOR.config.language, ['en', 'lt', 'ru', 'es']) ? CKEDITOR.config.language : 'en';
		this.customHtml = data.content.html ? data.content.html : 
			'';//<a href="http://' + ln + '.ambuba.com/" style="background:#fff;display:block;"><img src="http://' + ln + '.ambuba.com/images/ambuba_' + ln + '.png" alt="" /></a>';

		this.updateStyle();

		var thisClass = this;
		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};
	
	/** @return {String} */
	GoogleAdSense.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = '';
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return {Object}
	 */
	GoogleAdSense.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			html: this.customHtml ? this.customHtml : "",
			htmlDeactivate: this.htmlDeactivate
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	GoogleAdSense.prototype.updateStyle = function() {
		if (this.htmlDeactivate) {
			this.displayEmtyMessage(true);
			this.container.html("");
		} else {
			this.displayEmtyMessage(this.customHtml ? false : true);

			try {
				this.container.html(this.customHtml ? this.customHtml : "");
			} catch (ex) {}
		}
	};

	GoogleAdSense.prototype.changeProperties = function() {
		var thisClass = this;
		if (!this.dialog) {
			this.dialog = new Dialog("Change properties");
			this.dialog.setSize(420, false);

			this.dialog.fields.html = this.dialog.addElement('<table>' +
					'<tr><td style="width: 130px;">Html ' +
						'<a class="wb_tip"><span><span></span>Generate your ad in your Google AdSense account<br/>and copy & paste it\'s HTML code here.</span>(?)</a>' +
						': </td></tr>' +
					'<tr><td><textarea style="width: 380px" cols="40" rows="10" name="html"></textarea></td></tr>' +
				'</table>');

			this.dialog.addButton("Ok", function() {
				var f = thisClass.dialog.fields, p = thisClass.params;
				thisClass.system.pageModified = true;
				p.html = $("[name=html]", f.html).val();

				thisClass.params = p;
				thisClass.updateStyle();
				thisClass.dialog.hide();
			});
			this.dialog.addButton("Cancel", function() { thisClass.dialog.hide(); });
		}
		var f = this.dialog.fields, p = this.params;

		$("[name=html]", f.html).val(p.html);

		this.dialog.setVisible(true);
	};

	/**
	 * Extend element properties dialog
	 */
	GoogleAdSense.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 330},
			tabs: [
				{children: [
					{type: 'VerticalLayout', fluid: true, children: [
						{type: 'CheckBox', label: __('Deacitvate content while in builder (recomended)'),
							id: 'htmlDeactivate',
							helpText: __("Some scripts may interfere with a Zyro Builder, so it's recomended to deactivate them. Failing to do so may result in inaccessable page in builder.")
						},
						{type: 'Label', text: __('Html'),
							helpText: __("Generate your ad in your Google AdSense account and copy & paste it's HTML code here."),
							css: {marginTop: '20px'}
						},
						{type: 'TextField', id: 'customHtml', textArea: true, fixedWidth: 12, css: {height: 214, marginBottom: 0}}
					]}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.customHtml = fields.customHtml.getValue();
				thisClass.htmlDeactivate = fields.htmlDeactivate.getValue();
				thisClass.updateStyle();
			}
		});
		
		fields.customHtml.setValue(this.customHtml ? this.customHtml : '');
		fields.htmlDeactivate.setValue(this.htmlDeactivate);
	};
	
	return GoogleAdSense;
});
;

/** WB Flash **/

define('Flash', ['Element'], function(Element) {
	'use strict';

	/**
	 * Flash class
	 * @param {Object} data
	 */
	var Flash = function(data) { if (data) this.__construct(data); };

	Flash.prototype = new Element();
	Flash.prototype.constructor = Flash;
	wb_builder.registerClass("Flash", Flash);

	Flash.prototype.flash = false;
	Flash.prototype.params = false;
	Flash.prototype.isNew = false;

	/**
	 * Construct Flash element
	 * @param {Object} data element data object
	 */
	Flash.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setMinSize(48, 24);

		this.setEmtyMessageImage("img/ico_tb_flash.png");
		this.displayEmtyMessage(true);

		this.isNew = data.id ? false : true;

		var thisClass = this;

		this.params = {
			image: data.content.image ? {
					file: data.content.image,
					width: (data.content.owidth ? data.content.owidth : 0),
					height: (data.content.oheight ? data.content.oheight : 0),
					size: 0
				}: { file: "", width: 0, height: 0, size: 0 },
			wmode: data.content.wmode ? data.content.wmode : "opaque"
		};

		this.elem.bind("resize", function() {
			var w = thisClass.getWidth();
			var h = thisClass.getHeight();

			if (thisClass.flash && thisClass.params.image && thisClass.params.image.file) {
				thisClass.flash.css({"width": w + "px", "height": h + "px"});
			}
		});

		this.updateStyle();

		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};

	/** @return {String} */
	Flash.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = (this.params.image.file ? this.params.image.file : '');
		return opts;
	};

	/**
	 * Serialize this element
	 * @return {Object}
	 */
	Flash.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			image: this.params.image.file,
			wmode: this.params.wmode,
			owidth: this.params.image.width,
			oheight: this.params.image.height
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	Flash.prototype.updateStyle = function() {
		var params = this.params;
		if (typeof(params) !== "object") params = {};

		this.displayEmtyMessage((params.image && params.image.file) ? false : true);

		params.image = params.image ? params.image : { file: "", width: 0, height: 0, size: 0 };
		params.wmode = params.wmode ? params.wmode : "opaque";

		this.params = params;

		if (this.flash) {
			this.flash.remove();
			this.flash.empty();
			this.flash = null;
		}

		if (params.image && params.image.file) {
			this.flash = $('<object></object>');
			this.flash.attr("data", this.makeLocalUrl(params.image.file));
			this.flash.attr("type", "application/x-shockwave-flash");
			this.flash.css({width: "100%", height: "100%"});
			var p = $('<param name="movie" />');
			p.val(this.makeLocalUrl(params.image.file));
			this.flash.append(p);
			this.flash.append('<param name="menu" value="false" />');
			p = $('<param name="wmode" />');
			p.val(params.wmode);
			this.flash.append(p);
			this.flash.append('<param name="flashvars" value="" />');
		}

		if (this.flash) {
			this.container.append(this.flash);
		}

		this.elem.trigger("resize");
	};

	Flash.prototype.onResize = function() {
		Element.prototype.onResize.call(this);
		this.elem.trigger("resize");
	};

	Flash.prototype.resetFlashSize = function() {
		/*var width = 0, height = 0;
		try {
			width	= this.flash.get(0).TGetPropertyAsNumber("/", 8);
			height	= this.flash.get(0).TGetPropertyAsNumber("/", 9);
		} catch(ex) {}
		if (width > 0 && height > 0) {
			this.setSize(width, height);
			this.onResize();
		} else*/
		if (this.params.image.width > 0 && this.params.image.height > 0) {
			this.setSize(this.params.image.width, this.params.image.height);
			this.onResize();
		}
	};

	/**
	 * Extend element properties dialog
	 */
	Flash.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 330},
			tabs: [
				{children: [
					{type: 'VerticalLayout', fluid: true, children: [
						{type: 'Label', text: __('Flash file')},
						{type: 'ImageSelector', id: 'flashImage', mode: 'flash'},
						{type: 'CheckBox', label: __('Transparent'), id: 'flashWmode', css: {marginTop: 15}}
					]}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.params.image = fields.flashImage.getValues(true);
				thisClass.params.image = (thisClass.params.image && thisClass.params.image.length > 0)
					? thisClass.params.image[0]
					: { file: '', width: 0, height: 0, size: 0 };
				thisClass.params.wmode = fields.flashWmode.getValue() ? 'transparent' : 'opaque';
				thisClass.updateStyle();
				if (thisClass.isNew) {
					thisClass.isNew = false;
					thisClass.resetFlashSize();
				}
			}
		});
		
		fields.flashImage.setValue(this.params.image);
		fields.flashWmode.setValue((this.params.wmode === 'transparent'));
	};

	Flash.prototype.initContextMenu = function(elem) {
		var thisClass = this;
		Element.prototype.initContextMenu.call(this, elem);
		var idx = this.contextMenuFirstIndex;

		if (this.isResizable) {
			this.menu.insertItemAt(idx++, 'resetSize', __("Reset to original size"), function() {
				thisClass.system.pageModified = true;
				thisClass.resetFlashSize();
			}, null, null, null, "icon-fullscreen");
		}

		this.menu.addSeparator(idx++);
	};
	
	return Flash;
});
;

/** WB SkypeImOnline **/

define('SkypeImOnline', ['Element'], function(Element) {
	'use strict';
	
	/**
	 * SkypeImOnline class
	 * @param {Object} data
	 */
	var SkypeImOnline = function(data) { if (data) this.__construct(data); };

	SkypeImOnline.prototype = new Element();
	SkypeImOnline.prototype.constructor = SkypeImOnline;
	wb_builder.registerClass("SkypeImOnline", SkypeImOnline);

	SkypeImOnline.prototype.action = false;
	SkypeImOnline.prototype.members = false;
	SkypeImOnline.prototype._elem = false;
	SkypeImOnline.prototype.size = false;
	SkypeImOnline.prototype.id = false;
	
	SkypeImOnline.lastId = 0;

	/**
	 * Construct Skype I'm Online element
	 * @param {Object} data element data object
	 */
	SkypeImOnline.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setSize(68, 62);
		SkypeImOnline.lastId++;
		this.id = SkypeImOnline.lastId;

		var proto = (location.protocol.indexOf('https') > -1) ? 'https' : 'http';
		if (proto === 'http')
			this.container.append('<script type="text/javascript" src="http://download.skype.com/share/skypebuttons/js/skypeCheck.js"></script>');
		
		this._elem = $('<div id="SkypeButton_' + this.id + '"></div>');
		this.container.append(this._elem);
		
		var thisClass = this;
		this.params = {
			name:	data.content.name ? data.content.name : "echo123",
			action:	data.content.action ? data.content.action : "call",
			size:	data.content.size ? data.content.size : "medium",
			color:	data.content.color ? data.content.color : "blue"
		};

		// if (!data.id) {
			// this.setSize(182, 44);
		// }
		
		this.elem.find('.ui-resizable-e').remove();
		this.elem.find('.ui-resizable-s').remove();
		this.elem.find('.ui-resizable-se').remove();
		
		if (!SkypeImOnline.scriptAdded) {
			$.getScript(proto + '://' + ((proto !== 'https') ? 'www' : 'secure') + '.skypeassets.com/i/scom/js/skype-uri.js');
			SkypeImOnline.scriptAdded = true;
		}
		setTimeout(function() {
			thisClass.updateStyle();	
		}, 1000);
		
		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};
	
	/** @return {String} */
	SkypeImOnline.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = (this.params.name ? this.params.name : '');
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return object
	 */
	SkypeImOnline.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			name:	this.params.name,
			action:	this.params.action,
			size:	this.params.size,
			color:	this.params.color
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	SkypeImOnline.prototype.updateStyle = function() {
		var params = this.params;
		var thisClass = this;
		if (typeof(params) !== "object") params = {};
		params.name = params.name ? params.name : "echo123";
		params.action = params.action ? params.action : "call";
		params.color = params.color ? params.color : "blue";
		params.size = params.size ? params.size : "big";
		var size = 24;
		switch (params.size) {
			case 'small': size = 16; break;
			case 'medium': size = 24; break;
			case 'big': size = 32; break;
		}
		
		this._elem.empty();
		Skype.ui({
			"name": params.action,
			"element": 'SkypeButton_' + this.id,
			"participants": [params.name],
			"imageColor": params.color,
			"imageSize": size
		});
		this.params = params;
		
		this._elem.find('img').on('load', function() {
			thisClass.setSize(
				$(this).width() + size * 2,
				$(this).height() + size * 2
			);
		});

		this.elem.trigger("resize");
	};

	/**
	 * Extend element properties dialog
	 */
	SkypeImOnline.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 330},
			tabs: [
				{children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Skype Name')},
						{type: 'TextField', id: 'skypeName', change: function() {
							fields.skypePreview.setParam('name', this.getValue());
						}}
					]},
					{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Function')},
							{type: 'RadioBox', label: __('Call'),
								id: 'skypeActionCall',
								group: 'skypeAction',
								change: function() {
									fields.skypePreview.setParam('action', 'call');
								}
							},
							{type: 'RadioBox', label: __('Chat'),
								id: 'skypeActionChat',
								group: 'skypeAction',
								change: function() {
									fields.skypePreview.setParam('action', 'chat');
								}
							}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Size')},
							{type: 'RadioBox', label: __('Small'),
								id: 'skypeSizeSmall',
								group: 'skypeSize',
								change: function() {
									fields.skypePreview.setParam('size', 16);
								}
							},
							{type: 'RadioBox', label: __('Medium'),
								id: 'skypeSizeMedium',
								group: 'skypeSize',
								change: function() {
									fields.skypePreview.setParam('size', 24);
								}
							},
							{type: 'RadioBox', label: __('Big'),
								id: 'skypeSizeBig',
								group: 'skypeSize',
								change: function() {
									fields.skypePreview.setParam('size', 32);
								}
							}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Color')},
							{type: 'RadioBox', label: __('Blue'),
								id: 'skypeColorBlue',
								group: 'skypeColor',
								change: function() {
									fields.skypePreview.setParam('color', 'blue');
								}
							},
							{type: 'RadioBox', label: __('White'),
								id: 'skypeColorWhite',
								group: 'skypeColor',
								change: function() {
									fields.skypePreview.setParam('color', 'white');
								}
							}
						]}
					]},
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Preview')},
						{type: 'CustomContainer', id: 'skypePreview', init: function() {
							var loader = $('<i>').addClass('icon-loading').css({position: 'absolute'}).appendTo(this._elem);
							var cont = $('<div>').attr({id: ('SkypeButton_preview_' + thisClass.id)}).appendTo(this._elem);
							var params = {
								name: thisClass.params.name,
								action: thisClass.params.action,
								size: thisClass.params.size,
								color: thisClass.params.color
							};
							var autoUpdate = false, thisSelf = this;
							var update = function() {
								cont.fadeOut(200, function() {
									cont.empty();
									loader.fadeIn(100);
									loader.fadeOut(100);
									cont.fadeIn(300);
									Skype.ui({
										name: params.action,
										element: 'SkypeButton_preview_' + thisClass.id,
										participants: [params.name],
										imageColor: params.color,
										imageSize: params.size
									});
									if (params.color === 'blue') {
										cont.css({backgroundColor: '#ffffff'});
									} else {
										cont.css({backgroundColor: '#b2b5b8'});
									}
								});
							};
							this.setAutoUpdate = function(upd) {
								autoUpdate = upd ? true : false;
								if (autoUpdate) update();
							};
							this.setParam = function(name, value) {
								params[name] = value;
								if (autoUpdate) update();
							};
							this.getParam = function(name) {
								return params[name];
							};
						}}
					]}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.params.name = fields.skypeName.getValue();
				thisClass.params.action = (fields.skypeActionCall.getValue() ? 'call' : 'chat');
				thisClass.params.size = (fields.skypeSizeSmall.getValue() ? 16 : (fields.skypeSizeBig.getValue() ? 32 : 24));
				thisClass.params.color = (fields.skypeColorBlue.getValue() ? 'blue' : 'white');
				thisClass.updateStyle();
			}
		});
		
		fields.skypePreview.setAutoUpdate(false);
		fields.skypeName.setValue(this.params.name);
		if (this.params.action === 'chat') {
			fields.skypeActionChat.setValue(true);
			fields.skypeActionChat.trigger('change');
		} else {
			fields.skypeActionCall.setValue(true);
			fields.skypeActionCall.trigger('change');
		}
		if (parseInt(this.params.size, 10) === 16) {
			fields.skypeSizeSmall.setValue(true);
			fields.skypeSizeSmall.trigger('change');
		} else if (parseInt(this.params.size, 10) === 32) {
			fields.skypeSizeBig.setValue(true);
			fields.skypeSizeBig.trigger('change');
		} else {
			fields.skypeSizeMedium.setValue(true);
			fields.skypeSizeMedium.trigger('change');
		}
		if (this.params.color === 'white') {
			fields.skypeColorWhite.setValue(true);
			fields.skypeColorWhite.trigger('change');
		} else {
			fields.skypeColorBlue.setValue(true);
			fields.skypeColorBlue.trigger('change');
		}
		fields.skypePreview.setAutoUpdate(true);
	};
	
	return SkypeImOnline;
});
;

/** WB Chat **/

define('Chat', ['Element', 'ToolTipControl', 'SizeSelector'], function(Element, ToolTipControl, SizeSelector) {
	'use strict';
	
	/**
	 * Chat class
	 * @param {Object} data
	 */
	var Chat = function(data) { if (data) this.__construct(data); };

	Chat.prototype = new Element();
	Chat.prototype.constructor = Chat;
	wb_builder.registerClass("Chat", Chat);

	Chat.prototype.videoId = null;
	Chat.prototype.videoUrl = null;
	Chat.prototype.params = null;
	Chat.prototype.opts_def = null;
	Chat.prototype.chId = null;
	Chat.prototype.player = null;

	/**
	 * Construct Chat element
	 * @param {Object} data element data object
	 */
	Chat.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setEmtyMessageImage("img/ico_tb_chat.png");
		this.displayEmtyMessage(true);

		this.chId = (new Date()).getTime();
		this.videoId = data.content.videoId ? data.content.videoId : "examplegroup";
		this.videoUrl = data.content.videoUrl ? data.content.videoUrl : null;
		var params = (data.content.params && typeof(data.content.params) === "object") ?
			data.content.params : {};
		this.params = {
			roundCorners:	WB_Builder.isset(params.roundCorners) ? (params.roundCorners ? true : false) : true,
			showTitle:	WB_Builder.isset(params.showTitle) ? (params.showTitle ? true : false) : true,
			showOMsg:	WB_Builder.isset(params.showOMsg) ? (params.showOMsg ? true : false) : true,
			canCFBD:	WB_Builder.isset(params.canCFBD) ? (params.canCFBD ? true : false) : true,
			fontSize:	params.fontSize ? params.fontSize : 11
		};

		var thisClass = this;

		this.updateStyle();

		this.controls.bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};

	/**
	 * Serialize this element
	 * @return {Object}
	 */
	Chat.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			videoId:	this.videoId,
			videoUrl:	this.videoUrl,
			chId:		this.chId,
			params:		{
				roundCorners: this.params.roundCorners,
				showTitle:	this.params.showTitle,
				showOMsg:	this.params.showOMsg,
				canCFBD:	this.params.canCFBD,
				fontSize:	this.params.fontSize
			}
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	Chat.prototype.updateStyle = function() {
		this.videoUrl = this.videoId ? ("http://" + this.videoId + ".chatango.com/group") : "";

		this.displayEmtyMessage(this.videoId ? false : true);

		if (!this.player) {
			this.player = $('<object></object>');
			this.player.attr("id", "obj_" + this.chId);
			this.player.attr("data", "");
			this.player.attr("type", "application/x-shockwave-flash");
			this.player.css({width: "100%", height: "100%"});
			this.player.append('<param name="movie" value="" />');
			this.player.append('<param name="menu" value="false" />');
			this.player.append('<param name="wmode" value="transparent" />');
			this.player.append('<param name="AllowScriptAccess" value="always" />');
			this.player.append('<param name="AllowNetworking" value="all" />');
			this.player.append('<param name="AllowFullScreen" value="true" />');
			this.player.append('<param name="flashvars" value="" />');
			this.container.append(this.player);
		}

		this.player.css({display: this.videoId ? "block" : "none"});
		var pFlashVars = this.player.children("param[name=flashvars]");
		pFlashVars.val(
				"cid=" + this.chId + "&b=60&f=50&l=999999&q=999999&r=100" +
				"&s=" + (this.params.roundCorners ? "1" : "") +
				"&v=" + (this.params.showTitle ? "" : "0") +
				"&w=" + (this.params.showOMsg ? "" : "0") +
				"&ab=" + (this.params.canCFBD ? "" : "0") +
				"&p=" + (this.params.fontSize ? this.params.fontSize : 11)
			);
		this.player.attr("data", this.videoUrl);
		var pMovie = this.player.children("param[name=movie]");
		pMovie.val(this.videoUrl);

		this.elem.trigger("resize");
	};

	/**
	 * Extend element properties dialog
	 */
	Chat.prototype.comProperties = function() {
		Element.prototype.comProperties.call(this);
		var thisClass = this;
		var fields = this.comDialog.fields;
		if (!fields.chatVideoId) {
			var gTab = this.comDialog.getGeneralTab();

			var td = null, tds = null, lbl = null, idx = 0;
			gTab.append(tds = $('<table>' +
				'<tr><td></td><td></td></tr>' +
				'<tr><td colspan="2"></td></tr>' +
				'<tr><td colspan="2"></td></tr>' +
				'<tr><td colspan="2"></td></tr>' +
				'<tr><td colspan="2"></td></tr>' +
			'</table>'));
			$('td', tds).css({ paddingRight: "20px"});
			tds = $('td', tds);
			tds.css({verticalAlign: "top"});

			td = tds.eq(idx++);
			td.append(lbl = $('<label>' + __("Group URL or ID") + '</label>'));
			td.append((fields.chatVideoId = new WB_TextFieldControl()).elem);
			fields.chatVideoId.elem.addClass("span2");
			lbl.append((new ToolTipControl("?", __("Register at http://chatango.com and start new group."))).elem);

			td = tds.eq(idx++);
			td.append('<label>' + __("Font size") + '</label>');
			td.append((fields.chatFontSize = new SizeSelector()).elem);

			td = tds.eq(idx++);
			td.append((fields.chatRoundCorners = new WB_CheckBoxControl(__("Round corners"))).elem);

			td = tds.eq(idx++);
			td.append((fields.chatShowTitle = new WB_CheckBoxControl(__("Show title"))).elem);

			td = tds.eq(idx++);
			td.append((fields.chatShowOMsg = new WB_CheckBoxControl(__("Show custom message under title"))).elem);

			//td = tds.eq(idx++);
			//td.append((fields.chatCanCFBD = new WB_CheckBoxControl(__("Can control fonts by default"))).elem);

			var cfb = fields.callbackFunc;
			fields.callbackFunc = function() {
				if (typeof(cfb) === "function") cfb.call(this);

				thisClass.videoId = fields.chatVideoId.getValue();
				thisClass.videoId = thisClass.videoId.replace(/^http[s]*:\/\//i, "");
				thisClass.videoId = thisClass.videoId.split(".")[0];
				thisClass.videoId = thisClass.videoId.replace(/[^a-zA-Z0-9\-\_]/i, "");

				thisClass.params.roundCorners = fields.chatRoundCorners.getValue();
				thisClass.params.showTitle = fields.chatShowTitle.getValue();
				thisClass.params.showOMsg = fields.chatShowOMsg.getValue();
				//thisClass.params.canCFBD = fields.chatCanCFBD.getValue();
				thisClass.params.fontSize = fields.chatFontSize.getValue();
				if (!thisClass.params.fontSize) thisClass.params.fontSize = 11;

				thisClass.updateStyle();
			};
		}
		fields.chatVideoId.setValue(this.videoId);
		fields.chatRoundCorners.setValue(this.params.roundCorners);
		fields.chatShowTitle.setValue(this.params.showTitle);
		fields.chatShowOMsg.setValue(this.params.showOMsg);
		//fields.chatCanCFBD.setValue(this.params.canCFBD);
		fields.chatFontSize.setValue(this.params.fontSize);
	};
	
	return Chat;
});
;

/** WB Banner **/

define('Banner', ['Element', 'ToolTipControl'], function(Element, ToolTipControl) {
	'use strict';
	
	/**
	 * Banner class
	 * @param {Object} data
	 */
	var Banner = function(data) { if (data) this.__construct(data); };

	Banner.prototype = new Element();
	Banner.prototype.constructor = Banner;
	wb_builder.registerClass("Banner", Banner);

	Banner.prototype.banner = null;
	Banner.prototype.params = null;
	Banner.prototype.scriptDeactivate = true;

	/**
	 * Construct Banner element
	 * @param data element data object
	 */
	Banner.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setMinSize(null, 24);

		this.setEmtyMessageImage("img/ico_tb_banner.png");
		this.displayEmtyMessage(true);

		this.scriptDeactivate = (typeof data.content.scriptDeactivate === 'undefined' || data.content.scriptDeactivate) ? true : false;

		var thisClass = this;
		this.params = {
			url:		data.content.url ? data.content.url : "",
			image:		data.content.image ? data.content.image : "",
			forceflurl:	data.content.forceflurl ? true : false,
			script:		data.content.script ? data.content.script : ""
		};

		this.elem.bind("resize", function() {
			var w = thisClass.getWidth();
			var h = thisClass.getHeight();

			if (thisClass.banner && thisClass.params.image) {
				thisClass.banner.css({"width": w + "px", "height": h + "px"});
				thisClass.banner.children("img").css({"width": w + "px", "height": h + "px"});
			}
		});

		this.updateStyle();

		this.controls.bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};
	
	/** @return {String} */
	Banner.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = (this.params.url ? this.params.url : '');
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return object
	 */
	Banner.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			url:		this.params.url,
			image:		this.params.image,
			forceflurl:	this.params.forceflurl,
			script:		this.params.script,
			deactivate:	this.scriptDeactivate
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	Banner.prototype.updateStyle = function() {
		var params = this.params;
		if (typeof(params) !== "object") params = {};

		this.displayEmtyMessage((params.image || params.script) ? false : true);

		params.url = params.url ? params.url : "";
		params.image = params.image ? params.image : "";
		params.forceflurl = params.forceflurl ? true : false;
		params.script = params.script ? params.script : "";

		this.params = params;
		var thisClass = this;

		if (this.banner) {
			this.banner.remove();
			this.banner.empty();
			this.banner = null;
		}

		if (params.image) {
			if (!params.image.split("?")[0].match(/^.*\.swf$/i)) {
				this.banner = $('<a></a>');
				var img = $('<img alt="" />');
				this.banner.append(img);
				this.banner.attr("href", params.url);
				img.attr("src", this.makeLocalUrl(params.image));
				img.css({border: "none"});

				if (img.get(0).width <= 0) {
					img.bind("load", function() { thisClass.elem.trigger("resize"); });
				}
			} else {
				this.banner = $('<object></object>');
				this.banner.attr("data", this.makeLocalUrl(params.image));
				this.banner.attr("type", "application/x-shockwave-flash");
				this.banner.css({width: "100%", height: "100%"});
				var p = $('<param name="movie" />');
				p.val(this.makeLocalUrl(params.image));
				this.banner.append(p);
				this.banner.append('<param name="menu" value="false" />');
				this.banner.append('<param name="wmode" value="transparent" />');
				p = $('<param name="flashvars" />');
				p.val("clickTAG=" + escape(encodeURI(params.url)));
				this.banner.append(p);
			}
		} else if (params.script) {
			if (!this.scriptDeactivate) {
				this.banner = $('<div style="width: 100%; height: 100%;"></div>');
				this.banner.html(params.script);
			} else {
				this.banner = null;
			}
		}
		if (this.banner) {
			this.container.append(this.banner);
		}

		this.elem.trigger("resize");
	};

	/**
	 * Extend element properties dialog
	 */
	Banner.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 360},
			tabs: [
				{name: __('Static banner'), children: [
					{type: 'VerticalLayout', fluid: true, children: [
						{type: 'Label', text: __('Picture/Flash file')},
						{type: 'ImageSelector', id: 'bannerImage', mode: 'all'},
						{type: 'Label', text: __('Banner URL'),
							helpText: __('For flash banner this url will be passed using "clickTAG".'),
							css: {marginTop: 15}
						},
						{type: 'TextField', id: 'bannerUrl', fixedWidth: 12},
						{type: 'CheckBox', label: __('Force Flash URL'),
							id: 'bannerForceFlUrl',
							helpText: __('If flash has no url hardcoded and has no support for "clickTAG" you can force URL on it. If you force URL flash will not be interactive.')
						}
					]}
				]},
				{name: __('Script banner'), children: [
					{type: 'VerticalLayout', fluid: true, children: [
						{type: 'CheckBox', label: __('Deacitvate content while in builder (recomended)'),
							id: 'scriptDeactivate',
							helpText: __("Some scripts may interfere with a Zyro Builder, so it's recomended to deactivate them. Failing to do so may result in inaccessable page in builder.")
						},
						{type: 'Label', text: __('Script'), css: {marginTop: '20px'}},
						{type: 'TextField', id: 'bannerScript', textArea: true, fixedWidth: 12, css: {height: 240, marginBottom: 0}}
					]}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.params.url = fields.bannerUrl.getValue();
				thisClass.params.image = fields.bannerImage.getValue();
				thisClass.params.forceflurl = fields.bannerForceFlUrl.getValue();
				thisClass.params.script = fields.bannerScript.getValue();
				thisClass.scriptDeactivate = fields.scriptDeactivate.getValue();
				thisClass.updateStyle();
			}
		});
		
		fields.bannerUrl.setValue(this.params.url);
		fields.bannerImage.setValue(this.params.image);
		fields.bannerForceFlUrl.setValue(this.params.forceflurl);
		fields.bannerScript.setValue(this.params.script);
		fields.scriptDeactivate.setValue(this.scriptDeactivate);
	};
	
	return Banner;
});
;

/** WB BuyNow **/

define('BuyNow', ['Element', 'DropdownBox'], function(Element, DropdownBox) {
	'use strict';

	/**
	 * BuyNow class
	 * @param {Object} data
	 */
	var BuyNow = function(data) { if (data) this.__construct(data); };

	BuyNow.prototype = new Element();
	BuyNow.prototype.constructor = BuyNow;
	wb_builder.registerClass("BuyNow", BuyNow);
	wb_builder.registerPaymentGateway({
		name: 'PayPal',
		id: 'paypal',
		className: 'BuyNow',
		keyField: __('Email'),
		keyFieldId: 'business',
		titleFieldId: null,
		nameFieldId: 'itemName',
		priceFieldId: 'amount',
		currencyFieldId: 'currencyCode'
	});

	BuyNow.currencies = [
		"USD", "AUD", "BRL", "GBP", "CAD", "CZK", "DKK", "EUR", "HKD", "HUF", "ILS",
		"JPY", "MYR", "MXN", "TWD", "NZD", "NOK", "PHP", "PLN", "RUB", "SGD", "SEK",
		"CHF", "THB"
	];
	BuyNow.prototype.params = null;
	BuyNow.prototype.form = null;

	/**
	 * Construct buy now button element
	 * @param {Object} data element data object
	 */
	BuyNow.prototype.__construct = function(data) {
		Element.prototype.__construct.call(this, data);

		this.setEmtyMessageImage("img/ico_tb_buynow.png");
		this.displayEmtyMessage(true);

		this.setMinSize(null, 24);
		this.setSize(107, 26);
		this.setResizingEnabled(false, true);
		//this.elem.resizable("destroy");

		this.container.css({overflow: "hidden"});

		this.params = {
			business: (data.content.business ? data.content.business : null),
			itemName: (data.content.itemName ? data.content.itemName : null),
			amount: (data.content.amount ? data.content.amount : 0),
			currencyCode: (data.content.currencyCode ? data.content.currencyCode : BuyNow.currencies[0]),
			shipping: (data.content.shipping ? data.content.shipping : 0)
		};

		this.updateStyle();

		var thisClass = this;
		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};

	/** @return {String} */
	BuyNow.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = (this.params.itemName ? this.params.itemName : '')
				+ (this.params.amount ? (': ' + this.params.amount) : '')
				+ (this.params.currencyCode ? (' ' + this.params.currencyCode) : '');
		return opts;
	};

	/**
	 * Serialize this element
	 * @return {Object}
	 */
	BuyNow.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			business: this.params.business,
			itemName: this.params.itemName,
			amount: this.params.amount,
			currencyCode: this.params.currencyCode,
			shipping: this.params.shipping,
			html: this.getHtmlValue()
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 * @param {string} langCode
	 */
	BuyNow.prototype.updateStyle = function(langCode) {
		langCode = langCode || this.system.site.currSelLang;
		if (!this.form) {
			this.form = $('<form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_blank" class="paypal">' +
					'<input type="hidden" name="cmd" value="_xclick" />' +
					'<input type="hidden" name="business" value="" />' +
					'<input type="hidden" name="lc" value="US" />' +
					'<input type="hidden" name="item_name" value="" />' +
					'<input type="hidden" name="amount" value="" />' +
					'<input type="hidden" name="currency_code" value="" />' +
					'<input type="hidden" name="button_subtype" value="services" />' +
					'<input type="hidden" name="no_note" value="0" />' +
					'<input type="hidden" name="shipping" value="" />' +
					'<input type="hidden" name="bn" value="JSCProfis_SP" />' +
					'<input type="image" src="https://www.paypalobjects.com/en_US/i/btn/btn_buynow_LG.gif" border="0" name="submit" alt="PayPal - The safer, easier way to pay online!" />' +
					'<img alt="" border="0" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif" width="1" height="1" />' +
				'</form>');
			this.container.append(this.form);
		}
		this.form.children("input[name=business]").val(this.params.business);
		this.form.children("input[name=item_name]").val(__tr(this.params.itemName, langCode));
		this.form.children("input[name=amount]").val(this.params.amount);
		this.form.children("input[name=currency_code]").val(this.params.currencyCode);
		this.form.children("input[name=shipping]").val(this.params.shipping);

		if (true || this.params.business) {
			this.form.show();
			this.displayEmtyMessage(false);
		} else {
			this.form.hide();
			this.displayEmtyMessage(true);
		}
	};

	/**
	 * Extend element properties dialog
	 */
	BuyNow.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 246},
			tabs: [
				{children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name'),
							helpText: __('Item name to be shown in paypal checkout window.')
						},
						{type: 'MultilangTextField', id: 'buyNowItemName'},
						{type: 'HorizontalLayout', columnWeights: [4, 4, 4], css: {marginTop: 15}, children: [
							{type: 'VerticalLayout', children: [
								{type: 'Label', text: __('Price')},
								{type: 'TextField', id: 'buyNowAmount'}
							]},
							{type: 'VerticalLayout', children: [
								{type: 'Label', text: __('Shipping')},
								{type: 'TextField', id: 'buyNowShipping'}
							]},
							{type: 'VerticalLayout', children: [
								{type: 'Label', text: __('Currency')},
								{type: 'DropdownBox', id: 'buyNowCurrencyCode', init: function() {
									for (var i = 0; i < BuyNow.currencies.length; i++) {
										var item = new DropdownBox.Item(BuyNow.currencies[i], BuyNow.currencies[i]);
										this.addItem(item);
										if (i === 0) this.selectItem(item);
									}
								}}
							]}
						]},
						{type: 'Label', text: __('Email address to receive payments'),
							css: {marginTop: 15},
							helpText: __('Email registered to your PayPal account.')
						},
						{type: 'TextField', id: 'buyNowBusiness'}
					]}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.params.business = fields.buyNowBusiness.getValue();
				thisClass.params.itemName = fields.buyNowItemName.getValue();
				thisClass.params.amount = fields.buyNowAmount.getValue();
				thisClass.params.currencyCode = fields.buyNowCurrencyCode.getValue();
				thisClass.params.shipping = fields.buyNowShipping.getValue();
				thisClass.updateStyle();
			}
		});

		fields.buyNowBusiness.setValue(this.params.business);
		fields.buyNowItemName.setValue(this.params.itemName);
		fields.buyNowAmount.setValue(this.params.amount);
		fields.buyNowCurrencyCode.setValue(this.params.currencyCode);
		fields.buyNowShipping.setValue(this.params.shipping);
	};

	BuyNow.prototype.getFormHtml = function(langCode) {
		var itemName = __tr(this.params.itemName, langCode);
		var form = this.form.clone();
		form.children("input[name=item_name]").val(itemName);
		return $('<div></div>').append(form).html();
	};

	BuyNow.prototype.getHtmlValue = function() {
		var html = null;
		if (this.system.site.languages.length) {
			html = {};
			for (var i=0, lang; (lang = this.system.site.languages[i]); i++) {
				html[lang.code] = this.getFormHtml(lang.code);
			}
		} else {
			html = this.getFormHtml();
		}
		return html;
	};

	BuyNow.prototype.onSwitchLanguage = function(langCode) {
		Element.prototype.onSwitchLanguage.call(this, langCode);
		this.updateStyle(langCode);
	};

	return BuyNow;
});
;

/** WB Shape **/

define('Shape', ['Element'], function(Element) {
	'use strict';
	
	/**
	 * Shape class
	 * @param {Object} data
	 */
	var Shape = function(data) { if (data) this.__construct(data); };

	Shape.prototype = new Element();
	Shape.prototype.constructor = Shape;
	wb_builder.registerClass("Shape", Shape);

	Shape.prototype.shape = null;
	Shape.prototype.background = null;
	Shape.prototype.border = null;
	Shape.prototype.opacity = null;
	Shape.prototype.borderRadius = null;

	/**
	 * Construct shape element
	 * @param {Object} data element data object
	 */
	Shape.prototype.__construct = function(data) {
		this.ignoreParentBounds = true;
		Element.prototype.__construct.call(this, data);

		this.setEmtyMessageImage("img/ico_tb_shape.png");
		this.displayEmtyMessage(false);

		//this.setMinSize(24, 24);
		this.setMinSize(1, 1);

		this.container.css({overflow: "hidden"});

		this.shape = $('<div></div>');
		this.shape.css({ width: "100%", height: "100%" });
		this.container.append(this.shape);

		this.background = data.content.background ? data.content.background : "#ffffff";
		/*this.background = data.content.background ? data.content.background : {
			color: "#ffffff",
			image: "none",
			position: "left top",
			repeat: "repeat",
			css: { background: "#ffffff none repeat scroll left top" }
		};*/

		this.border = data.content.border ? data.content.border : {
			color: "#C0C0C0",
			style: "solid",
			weight: 5,
			css: { border: "5px solid #C0C0C0" }
		};

		this.opacity = data.content.opacity ? data.content.opacity : 0.95;

		this.borderRadius = data.content.borderRadius ? data.content.borderRadius : {
			lt: 10, rt: 10, rb: 10, lb: 10,
			css: { 
				"border-radius"			: "10px",
				"-webkit-border-radius"	: "10px", 
				"-moz-border-radius"	: "10px"
			}
		};

		this.updateStyle();
		this.onResize();

		var thisClass = this;
		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
		this.elem.bind("resize", function() {
			thisClass.onResize();
		});
	};
	
	/** @return {Object} */
	Shape.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = '';
		opts.thumb = $('<span>').css({background: this.background, opacity: this.opacity}).css(this.border.css).css(this.borderRadius.css);
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return {Object}
	 */
	Shape.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			background: this.background,
			border: this.border,
			opacity: this.opacity,
			borderRadius: this.borderRadius
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	Shape.prototype.updateStyle = function() {
		//this.shape.css(this.background.css);
		this.shape.css("background", this.background);
		this.shape.css(this.border.css);
		this.shape.css("opacity", this.opacity);
		this.shape.css(this.borderRadius.css);
	};

	Shape.prototype.onResize = function(onConstruct) {
		Element.prototype.onResize.call(this, onConstruct);
		this.shape.css({ width: this.getWidth() + "px", height: this.getHeight() + "px" });
	};

	/**
	 * Extend element properties dialog
	 */
	Shape.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 330},
			tabs: [
				{children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: (__('Shape Opacity') + ' (%)')},
							{type: 'TextField', id: 'opacity'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Shape Color')},
							{type: 'ColorSelector', id: 'background'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Border')},
							{type: 'BorderSelector', id: 'border'}
						]}
					]},
					{type: 'Label', text: __('Rounded corners'), css: {marginTop: 15}},
					{type: 'RoundCornersSelector', id: 'borderRadius'}
				]}
			],
			callbackFunc: function(fields) {
				thisClass.background = fields.background.getValue();
				thisClass.border = fields.border.getValue();
				thisClass.opacity = fields.opacity.getValue();
				thisClass.opacity = parseInt(thisClass.opacity, 10);
				if (isNaN(thisClass.opacity)) thisClass.opacity = 1; else thisClass.opacity = thisClass.opacity / 100;
				thisClass.borderRadius = fields.borderRadius.getValue();
				thisClass.updateStyle();
				thisClass.onResize();
			}
		});
		
		fields.background.setValue(this.background);
		fields.border.setValue(this.border);
		fields.opacity.setValue(this.opacity*100);
		fields.borderRadius.setValue(this.borderRadius);
	};
	
	return Shape;
});
;

/** Store **/

define('Store', ['Element', 'DropdownBox', 'Service', 'PropertyDialog', 'TextControl', 'BorderControl', 'Dialog'], function(Element, DropdownBox, Service, PropertyDialog, TextControl, BorderControl, Dialog) {
	'use strict';
	
	var Store = function(data) {
		if (!data) return;
		if (!data.width) {
			data.width = 900;
			data.height = 620;
		}
		Element.prototype.__construct.call(this, data);
		this._data = data;
		
		var i, defStyle = {}, styles = wb_builder.site.styles;
		for (i = 0; i < styles.length; i++) {
			if (styles[i].selector === '.wb-stl-normal') {
				defStyle = TextControl.buildCss({
					color: styles[i].sys.text.color,
					size: styles[i].sys.text.size,
					font: styles[i].sys.text.font,
					style: {}
				});
			}
		}
		
		if (!this._data.content) this._data.content = {};
		if (!this._data.content.currencyCode) this._data.content.currencyCode = 'USD';
		if (!this._data.content.currencyPrefix) this._data.content.currencyPrefix = '$';
		if (!this._data.content.currencyPostfix) this._data.content.currencyPostfix = '';
		if (!this._data.content.thumbWidth) this._data.content.thumbWidth = 200;
		if (!this._data.content.thumbHeight) this._data.content.thumbHeight = 200;
		if (!this._data.content.imageWidth) this._data.content.imageWidth = 300;
		if (!this._data.content.imageHeight) this._data.content.imageHeight = 300;
		if (!this._data.content.imageBorder) {
			this._data.content.imageBorder = BorderControl.buildCss({
				color: '#eeeeee',
				style: 'solid',
				weight: 1,
				radius: 0
			});
		}
		if (!this._data.content.nameStyle) {
			this._data.content.nameStyle = $.extend(true, {}, defStyle);
			this._data.content.nameStyle.style.bold = true;
			this._data.content.nameStyle = TextControl.buildCss(this._data.content.nameStyle);
		}
		if (!this._data.content.priceStyle) this._data.content.priceStyle = defStyle;
		if (!this._data.content.descStyle) this._data.content.descStyle = defStyle;
		if (!this._data.content.labelStyle) this._data.content.labelStyle = defStyle;
		
		this.updateStyle();
		
		var thisClass = this;
		$(this.controls).bind('dblclick', function(e) {
			thisClass.comProperties();
		});
		Store.Module.needToSave = true;
		Store.Module.load(function() { thisClass.updateStyle(); });
	};
	
	Store.prototype = new Element();
	Store.prototype.constructor = Store;
	wb_builder.registerClass('Store', Store);
	
	Store.prototype._data = null;
	Store.prototype._catDialog = null;
	Store.prototype._prodListElem = null;
	
	Store.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);
		data.content = {};
		for (var k in this._data.content) {
			data.content[k] = this._data.content[k];
		}
		return data;
	};
	
	Store.prototype.updateContentSize = function() {
		Element.prototype.updateContentSize.call(this);
		if (this._prodListElem) this._prodListElem.parent().css({width: this.getWidth(), height: this.getHeight()});
	};
	
	Store.prototype.onSwitchLanguage = function(langCode) {
		Element.prototype.onSwitchLanguage.call(this, langCode);
		this.updateStyle(langCode);
	};
	
	Store.prototype.updateStyle = function(langCode) {
		langCode = langCode || this.system.site.currSelLang;
		if (!this._prodListElem) {
			var base = $('<div>').addClass('wb-store')
				.css({width: this.getWidth(), height: this.getHeight()});
			$('<div>').addClass('wb-store-filters')
				.append(
					$('<select>').addClass('wb-store-cat-select form-control')
						.append($('<option>').attr({value: ''}).text(__('All')))
				)
				.appendTo(base);
			this._prodListElem = $('<div>').addClass('wb-store-list').appendTo(base);
			this.container.append(base);
		}
		this._prodListElem.empty();
		var i, item, el, price, priceStr, thumb, img, sku, name, priceVal,
			thisSelf = this,
			currency = Store.Module.currency,
			items = Store.Module.items;
		for (i = 0; i < items.length; i++) {
			item = items[i];
			el = $('<div>').addClass('wb-store-item').css({maxWidth: (thisSelf._data.content.thumbWidth + 2)});
			thumb = $('<div>').addClass('wb-store-thumb').css({
					width: this._data.content.thumbWidth,
					height: this._data.content.thumbHeight
				}).css(thisSelf._data.content.imageBorder.css).appendTo(el);
			if (item.image) {
				img = $('<img>').attr({src: wb_builder.makeLocalUrl(item.image), alt: ''}).appendTo(thumb);
				(function(img, src) {
					var image = new Image();
					image.onload = function() {
						var ow = this.width,
							oh = this.height,
							w = thisSelf._data.content.thumbWidth,
							h = thisSelf._data.content.thumbWidth,
							nw, nh;
						nw = w;
						nh = Math.round(oh * w / ow);
						if (nh < h) {
							nh = h;
							nw = Math.round(ow * h / oh);
						}
						img.css({
							width: nw,
							maxWidth: nw,
							height: nh,
							maxHeight: nh,
							marginLeft: Math.round((w - nw) / 2.0),
							marginTop: Math.round((h - nh) / 2.0)
						});
					};
					image.onerror = function() { };
					image.src = src;
				})(img, wb_builder.makeLocalUrl(item.image));
			} else {
				$('<span>').addClass('wb-store-nothumb glyphicon glyphicon-picture')
					.css({marginTop: Math.round((this._data.content.thumbWidth - 49) / 2)})
					.appendTo(thumb);
			}
			name = $('<div>').addClass('wb-store-name').text(__tr(item.name, langCode, __tr(item.name, wb_builder.site.getLastDefLang()))).appendTo(el);
			if (this._data.content.nameStyle.css) name.css(this._data.content.nameStyle.css);
			
			priceStr = item.priceString ? item.priceString : item.price;
			if (priceStr) {
				priceVal = '' + currency.prefix + priceStr + ((!currency.prefix && !currency.postfix) ? (' ' + currency.code) : currency.postfix);
				price = $('<div>').addClass('wb-store-price').text(priceVal).appendTo(el);
				if (this._data.content.priceStyle.css) price.css(this._data.content.priceStyle.css);
			}
			
			this._prodListElem.append(el);
		}
	};
	
	Store.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {width: 610},
			tabs: [
				{name: __('Edit Item'), children: [
					{type: 'HorizontalLayout', columnWeights: [4, 8], columnWeightsSmall: [4, 8], children: [
						{type: 'List', id: 'tree',
							css: {height: 328},
							listHeight: 250,
							itemType: Store.Item,
							editable: true,
							init: function() {
								this.setItemValue = function(item, fields) {
									item.name = fields.name.getValue();
									item.description = fields.description.getValue();
									item.priceString = fields.price.getValue();
									item.price = parseFloat(item.priceString);
									if (isNaN(item.price)) item.price = 0;
									item.sku = fields.sku.getValue();
									item.image = fields.image.getValue();
									item.categories = fields.categories.getValue(true);
								};
								this.getItemValue = function(item, fields) {
									fields.name.setValue(item.name ? item.name : '');
									fields.description.setValue(item.description ? item.description : '');
									fields.price.setValue(item.priceString ? item.priceString : (item.price ? item.price : 0));
									fields.sku.setValue(item.sku ? item.sku : null);
									fields.image.setValue(item.image);
									fields.categories.setValue(item.categories, true);
								};
							},
							select: function(fields, item) {
								var lastItem;
								if ((lastItem = this.getLastSelected())) {
									this.setItemValue(lastItem, fields);
								}
								this.getItemValue(item, fields);
								// fields.name.setModified(false);
								// fields.description.setModified(false);
							},
							add: function(fields, item, li) {
								this.selectItemLi($(li));
								fields.name.focus();
							}
						},
						{type: 'VerticalLayout', spacing: 15, children: [
							{type: 'HorizontalLayout', columnWeights: [8, 4], columnWeightsSmall: [8, 4], children: [
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Item Name')},
									{type: 'MultilangTextField', id: 'name'}
								]},
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Price')},
									{type: 'TextField', id: 'price', change: function(elem) {
										var value = '' + Math.round(parseFloat(this.getValue()) * 100) / 100;
										this.setValue(/^\d+\.\d$/.test(value) ? value + '0' : value);
									}}
								]}
							]},
							{type: 'HorizontalLayout', columnWeights: [8, 4], columnWeightsSmall: [8, 4], children: [
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Categories')},
									{type: 'DropdownBox', id: 'categories',
										init: function() {
											var thisSelf = this, editItem = new DropdownBox.Item(__('Edit'), '__eidt__', {}, null, 'glyphicon glyphicon-pencil', false, true);
											editItem.on('click', function() {
												thisClass.editCategories(function() { thisSelf.reload(); });
												return false;
											});
											this.reload = function() {
												var i, item, selItems, cats = Store.Module.categories;
												selItems = this.getValue(true);
												this.removeAllItems();
												for (i = 0; i < cats.length; i++) {
													item = new DropdownBox.Item(__tr(cats[i].name), cats[i].id, cats[i], null, null, true);
													this.addItem(item);
												}
												this.addItem(editItem);
												this.setValue(selItems, true);
											};
										}
									}
								]},
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('SKU'),
										helpText: __('Stock keeping unit, a unique identifier for each distinct product (optional)'),
										helpPlacement: 'top'
									},
									{type: 'TextField', id: 'sku'}
								]}
							]},
							{type: 'HorizontalLayout', columnWeights: [8, 4], columnWeightsSmall: [8, 4], children: [
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Description')},
									{type: 'MultilangTextField', id: 'description', textArea: true}
								]},
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Image')},
									{type: 'ImageSelector', id: 'image'}
								]}
							]}
						]}
					]}
				]},
				{name: __('Settings'), children: [
					{type: 'HorizontalLayout', columnWeights: [3, 3, 3, 3], columnWeightsSmall: [3, 3, 3, 3], children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Currency')},
							{type: 'DropdownBox', id: 'currencyCode',
								init: function() {
									var i, item;
									for (i = 0; i < Store.Module.currencies.length; i++) {
										item = new DropdownBox.Item(Store.Module.currencies[i].code, Store.Module.currencies[i].code, Store.Module.currencies[i]);
										this.addItem(item);
										if (i === 0) this.selectItem(item);
									}
								},
								change: function(fields) {
									var currency = this.getSelectedItem();
									if (currency && currency.getOriginal()) {
										fields.currencyPrefix.setValue(currency.getOriginal().prefix);
										fields.currencyPostfix.setValue(currency.getOriginal().postfix);
									}
									fields.pricePreview.update();
								}
							}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Price prefix')},
							{type: 'TextField', id: 'currencyPrefix', change: function(fields) { fields.pricePreview.update(); }}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Price postfix')},
							{type: 'TextField', id: 'currencyPostfix', change: function(fields) { fields.pricePreview.update(); }}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Preview')},
							{type: 'CustomContainer', id: 'pricePreview',
								css: {paddingTop: 7},
								init: function(def, fields) {
									this.update = function() {
										var val = '12.50',
											prefix = fields.currencyPrefix.getValue(),
											postfix = fields.currencyPostfix.getValue();
										if (!prefix && !postfix) postfix = ' ' + fields.currencyCode.getValue();
										if (prefix) val = prefix + val;
										if (postfix) val = val + postfix;
										this.getElem().text(val);
									};
								}
							}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [4, 4, 4], columnWeightsSmall: [4, 4, 4], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Thumbnail Size')},
							{type: 'FlowLayout', verticalAlign: 'middle', spacing: 5, children: [
								{type: 'TextField', id: 'thumbWidth', css: {width: 70}},
								{type: 'Label', html: '&times;', css: {fontWeight: 'normal', fontSize: 18}},
								{type: 'TextField', id: 'thumbHeight', css: {width: 70}}
							]}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Image Size')},
							{type: 'FlowLayout', verticalAlign: 'middle', spacing: 5, children: [
								{type: 'TextField', id: 'imageWidth', css: {width: 70}},
								{type: 'Label', html: '&times;', css: {fontWeight: 'normal', fontSize: 18}},
								{type: 'TextField', id: 'imageHeight', css: {width: 70}}
							]}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Image Border')},
							{type: 'BorderSelector', id: 'imageBorder', showRadius: true}
						]}
					]},
					{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Contact Form')},
							{type: 'ContactForm', id: 'contactForm'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('My Orders')},
							{type: 'Button', text: __('Check Orders'), click: function() { Store.Module.viewOrders(); }}
						]}
					]}
				]},
				{name: __('Style'), children: [
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Name Style')},
						{type: 'FontSelector', id: 'nameStyle', horizontal: true}
					]},
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Price Style')},
						{type: 'FontSelector', id: 'priceStyle', horizontal: true}
					]},
					{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Description/SKU Style')},
							{type: 'FontSelector', id: 'descStyle', horizontal: true, noStyle: true, noAlign: true}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Label Style')},
							{type: 'FontSelector', id: 'labelStyle', horizontal: true, noStyle: true, noAlign: true}
						]}
					]}
				]}
			],
			callbackFunc: function(fields) {
				Store.Module.currency.code = fields.currencyCode.getValue();
				Store.Module.currency.prefix = fields.currencyPrefix.getValue();
				Store.Module.currency.postfix = fields.currencyPostfix.getValue();
				Store.Module.contactForm = fields.contactForm.getValue();
				thisClass._data.content.thumbWidth = parseInt(fields.thumbWidth.getValue(), 10);
				thisClass._data.content.thumbHeight = parseInt(fields.thumbHeight.getValue(), 10);
				thisClass._data.content.imageWidth = parseInt(fields.imageWidth.getValue(), 10);
				thisClass._data.content.imageHeight = parseInt(fields.imageHeight.getValue(), 10);
				thisClass._data.content.imageBorder = fields.imageBorder.getValue();
				thisClass._data.content.nameStyle = fields.nameStyle.getValue();
				thisClass._data.content.priceStyle = fields.priceStyle.getValue();
				thisClass._data.content.descStyle = fields.descStyle.getValue();
				thisClass._data.content.labelStyle = fields.labelStyle.getValue();
				fields.tree.selectFirst(); // to apply last changes
				Store.Module.items = fields.tree.getValue();
				Store.Module.updateItems();
				thisClass.updateStyle();
			}
		});
		fields.currencyCode.setValue(Store.Module.currency.code);
		fields.currencyPrefix.setValue(Store.Module.currency.prefix);
		fields.currencyPostfix.setValue(Store.Module.currency.postfix);
		fields.pricePreview.update();
		fields.contactForm.setValue(Store.Module.contactForm);
		fields.thumbWidth.setValue(this._data.content.thumbWidth);
		fields.thumbHeight.setValue(this._data.content.thumbHeight);
		fields.imageWidth.setValue(this._data.content.imageWidth);
		fields.imageHeight.setValue(this._data.content.imageHeight);
		fields.imageBorder.setValue(this._data.content.imageBorder);
		fields.nameStyle.setValue(this._data.content.nameStyle);
		fields.priceStyle.setValue(this._data.content.priceStyle);
		fields.descStyle.setValue(this._data.content.descStyle);
		fields.labelStyle.setValue(this._data.content.labelStyle);
		fields.categories.reload();
		fields.categories.setValue([], true);
		fields.tree.setValue(Store.Module.items);
		fields.tree.selectFirst();
	};
	
	Store.prototype.editCategories = function(callback) {
		var thisSelf = this, thisCallback = callback;
		if (!this._catDialog) {
			this._catDialog = new PropertyDialog(__('Properties'), {
				noScroll: true,
				tabs: [
					{children: [
						{type: 'HorizontalLayout', columnWeights: [4, 8], columnWeightsSmall: [4, 8], children: [
							{type: 'List', id: 'tree',
								css: {height: 328},
								listHeight: 250,
								itemType: Store.Category,
								editable: true,
								init: function() {
									this.setItemValue = function(item, fields) {
										item.name = fields.name.getValue();
										if (fields.description) item.description = fields.description.getValue();
										if (fields.image) item.image = fields.image.getValue();
									};
									this.getItemValue = function(item, fields) {
										fields.name.setValue(item.name ? item.name : '');
										if (fields.description) fields.description.setValue(item.description ? item.description : '');
										if (fields.image) fields.image.setValue(item.image);
									};
								},
								select: function(fields, item) {
									var lastItem;
									if ((lastItem = this.getLastSelected())) {
										this.setItemValue(lastItem, fields);
									}
									this.getItemValue(item, fields);
									fields.name.setModified(false);
								},
								add: function(fields, item, li) { this.selectItemLi($(li)); }
							},
							{type: 'VerticalLayout', spacing: 15, children: [
								{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Item Name')},
									{type: 'MultilangTextField', id: 'name'}
								]}/*,
								{type: 'HorizontalLayout', columnWeights: [8, 4], columnWeightsSmall: [8, 4], children: [
									{type: 'VerticalLayout', children: [
										{type: 'Label', text: __('Description')},
										{type: 'MultilangTextField', id: 'description', textArea: true}
									]},
									{type: 'VerticalLayout', children: [
										{type: 'Label', text: __('Image')},
										{type: 'ImageSelector', id: 'image'}
									]}
								]}*/
							]}
						]}
					]}
				],
				buttons: [
					{name: __('Cancel')},
					{name: __('Apply'), primary: true, click: function() {
						wb_builder.pageModified = true;
						var fields = thisSelf._catDialog.fields;
						fields.tree.selectFirst(); // to apply last changes
						Store.Module.categories = fields.tree.getValue();
						Store.Module.updateCategories();
						thisSelf.updateStyle();
						if (typeof thisCallback === 'function') thisCallback.call(thisSelf);
						thisSelf._catDialog.hide();
					}}
				]
			});
		}
		var fields = this._catDialog.fields;
		fields.tree.setValue(Store.Module.categories);
		fields.tree.selectFirst();
		this._catDialog.show();
	};
	
	Store.Item = function(data) {
		if (!data) return;
		this.id = data.id ? data.id : 0;
		this.name = data.name ? data.name : '';
		this.description = data.description ? data.description : '';
		this.priceString = data.priceString ? data.priceString : '';
		this.price = data.price ? parseFloat(data.price) : 0;
		if (isNaN(this.price)) this.price = 0;
		this.sku = data.sku ? data.sku : '';
		this.image = data.image ? data.image : null;
		this.categories = (typeof data.categories === 'object' && data.categories !== null && data.categories.length) ? data.categories : [];
	};
	
	Store.Item.prototype.id = null;
	Store.Item.prototype.name = null;
	Store.Item.prototype.description = null;
	Store.Item.prototype.priceString = null;
	Store.Item.prototype.price = null;
	Store.Item.prototype.sku = null;
	Store.Item.prototype.image = null;
	Store.Item.prototype.categories = null;
	
	Store.Item.prototype.serialize = function() {
		return {
			id: this.id,
			name: this.name,
			description: this.description,
			priceString: this.priceString,
			price: this.price,
			sku: this.sku,
			image: this.image,
			categories: this.categories
		};
	};
	
	Store.Category = function(data) {
		if (!data) return;
		this.id = data.id ? data.id : 0;
		this.name = data.name ? data.name : '';
		this.description = data.description ? data.description : '';
		this.image = data.image ? data.image : null;
	};
	
	Store.Category.prototype.id = null;
	Store.Category.prototype.name = null;
	Store.Category.prototype.description = null;
	Store.Category.prototype.image = null;
	
	Store.Category.prototype.serialize = function() {
		return {
			id: this.id,
			name: this.name,
			description: this.description,
			image: this.image
		};
	};
	
	Store.Module = {
		/**
		 * Should store data be saved.
		 * Is set to true by store element constructor.
		 * @type {boolean}
		 */
		needToSave: false,
		needToTranslateItems: false,
		items: [],
		categories: [],
		currency: {code: 'USD', prefix: '$', postfix: ''},
		currencies: [
			{code: 'USD', prefix: '$',  postfix: ''},
			{code: 'EUR', prefix: '€',  postfix: ''},
			{code: 'GBP', prefix: '£',  postfix: ''},
			{code: 'AUD', prefix: 'A$', postfix: ''},
			{code: 'BRL', prefix:  '',  postfix: ''},
			{code: 'BYN', prefix:  '',  postfix: ''},
			{code: 'BYR', prefix:  '',  postfix: ''},
			{code: 'CAD', prefix: 'C$', postfix: ''},
			{code: 'CHF', prefix:  '',  postfix: ' Fr'},
			{code: 'CZK', prefix:  '',  postfix: ' Kč'},
			{code: 'DKK', prefix:  '',  postfix: ' kr'},
			{code: 'HKD', prefix: 'HK$',postfix: ''},
			{code: 'HUF', prefix:  '',  postfix: ' Ft'},
			{code: 'ILS', prefix: '₪',  postfix: ''},
			{code: 'INR', prefix: '₹',  postfix: ''},
			{code: 'JPY', prefix: '¥',  postfix: ''},
			{code: 'KGS', prefix:  '',  postfix: ''},
			{code: 'MXN', prefix:'Mex$',postfix: ''},
			{code: 'MYR', prefix: 'RM', postfix: ''},
			{code: 'NOK', prefix:  '',  postfix: ' kr'},
			{code: 'NZD', prefix: 'NZ$',postfix: ''},
			{code: 'QAR', prefix:  '',  postfix: ' QR'},
			{code: 'PHP', prefix:  '₱', postfix: ''},
			{code: 'PLN', prefix:  '',  postfix: ' zł'},
			{code: 'RUB', prefix:  '',  postfix: ' ₽'},
			{code: 'SEK', prefix:  '',  postfix: ' kr'},
			{code: 'SGD', prefix: 'S$', postfix: ''},
			{code: 'THB', prefix:  '',  postfix: ' ฿'},
			{code: 'TWD', prefix: 'NT$',postfix: ''},
			{code: 'UAH', prefix:  '',  postfix: ' грн'},
			{code: 'ZAR', prefix:  '',  postfix: ''}
		],
		contactForm: {content: {button: __('Inquire'), fields: [
			{checked: true, name: __('Name')},
			{checked: true, name: __('Email')},
			{checked: false}, {checked: false},
			{checked: true, name: __('Address')},
			{checked: false}, {checked: false}, {checked: false}, {checked: false},
			{checked: true, name: __('Comments')}
		]}},
		/**
		 * List of enabled payment gateways
		 * @type {Object[]}
		 */
		paymentGateways: [],
		/**
		 * If store data is loaded from server.
		 * @type {boolean}
		 * @private
		 */
		dataLoaded: false,
		/**
		 * Builder instance.
		 * @type {Builder}
		 * @private
		 */
		builder: null,
		/**
		 * If save provider is registered.
		 * @type {boolean}
		 * @private
		 */
		saveProvider: false,
		/**
		 * Order view dialog (created on use).
		 * @type {Dialog}
		 * @private
		 */
		ordersViewDialog: null,
		
		/**
		 * Initiate store module
		 * @param {Builder} builder
		 */
		init: function(builder) {
			this.builder = builder;
			this.needToTranslateItems = this.builder.translateStoreItems ? true : false;
		},
		
		formatDate: function(date) {
			var parts = date.match(/([0-9]+)\-([0-9]+)\-([0-9]+)\ ([0-9]+)\:([0-9]+)\:([0-9]+)/);
			return parts[1] + '-' + parts[2] + '-' + parts[3] + ' ' + parts[4] + ':' + parts[5];
		},
		
		/** View orders in dialog */
		viewOrders: function() {
			if (!this.ordersViewDialog) {
				var thisSelf = this, url = 'http://' + wb_builder.siteDomain + '/0/store-log';
				this.updateContent = function() {
					$.getJSON(url, function(data) {
						var i, k, item, buyer, order,
							wrapper = $('<div>').css({maxHeight: 400, overflowY: 'auto'}),
							respTable = $('<div>').addClass('table-responsive').appendTo(wrapper),
							table = $('<table>').addClass('table table-bordered table-condensed')
										.css({margin: 0}).appendTo(respTable),
							thead = $('<thead>').appendTo(table),
							tbody = $('<tbody>').appendTo(table);
						$('<tr>')
							.append($('<th>').text(__('Date/Time')))
							.append($('<th>').text(__('Buyer')))
							.append($('<th>').text(__('Order Details')))
							.append($('<th>').text(__('Sum')))
							.append($('<th>').text(__('Type')))
							.appendTo(thead);
						for (i = 0; i < data.length; i++) {
							item = data[i];
							buyer = '';
							for (k in item.buyer) {
								buyer += (buyer ? ' / ' : '') + k + ': ' + item.buyer[k];
							}
							if (typeof item.order == 'string') {
								order = item.order;
							} else {
								order = [];
								for (k in item.order) {
									order.push(item.order[k]);
								}
								order = order.join('<br />');
							}
							$('<tr>')
								.append($('<td>').text(thisSelf.formatDate(item.time)))
								.append($('<td>').text(buyer))
								.append($('<td>').html(order))
								.append($('<td>').text(item.price))
								.append($('<td>').text(item.type))
								.appendTo(tbody);
						}
						thisSelf.ordersViewDialog.setContent(wrapper);
					});
				};
				this.ordersViewDialog = new Dialog(__('Store Order log'));
				this.ordersViewDialog.setSize(800, null);
				this.ordersViewDialog.addButton(__('Close'));
			}
			this.updateContent();
			this.ordersViewDialog.setVisible(true);
		},
		
		/**
		 * Find unused id for new items to be used.
		 * @returns {Number}
		 */
		getNewItemId: function() {
			var i, id = 1;
			for (i = 0; i < this.items.length; i++) {
				if (id <= this.items[i].id) id = this.items[i].id + 1;
			}
			return id;
		},
		
		/**
		 * Generate id's for new items.
		 */
		updateItems: function() {
			var i, id = this.getNewItemId();
			for (i = 0; i < this.items.length; i++) {
				if (!this.items[i].id) {
					this.items[i].id = id;
					id++;
				}
			}
		},
		
		/**
		 * Find unused id for new categories to be used.
		 * @returns {Number}
		 */
		getNewCategoryId: function() {
			var i, id = 1;
			for (i = 0; i < this.categories.length; i++) {
				if (id <= this.categories[i].id) id = this.categories[i].id + 1;
			}
			return id;
		},
		
		/**
		 * Generate id's for new categories.
		 */
		updateCategories: function() {
			var i, id = this.getNewCategoryId();
			for (i = 0; i < this.categories.length; i++) {
				if (!this.categories[i].id) {
					this.categories[i].id = id;
					id++;
				}
			}
		},
		
		load: function(func) {
			var thisSelf = this;
			this.dataLoaded = false;
			$.get(this.builder.lnBaseUrl + 'store/data/?tr=' + (this.needToTranslateItems ? '1' : '0')).done(function(data) {
				var i;
				thisSelf.dataLoaded = true;
				if (data) {
					if (data.items) {
						thisSelf.items = [];
						for (i = 0; i < data.items.length; i++) {
							thisSelf.items.push(new Store.Item(data.items[i]));
						}
						thisSelf.updateItems();
					}
					if (data.categories) {
						thisSelf.categories = [];
						for (i = 0; i < data.categories.length; i++) {
							thisSelf.categories.push(new Store.Category(data.categories[i]));
						}
						thisSelf.updateCategories();
					}
					if (data.currency) thisSelf.currency = data.currency;
					if (data.currencies) thisSelf.currencies = data.currencies;
					if (data.contactForm) thisSelf.contactForm = data.contactForm;
					if (data.paymentGateways) thisSelf.paymentGateways = data.paymentGateways;
				}
				if (!thisSelf.saveProvider) {
					thisSelf.saveProvider = true;
					thisSelf.builder.regSaveDataProvider('store', function() { return (thisSelf.needToSave ? thisSelf.serialize() : null); });
				}
				if (typeof func === 'function') func.call(this);
			}).fail(function(status) {
				console.error('Loading store data failed.');
			});
		},
		
		serialize: function() {
			var i, items = [], categories = [];
			for (i = 0; i < this.items.length; i++) {
				items.push(this.items[i].serialize());
			}
			for (i = 0; i < this.categories.length; i++) {
				categories.push(this.categories[i].serialize());
			}
			return {
				currency: this.currency,
				items: items,
				categories: categories,
				contactForm: this.contactForm,
				paymentGateways: this.paymentGateways
			};
		}
	};
	
	Service.Store = Store;
	
	return Store;
});
;

/** StoreCart **/

define('StoreCart', ['Element', 'Service', 'Store', 'HorizontalLayout', 'CheckBox', 'Label', 'TextField'], function(Element, Service, Store, HorizontalLayout, CheckBox, Label, TextField) {
	'use strict';
	
	var StoreCart = function(data) {
		if (!data) return;
		if (!data.width) {
			data.width = 155;
			data.height = 64;
		}
		Element.prototype.__construct.call(this, data);
		this._data = data;
		
		this.setMinSize(22, 22);
		
		if (!this._data.content.name) this._data.content.name = __('Shopping Cart');
		if (!this._data.content.image) this._data.content.image = null;
		
		this.updateStyle();
		
		var thisClass = this;
		$(this.controls).bind('dblclick', function(e) {
			thisClass.comProperties();
		});
	};
	
	StoreCart.prototype = new Element();
	StoreCart.prototype.constructor = StoreCart;
	wb_builder.registerClass('StoreCart', StoreCart);
	
	StoreCart.prototype._data = null;
	
	StoreCart.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);
		data.content = {};
		for (var k in this._data.content) {
			data.content[k] = this._data.content[k];
		}
		return data;
	};
	
	StoreCart.prototype.onSwitchLanguage = function(langCode) {
		Element.prototype.onSwitchLanguage.call(this, langCode);
		this.updateStyle(langCode);
	};
	
	StoreCart.prototype.updateStyle = function(langCode) {
		langCode = langCode || this.system.site.currSelLang;
		this.container.empty();
		var img = null;
		if (this._data.content.image) {
			img = $('<img>').attr({
				src: wb_builder.makeLocalUrl(this._data.content.image),
				alt: __tr(this._data.content.name, langCode),
				title: __tr(this._data.content.name, langCode)
			});
		} else {
			img = $('<span>').append($('<i>').addClass('store-cart-icon'));
		}
		$('<div>').addClass('wb-store-cart').append($('<div>')
			.append(img)
			.append($('<span>')
				.append($('<span>').text(__tr(this._data.content.name, langCode)))
				.append($('<span>').text('(0)'))
			)
		).appendTo(this.container);
		return;
	};
	
	StoreCart.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {width: 610},
			tabs: [
				{children: [
					{type: 'HorizontalLayout', columnWeights: [4, 8], columnWeightsSmall: [4, 8], children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Name')},
							{type: 'MultilangTextField', id: 'name'},
							{type: 'Label', text: __('Image'), css: {marginTop: 15}},
							{type: 'ImageSelector', id: 'image'},
							{type: 'Label', text: __('My Orders'), css: {marginTop: 15}},
							{type: 'Button', text: __('Check Orders'), click: function() { Store.Module.viewOrders(); }}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Payment Gateways')},
							{type: 'CustomContainer', id: 'paymentGatewayList', init: function() {
								var items = [];
								this.update = function() {
									var i, item, keyFld,
										list = wb_builder.getPaymentGateways(),
										elem = this.getElem();
									elem.empty();
									items = [];
									for (i = 0; i < list.length; i++) {
										item = {api: list[i]};
										if (('keyField2' in list[i]) && list[i].keyField2) {
											keyFld = {type: 'HorizontalLayout', noPadding: true, children: [
												{type: 'TextField', id: 'key', placeholder: list[i].keyField, enabled: false},
												{type: 'TextField', id: 'key2', placeholder: list[i].keyField2, enabled: false}
											]};
										} else {
											keyFld = {type: 'TextField', id: 'key', placeholder: list[i].keyField, enabled: false};
										}
										Service.UIBuilder.buildLayout({
											type: 'HorizontalLayout',
											css: {marginTop: 5},
											columnWeights: [1, 3, 8],
											columnWeightsSmall: [1, 4, 7],
											children: [
												{type: 'CheckBox', id: 'enabler', change: function(fields) {
													fields.key.setEnabled(this.getValue());
													if ('key2' in fields) fields.key2.setEnabled(this.getValue());
												}},
												{type: 'Label', text: list[i].name, css: {fontWeight: 'normal'}},
												keyFld
											]
										}, elem, item);
										items.push(item);
									}
								};
								this.getValue = function() {
									var i, gateway, gateways = [];
									for (i = 0; i < items.length; i++) {
										if (items[i].enabler.getValue() && items[i].key.getValue()) {
											gateway = $.extend({}, items[i].api);
											gateway.key = items[i].key.getValue();
											if ('key2' in items[i]) gateway.key2 = items[i].key2.getValue();
											gateways.push(gateway);
										}
									}
									return gateways;
								};
								this.setValue = function(gateways) {
									if (!gateways) gateways = [];
									var i, n;
									for (i = 0; i < items.length; i++) {
										items[i].enabler.setValue(false);
										items[i].enabler.trigger('change');
										items[i].key.setValue('');
										if ('key2' in items[i]) items[i].key2.setValue('');
										for (n = 0; n < gateways.length; n++) {
											if (items[i].api.id === gateways[n].id && gateways[n].key) {
												items[i].enabler.setValue(true);
												items[i].enabler.trigger('change');
												items[i].key.setValue(gateways[n].key);
												if ('key2' in items[i]) items[i].key2.setValue(gateways[n].key2);
											}
										}
									}
								};
							}}
						]}
					]}
				]}
			],
			callbackFunc: function(fields) {
				thisClass._data.content.name = fields.name.getValue();
				thisClass._data.content.image = fields.image.getValue();
				Store.Module.paymentGateways = fields.paymentGatewayList.getValue();
				thisClass.updateStyle();
			}
		});
		fields.paymentGatewayList.update();
		fields.name.setValue(this._data.content.name);
		fields.image.setValue(this._data.content.image);
		fields.paymentGatewayList.setValue(Store.Module.paymentGateways);
	};
	
	return StoreCart;
});


;

/** WB LinkExchangeBadge **/

define('LinkExchangeBadge', ['Element', 'UIComponent', 'RadioBox', 'Confirm'], function(Element, UIComponent, RadioBox, Confirm) {

	/**
	 * CustomHtml class
	 * @param {Object} data
	 */
	var LinkExchangeBadge = function(data) { if (data) this.__construct(data); };

	LinkExchangeBadge.prototype = new Element();
	LinkExchangeBadge.prototype.constructor = LinkExchangeBadge;
	wb_builder.registerClass("ZyroBadge", LinkExchangeBadge);
	wb_builder.registerClass("LinkExchangeBadge", LinkExchangeBadge);

	LinkExchangeBadge.badgeTypes = null;

	LinkExchangeBadge.prototype.badgeType = "iZyro";
	LinkExchangeBadge.prototype.badgeHtml = null;
	LinkExchangeBadge.prototype.customLock = false;
	/** Store timeout instance for delayed size calculations. */
	LinkExchangeBadge.prototype.updateSizeTimeout = null;

	/**
	 * Construct custom html element
	 * @param data element data object
	 */
	LinkExchangeBadge.prototype.__construct = function(data) {
		this.customLock = data.customLock ? data.customLock : false;
		if( LinkExchangeBadge.badgeTypes === null ) {
			var badgeTypeLogo = '<i class="icon-wb-logo"></i><a href="http://' + wb_builder.siteProHost + '/" target="_blank" title="' + wb_builder.builderName + '">' + wb_builder.builderShortName + '</a>';
			LinkExchangeBadge.badgeTypes = {
				poweredBy: __("Powered by %s").replace("%s", badgeTypeLogo),
				memberOf: __("Member of %s").replace("%s", badgeTypeLogo),
				voteForMeOn: __("Vote for me on %s").replace("%s", badgeTypeLogo),
				iZyro: __("I %s").replace("%s", badgeTypeLogo)
			};
		}

		this.badgeHtml = LinkExchangeBadge.badgeTypes[this.badgeType];

		data.isCommon = ("isCommon" in data) ? (data.isCommon ? true : false) : true;
		Element.prototype.__construct.call(this, data);

		this.setMinSize(null, 24);
		//this.setSize(100, 22);

		this.container.css({overflow: "hidden"});
		this.setResizingEnabled(false, true);

		this.badgeType = data.content.type ? data.content.type : this.badgeType;
		if (this.badgeType in LinkExchangeBadge.badgeTypes) {
			this.badgeHtml = LinkExchangeBadge.badgeTypes[this.badgeType];
		}

		this.updateStyle(true);

		var thisClass = this;
		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
	};

	/**
	 * Serialize this element
	 * @return object
	 */
	LinkExchangeBadge.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);
		data.customLock = this.customLock;
		data.content = {
			type: this.badgeType,
			html: (this.badgeHtml ? this.badgeHtml : "")
		};

		return data;
	};

	/**
	 * Update element style after property changes
	 */
	LinkExchangeBadge.prototype.updateStyle = function(onConstruct) {
		this.container.empty();
		var cont = $("<div></div>");
		cont.addClass("wb-stl-footer");
		cont.css({whiteSpace: "nowrap", overflow: "hidden", display: "inline-block"});
		cont.html(this.badgeHtml);
		this.container.html(cont);
		if (this.updateSizeTimeout) clearTimeout(this.updateSizeTimeout);
		if (onConstruct) {
			var thisClass = this;
			this.updateSizeTimeout = setTimeout(function() {
				var w = Math.max(cont.outerWidth(true), 100);
				var h = Math.max(cont.outerHeight(true), 20);
				thisClass.setSize(w, h);
			}, 100);
		} else {
			var w = Math.max(cont.outerWidth(true), 100);
			var h = Math.max(cont.outerHeight(true), 20);
			this.setSize(w, h);
		}
	};
	
	LinkExchangeBadge.prototype.initContextMenu = function(elem) {
		if (this.customLock)
			return;
		Element.prototype.initContextMenu.call(this, elem);
	};

	/**
	 * Remove this element
	 * @param {Boolean} noHistory if true deletion will not be recorded to history
	 */
	LinkExchangeBadge.prototype.remove = function(noHistory, noConfirm) {
		if (this.customLock)
			return;
		var thisClass = this;
		if (!noConfirm) {
			var thisNoHistory = noHistory;
			var dialogTitle = __("Remove Site.pro Badge").replace(/site\.pro/i, wb_builder.builderShortName);
			Confirm.showDialog(
				dialogTitle,
				$('<div class="wb_change_template_dlg">' +
					'<div class="qq">' + __("Do you really want to remove it?") + '</div>' +
					'<div class="red">' + __("This is a Link Exchange label. It helps to have a higher rank in Google Search.") + '</div>' + 
				'</div>'),
				[
					{
						title: __("No, keep it")
					},
					{
						title: __("Yes, remove it"),
						cssClass: "btn-danger",
						func: function() {
							thisClass.remove(thisNoHistory, true);
						}
					}
				],
				480
			);
			Confirm.dialog.setCenterButtons(true);
			return;
		}
		Element.prototype.remove.call(this, noHistory);
	};

	/**
	 * Extend element properties dialog
	 */
	LinkExchangeBadge.prototype.comProperties = function() {
		var thisClass = this, k, fields = Element.prototype.comProperties.call(this, {
			tabs: [
				{children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Widget type')},
						{type: 'VerticalLayout', id: 'badgeType', children: [],
							init: function() {
								var label, cEvent;
								this.items = {};
								for (k in LinkExchangeBadge.badgeTypes) {
									this.items[k] = new RadioBox(
											(label = UIComponent.wrapControl({elem: $('<div>')})),
											null, 'badge_type', false, null
										);
									cEvent = (function(cb) { return function() { cb.setValue(true); return false; }; })(this.items[k]);
									label.getElem()
										.css({cursor: 'pointer'})
										.append(LinkExchangeBadge.badgeTypes[k])
										.on('click', cEvent)
										.find('a').attr({href: 'javascript:void(0)'});
									this.addChild(this.items[k]);
								}
							}
						}
					]}
				]}
			],
			callbackFunc: function(fields) {
				for (k in fields.badgeType.items) {
					if (!fields.badgeType.items[k].getValue()) continue;
					thisClass.badgeType = k;
					thisClass.badgeHtml = LinkExchangeBadge.badgeTypes[thisClass.badgeType];
				}
				thisClass.updateStyle();
			}
		});

		if (!fields.badgeType.items[this.badgeType]) {
			this.badgeType = 'iZyro';
		}
		for (k in fields.badgeType.items) {
			fields.badgeType.items[k].setValue((this.badgeType === k));
		}
	};
	
	return LinkExchangeBadge;
});
;

/** WB HelpSystem **/

define('HelpSystem', ['Service'], function(Service) {
	'use strict';

	var HelpSystem = { panel: null, list: null, items: null, index: 1, isActive: false, tips: null };
	
	var cookieName = '__SITEBUILDER_HELP_DONE__';
	
	/**
	 * Initialise Help System
	 * @param {Builder} builder
	 */
	HelpSystem.init = function(builder) {
		if (builder.getCookie(cookieName) || $(window).width() <= 485) return;
		this.items = {};
		this.tips = [];
		this.panel = $('<div class="wb-hlp-panel"></div>');
		this.list = $('<div class="wb-hlp-panel-list"></div>');
		var closeBtn = $('<div class="close">&times;</div>');
		closeBtn.attr('title', __('Close Help'));
		closeBtn.on('click', function() { HelpSystem.clearTips(); HelpSystem.hide(); builder.setCookie(cookieName, true, 90, '/'); });
		var header = $('<div class="wb-hlp-panel-item wb-hlp-panel-header">' + __('Steps to Do') + '</div>');
		header.append(closeBtn);
		this.panel.append(header).append(this.list);
		this.addItem(__('Choose template'), __('Select template from template list'), 1, []);
		this.addItem(__('Add text'), __('Lets start width drag and drop elements on your site'), 2, [], function() {
			HelpSystem.clearTips();
			var ttip = HelpSystem.makeTooltip(this.title, this.text);
			var o = $('#wb__TextArea').offset();
			builder.head.prepend(ttip.el);
			o.top = o.top + $('#wb__TextArea').outerHeight(true) + 7;
			o.left = o.left - ttip.el.width()/2;
			ttip.el.css({left: o.left, top: o.top});
		});
		this.addItem(__('Edit text'), __('Choose the style for text'), 3, [],
			/** @param {Element} refObject */
			function(refObject) {
				HelpSystem.clearTips();
				var ttip = HelpSystem.makeTooltip(this.title, this.text);
				refObject.setSelected(true);
				var func = refObject.elem.draggable('option', 'drag');
				if (typeof func === 'function') {
					refObject.elem.draggable({
						drag: function(e, ui) {
							func(e, ui);
							var o = refObject.editBtn.offset();
							o.top = o.top + refObject.editBtn.outerHeight(true) + 7 - builder.body.offset().top;
							o.left = o.left + refObject.editBtn.outerWidth(true)/2 - ttip.el.outerWidth(true)/2;
							ttip.el.css({left: o.left, top: o.top, position: 'absolute'});
						}
					});
				}
				setTimeout(function() {
					var o = refObject.editBtn.offset();
					builder.body.prepend(ttip.el);
					o.top = o.top + refObject.editBtn.outerHeight(true) + 7 - builder.body.offset().top;
					o.left = o.left + refObject.editBtn.outerWidth(true)/2 - ttip.el.outerWidth(true)/2;
					ttip.el.css({left: o.left, top: o.top, position: 'absolute'});
				}, 40);
			});
		this.addItem('Editing text', 'Editing text', 3.5, [], function() {
			HelpSystem.clearTips();
		}, true);
		this.addItem(__('Add/Edit Picture'), __("It's time to add your picture"), 4, [], function() {
			HelpSystem.clearTips();
			var ttip = HelpSystem.makeTooltip(this.title, this.text);
			var o = $('#wb__Picture').offset();
			builder.head.prepend(ttip.el);
			o.top = o.top + $('#wb__Picture').outerHeight(true) + 7 - $(document).scrollTop();
			o.left = o.left - ttip.el.width()/2;
			ttip.el.css({left: o.left, top: o.top});
		});
		var text5 = __('Click here to add a new page to your site (select %sEdit Menu%s item)')
			.replace('%s', '<strong>')
			.replace('%s', '</strong>');
		this.addItem(__('Add Menu'), text5, 5, [], function() {
			HelpSystem.clearTips();
			var menu, menuElemList = Service.getElemList();
			for (var k in menuElemList) { menu = menuElemList[k]; break; }
			$('body').animate({ scrollTop: (0, menu.elem.scrollTop() - 10) });
			var ttip = HelpSystem.makeTooltip(this.title, this.text);
			menu.setSelected(true);
			menu.editBtn.css({opacity: 1});
			menu.moveBtn.css({opacity: 1});
			var o = menu.editBtn.offset();
			builder.body.prepend(ttip.el);
			o.top = o.top + menu.editBtn.outerHeight(true) + 7 - builder.body.offset().top;
			o.left = o.left + menu.editBtn.outerWidth(true)/2 - ttip.el.outerWidth(true)/2;
			ttip.el.css({left: o.left, top: o.top, position: 'absolute'});
		});
		this.addItem(__('Edit Menu'), __('Drag page up or down to change the order of display'), 6, [],
			/** @param {WB_Menu} menu */
			function(menu) {
				HelpSystem.clearTips();
				var ttip = HelpSystem.makeTooltip(this.title, this.text);
				var list = menu.comDialog.fields.miList;
				setTimeout(function() {
					var o = list.offset();
					menu.comDialog.content.prepend(ttip.el);
					o.top = o.top + list.outerHeight(true) + 7;
					o.left = o.left + list.outerWidth(true)/2 - ttip.el.outerWidth(true)/2;
					ttip.el.css({left: o.left, top: o.top});
				}, 1000);
			});
		this.addItem(__('Page properties'), __('Customize the design of your site - choose menu item Background'), 7, [], function() {
			HelpSystem.clearTips();
			var ttip = HelpSystem.makeTooltip(this.title, this.text, 'left');
			var btn = $('#wb_config_btn');
			var o = btn.offset();
			builder.head.prepend(ttip.el);
			o.top = o.top + btn.outerHeight(true)/2 - ttip.el.outerHeight(true)/2 + 20 - $(document).scrollTop();
			o.left = o.left - ttip.el.outerWidth(true);
			ttip.el.css({left: o.left, top: o.top});
		});
		this.addItem(__('Manage SEO'), __('Fill title, description, keywords'), 8, [], function() {
			HelpSystem.clearTips();
			var ttip = HelpSystem.makeTooltip(this.title, this.text, 'left');
			var btn = $('#wb_config_btn');
			var o = btn.offset();
			builder.head.prepend(ttip.el);
			o.top = o.top + btn.outerHeight(true)/2 - ttip.el.outerHeight(true)/2 + 20 - $(document).scrollTop();
			o.left = o.left - ttip.el.outerWidth(true);
			ttip.el.css({left: o.left, top: o.top});
		});
		this.addItem(__('Publish'), __('Nice job! Click "Publish" to publish your site online'), 9, [], function() {
			HelpSystem.clearTips();
			var ttip = HelpSystem.makeTooltip(this.title, this.text);
			var btn = $('#wb_fn_save');
			var o = btn.offset();
			builder.head.prepend(ttip.el);
			o.top = o.top + btn.outerHeight(true) + 7 - $(document).scrollTop();
			o.left = o.left + btn.outerWidth(true)/2 - ttip.el.outerWidth(true)/2;
			ttip.el.css({left: o.left, top: o.top});
		});
		this.addItem('End', 'End', 10, [], function() {
			HelpSystem.clearTips();
			HelpSystem.hide();
			builder.setCookie(cookieName, true, 90);
		}, true);
		builder.body.prepend(this.panel);
		if ($(window).width() < 1620) {
			var viewportHeight = $(window).height(),
				headerHeight = wb_builder.head.outerHeight(true),
				initialTop = (headerHeight + 20),
				initialHeight = (viewportHeight - headerHeight - 40 - 40);
			this.panel.css({top: initialTop});
			this.list.css({maxHeight: initialHeight, overflowY: 'auto'});
			var clb = Service.menu.getFirstMenuLoadedCallback();
			Service.menu.setFirstMenuLoadedCallback(function() {
				if (typeof clb === 'function') clb();
				var menu, menuElemList = Service.menu.getElemList();
				for (var k in menuElemList) { menu = menuElemList[k]; break; }
				if (menu) {
					var top = menu.getSize().height + menu.elem.offset().top + 10;
					if (top > initialTop) {
						HelpSystem.panel.css('top', top + 'px');
						HelpSystem.list.css({maxHeight: initialHeight - (top - initialTop)});
					}
				}
			});
			header.css('cursor', 'move');
			this.panel.draggable({
				handle: header
			});
		}
		this.isActive = true;
		this.play(2, true);
	};
	
	/** Clear all help tips */
	HelpSystem.clearTips = function() {
		var ttip;
		for (var i = 0; i < this.tips.length; i++) {
			ttip = this.tips.pop();
			ttip.el.remove();
		}
	};
	
	/**
	 * Play Help
	 * @param {Number} toIndex
	 * @param {Boolean} prevComplete
	 * @param {Object} refObject
	 */
	HelpSystem.play = function(toIndex, prevComplete, refObject) {
		if (!this.isActive) return;
		var prevIndex = this.index;
		this.index = toIndex;
		if (this.index - prevIndex <= 1 && this.index - prevIndex > 0) {
			var prevItem = this.items[prevIndex];
			prevItem.el.removeClass('wb-hlp-panel-current');
			if (prevComplete) {
				prevItem.el.addClass('wb-hlp-panel-complete');
			}
			var item = this.items[this.index];
			item.el.addClass('wb-hlp-panel-current');
			if (!item.hidden) {
				setTimeout(function() {
					HelpSystem.list.animate({scrollTop: item.el[0].offsetTop - 48});
				}, 250);
			}
			if (typeof item.func === 'function') {
				item.func.call(item, refObject);
			}
		}
		if (!(toIndex in this.items)) {
			this.hide();
		}
		return this;
	};
	
	/**
	 * Add help topic
	 * @param {String} title
	 * @param {String} text
	 * @param {Number} nr
	 * @param {Array} params
	 * @param {Function} func
	 * @param {Boolean} hidden
	 * @returns {jQuery|$}
	 */
	HelpSystem.addItem = function(title, text, nr, params, func, hidden) {
		var el = $('<div class="wb-hlp-panel-item"></div>');
		var cont = el;
		if (nr) {
			el.append($('<div class="wb-hlp-panel-num">' + nr + '</div>'));
			cont = $('<div class="wb-hlp-panel-cont"></div>');
			el.append(cont);
		}
		if (title) cont.append($('<div class="wb-hlp-panel-title">' + title + '</div>'));
		if (text) cont.append((title ? '<br />' : '') + text); else if (!title) cont.append('No name');
		if ((typeof params === 'object') && params.length > 0) {
			for (var i = 0; i < params.length; i++) {
				el.addClass(params[i]);
			}
		}
		if (hidden !== true) this.list.append(el);
		var obj = {
			title: title,
			text: text,
			nr: nr,
			el: el,
			param: params,
			func: func,
			hidden: hidden
		};
		this.items[nr] = obj;
		return obj;
	};
	
	/** Hide Help System */
	HelpSystem.hide = function() {
		this.isActive = false;
		this.panel.detach();
	};
	
	/**
	 * Make Help Tooltip
	 * @param {String} title
	 * @param {String} text
	 * @param {String} align
	 * @returns {jQuery|$}
	 */
	HelpSystem.makeTooltip = function(title, text, align) {
		var selfTip = {
			title: title,
			text: text,
			el: null,
			hide: function() {
				this.el.remove();
				var next = 0;
				if (HelpSystem.index === 2) {
					HelpSystem.items[HelpSystem.index].el.removeClass('wb-hlp-panel-current');
					HelpSystem.index = 3;
					next = 4;
				} else if (HelpSystem.index === 5) {
					HelpSystem.items[HelpSystem.index].el.removeClass('wb-hlp-panel-current');
					HelpSystem.index = 6;
					next = 7;
				} else {
					next = HelpSystem.index + 1;
				}
				HelpSystem.play(next);
			}
		};
		selfTip.el = $('<div class="wb-hlp-ttip"><div class="wb-hlp-ttip-tip"><div></div></div></div>');
		if (align) {
			selfTip.el.addClass('wb-hlp-ttip-' + align);
		}
		var closeBtn = $('<div class="close">&times;</div>');
		closeBtn.on('click', function() { selfTip.hide(); });
		selfTip.el.append(closeBtn);
		if (title) selfTip.el.append($('<div class="wb-hlp-ttip-title">' + title + '</div>'));
		if (text) selfTip.el.append(text);
		this.tips.push(selfTip);
		return selfTip;
	};
	
	return HelpSystem;
});
;

/** WB Languages **/

define('Languages', ['Element', 'Confirm', 'UIButton', 'DropdownBox', 'ComboBox'], function(Element, Confirm, UIButton, DropdownBox, ComboBox) {
	'use strict';
	
	/**
	 * Languages class
	 * @param {Object} data
	 */
	var Languages = function(data) { if (data) this.__construct(data); };

	Languages.prototype = new Element();
	Languages.prototype.constructor = Languages;
	wb_builder.registerClass('Languages', Languages);

	Languages.prototype.type = null;
	Languages.prototype.comboBox = null;
	Languages.prototype._elem = null;
	Languages.elemList = [];
	Languages.reloadAll = function(except) {
		for (var i=0, item; (item = Languages.elemList[i]); i++) {
			if (item === except) { continue; }
			item.updateStyle();
		}
	};

	/**
	 * Construct languages element
	 * @param data element data object
	 */
	Languages.prototype.__construct = function(data) {
		this.ignoreParentBounds = true;
		Element.prototype.__construct.call(this, data);

		var thisClass = this;

		this.type = data.content.type ? data.content.type : 'flags';
		this.isCommon = data.isCommon ? data.isCommon : true;
		this.includePages = data.includePages ? data.includePages : {};
		if (!this.system.site.languages.length) {
			var builderLang = this.system.getLanguageByLocale(this.system.locale);
			this.system.site.languages.push({
				code: builderLang.code,
				hrefLang: builderLang.hrefLang,
				name: builderLang.name,
				isDefault: true
			});
			this.system.site.setLastDefLang(builderLang.code);
			this.system.site.currSelLang = builderLang.code;
			setTimeout(function() {
				thisClass.system.site.onUpdateLanguages();
			}, 50);
		}

		// disable resizable
		this.elem.resizable("option", "handles", "e");
		this.seResizeBtn.removeClass("ui-resizable-se ui-icon-gripsmall-diagonal-se ui-icon");
		this.seResizeBtn.addClass("ui-resizable-e");

		this.setMinSize(18, 12);

		this.cover.on('click mousemove', function(e) {
			var px = e.pageX, py = e.pageY, isHover = false;
			if (thisClass.type === 'flags') {
				if (!thisClass._elem) { return; }
				thisClass._elem.find('a').each(function() {
					var thisA = $(this);
					var ao = thisA.offset();
					var as = {width: thisA.width(), height: thisA.height()};
					if (px >= ao.left && px <= (ao.left + as.width) && py >= ao.top && py <= (ao.top + as.height)) {
						if (e.type === 'click') {
							thisA.trigger('click');
						}
						isHover = true;
						return;
					}
				});
			} else if (thisClass.type === 'select') {
				if (!thisClass.comboBox) { return; }
				if (e.type === 'click') {
					thisClass.comboBox.input.trigger('click');
				}
				isHover = true;
			}
			if (e.type === 'mousemove') {
				thisClass.cover.css("cursor", (isHover ? "pointer" : "default"));
			}
		});

		this.updateStyle();

		$(this.controls).bind("dblclick", function(e) {
			thisClass.comProperties();
		});
		this.elem.bind("resize", function() {
			thisClass.onResize();
		});
		this.elem.bind("resizestop", function(event, ui) {
			thisClass.onResize(true, event);
		});
		if (!this.system.site.languages.length) {
			setTimeout(function() {
				thisClass.comProperties();
			}, 50);
		}
		Languages.elemList.push(this);
	};
	
	/** @return {String} */
	Languages.prototype.boxItemOptions = function() {
		var opts = Element.prototype.boxItemOptions.call(this);
		opts.text = '';
		return opts;
	};
	
	/**
	 * Serialize this element
	 * @return object
	 */
	Languages.prototype.serialize = function() {
		var data = Element.prototype.serialize.call(this);

		data.content = {
			type: this.type
		};

		return data;
	};

	Languages.getCountryCode = function(code) {
		for (var i=0, lang; (lang = wb_builder.availableLanguages[i]); i++) {
			if (lang.code === code) {
				if (lang.countryCode === 'us') {
					return 'uk';
				}
				return lang.countryCode;
			}
		}
	};

	Languages.prototype.onResize = function(stop, stopEvent) {
		Element.prototype.onResize.call(this);

		var langCount = this.system.site.languages.length;
		if (langCount) {
			if (this.type === 'flags') {
				if (stop) {
					if (stopEvent) stopEvent.skipStopEvent = true;
					var rowCount = Math.min(langCount, Math.floor(this.getWidth() / 22));
					this.setSize(22 * rowCount, null);
				} else {
					this.setSize(this.getWidth(), this._elem.height());
					this.editBtn.css({ left: "-30px", right: "" });
					this.moveBtn.css({ left: "-30px", top: "-30px" });
				}
			} else if (this.type === 'select') {
				this.setSize(null, 30);
				if (!this.comboBox) return;
				this.comboBox.setWidth(this.getSize().width);
				this.editBtn.css({ left: "", right: "-1px" });
				this.moveBtn.css({ left: "-1px", top: "-1px" });
			}
		} else {
			this.setSize(100, 100);
		}
	};

	/**
	 * Update element style after property changes
	 * @param {string} langCode
	 */
	Languages.prototype.updateStyle = function(langCode) {
		langCode = langCode || this.system.site.currSelLang;
		this.displayEmtyMessage(false);

		if (this._elem) {
			this._elem.remove();
			this._elem.empty();
			this._elem = null;
		}

		var i, lang, langs = this.system.site.languages, thisClass = this;
		if (langs.length) {
			if (this.type === 'flags') {
				this.comboBox = null;
				this._elem = $('<div class="langs_flags"></div>');
				for (i = 0; (lang = langs[i]); i++) {
					var a = $('<a href="' + wb_builder.baseUrl + lang.code + '/" ' + (lang.code === langCode ? 'class="active"' : '') + 'title="' + lang.name + '" data-lang="' + lang.code + '"><i class="ico-lang-' + Languages.getCountryCode(lang.code) + '"></i></a>');
					a.bind('click', function() {
						thisClass.system.site.switchLanguage($(this).data('lang'));
					});
					this._elem.append(a);
				}
				this.container.append(this._elem);
			}
			else if (this.type === 'select') {
				var opts = {};
				for (i = 0; (lang = langs[i]); i++) {
					opts[lang.code] = lang.name;
				}
				this.comboBox = new ComboBox(opts, langCode);
				this.comboBox.onChange = function(e) {
					thisClass.system.site.switchLanguage(thisClass.comboBox.getValue());
				};
				this._elem = this.comboBox.elem;
				this.container.append(this._elem);
				this.setSize(180, 30);
			}
		} else {
			this.setEmtyMessageImage(null);
			this.setEmtyMessageText(__('Double click to change languages'));
			this.noPhotoMsg.css('top', '10px');
			this.displayEmtyMessage(true);
		}

		this.onResize();
		this.onResize(true);
	};

	Languages.prototype.exclude = function(noRemove, onConstruct) {
		if (onConstruct) {
			Element.prototype.exclude.call(this, noRemove, onConstruct);
		} else {
			Element.prototype.exclude.call(this, true);
			this.remove(false, true);
		}
	};

	Languages.prototype.remove = function(noHistory, noConfirm) {
		var thisClass = this;
		if (!noConfirm) {
			var thisNoHistory = noHistory;
			Confirm.showDialog(__('Remove languages'),
				(new WB_RadioBox({
					'onlyitem': __('Delete only current item'),
					'all': __('Delete all languages and all language items')
				}, 'onlyitem', 'delete_langs')).elem,
			[
				{
					title: __("Cancel")
				},
				{
					title: __("Delete"),
					cssClass: 'btn-danger',
					func: function() {
						var type = Confirm.dialog.content.find('input[name="delete_langs"]:checked').val();
						if (type === 'onlyitem') {
							thisClass.remove(thisNoHistory, true);
						} else if (type === 'all') {
							while (Languages.elemList.length) {
								Languages.elemList[0].remove(true, true);
							}
							thisClass.system.site.languages = [];
							thisClass.system.site.switchLanguage(thisClass.system.site.getLastDefLang());
							thisClass.system.site.currSelLang = null;
							thisClass.system.site.onUpdateLanguages();
							wb_builder.pageModified = true;
						}
					}
				}
			], 480);
			Confirm.dialog.setCenterButtons(true);
			return;
		}
		for (var i=0, elem; (elem = Languages.elemList[i]); i++) {
			if (this === elem) {
				Languages.elemList.splice(i, 1);
				break;
			}
		}
		Element.prototype.remove.call(this, noHistory);
	};

	Languages.prototype.comProperties = function() {
		var thisClass = this, fields = Element.prototype.comProperties.call(this, {
			size: {minBodyHeight: 340},
			tabs: [
				{children: [
					{type: 'HorizontalLayout', columnWeights: [5, 7], children: [
						{type: 'VerticalLayout', id: 'langsList', styleClass: 'wb_langs', children: [
							{type: 'Label', text: __('Language')},
							{type: 'CustomContainer', id: 'languageList',
								css: {maxHeight: '176px', overflowY: 'auto'},
								init: function() {
									this.languages = []; var thisSelf = this;
									this._elem.sortable({
										items: '.lang-item',
										tolerance: 'pointer',
										update: function(e, ui) {
											var i, lang,
												code = ui.item.data('langs-code'),
												index = ui.item.index();
											for (i = 0; i < thisSelf.languages.length; i++) {
												if (thisSelf.languages[i].code === code) {
													lang = thisSelf.languages[i];
													thisSelf.languages.splice(i, 1);
													thisSelf.languages.splice(index, 0, lang);
													break;
												}
											}
											fields.preview.update(thisSelf.languages);
										}
									});
									this.removeAllItems = function() {
										this._elem.empty();
										this.languages.splice(0, this.languages.length);
									};
									this.addLanguage = function(lang, isDefault) {
										var thisLang;
										this.languages.push(thisLang = {
											name: lang.name,
											code: lang.code,
											hrefLang: lang.hrefLang,
											isDefault: (isDefault ? true : false),
											elem: null,
											setDefault: function(isDefault) {
												if (this.isDefault !== (isDefault ? true : false)) {
													this.isDefault = isDefault ? true : false;
													if (this.isDefault) {
														this.elem.addClass('default');
													} else {
														this.elem.removeClass('default');
													}
												}
											}
										});
										thisLang.elem = $('<div>').addClass('lang-item').data('langs-code', thisLang.code);
										if (isDefault) thisLang.elem.addClass('default');
										(new UIButton(null, UIButton.STYLE_LINK, 'glyphicon glyphicon-star-empty'))
											.addClass('btn-make-default')
											.setTitle(__('Make default'))
											.on('click', function() {
												for (var i = 0; i < thisSelf.languages.length; i++) {
													thisSelf.languages[i].setDefault((thisSelf.languages[i] === thisLang));
												}
												fields.preview.update(thisSelf.languages);
											})
											.getElem().appendTo(thisLang.elem);
										$('<i>').addClass('glyphicon glyphicon-star').attr({title: __('Default')}).appendTo(thisLang.elem);
										$('<span>').text(lang.name).appendTo(thisLang.elem);
										(new UIButton(null, UIButton.STYLE_LINK, 'glyphicon glyphicon-remove'))
											.addClass('btn-delete')
											.setTitle(__('Remove'))
											.on('click', function() {
												var idx = thisSelf.languages.indexOf(thisLang);
												if (idx >= 0) thisSelf.languages.splice(idx, 1);
												thisLang.elem.remove();
												thisLang.elem = null;
												if (thisLang.isDefault && thisSelf.languages.length > 0) {
													thisSelf.languages[0].setDefault(true);
												}
												fields.langSelector.reloadSelector(thisSelf.languages);
												fields.preview.update(thisSelf.languages);
											})
											.getElem().appendTo(thisLang.elem);
										this._elem.append(thisLang.elem);
									};
								}
							},
							{type: 'Button', text: ('+ ' + __('Add language')), id: 'langsAddBtn',
								buttonStyle: UIButton.STYLE_LINK,
								styleClass: 'add-lang',
								click: function() {
									fields.langsAddBlock.setVisible(true);
									fields.langsAddBtn.setVisible(false);
								}
							},
							{type: 'FlowLayout', id: 'langsAddBlock',
								styleClass: 'add-lang-block',
								css: {marginTop: 4},
								spacing: 0,
								visible: false,
								children: [
									{type: 'DropdownBox', id: 'langSelector', init: function() {
										this.reloadSelector = function(exclude) {
											var i, item, lang, excludeIndex = {};
											for (i = 0; i < exclude.length; i++) {
												excludeIndex[exclude[i].code] = true;
											}
											this.removeAllItem();
											for (i = 0; i < wb_builder.availableLanguages.length; i++) {
												lang = wb_builder.availableLanguages[i];
												if (lang.code in excludeIndex) continue;
												item = new DropdownBox.Item(lang.name, lang.code, lang);
												this.addItem(item);
											}
										};
									}},
									{type: 'Button', text: __('Cancel'), id: 'cancelBtn',
										buttonStyle: UIButton.STYLE_LINK,
										click: function() {
											fields.langsAddBlock.setVisible(false);
											fields.langsAddBtn.setVisible(true);
										}
									},
									{type: 'Button', text: __('Add'), id: 'addBtn',
										buttonStyle: UIButton.STYLE_LINK,
										click: function() {
											var item = fields.langSelector.getSelectedItem();
											if (item) {
												fields.languageList.addLanguage(item.getOriginal(), (fields.languageList.languages.length <= 0));
												fields.langSelector.reloadSelector(fields.languageList.languages);
												fields.preview.update(fields.languageList.languages);
											}
											fields.cancelBtn.trigger('click');
										}
									}
								]
							}
						]},
						{type: 'VerticalLayout', id: 'preview',
							styleClass: 'wb_switcher',
							children: [
								{type: 'Label', text: __('Language switcher')},
								{type: 'FlowLayout', verticalAlign: 'middle', children: [
									{type: 'RadioBox', label: __('Flags'), id: 'typeFlags', group: 'type'}, // flags
									{type: 'CustomContainer', id: 'flagsWrap', styleClass: 'langs-preview', init: function() {
											this.update = function(languages) {
												var i, item;
												this._elem.empty();
												for (i = 0; i < languages.length; i++) {
													item = $('<a>')
														.attr({href: 'javascript:void(0)', title: languages[i].name})
														.append($('<i>').addClass('ico-lang-' + Languages.getCountryCode(languages[i].code)))
														.on('click', function() {
															var item = $(this);
															item.parent().children().removeClass('active');
															item.addClass('active');
														})
														.appendTo(this._elem);
													if (languages[i].isDefault) item.addClass('active');
												}
												this.setVisible((languages.length > 0));
											};
										}}
								]},
								{type: 'FlowLayout', verticalAlign: 'middle', children: [
									{type: 'RadioBox', label: __('Dropdown select'), id: 'typeSelect', group: 'type'}, // select
									{type: 'DropdownBox', id: 'selectWrap', init: function() {
											this.update = function(languages) {
												var i, item, def;
												this.removeAllItem();
												for (i = 0; i < languages.length; i++) {
													this.addItem(item = new DropdownBox.Item(languages[i].name, languages[i].code, languages[i]));
													if (languages[i].isDefault) def = item;
												}
												if (def) this.selectItem(def);
												this.setVisible((languages.length > 0));
											};
										}}
								]}
							],
							init: function() {
								this.update = function(languages) {
									fields.flagsWrap.update(languages);
									fields.selectWrap.update(languages);
								};
							}
						}
					]}
				]}
			],
			callbackFunc: function(fields) {
				var i, lang, defaultLang = null;
				for (i = 0; (lang = fields.languageList.languages[i]); i++) {
					if (lang.isDefault) defaultLang = lang.code;
				}
				if (!defaultLang && fields.languageList.languages.length > 0) {
					fields.languageList.languages[0].setDefault(true);
				}
				if (defaultLang) {
					thisClass.system.site.setLastDefLang(defaultLang);
				}
				thisClass.system.site.languages.splice(0, thisClass.system.site.languages.length);
				for (i = 0; (lang = fields.languageList.languages[i]); i++) {
					thisClass.system.site.languages.push({name: lang.name, code: lang.code, hrefLang: lang.hrefLang, isDefault: lang.isDefault});
				}
				thisClass.type = fields.typeFlags.getValue() ? 'flags' : 'select';
				thisClass.system.site.onUpdateLanguages();
				thisClass.system.site.switchLanguage(thisClass.system.site.getLastDefLang());
				wb_builder.pageModified = true;
			}
		});

		fields.languageList.removeAllItems();
		for (var i = 0; i < this.system.site.languages.length; i++) {
			fields.languageList.addLanguage(this.system.site.languages[i], this.system.site.languages[i].isDefault);
		}
		
		fields.langSelector.reloadSelector(fields.languageList.languages);
		fields.preview.update(fields.languageList.languages);
		
		if (this.type === 'flags') {
			fields.typeFlags.setValue(true);
		} else {
			fields.typeSelect.setValue(true);
		}

	};

	Languages.prototype.onSwitchLanguage = function(langCode) {
		Element.prototype.onSwitchLanguage.call(this, langCode);
		this.updateStyle(langCode);
	};
	
	return Languages;
});
;

/** WB Main **/

define('Service', [], function() {
	var Service = {};
	return Service;
});

define('Main', ['Builder'], function(Builder) {
	'use strict';
	window.wb_builder = new Builder();
	
	return window.wb_builder;
});

require([
		'Main', 'UIBuilder', 'Dialog', 'ImagePicker', 'MediaLibrary', 'URLControl',
		'TextArea', 'Menu', 'Body', 'Picture', 'Banner', 'Blog',
		'BookmarksShare', 'BuyNow', 'Button', 'Chat', 'CustomHtml', 'FacebookFans',
		'FacebookLike', 'Flash', 'FlickrGallery', 'Form', 'Gallery', 'GoogleAdSense',
		'GoogleMaps', 'Youtube', 'Languages', 'Line', 'LinkExchangeBadge', 'Menu',
		'MusicPlayer', 'News', 'Shape', 'SkypeImOnline', 'Table', 'TextArea', 'Twitter',
		'Store', 'StoreCart'
	], function() {
	'use strict';
	
	/** On document ready */
	$(function() { window.wb_builder.init(); });
});

		$.jstree._themes = "modules/builder/js/lib/jstree/themes/";
		wb_builder.siteDomain = "pointsystem.bugs3.com";
		wb_builder.isReseller = true;
		wb_builder.isEnterprise = false;
		wb_builder.isModRewrite = true;
		wb_builder.routeGetKey = "route";
		wb_builder.apiUrl = "";
		wb_builder.baseUrl = "http://us.zyro.com/";
		wb_builder.lnBaseUrl = "http://us.zyro.com/";
		wb_builder.loadPageUrl = "http://us.zyro.com/loadpage/";
		wb_builder.publishUrl = "http://us.zyro.com/publish/";
		wb_builder.previewUrl = "http://us.zyro.com/preview/";
		wb_builder.resetUrl = "http://us.zyro.com/template/?reset=1";
		wb_builder.templateUrl = "http://us.zyro.com/template/";
		wb_builder.buyProUrl = "http://zyro.com/buy-pro/?return=aHR0cDovL3VzLnp5cm8uY29tLw&domain=pointsystem.bugs3.com";
		wb_builder.reportUrl = "http://us.zyro.com/feedback/";
		wb_builder.tplBaseUrl = "";
		wb_builder.modBaseUrl = "modules/builder/";
		wb_builder.userBaseUrl = "http://us.zyro.com/data/p/o/pointsystem.bugs3.com/";
		wb_builder.userGalleyUrl = "http://us.zyro.com/data/p/o/pointsystem.bugs3.com/gallery/";
		wb_builder.upgradeUrl = "http://cpanel.zyro.com/accounts/upgrade";
		wb_builder.helpUrl = null;
		wb_builder.siteProHost = "zyro.com";
		wb_builder.builderName = "Zyro - Website Builder";
		wb_builder.builderShortName = "Zyro";
		wb_builder.commonErrorMessage = "";
		wb_builder.sesso = "dJXhZHJndXJzaGdqYjd0YTcyZHJqdGlhczc=";
		wb_builder.pageId = "1";
		wb_builder.template = {"id":"Services\/Accounting","localId":"Accounting","name":"Accounting","categoryId":"Services","categoryName":"Services","isResponsive":true};
		wb_builder.meta = {"title":"","keywords":"","description":"","sitemapUrl":"http:\/\/pointsystem.bugs3.com\/sitemap.xml"};
		wb_builder.locale = "en_US";
		wb_builder.oriSiteWidth = 992;
		wb_builder.favicon = null;
		wb_builder.pluginGroups = {"wb-group-standard":{"id":"wb-group-standard","icon":"ico-tb-text","borderless":false,"name":"Standard"},"wb-group-additional":{"id":"wb-group-additional","icon":"ico-tb-shape","borderless":false,"name":"Additional"},"wb-group-advanced":{"id":"wb-group-advanced","icon":"icon-wb-advanced","name":"Advanced"},"wb-group-social":{"id":"wb-group-social","icon":"icon-wb-social","name":"Social"},"wb-group-commerce":{"id":"wb-group-commerce","icon":"icon-wb-commerce","borderless":true,"name":"Commerce"},"wb-group-maps":{"id":"wb-group-maps","icon":"icon-wb-maps","borderless":false,"name":"Maps"},"wb-group-new":{"id":"wb-group-new","icon":"ico-tb-reset","borderless":false,"name":"New"},"wb-group-dev":{"id":"wb-group-dev","icon":"icon-wb-advanced","name":"Dev"}};
		wb_builder.testMode = false;
		wb_builder.tinyMode = false;
		wb_builder.testSignUpBtn = null;
		wb_builder.availableLanguages = [{"id":42,"locale":"af_ZA","hrefLang":"af-za","code":"af","countryCode":"za","name":"Afrikaans","default":false,"active":false,"hidden":true,"sortOrder":1,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":1,"locale":"ar_AE","hrefLang":"ar-ae","code":"ar","countryCode":"ae","name":"\u0627\u0644\u0639\u0631\u0628\u064a\u0629","default":false,"active":true,"hidden":false,"sortOrder":2,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":43,"locale":"hy_AM","hrefLang":"hy-am","code":"hy","countryCode":"am","name":"\u0540\u0561\u0575\u0565\u0580\u0565\u0576","default":false,"active":false,"hidden":true,"sortOrder":3,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":12,"locale":"id_ID","hrefLang":"id-id","code":"id","countryCode":"id","name":"Bahasa Indonesia","default":false,"active":true,"hidden":false,"sortOrder":4,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":18,"locale":"ms_MY","hrefLang":"ms-my","code":"ms","countryCode":"my","name":"Bahasa Malaysia","default":false,"active":true,"hidden":false,"sortOrder":5,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":37,"locale":"be_BY","hrefLang":"be-by","code":"be","countryCode":"by","name":"\u0411\u0435\u043b\u0430\u0440\u0443\u0441\u043a\u0456","default":false,"active":false,"hidden":true,"sortOrder":6,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":34,"locale":"bg_BG","hrefLang":"bg-bg","code":"bg","countryCode":"bg","name":"\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438","default":false,"active":true,"hidden":true,"sortOrder":7,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":55,"locale":"bs_BA","hrefLang":"bs-ba","code":"bs","countryCode":"ba","name":"Bosanski","default":false,"active":false,"hidden":true,"sortOrder":8,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":2,"locale":"es_SV","hrefLang":"es-sv","code":"esc","countryCode":"sv","name":"Castellano","default":false,"active":true,"hidden":true,"sortOrder":9,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":44,"locale":"ca_CT","hrefLang":"ca-ct","code":"ca","countryCode":"ct","name":"Catal\u00e1n","default":false,"active":false,"hidden":true,"sortOrder":10,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":33,"locale":"cs_CZ","hrefLang":"cs-cz","code":"cs","countryCode":"cz","name":"\u010ce\u0161tina","default":false,"active":true,"hidden":false,"sortOrder":11,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":56,"locale":"sr_ME","hrefLang":"sr-me","code":"me","countryCode":"me","name":"Crnogorski","default":false,"active":false,"hidden":true,"sortOrder":12,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":53,"locale":"cy_GB","hrefLang":"cy-gb","code":"cy","countryCode":"gb","name":"Cymraeg","default":false,"active":false,"hidden":true,"sortOrder":13,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":3,"locale":"da_DK","hrefLang":"da-dk","code":"da","countryCode":"dk","name":"Dansk","default":false,"active":true,"hidden":false,"sortOrder":14,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":4,"locale":"de_DE","hrefLang":"de-de","code":"de","countryCode":"de","name":"Deutsch","default":false,"active":true,"hidden":false,"sortOrder":15,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":5,"locale":"el_GR","hrefLang":"el-gr","code":"el","countryCode":"gr","name":"\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac","default":false,"active":true,"hidden":false,"sortOrder":16,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":6,"locale":"en_US","hrefLang":"en-us","code":"en","countryCode":"us","name":"English","default":true,"active":true,"hidden":false,"sortOrder":17,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":7,"locale":"es_ES","hrefLang":"es-es","code":"es","countryCode":"es","name":"Espa\u00f1ol","default":false,"active":true,"hidden":false,"sortOrder":18,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":8,"locale":"et_EE","hrefLang":"et-ee","code":"et","countryCode":"ee","name":"Eesti","default":false,"active":true,"hidden":false,"sortOrder":19,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":51,"locale":"eu_EU","hrefLang":"eu-eu","code":"eu","countryCode":"eu","name":"Euskara","default":false,"active":false,"hidden":true,"sortOrder":20,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":9,"locale":"fr_FR","hrefLang":"fr-fr","code":"fr","countryCode":"fr","name":"Fran\u00e7ais","default":false,"active":true,"hidden":false,"sortOrder":21,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":50,"locale":"gl_GL","hrefLang":"gl-gl","code":"gl","countryCode":"gl","name":"Galicia","default":false,"active":false,"hidden":true,"sortOrder":22,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":10,"locale":"he_IL","hrefLang":"he-il","code":"he","countryCode":"il","name":"\u05e2\u05d1\u05e8\u05d9\u05ea","default":false,"active":true,"hidden":false,"sortOrder":23,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":49,"locale":"hi_IN","hrefLang":"hi-in","code":"hi","countryCode":"in","name":"\u0939\u093f\u0928\u094d\u0926\u0940","default":false,"active":true,"hidden":false,"sortOrder":24,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":11,"locale":"hr_HR","hrefLang":"hr-hr","code":"hr","countryCode":"hr","name":"Hrvatski","default":false,"active":true,"hidden":false,"sortOrder":25,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":13,"locale":"it_IT","hrefLang":"it-it","code":"it","countryCode":"it","name":"Italiano","default":false,"active":true,"hidden":false,"sortOrder":27,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":48,"locale":"ja_JP","hrefLang":"ja-jp","code":"ja","countryCode":"jp","name":"\u65e5\u672c\u8a9e","default":false,"active":false,"hidden":true,"sortOrder":28,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":54,"locale":"ka_GE","hrefLang":"ka-ge","code":"ka","countryCode":"ge","name":"\u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d8","default":false,"active":true,"hidden":false,"sortOrder":29,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":38,"locale":"kk_KZ","hrefLang":"kk-kz","code":"kk","countryCode":"kz","name":"\u049a\u0430\u0437\u0430\u049b","default":false,"active":false,"hidden":true,"sortOrder":30,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":14,"locale":"ko_KR","hrefLang":"ko-kr","code":"ko","countryCode":"kr","name":"\ud55c\uad6d\uc5b4","default":false,"active":true,"hidden":false,"sortOrder":31,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":15,"locale":"lt_LT","hrefLang":"lt-lt","code":"lt","countryCode":"lt","name":"Lietuvi\u0173","default":false,"active":true,"hidden":false,"sortOrder":32,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":16,"locale":"lv_LV","hrefLang":"lv-lv","code":"lv","countryCode":"lv","name":"Latvie\u0161u","default":false,"active":true,"hidden":false,"sortOrder":33,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":17,"locale":"hu_HU","hrefLang":"hu-hu","code":"hu","countryCode":"hu","name":"Magyar","default":false,"active":true,"hidden":false,"sortOrder":34,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":35,"locale":"mk_MK","hrefLang":"mk-mk","code":"mk","countryCode":"mk","name":"\u041c\u0430\u043a\u0435\u0434\u043e\u043d\u0441\u043a\u0438","default":false,"active":true,"hidden":false,"sortOrder":35,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":19,"locale":"nl_NL","hrefLang":"nl-nl","code":"nl","countryCode":"nl","name":"Nederlands","default":false,"active":true,"hidden":false,"sortOrder":37,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":41,"locale":"no_NO","hrefLang":"no-no","code":"no","countryCode":"no","name":"Norsk","default":false,"active":true,"hidden":false,"sortOrder":38,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":40,"locale":"fa_IR","hrefLang":"fa-ir","code":"fa","countryCode":"ir","name":"\u0641\u0627\u0631\u0633\u06cc","default":false,"active":true,"hidden":false,"sortOrder":39,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":20,"locale":"pl_PL","hrefLang":"pl-pl","code":"pl","countryCode":"pl","name":"Polski","default":false,"active":true,"hidden":false,"sortOrder":40,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":21,"locale":"pt_BR","hrefLang":"pt-br","code":"pt","countryCode":"br","name":"Portugu\u00eas (BR)","default":false,"active":true,"hidden":false,"sortOrder":41,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":52,"locale":"pt_PT","hrefLang":"pt-pt","code":"pt2","countryCode":"pt","name":"Portugu\u00eas","default":false,"active":false,"hidden":true,"sortOrder":42,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":22,"locale":"ro_RO","hrefLang":"ro-ro","code":"ro","countryCode":"ro","name":"Rom\u00e2n\u0103","default":false,"active":true,"hidden":false,"sortOrder":43,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":23,"locale":"ru_RU","hrefLang":"ru-ru","code":"ru","countryCode":"ru","name":"\u0420\u0443\u0441\u0441\u043a\u0438\u0439","default":false,"active":true,"hidden":false,"sortOrder":44,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":32,"locale":"sr_RS","hrefLang":"sr-rs","code":"sr","countryCode":"rs","name":"\u0421\u0440\u043f\u0441\u043a\u0438","default":false,"active":false,"hidden":true,"sortOrder":45,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":24,"locale":"sk_SK","hrefLang":"sk-sk","code":"sk","countryCode":"sk","name":"Sloven\u010dina","default":false,"active":true,"hidden":false,"sortOrder":46,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":39,"locale":"sq_AL","hrefLang":"sq-al","code":"sq","countryCode":"al","name":"Shqiptar","default":false,"active":false,"hidden":true,"sortOrder":47,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":36,"locale":"sl_SI","hrefLang":"sl-si","code":"sl","countryCode":"si","name":"Sloven\u0161\u010dina","default":false,"active":true,"hidden":true,"sortOrder":48,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":25,"locale":"fi_FI","hrefLang":"fi-fi","code":"fi","countryCode":"fi","name":"Suomi","default":false,"active":true,"hidden":false,"sortOrder":49,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":26,"locale":"sv_SE","hrefLang":"sv-se","code":"sv","countryCode":"se","name":"Svenska","default":false,"active":true,"hidden":false,"sortOrder":50,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":27,"locale":"th_TH","hrefLang":"th-th","code":"th","countryCode":"th","name":"\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22","default":false,"active":true,"hidden":false,"sortOrder":51,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":28,"locale":"tr_TR","hrefLang":"tr-tr","code":"tr","countryCode":"tr","name":"T\u00fcrk\u00e7e","default":false,"active":true,"hidden":false,"sortOrder":52,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":29,"locale":"uk_UA","hrefLang":"uk-ua","code":"uk","countryCode":"ua","name":"\u0423\u043a\u0440\u0430\u0457\u0301\u043d\u0441\u044c\u043a\u0430","default":false,"active":true,"hidden":false,"sortOrder":53,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":30,"locale":"vi_VN","hrefLang":"vi-vn","code":"vi","countryCode":"vn","name":"Ti\u1ebfng Vi\u1ec7t","default":false,"active":true,"hidden":false,"sortOrder":54,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":31,"locale":"zh_HK","hrefLang":"zh-hk","code":"zh","countryCode":"hk","name":"\u4e2d\u6587","default":false,"active":true,"hidden":false,"sortOrder":55,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":46,"locale":"zh_TW","hrefLang":"zh-tw","code":"zh2","countryCode":"tw","name":"\u4e2d\u570b","default":false,"active":true,"hidden":false,"sortOrder":56,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"},{"id":47,"locale":"zh_CN","hrefLang":"zh-cn","code":"zh3","countryCode":"cn","name":"\u4e2d\u56fd","default":false,"active":true,"hidden":false,"sortOrder":57,"timeCreated":"2017-01-17 22:13:22","timeModified":"2017-01-17 22:13:22"}];
		wb_builder.showPremiumBtn = false;
		wb_builder.isZyro = true;
		
		wb_builder.isB2CFree = false;
		wb_builder.formsAllowed = true;
		wb_builder.autoBackupsEnable = false;
		wb_builder.autoBackupsSavingInterval = 600;
		wb_builder.we = false;
		wb_builder.enableForcedHttpsPort = false;
		wb_builder.mapsConfig = {"address":null,"ll":null,"daumMapsApiKey":null,"naverMapsApiKey":null,"googleMapsApiKey":"AIzaSyCSWLVHi8ojRT8oJdhJPYNwTsjUZMZQyh4"};
		wb_builder.sessUniqKey = "507022443";
		wb_builder.translateStoreItems = false;
		wb_builder.addElements([{"class":"Site","content":{"pages":[{"id":1,"isFront":true,"isSingle":false,"title":"HOME","keywords":"","description":"","layout":"Empty_w_footer","background":{"color":"#ffffff","image":"gallery\/notepad-691250_1920-ts1462434010.jpg","attachment":"scroll","position":"center top","repeat":"no-repeat","css":{"background":"#ffffff url(\"http:\/\/us.zyro.com\/data\/p\/o\/pointsystem.bugs3.com\/gallery\/notepad-691250_1920-ts1462434010.jpg\") no-repeat scroll center top"}},"background2":{"color":"transparent","image":"gallery\/accounting_top-ts1419252354.jpg","attachment":"scroll","position":"center top","repeat":"repeat-x","css":{"background":"transparent url(\"http:\/\/us.zyro.com\/data\/p\/o\/pointsystem.bugs3.com\/gallery\/accounting_top-ts1419252354.jpg\") repeat-x scroll center top"}},"comments":[],"siteWidth":992,"siteHeight":2254,"copyFrom":null,"anchors":[],"modes":{"desktop":{"siteWidth":992,"siteHeight":2254},"tv":{"siteWidth":1200,"siteHeight":1989},"tablet":{"siteWidth":768,"siteHeight":1757},"phone":{"siteWidth":320,"siteHeight":2638}},"landing":false,"blocks":{"wb_header":{"background":{"color":"transparent","image":null,"attachment":"scroll","position":"left top","repeat":"repeat","css":{"background":"transparent none repeat scroll left top"}},"height":470,"blockPadding":0},"wb_main":{"background":{"color":"transparent","image":null,"attachment":"scroll","position":"left top","repeat":"repeat","css":{"background":"transparent none repeat scroll left top"}},"height":1644,"blockPadding":40},"wb_footer":{"background":{"color":"#1c2f42","image":null,"attachment":"scroll","position":"center bottom","repeat":"repeat-x","css":{"background":"#1c2f42 none repeat-x scroll center bottom"}},"height":100,"blockPadding":0}}},{"id":2,"isFront":false,"isSingle":false,"title":"About us","description":"","background":{"color":"#ffffff","image":"gallery\/9987.jpg","attachment":"scroll","position":"center top","repeat":"no-repeat","css":{"background":"#ffffff url(\"http:\/\/responsive.site.pro\/data\/t\/p\/tp3.profis.lt\/gallery\/9987.jpg\") no-repeat scroll center top"}},"background2":{"color":"transparent","image":null,"attachment":"scroll","position":"center top","repeat":"no-repeat","css":{"background":"transparent none no-repeat scroll center top"}},"comments":[],"siteWidth":992,"siteHeight":920,"copyFrom":null,"anchors":[],"modes":{"desktop":{"siteWidth":992,"siteHeight":920},"tv":{"siteWidth":1200,"siteHeight":904},"tablet":{"siteWidth":768,"siteHeight":1012},"phone":{"siteWidth":320,"siteHeight":1748}},"landing":false,"blocks":{"wb_header":{"background":{"color":"transparent","image":null,"attachment":"scroll","position":"left top","repeat":"repeat","css":{"background":"transparent none repeat scroll left top"}},"height":100,"blockPadding":0},"wb_main":{"background":{"color":"transparent","image":null,"attachment":"scroll","position":"left top","repeat":"no-repeat","css":{"background":"transparent none no-repeat scroll left top"}},"height":680,"blockPadding":40},"wb_footer":{"background":{"color":"#1c2f42","image":null,"attachment":"scroll","position":"center bottom","repeat":"repeat-x","css":{"background":"#1c2f42 none repeat-x scroll center bottom"}},"height":100,"blockPadding":0}}},{"id":3,"isFront":false,"isSingle":false,"title":"Contacts","description":"","background":{"color":"#ffffff","image":"gallery\/9987.jpg","attachment":"scroll","position":"center top","repeat":"no-repeat","css":{"background":"#ffffff url(\"http:\/\/responsive.site.pro\/data\/t\/p\/tp3.profis.lt\/gallery\/9987.jpg\") no-repeat scroll center top"}},"background2":{"color":"transparent","image":null,"attachment":"scroll","position":"center top","repeat":"no-repeat","css":{"background":"transparent none no-repeat scroll center top"}},"comments":[],"siteWidth":1200,"siteHeight":1170,"copyFrom":null,"anchors":[],"modes":{"desktop":{"siteWidth":992,"siteHeight":1150},"tv":{"siteWidth":1200,"siteHeight":1170},"tablet":{"siteWidth":768,"siteHeight":1110},"phone":{"siteWidth":320,"siteHeight":1550}},"landing":false,"blocks":{"wb_header":{"background":{"color":"transparent","image":null,"attachment":"scroll","position":"left top","repeat":"repeat","css":{"background":"transparent none repeat scroll left top"}},"height":100,"blockPadding":0},"wb_main":{"background":{"color":"transparent","image":null,"attachment":"scroll","position":"left top","repeat":"repeat","css":{"background":"transparent none repeat scroll left top"}},"height":850,"blockPadding":100},"wb_footer":{"background":{"color":"#1c2f42","image":null,"attachment":"scroll","position":"center bottom","repeat":"repeat-x","css":{"background":"#1c2f42 none repeat-x scroll center bottom"}},"height":100,"blockPadding":0}}},{"id":5,"isFront":false,"isSingle":false,"title":"Services","description":"","background":{"color":"#ffffff","image":"gallery\/9987.jpg","attachment":"scroll","position":"center top","repeat":"no-repeat","css":{"background":"#ffffff url(\"http:\/\/responsive.site.pro\/data\/t\/p\/tp3.profis.lt\/gallery\/9987.jpg\") no-repeat scroll center top"}},"background2":{"color":"transparent","image":null,"attachment":"scroll","position":"center top","repeat":"no-repeat","css":{"background":"transparent none no-repeat scroll center top"}},"comments":[],"siteWidth":320,"siteHeight":2076,"copyFrom":null,"anchors":[],"modes":{"desktop":{"siteWidth":992,"siteHeight":1160},"tv":{"siteWidth":1200,"siteHeight":1200},"tablet":{"siteWidth":768,"siteHeight":1300},"phone":{"siteWidth":320,"siteHeight":2076}},"landing":false,"blocks":{"wb_header":{"background":{"color":"transparent","image":null,"attachment":"scroll","position":"left top","repeat":"repeat","css":{"background":"transparent none repeat scroll left top"}},"height":100,"blockPadding":0},"wb_main":{"background":{"color":"transparent","image":null,"attachment":"scroll","position":"left top","repeat":"repeat","css":{"background":"transparent none repeat scroll left top"}},"height":920,"blockPadding":40},"wb_footer":{"background":{"color":"#1c2f42","image":null,"attachment":"scroll","position":"center bottom","repeat":"repeat-x","css":{"background":"#1c2f42 none repeat-x scroll center bottom"}},"height":100,"blockPadding":0}}}],"modesEnabled":{"tv":false,"desktop":true,"tablet":false,"phone":false},"languages":[],"styles":[{"selector":".wb-stl-pagetitle","rules":{"font":"normal normal 32px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","line-height":"46px","margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px","text-transform":"none"},"name":"Page Title","tag":"h4","ident":0,"sys":{"text":{"color":"#ffffff","size":32,"font":"'Open Sans',sans-serif","style":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"align":"left","lineHeight":46,"css":{"font":"normal normal 32px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","line-height":"46px"},"name":"Page Title"},"linkNormalColor":"#ffffff","linkNormalStyle":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"linkHoverColor":"#ffffff","linkHoverStyle":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"advSpacing":{"marginTop":0,"marginRight":0,"marginBottom":0,"marginLeft":0,"paddingTop":0,"paddingRight":0,"paddingBottom":0,"paddingLeft":0,"css":{"margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px"}},"advListBullet":null,"advTextTransform":{"value":"none","css":{"text-transform":"none"}}},"subs":[{"selector":".wb-stl-pagetitle a","rules":{"font":"normal normal 32px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","line-height":"46px","font-weight":"normal","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-pagetitle a:hover","rules":{"font":"normal normal 32px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","line-height":"46px","font-weight":"normal","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-pagetitle ul","rules":{"list-style-image":"url('')"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}}],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-subtitle","rules":{"font":"normal normal 36px 'Roboto Condensed',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px","text-transform":"none"},"name":"Sub Title","tag":"h5","ident":1,"sys":{"text":{"color":"#ffffff","size":36,"font":"'Roboto Condensed',sans-serif","style":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"align":"left","lineHeight":0,"css":{"font":"normal normal 36px 'Roboto Condensed',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left"},"name":"Sub Title"},"linkNormalColor":"#ffffff","linkNormalStyle":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"linkHoverColor":"#ffffff","linkHoverStyle":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"advSpacing":{"marginTop":0,"marginRight":0,"marginBottom":0,"marginLeft":0,"paddingTop":0,"paddingRight":0,"paddingBottom":0,"paddingLeft":0,"css":{"margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px"}},"advListBullet":null,"advTextTransform":{"value":"none","css":{"text-transform":"none"}}},"subs":[{"selector":".wb-stl-subtitle a","rules":{"font":"normal normal 36px 'Roboto Condensed',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","font-weight":"normal","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-subtitle a:hover","rules":{"font":"normal normal 36px 'Roboto Condensed',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","font-weight":"normal","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-subtitle ul","rules":{"list-style-image":"url('')"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}}],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-heading1","rules":{"font":"normal normal 40px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px","text-transform":"none"},"name":"Heading 1","tag":"h1","ident":0,"sys":{"text":{"color":"#ffffff","size":40,"font":"'Open Sans',sans-serif","style":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"align":"left","lineHeight":0,"css":{"font":"normal normal 40px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left"},"name":"Heading 1"},"linkNormalColor":"#ffffff","linkNormalStyle":{"bold":true,"underline":true,"css":{"font-weight":"bold","font-style":"normal","text-decoration":"underline"}},"linkHoverColor":"#ffffff","linkHoverStyle":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"advSpacing":{"marginTop":0,"marginRight":0,"marginBottom":0,"marginLeft":0,"paddingTop":0,"paddingRight":0,"paddingBottom":0,"paddingLeft":0,"css":{"margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px"}},"advListBullet":null,"advTextTransform":{"value":"none","css":{"text-transform":"none"}}},"subs":[{"selector":".wb-stl-heading1 a","rules":{"font":"normal normal 40px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"underline","text-align":"left","font-weight":"bold","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-heading1 a:hover","rules":{"font":"normal normal 40px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","font-weight":"normal","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-heading1 ul","rules":{"list-style-image":"url('')"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}}],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-heading2","rules":{"font":"normal bold 48px 'Open Sans',sans-serif","color":"#333333","text-decoration":"none","text-align":"left","margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px","text-transform":"none"},"name":"Heading 2","tag":"h2","ident":1,"sys":{"text":{"color":"#333333","size":48,"font":"'Open Sans',sans-serif","style":{"bold":true,"css":{"font-weight":"bold","font-style":"normal","text-decoration":"none"}},"align":"left","lineHeight":0,"css":{"font":"normal bold 48px 'Open Sans',sans-serif","color":"#333333","text-decoration":"none","text-align":"left"},"name":"Heading 2"},"linkNormalColor":"#333333","linkNormalStyle":{"bold":true,"css":{"font-weight":"bold","font-style":"normal","text-decoration":"none"}},"linkHoverColor":"#333333","linkHoverStyle":{"bold":true,"underline":true,"css":{"font-weight":"bold","font-style":"normal","text-decoration":"underline"}},"advSpacing":{"marginTop":0,"marginRight":0,"marginBottom":0,"marginLeft":0,"paddingTop":0,"paddingRight":0,"paddingBottom":0,"paddingLeft":0,"css":{"margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px"}},"advListBullet":null,"advTextTransform":{"value":"none","css":{"text-transform":"none"}}},"subs":[{"selector":".wb-stl-heading2 a","rules":{"font":"normal bold 48px 'Open Sans',sans-serif","color":"#333333","text-decoration":"none","text-align":"left","font-weight":"bold","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-heading2 a:hover","rules":{"font":"normal bold 48px 'Open Sans',sans-serif","color":"#333333","text-decoration":"underline","text-align":"left","font-weight":"bold","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-heading2 ul","rules":{"list-style-image":"url('')"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}}],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-heading3","rules":{"font":"normal bold 26px 'Roboto Condensed',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","line-height":"40px","margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px","text-transform":"none"},"name":"Heading 3","tag":"h3","ident":1,"sys":{"text":{"color":"#ffffff","size":26,"font":"'Roboto Condensed',sans-serif","style":{"bold":true,"css":{"font-weight":"bold","font-style":"normal","text-decoration":"none"}},"align":"left","lineHeight":40,"css":{"font":"normal bold 26px 'Roboto Condensed',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","line-height":"40px"},"name":"Heading 3"},"linkNormalColor":"#ffffff","linkNormalStyle":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"linkHoverColor":"#ffffff","linkHoverStyle":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"advSpacing":{"marginTop":0,"marginRight":0,"marginBottom":0,"marginLeft":0,"paddingTop":0,"paddingRight":0,"paddingBottom":0,"paddingLeft":0,"css":{"margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px"}},"advListBullet":null,"advTextTransform":{"value":"none","css":{"text-transform":"none"}}},"subs":[{"selector":".wb-stl-heading3 a","rules":{"font":"normal bold 26px 'Roboto Condensed',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","line-height":"40px","font-weight":"normal","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-heading3 a:hover","rules":{"font":"normal bold 26px 'Roboto Condensed',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","line-height":"40px","font-weight":"normal","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-heading3 ul","rules":{"list-style-image":"url('')"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}}],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-normal","rules":{"font":"normal normal 16px 'Open Sans',sans-serif","color":"#454545","text-decoration":"none","text-align":"left","line-height":"28px","margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px","text-transform":"none"},"name":"Normal","tag":"p","ident":0,"sys":{"text":{"color":"#454545","size":16,"font":"'Open Sans',sans-serif","style":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"align":"left","lineHeight":28,"css":{"font":"normal normal 16px 'Open Sans',sans-serif","color":"#454545","text-decoration":"none","text-align":"left","line-height":"28px"},"name":"Normal"},"linkNormalColor":"#454545","linkNormalStyle":{"bold":true,"underline":true,"css":{"font-weight":"bold","font-style":"normal","text-decoration":"underline"}},"linkHoverColor":"#454545","linkHoverStyle":{"bold":true,"css":{"font-weight":"bold","font-style":"normal","text-decoration":"none"}},"advSpacing":{"marginTop":0,"marginRight":0,"marginBottom":0,"marginLeft":0,"paddingTop":0,"paddingRight":0,"paddingBottom":0,"paddingLeft":0,"css":{"margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px"}},"advListBullet":null,"advTextTransform":{"value":"none","css":{"text-transform":"none"}}},"subs":[{"selector":".wb-stl-normal a","rules":{"font":"normal normal 16px 'Open Sans',sans-serif","color":"#454545","text-decoration":"underline","text-align":"left","line-height":"28px","font-weight":"bold","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-normal a:hover","rules":{"font":"normal normal 16px 'Open Sans',sans-serif","color":"#454545","text-decoration":"none","text-align":"left","line-height":"28px","font-weight":"bold","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-normal ul","rules":{"list-style-image":"url('')"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}}],"fontScale":1,"modes":{"tv":{"fontScale":1},"desktop":{"fontScale":1},"tablet":{"fontScale":1},"phone":{"fontScale":1}}},{"selector":".wb-stl-highlight","rules":{"font":"normal normal 18px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px","text-transform":"none"},"name":"Highlight","tag":"span","ident":1,"sys":{"text":{"color":"#ffffff","size":18,"font":"'Open Sans',sans-serif","style":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"align":"left","lineHeight":0,"css":{"font":"normal normal 18px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left"},"name":"Highlight"},"linkNormalColor":"#ffffff","linkNormalStyle":{"underline":true,"css":{"font-weight":"normal","font-style":"normal","text-decoration":"underline"}},"linkHoverColor":"#ffffff","linkHoverStyle":{"underline":true,"css":{"font-weight":"normal","font-style":"normal","text-decoration":"underline"}},"advSpacing":{"marginTop":0,"marginRight":0,"marginBottom":0,"marginLeft":0,"paddingTop":0,"paddingRight":0,"paddingBottom":0,"paddingLeft":0,"css":{"margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px"}},"advListBullet":null,"advTextTransform":{"value":"none","css":{"text-transform":"none"}}},"subs":[{"selector":".wb-stl-highlight a","rules":{"font":"normal normal 18px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"underline","text-align":"left","font-weight":"normal","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-highlight a:hover","rules":{"font":"normal normal 18px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"underline","text-align":"left","font-weight":"normal","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-highlight ul","rules":{"list-style-image":"url('')"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}}],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.8}}},{"selector":".wb-stl-special","rules":{"font":"normal normal 20px 'Open Sans',sans-serif","color":"#3d3d3d","text-decoration":"none","text-align":"left","line-height":"36px","margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px","text-transform":"none"},"name":"Special","tag":"span","ident":1,"sys":{"text":{"color":"#3d3d3d","size":20,"font":"'Open Sans',sans-serif","style":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"align":"left","lineHeight":36,"css":{"font":"normal normal 20px 'Open Sans',sans-serif","color":"#3d3d3d","text-decoration":"none","text-align":"left","line-height":"36px"},"name":"Special"},"linkNormalColor":"#2e2e2e","linkNormalStyle":{"bold":true,"css":{"font-weight":"bold","font-style":"normal","text-decoration":"none"}},"linkHoverColor":"#2e2e2e","linkHoverStyle":{"bold":true,"css":{"font-weight":"bold","font-style":"normal","text-decoration":"none"}},"advSpacing":{"marginTop":0,"marginRight":0,"marginBottom":0,"marginLeft":0,"paddingTop":0,"paddingRight":0,"paddingBottom":0,"paddingLeft":0,"css":{"margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px"}},"advListBullet":null,"advTextTransform":{"value":"none","css":{"text-transform":"none"}}},"subs":[{"selector":".wb-stl-special a","rules":{"font":"normal normal 20px 'Open Sans',sans-serif","color":"#2e2e2e","text-decoration":"none","text-align":"left","line-height":"36px","font-weight":"bold","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-special a:hover","rules":{"font":"normal normal 20px 'Open Sans',sans-serif","color":"#2e2e2e","text-decoration":"none","text-align":"left","line-height":"36px","font-weight":"bold","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-special ul","rules":{"list-style-image":"url('')"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}}],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.8}}},{"selector":".wb-stl-footer","rules":{"font":"normal normal 14px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px","text-transform":"none"},"name":"Footer","tag":"p","ident":0,"sys":{"text":{"color":"#ffffff","size":14,"font":"'Open Sans',sans-serif","style":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"align":"left","lineHeight":0,"css":{"font":"normal normal 14px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left"},"name":"Footer"},"linkNormalColor":"#ffffff","linkNormalStyle":{"bold":true,"underline":true,"css":{"font-weight":"bold","font-style":"normal","text-decoration":"underline"}},"linkHoverColor":"#ffffff","linkHoverStyle":{"bold":true,"css":{"font-weight":"bold","font-style":"normal","text-decoration":"none"}},"advSpacing":{"marginTop":0,"marginRight":0,"marginBottom":0,"marginLeft":0,"paddingTop":0,"paddingRight":0,"paddingBottom":0,"paddingLeft":0,"css":{"margin":"0px 0px 0px 0px","padding":"0px 0px 0px 0px"}},"advListBullet":null,"advTextTransform":{"value":"none","css":{"text-transform":"none"}}},"subs":[{"selector":".wb-stl-footer a","rules":{"font":"normal normal 14px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"underline","text-align":"left","font-weight":"bold","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-footer a:hover","rules":{"font":"normal normal 14px 'Open Sans',sans-serif","color":"#ffffff","text-decoration":"none","text-align":"left","font-weight":"bold","font-style":"normal"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}},{"selector":".wb-stl-footer ul","rules":{"list-style-image":"url('')"},"name":"no-name","tag":"span","ident":0,"sys":[],"subs":[],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":0.8},"phone":{"fontScale":0.6}}}],"fontScale":1,"modes":{"tv":{"fontScale":1.2},"desktop":{"fontScale":1},"tablet":{"fontScale":1},"phone":{"fontScale":1}}}],"analyticsId":null,"webmasterId":null,"favicon":null,"publishWithForcedHttps":false,"publishWithForcedHttpsPort":0,"forceRedirectEnabled":false,"forceRedirectWww":false,"metaHtml":null,"lastDefLang":null,"landing":false,"rtl":false},"modes":{"desktop":[],"tv":[],"tablet":[],"phone":[]},"isCommon":true},{"class":"Body","content":{"siteWidth":992,"siteHeight":2254,"bgSite":{"color":"transparent","image":null,"attachment":"scroll","position":"left top","repeat":"repeat-x","css":{"background":"transparent none repeat-x scroll left top"}},"bg2Site":{"color":"transparent","image":"gallery\/accounting_top-ts1419252354.jpg","attachment":"scroll","position":"left top","repeat":"repeat-x","css":{"background":"transparent url(\"http:\/\/responsive.site.pro\/data\/t\/p\/tp3.profis.lt\/gallery\/accounting_top-ts1419252354.jpg\") repeat-x scroll left top"}},"siteTextFont":{"color":"#333333","size":"13","decoration":"none","font":"Arial,Helvetica,sans-serif","style":[],"align":"left","lineHeight":"18","css":{"font":"normal normal 13px Arial,Helvetica,sans-serif","text-align":"left","text-decoration":"none","color":"#333333","line-height":"18px"}},"siteLinkFontNormal":{"color":"#0088cc","size":"13","decoration":"underline","font":"Arial,Helvetica,sans-serif","style":[],"align":"left","lineHeight":"18","css":{"font":"normal normal 13px Arial,Helvetica,sans-serif","text-align":"left","text-decoration":"underline","color":"#0088cc","line-height":"18px"}},"siteLinkFontHover":{"color":"#005580","size":"13","decoration":"underline","font":"Arial,Helvetica,sans-serif","style":[],"align":"left","lineHeight":"18","css":{"font":"normal normal 13px Arial,Helvetica,sans-serif","text-align":"left","text-decoration":"underline","color":"#005580","line-height":"18px"}}},"modes":{"desktop":{"siteWidth":992,"siteHeight":2254},"tv":{"siteWidth":1200,"siteHeight":1989},"tablet":{"siteWidth":768,"siteHeight":1757},"phone":{"siteWidth":320,"siteHeight":2638}},"isCommon":true},{"class":"Menu","id":"wb_element_instance1","parentId":"wb_header","x":380,"y":31,"width":590,"height":40,"anchor":null,"zIndex":334,"content":{"menuUID":"f23346ad","tree":[{"id":5,"idp":0,"type":"internal","targetId":"1","anchor":null,"name":"Home","alias":"","url":null,"target":"_self","noMenu":false,"copyFrom":null},{"id":110,"idp":0,"type":"internal","targetId":2,"anchor":null,"name":"About us","target":"_self","noMenu":false,"copyFrom":null},{"id":105,"idp":0,"type":"internal","targetId":5,"anchor":null,"name":"Services","target":"_self","noMenu":false,"copyFrom":null},{"id":111,"idp":0,"type":"internal","targetId":3,"anchor":null,"name":"Contacts","target":"_self","noMenu":false,"copyFrom":null}],"menuType":"hmenu","menuItemTextTransform":{"value":"uppercase","css":{"text-transform":"uppercase"}},"menuItemPadding":[10,0,10,0],"menuItemSpacing":[0,10,0,10],"menuItemAlign":"right","txtNormal":{"color":"#ffffff","size":16,"decoration":"none","font":"'Open Sans',sans-serif","style":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"align":"left","lineHeight":18,"css":{"font":"normal normal 16px 'Open Sans',sans-serif","text-decoration":"none","color":"#ffffff","line-height":"18px"}},"txtHover":{"color":"#70d9ff","size":16,"decoration":"none","font":"'Open Sans',sans-serif","style":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"align":"left","lineHeight":18,"css":{"font":"normal normal 16px 'Open Sans',sans-serif","text-decoration":"none","color":"#70d9ff","line-height":"18px"}},"txtActive":{"color":"#70d9ff","size":16,"decoration":"none","font":"'Open Sans',sans-serif","style":{"css":{"font-weight":"normal","font-style":"normal","text-decoration":"none"}},"align":"left","lineHeight":18,"css":{"font":"normal normal 16px 'Open Sans',sans-serif","text-decoration":"none","color":"#70d9ff","line-height":"18px"}},"bgItemNormal":{"color":"transparent","image":null,"attachment":"scroll","position":"center top","repeat":"no-repeat","css":{"background":"transparent none no-repeat scroll center top"}},"bgItemHover":{"color":"transparent","image":null,"attachment":"scroll","position":"center top","repeat":"no-repeat","css":{"background":"transparent none no-repeat scroll center top"}},"bgItemActive":{"color":"transparent","image":null,"attachment":"scroll","position":"center center","repeat":"no-repeat","css":{"background":"transparent none no-repeat scroll center center"}},"bgMenu":{"color":"transparent","image":null,"attachment":"scroll","position":"right top","repeat":"repeat","css":{"background":"transparent none repeat scroll right top"}},"bgSubMenu":{"color":"#1c2f42","image":null,"attachment":"scroll","position":"right top","repeat":"repeat","css":{"background":"#1c2f42 none repeat scroll right top"}},"bgMobMenu":{"color":"#1c2f42","image":null,"attachment":"scroll","position":"left top","repeat":"repeat","css":{"background":"#1c2f42 none repeat scroll left top"}},"brdMenu":{"color":"#000000","style":"none","weight":1,"radius":null,"css":{"border":"1px none #000000"}},"brdNormal":{"color":"#000000","style":"none","weight":0,"radius":null,"css":{"border":"0px none #000000"}},"brdHover":{"color":"#000000","style":"none","weight":0,"radius":null,"css":{"border":"0px none #000000"}},"brdActive":{"color":"#000000","style":"none","weight":0,"radius":null,"css":{"border":"0px none #000000"}},"landing":false},"isCommon":true,"includePages":[],"isLocked":false,"modes":{"desktop":{"x":380,"y":31,"width":590,"height":40,"hidden":false},"tv":{"x":570,"y":30,"width":590,"height":40,"hidden":false},"tablet":{"x":310,"y":32,"width":450,"height":40,"hidden":false},"phone":{"x":20,"y":35,"width":280,"height":30,"hidden":false}}},{"class":"LinkExchangeBadge","id":"wb_element_instance3","parentId":"wb_footer","x":860,"y":40,"width":100,"height":24,"anchor":null,"zIndex":332,"content":{"type":"iZyro","html":"I <i class=\"icon-wb-logo\"><\/i><a href=\"http:\/\/zyro.com\/\" target=\"_blank\" title=\"Zyro - Website Builder\">Zyro<\/a>"},"isCommon":true,"includePages":[],"isLocked":false,"modes":{"desktop":{"x":860,"y":40,"width":100,"height":24,"hidden":false},"tv":{"x":1040,"y":41,"width":100,"height":24,"hidden":false},"tablet":{"x":660,"y":41,"width":100,"height":24,"hidden":false},"phone":{"x":21,"y":56,"width":100,"height":24,"hidden":false}},"customLock":false},{"class":"TextArea","id":"wb_element_instance4","parentId":"wb_footer","x":20,"y":40,"width":351,"height":24,"anchor":null,"zIndex":321,"content":{"text":"<p class=\"wb-stl-footer\">&copy; 2017 <a href=\"http:\/\/pointsystem.bugs3.com\">pointsystem.bugs3.com<\/a><\/p>","styleEnabled":false,"styleTextFont":{"color":"#333333","size":13,"decoration":"none","font":"Arial,sans-serif","style":[],"align":"left","lineHeight":18,"css":{"font":"normal normal 13px Arial,sans-serif","color":"#333333","text-align":"left","text-decoration":"none","line-height":"18px"}},"styleLinkFontNormal":{"color":"#0088cc","size":13,"decoration":"underline","font":"Arial,sans-serif","style":[],"align":"left","lineHeight":18,"css":{"font":"normal normal 13px Arial,sans-serif","color":"#0088cc","text-align":"left","text-decoration":"underline","line-height":"18px"}},"styleLinkFontHover":{"color":"#005580","size":13,"decoration":"underline","font":"Arial,sans-serif","style":[],"align":"left","lineHeight":18,"css":{"font":"normal normal 13px Arial,sans-serif","color":"#005580","text-align":"left","text-decoration":"underline","line-height":"18px"}},"rtl":false},"isCommon":true,"includePages":[],"isLocked":false,"modes":{"desktop":{"x":20,"y":40,"width":351,"height":24,"hidden":false},"tv":{"x":40,"y":42,"width":300,"height":24,"hidden":false},"tablet":{"x":20,"y":40,"width":200,"height":24,"hidden":false},"phone":{"x":21,"y":26,"width":160,"height":24,"hidden":false}}},{"class":"Picture","id":"wb_element_instance5","parentId":"wb_footer","x":710,"y":24,"width":50,"height":50,"anchor":null,"zIndex":313,"content":{"src":"gallery\/facebook-icon.png","alt":null,"link":{"type":"url","url":"http:\/\/facebook.com","target":true,"title":null,"menuUID":null},"imageLinkType":"url","crop":{"x":0,"y":0,"width":0,"height":0}},"isCommon":true,"includePages":[],"isLocked":false,"modes":{"desktop":{"x":710,"y":24,"width":50,"height":50,"hidden":false,"crop":{"x":0,"y":0,"width":0,"height":0}},"tv":{"x":870,"y":24,"width":50,"height":50,"hidden":false,"crop":{"x":0,"y":0,"width":0,"height":0}},"tablet":{"x":520,"y":30,"width":50,"height":50,"hidden":false,"crop":{"x":0,"y":0,"width":0,"height":0}},"phone":{"x":190,"y":25,"width":50,"height":50,"hidden":false,"crop":{"x":0,"y":0,"width":0,"height":0}}},"customLock":false},{"class":"Picture","id":"wb_element_instance6","parentId":"wb_footer","x":784,"y":24,"width":50,"height":50,"anchor":null,"zIndex":316,"content":{"src":"gallery\/twitter-icon.png","alt":null,"link":{"type":"url","url":"http:\/\/twitter.com","target":true,"title":null,"menuUID":null},"imageLinkType":"url","crop":{"x":0,"y":0,"width":0,"height":0}},"isCommon":true,"includePages":[],"isLocked":false,"modes":{"desktop":{"x":784,"y":24,"width":50,"height":50,"hidden":false,"crop":{"x":0,"y":0,"width":0,"height":0}},"tv":{"x":940,"y":24,"width":50,"height":50,"hidden":false,"crop":{"x":0,"y":0,"width":0,"height":0}},"tablet":{"x":590,"y":30,"width":50,"height":50,"hidden":false,"crop":{"x":0,"y":0,"width":0,"height":0}},"phone":{"x":250,"y":25,"width":50,"height":50,"hidden":false,"crop":{"x":0,"y":0,"width":0,"height":0}}},"customLock":false}], true);
		wb_builder.whiteLabel = {"builder":false,"title":null,"logo":null};
		CKEDITOR.timestamp = 123456897;
		CKEDITOR.config.language = "en";
		wb_builder.userType = "internal";
wb_builder.maxMenuItems = 0;
wb_builder.availableElements = {"TextArea":true,"Picture":true,"Gallery":true,"Youtube":true,"GoogleMaps":true,"Shape":true,"Line":true,"Button":true,"Form":true,"Menu":true,"Languages":true,"Store":true,"StoreCart":true,"BuyNow":true,"MusicPlayer":true,"Banner":true,"Flash":true,"GoogleAdSense":true,"CustomHtml":true,"ZyroBadge":true,"LinkExchangeBadge":true,"Table":true,"FacebookFans":true,"FacebookLike":true,"BookmarksShare":true,"SkypeImOnline":true,"Twitter":true,"FlickrGallery":true};
wb_builder.pluginRegistry = {"TextArea":{"id":"TextArea","icon":"ico-tb-text","name":"Text","active":true},"Picture":{"id":"Picture","icon":"ico-tb-picture","name":"Picture","active":true},"Table":{"id":"Table","icon":"ico-tb-table","name":"Table","active":true},"Gallery":{"id":"Gallery","icon":"ico-tb-gallery","name":"Gallery","active":true},"Youtube":{"id":"Youtube","icon":"ico-tb-youtube","name":"YouTube","active":true},"GoogleMaps":{"id":"GoogleMaps","icon":"ico-tb-google-maps","name":"Google Maps","active":true},"Shape":{"id":"Shape","icon":"ico-tb-shape","name":"Shape","active":true},"Line":{"id":"Line","icon":"ico-tb-line","name":"Line","active":true},"Button":{"id":"Button","icon":"ico-tb-button","name":"Button","active":true},"Form":{"id":"Form","icon":"ico-tb-form","name":"Form","active":true},"Menu":{"id":"Menu","icon":"ico-tb-menu","name":"Menu","active":true},"Languages":{"id":"Languages","icon":"ico-tb-lang","name":"Languages","active":true},"Store":{"id":"Store","icon":"ico-tb-store","name":"Store","active":true},"StoreCart":{"id":"StoreCart","icon":"ico-tb-store-cart","name":"Store Cart","active":true},"BuyNow":{"id":"BuyNow","icon":"ico-tb-buynow","name":"Buy Now","active":true},"MusicPlayer":{"id":"MusicPlayer","icon":"ico-tb-musicplayer","name":"Music","active":true},"Banner":{"id":"Banner","icon":"ico-tb-banner","name":"Banner","active":true},"Flash":{"id":"Flash","icon":"ico-tb-flash","name":"Flash","borderless":true,"active":true},"GoogleAdSense":{"id":"GoogleAdSense","icon":"ico-tb-google-adsense","name":"AdSense","active":true},"CustomHtml":{"id":"CustomHtml","icon":"ico-tb-html","name":"HTML","active":true},"FacebookFans":{"id":"FacebookFans","icon":"ico-tb-facebook-fans","name":"Fans","borderless":true,"active":true},"FacebookLike":{"id":"FacebookLike","icon":"ico-tb-facebook-like","name":"Like","borderless":true,"active":true},"BookmarksShare":{"id":"BookmarksShare","icon":"ico-tb-share","name":"Share","borderless":true,"active":true},"SkypeImOnline":{"id":"SkypeImOnline","icon":"ico-tb-skype-imonline","name":"Skype","borderless":true,"active":true},"Twitter":{"id":"Twitter","icon":"ico-tb-twitter","name":"Twitter","borderless":true,"active":true},"FlickrGallery":{"id":"FlickrGallery","icon":"ico-tb-flickr-gallery","name":"Flickr","borderless":true,"active":true}};
wb_builder.pluginToolbar = [{"id":"wb-group-standard","items":["TextArea","Picture","Gallery","Youtube","GoogleMaps"]},{"id":"wb-group-additional","items":["Shape","Line","Button","Form","Menu","Languages"]},{"id":"wb-group-social","items":["FacebookFans","FacebookLike","BookmarksShare","vkontakte_community","vkontakte_like","Twitter","odnoklassniki","odnoklassniki_share","FlickrGallery","gplus_like","gplus_badge","instagram"]},{"id":"wb-group-advanced","items":["SkypeImOnline","MusicPlayer","Banner","Flash","GoogleAdSense","CustomHtml","Table","youku","vimeo"]},{"id":"wb-group-commerce","items":["Store","StoreCart","BuyNow","webmoney_button","webmoney_widget","skrill","ecwid","alipay","ideal_payment","pagseguro"]},{"id":"wb-group-maps","items":["yandex_maps","bing_maps","daum_maps","naver_maps","baidu_maps"]}];
wb_builder._loadPlugins = function() {
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/robokassa\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n<iframe width=\"300\" height=\"70\" style=\"border:0;width:300px;height:70px;overflow:hidden;background-color:transparent;\" allowTransparency=\"true\" src=\"https:\/\/auth.robokassa.ru\/Merchant\/PaymentForm\/{{content.buttont}}.if\"><\/iframe>\n{{\/isPublished}}\n{{#isPublished}}\n<script type=\"text\/javascript\" src=\"https:\/\/auth.robokassa.ru\/Merchant\/PaymentForm\/{{content.buttont}}.js?MerchantLogin={{content.merch_id}}&InvId=1&OutSum={{content.amount}}&Description={{content.groupId}}&Culture=ru&Encoding=utf-8&SignatureValue={{content.signature}}\"><\/script>\n{{\/isPublished}}\n";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('robokassa', {
    name: 'Robokassa',
    element: {
        minSize: {
            width: 50,
            height: 50
        },
        defaultSize: {
            width: 302,
            height: 66
        },
        resizable: true
    },
    propertyDialog: {
        noScroll: true,
        tabs: [{
            name: 'General',
            children: [
			{
                type: 'HorizontalLayout',
                children: [
					{
						type: 'Label',
						text: __('Shop identifer'),
						helpText: __('Shop identifer from Technical preferences')
					},
					{
						type: 'TextField',
						id: 'merch_id',
						css: { width: 90},
					},			
					{
						type: 'Label',
						text: __('Password #1'),
						helpText: __('Password from Technical preferences')
					},
					{
						type: 'TextField',
						id: 'merch_pass',
						css: { width: 90},
					},			
				]
            },
			{
                type: 'HorizontalLayout',
                children: [
					{
						type: 'Label',
						text: __('Order description'),
						helpText: __('Buying product description'),
						css: { width: 144}
					},
					{
						type: 'TextField',
						id: 'groupId',
						css: { width: 90},
					},
					{
						type: 'Label',
						text: __('Sum of order'),
						helpText: __('Amount to be transferred')
					},
					{
						type: 'TextField',
						id: 'amount',
						css: { width: 90},
					},				
				]
            },
			{type: 'VerticalLayout',
			children: [
				{
					type: 'VerticalLayout',
					children: [
						{type: 'Label',text: __('Button type')},
						{type: 'DropdownBox', id: 'buttont', options: [
							{id: 'FormM', name: 'FormM'},
							{id: 'FormMS', name: 'ForMS'},
							{id: 'FormS', name: 'FormS'},
							{id: 'FormSS', name: 'FormSS'},
							{id: 'FormV', name: 'FormV'},
						], css: {width: 140}} 
					]
				}
			]},
			]
        }]
    },
	
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;

                $.getScript('https://auth.robokassa.ru/Merchant/PaymentForm/FormM.js', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}                               
                });
				
			}		
		}
	},
	
    resizeTimeout: null,

    resizeAction: function(data, elem) {
        if (!this.resizeTimeout) {
            var self = this;
            this.resizeTimeout = setTimeout(function() {
                self.resizeTimeout = null;
                self.updateElement();
            }, 1000);
        }
    },
    openAction: function(fields, data, elem) {
        fields.groupId.setText(data.content.groupId);
        fields.amount.setText(data.content.amount);	
        fields.merch_pass.setText(data.content.merch_pass);
        fields.merch_id.setText(data.content.merch_id);
		itm = fields.buttont.getItemById(data.content.buttont);
		fields.buttont.selectItem(itm);		

    },
    applyAction: function(fields, data, elem) {
        data.content.groupId = fields.groupId.getText();
		data.content.amount = fields.amount.getText();
		data.content.merch_pass = fields.merch_pass.getText();
		data.content.merch_id = fields.merch_id.getText();    
		hash = data.content.merch_id+':'+data.content.amount+':1:'+data.content.merch_pass;
		data.content.signature = MD5(hash);
		itm = fields.buttont.getSelectedItem();
		data.content.buttont = itm.getOriginal().id;	
        if(itm.getOriginal().id == 'FormM'){
			this.setSize(300, 66);
		}
        if(itm.getOriginal().id == 'FormMS'){
			this.setSize(300, 66);
		}
        if(itm.getOriginal().id == 'FormS'){
			this.setSize(231, 48);
		}
        if(itm.getOriginal().id == 'FormSS'){
			this.setSize(243, 50);
		}
        if(itm.getOriginal().id == 'FormV'){
			this.setSize(170, 72);
		}

		},
    loadAction: function(data) {
        if (!data.content.groupId) data.content.groupId = 'Description';
        if (!data.content.amount) data.content.amount = '9.99';
        if (!data.content.goodscode) data.content.goodscode = '1';
        if (!data.content.merch_pass) data.content.merch_pass = 'eM7bblQ5QH4HTvLk2s3h';
        if (!data.content.merch_id) data.content.merch_id = 'a1l2f3o4n5s';
		if (!data.content.buttont) data.content.buttont = 'FormM';

		if (!data.content.signature) {
			hash = data.content.merch_id+':'+data.content.amount+':1:'+data.content.merch_pass;
			console.log(hash);
			data.content.signature = MD5(hash);			
		}	
    }
});

var MD5 = function (string) {

   function RotateLeft(lValue, iShiftBits) {
           return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));
   }

   function AddUnsigned(lX,lY) {
           var lX4,lY4,lX8,lY8,lResult;
           lX8 = (lX & 0x80000000);
           lY8 = (lY & 0x80000000);
           lX4 = (lX & 0x40000000);
           lY4 = (lY & 0x40000000);
           lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);
           if (lX4 & lY4) {
                   return (lResult ^ 0x80000000 ^ lX8 ^ lY8);
           }
           if (lX4 | lY4) {
                   if (lResult & 0x40000000) {
                           return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);
                   } else {
                           return (lResult ^ 0x40000000 ^ lX8 ^ lY8);
                   }
           } else {
                   return (lResult ^ lX8 ^ lY8);
           }
   }

   function F(x,y,z) { return (x & y) | ((~x) & z); }
   function G(x,y,z) { return (x & z) | (y & (~z)); }
   function H(x,y,z) { return (x ^ y ^ z); }
   function I(x,y,z) { return (y ^ (x | (~z))); }

   function FF(a,b,c,d,x,s,ac) {
           a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));
           return AddUnsigned(RotateLeft(a, s), b);
   };

   function GG(a,b,c,d,x,s,ac) {
           a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));
           return AddUnsigned(RotateLeft(a, s), b);
   };

   function HH(a,b,c,d,x,s,ac) {
           a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));
           return AddUnsigned(RotateLeft(a, s), b);
   };

   function II(a,b,c,d,x,s,ac) {
           a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));
           return AddUnsigned(RotateLeft(a, s), b);
   };

   function ConvertToWordArray(string) {
           var lWordCount;
           var lMessageLength = string.length;
           var lNumberOfWords_temp1=lMessageLength + 8;
           var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;
           var lNumberOfWords = (lNumberOfWords_temp2+1)*16;
           var lWordArray=Array(lNumberOfWords-1);
           var lBytePosition = 0;
           var lByteCount = 0;
           while ( lByteCount < lMessageLength ) {
                   lWordCount = (lByteCount-(lByteCount % 4))/4;
                   lBytePosition = (lByteCount % 4)*8;
                   lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)<<lBytePosition));
                   lByteCount++;
           }
           lWordCount = (lByteCount-(lByteCount % 4))/4;
           lBytePosition = (lByteCount % 4)*8;
           lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);
           lWordArray[lNumberOfWords-2] = lMessageLength<<3;
           lWordArray[lNumberOfWords-1] = lMessageLength>>>29;
           return lWordArray;
   };

   function WordToHex(lValue) {
           var WordToHexValue="",WordToHexValue_temp="",lByte,lCount;
           for (lCount = 0;lCount<=3;lCount++) {
                   lByte = (lValue>>>(lCount*8)) & 255;
                   WordToHexValue_temp = "0" + lByte.toString(16);
                   WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);
           }
           return WordToHexValue;
   };

   function Utf8Encode(string) {
           string = string.replace(/\r\n/g,"\n");
           var utftext = "";

           for (var n = 0; n < string.length; n++) {

                   var c = string.charCodeAt(n);

                   if (c < 128) {
                           utftext += String.fromCharCode(c);
                   }
                   else if((c > 127) && (c < 2048)) {
                           utftext += String.fromCharCode((c >> 6) | 192);
                           utftext += String.fromCharCode((c & 63) | 128);
                   }
                   else {
                           utftext += String.fromCharCode((c >> 12) | 224);
                           utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                           utftext += String.fromCharCode((c & 63) | 128);
                   }

           }

           return utftext;
   };

   var x=Array();
   var k,AA,BB,CC,DD,a,b,c,d;
   var S11=7, S12=12, S13=17, S14=22;
   var S21=5, S22=9 , S23=14, S24=20;
   var S31=4, S32=11, S33=16, S34=23;
   var S41=6, S42=10, S43=15, S44=21;

   string = Utf8Encode(string);

   x = ConvertToWordArray(string);

   a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;

   for (k=0;k<x.length;k+=16) {
           AA=a; BB=b; CC=c; DD=d;
           a=FF(a,b,c,d,x[k+0], S11,0xD76AA478);
           d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);
           c=FF(c,d,a,b,x[k+2], S13,0x242070DB);
           b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);
           a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);
           d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);
           c=FF(c,d,a,b,x[k+6], S13,0xA8304613);
           b=FF(b,c,d,a,x[k+7], S14,0xFD469501);
           a=FF(a,b,c,d,x[k+8], S11,0x698098D8);
           d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);
           c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);
           b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);
           a=FF(a,b,c,d,x[k+12],S11,0x6B901122);
           d=FF(d,a,b,c,x[k+13],S12,0xFD987193);
           c=FF(c,d,a,b,x[k+14],S13,0xA679438E);
           b=FF(b,c,d,a,x[k+15],S14,0x49B40821);
           a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);
           d=GG(d,a,b,c,x[k+6], S22,0xC040B340);
           c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);
           b=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);
           a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);
           d=GG(d,a,b,c,x[k+10],S22,0x2441453);
           c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);
           b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);
           a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);
           d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);
           c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);
           b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);
           a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);
           d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);
           c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);
           b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);
           a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);
           d=HH(d,a,b,c,x[k+8], S32,0x8771F681);
           c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);
           b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);
           a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);
           d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);
           c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);
           b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);
           a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);
           d=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);
           c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);
           b=HH(b,c,d,a,x[k+6], S34,0x4881D05);
           a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);
           d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);
           c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);
           b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);
           a=II(a,b,c,d,x[k+0], S41,0xF4292244);
           d=II(d,a,b,c,x[k+7], S42,0x432AFF97);
           c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);
           b=II(b,c,d,a,x[k+5], S44,0xFC93A039);
           a=II(a,b,c,d,x[k+12],S41,0x655B59C3);
           d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);
           c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);
           b=II(b,c,d,a,x[k+1], S44,0x85845DD1);
           a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);
           d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);
           c=II(c,d,a,b,x[k+6], S43,0xA3014314);
           b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);
           a=II(a,b,c,d,x[k+4], S41,0xF7537E82);
           d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);
           c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);
           b=II(b,c,d,a,x[k+9], S44,0xEB86D391);
           a=AddUnsigned(a,AA);
           b=AddUnsigned(b,BB);
           c=AddUnsigned(c,CC);
           d=AddUnsigned(d,DD);
   		}

   	var temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);

   	return temp.toLowerCase();
}});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/assist\/main.png";
PluginWrapper._config.template = "<FORM NAME=\"form1\" ACTION=\"{{content.assisturl}}\" METHOD=\"POST\">\n<INPUT TYPE=\"HIDDEN\" NAME=\"Merchant_ID\" VALUE=\"{{content.merchantid}}\">\n<INPUT TYPE=\"HIDDEN\" NAME=\"OrderNumber \" VALUE=\"{{content.ordernumber}}\">\n<INPUT TYPE=\"HIDDEN\" NAME=\"OrderAmount\" VALUE=\"{{content.orderamount}}\">\n<INPUT TYPE=\"HIDDEN\" NAME=\"OrderComment\" VALUE=\"{{content.ordercomment}}\">\n<INPUT TYPE=\"IMAGE\" WIDTH=\"100\" SRC=\"http:\/\/www.assist.ru\/images\/brand\/assist_main_w_subscr_monocrome.png\" ALT=\"Assist\">\n<\/FORM>";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('assist', {
	name: 'assist',
	element: {
		minSize: {width: 100, height: 35},
		defaultSize: {width: 100, height: 35},
		resizable: false
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{
                children: [{type: 'VerticalLayout', spacing: 15, children: [					
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant ID'), helpText:__("Identifer ftom Assist")},
						{type: 'TextField', id: 'merchantid'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Assist URL'), helpText:__("Assist URL for payments")},
						{type: 'TextField', id: 'assisturl'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Order number')},
						{type: 'TextField', id: 'ordernumber'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item amount'), helpText:__("Item price in RUB currency")},
						{type: 'TextField', id: 'orderamount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Order comment')},
						{type: 'TextField', id: 'ordercomment'}
					]}
			]}
		]}
		]
	},
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function() {
				self.resizeTimeout = null;
				self.updateElement();
			}, 1000);
		}
	},
	openAction: function(fields, data, elem) {
		fields.merchantid.setText(data.content.merchantid);
		fields.ordernumber.setText(data.content.ordernumber);
		fields.orderamount.setText(data.content.orderamount);
		fields.ordercomment.setText(data.content.ordercomment);
		fields.assisturl.setText(data.content.assisturl);
	},
	applyAction: function(fields, data, elem) {	
		data.content.merchantid = fields.merchantid.getText();
		data.content.ordernumber = fields.ordernumber.getText();
		data.content.orderamount = fields.orderamount.getText();
		data.content.ordercomment = fields.ordercomment.getText();
		data.content.assisturl = fields.assisturl.getText();
	},
	loadAction: function (data) {
		if (!data.content.merchantid) data.content.merchantid = '500001';
		if (!data.content.ordernumber) data.content.ordernumber = Date.now();
		if (!data.content.orderamount) data.content.orderamount = '67.76';
		if (!data.content.ordercomment) data.content.ordercomment = 'Donate';
		if (!data.content.assisturl) data.content.assisturl = 'https://test.paysecure.ru/pay/order.cfm';
	}
});});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/webmoney_button\/main.png";
PluginWrapper._config.template = "<form method=\"post\" action=\"https:\/\/merchant.wmtransfer.com\/lmi\/payment.asp\" class=\"webmoney\" data-gateway-id=\"Webmoney\">\n\t<input name=\"LMI_PAYMENT_AMOUNT\" value=\"{{content.amount}}\" type=\"hidden\"\/>\n\t<input name=\"LMI_PAYMENT_DESC_BASE64\" value=\"{{content.descriptionBase64}}\" type=\"hidden\"\/>\n\t<input name=\"LMI_PAYEE_PURSE\" value=\"{{content.purseId}}\" type=\"hidden\"\/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"LMI_SUCCESS_URL\" value=\"{callbackUrl}\"\/>\n\t<input type=\"hidden\" name=\"TRANSACTION_ID\" value=\"{transactionId}\"\/>\n\t{{\/content.store}}\n\t<input value=\"{{content.title}}\" type=\"submit\" class=\"wmbtn\"\n\t\t   style=\"{{#width}}width: {{width}}px;{{\/width}}\n\t\t\t\t  {{#height}}height: {{height}}px;{{\/height}}\n\t\t          {{#content.border}}border: {{content.border.style}} {{content.border.weight}}px {{content.border.color}};{{\/content.border}}\n\t\t\t\t  {{#content.background}}background: {{content.background}};{{\/content.background}}\n\t\t\t\t  padding: 6px 10px;\n\t\t\t\t  {{#content.fontColor}}color: {{content.fontColor}};{{\/content.fontColor}}\n\t\t\t\t  {{#content.fontSize}}font-size: {{content.fontSize}}px;{{\/content.fontSize}}\n\t\t\t\t  {{#content.fontFamily}}font-family: {{content.fontFamily}};{{\/content.fontFamily}}\"\/>\n<\/form>";
PluginWrapper._config.active = true;
wb_builder.registerPaymentGateway({
	name: 'WebMoney',
	id: 'webmoney_button',
	keyField: __('Purse ID'),
	keyFieldId: 'purseId',
	titleFieldId: 'title',
	nameFieldId: 'descriptionBase64|base64',
	priceFieldId: 'amount',
	currencyFieldId: 'currency'
});
PluginWrapper.registerPlugin('webmoney_button', {
	name: __('WM Button'),
	element: {
		minSize: {width: 25, height: 25},
		defaultSize: {width: 125, height: 36},
		resizable: true
	},
	propertyDialog: {
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Purse ID')},
							{type: 'TextField', id: 'purseId'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Button label'), helpText: __('Label name on submit button')},
							{type: 'TextField', id: 'title'}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [9, 3], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
							{type: 'TextField', id: 'description'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount'), helpText: __('In WM units defined by purse')},
							{type: 'TextField', id: 'amount'}
						]}
					]},
					{type: 'FlowLayout', spacing: 14, css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Border')},
							{type: 'BorderSelector', id: 'border'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Background')},
							{type: 'ColorSelector', id: 'background'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Font family')},
							{type: 'FontFamilySelector', id: 'fontFamily'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Font size')},
							{type: 'SizeSelector', id: 'fontSize'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Font color')},
							{type: 'ColorSelector', id: 'fontColor', noTransparent: true}
						]}
					]}
				]}
			]}
		]
	},

	pluginScoped: {
		base64Encode: function(data) {
			// discuss at: http://phpjs.org/functions/base64_encode/
			// original by: Tyler Akins (http://rumkin.com)
			// improved by: Bayron Guevara
			// improved by: Thunder.m
			// improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
			// improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
			// improved by: Rafał Kukawski (http://kukawski.pl)
			// bugfixed by: Pellentesque Malesuada

			var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
			var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = '', tmp_arr = [];
			if (!data) return data;

			data = unescape(encodeURIComponent(data));
			do {
				// pack three octets into four hexets
				o1 = data.charCodeAt(i++);
				o2 = data.charCodeAt(i++);
				o3 = data.charCodeAt(i++);
				bits = o1 << 16 | o2 << 8 | o3;
				h1 = bits >> 18 & 0x3f;
				h2 = bits >> 12 & 0x3f;
				h3 = bits >> 6 & 0x3f;
				h4 = bits & 0x3f;
				// use hexets to index into b64, and append result to encoded string
				tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
			} while (i < data.length);
			enc = tmp_arr.join('');
			var r = data.length % 3;
			return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);
		}
	},

	resizeAction: function(data, elem) {
		elem.find('.wmbtn').eq(0).css({width: data.width, height: data.height});
	},
	openAction: function(fields, data, elem) {
		fields.purseId.setText(data.content.purseId);
		fields.amount.setText(data.content.amount);
		fields.description.setText(data.content.description);
		fields.title.setText(data.content.title);
		fields.border.setValue(data.content.border);
		fields.background.setValue(data.content.background);
		fields.fontFamily.setValue(data.content.fontFamily);
		fields.fontSize.setValue(data.content.fontSize);
		fields.fontColor.setValue(data.content.fontColor);
	},
	applyAction: function(fields, data, elem) {
		data.content.purseId = fields.purseId.getText();
		data.content.amount = parseFloat(fields.amount.getText().replace(',', '.'));
		if (isNaN(data.content.amount)) data.content.amount = 1.0;
		data.content.description = fields.description.getText();
		data.content.descriptionBase64 = this.pluginScoped.base64Encode(data.content.description);
		data.content.title = fields.title.getText();
		data.content.border = fields.border.getValue();
		data.content.background = fields.background.getValue();
		data.content.fontFamily = fields.fontFamily.getValue();
		data.content.fontSize = fields.fontSize.getValue();
		data.content.fontColor = fields.fontColor.getValue();
	},
	loadAction: function(data) {
		if (!data.content.purseId) data.content.purseId = 'Z734186494803';
		if (!data.content.amount) data.content.amount = 1.0;
		if (!data.content.description) data.content.description = __('Donation to charitable fund');
		if (!data.content.descriptionBase64) data.content.descriptionBase64 = this.pluginScoped.base64Encode(data.content.description);
		if (!data.content.title) data.content.title = __('pay 1.00 WMZ');
		if (!data.content.border) data.content.border = {color: '#538ec1', style: 'solid', weight: 1};
		if (!data.content.background) data.content.background = '#a4cef4';
		if (!data.content.fontFamily) data.content.fontFamily = 'Arial,Helvetica,sans-serif';
		if (!data.content.fontSize) data.content.fontSize = '12';
		if (!data.content.fontColor) data.content.fontColor = '#ffffff';
	}

});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/vimeo\/main.png";
PluginWrapper._config.template = "<iframe id=\"{{id}}_vimeo\" src=\"http:\/\/player.vimeo.com\/video\/{{content.groupId}}?portrait={{content.portrait}}&title={{content.title}}&autoplay={{content.autoplay}}&color={{content.color}}\" width=\"{{width}}px\" height=\"{{height}}px\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen><\/iframe>\n";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('vimeo', {
	name: __('Vimeo'),
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 480, height: 300},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Vimeo ID or URL'),
						helpText: __('Vimeo video id or url with format https://vimeo.com/{video_id}')
					},
					{type: 'TextField', id: 'groupId'}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Portrait'), helpText: __('Show the user’s portrait on the video')},
						{type: 'RadioBox', id: 'portrait0', label: __('Yes'), group: 'portrait'},
						{type: 'RadioBox', id: 'portrait1', label: __('No'), group: 'portrait'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Title'), helpText: __('Show the title on the video.')},
						{type: 'RadioBox', id: 'title0', label: __('Yes'), group: 'title'},
						{type: 'RadioBox', id: 'title1', label: __('No'), group: 'title'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Autoplay'), helpText: __('Play the video automatically on load.')},
						{type: 'RadioBox', id: 'autoplay0', label: __('Yes'), group: 'autoplay'},
						{type: 'RadioBox', id: 'autoplay1', label: __('No'), group: 'autoplay'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Color'), helpText: __('Specify the color of the video controls.')},
						{type: 'ColorSelector', id: 'color'}
					]}
				]}
			]}
		]
	},
	resizeTimeout: null,
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function () {
				self.resizeTimeout = null;
				self.updateElement();
			}, 1000);
		}
	},
	openAction: function(fields, data, elem) {
		fields.groupId.setText(data.content.groupId);
		fields.portrait0.setValue(data.content.portrait === '1');
		fields.portrait1.setValue(data.content.portrait === '0');

		fields.title0.setValue(data.content.title === '1');
		fields.title1.setValue(data.content.title === '0');

		fields.autoplay0.setValue(data.content.autoplay === '1');
		fields.autoplay1.setValue(data.content.autoplay === '0');

		fields.color.setValue(data.content.color);

		fields.groupId.on('change', function() {
			var url = fields.groupId.getText();
			var regExp = /https:\/\/(www\.)?vimeo.com\/(\d+)($|\/)/;
			var match = url.match(regExp);
			if (match) {
				fields.groupId.setText(match[2]);
			}
		});
	},
	applyAction: function(fields, data, elem) {
		if (fields.portrait0.getValue()) data.content.portrait = '1';
		if (fields.portrait1.getValue()) data.content.portrait = '0';

		if (fields.title0.getValue()) data.content.title = '1';
		if (fields.title1.getValue()) data.content.title = '0';

		if (fields.autoplay0.getValue()) data.content.autoplay = '1';
		if (fields.autoplay1.getValue()) data.content.autoplay = '0';

		data.content.color = fields.color.getValue().replace('#', '');
		data.content.groupId = fields.groupId.getText();
	},
	loadAction: function (data) {
		if (!data.content.groupId) data.content.groupId = '7976699';
		if (!data.content.portrait) data.content.portrait = '1';
		if (!data.content.title) data.content.title = '1';
		if (!data.content.autoplay) data.content.autoplay = '0';
		if (!data.content.color) data.content.color = '#00adef';
	}
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/facebook_comment\/main.png";
PluginWrapper._config.template = "<div class=\"fb_comment_wrap\" style=\"width:{{width}}px; height:{{height}}px; overflow-y: auto; overflow-x: hidden;\">\n\t<div id=\"fb-root\"><\/div>\n\t{{#isPublished}}\n\t<script>\n\t\t(function (d, s, id) {\n\t\t\tvar js, fjs = d.getElementsByTagName(s)[0];\n\t\t\tif (d.getElementById(id))\n\t\t\t\treturn;\n\t\t\tjs = d.createElement(s);\n\t\t\tjs.id = id;\n\t\t\tjs.async = false;\n\t\t\tjs.src = \"\/\/connect.facebook.net\/en_US\/sdk.js#xfbml=1&version=v2.6\";\n\t\t\tfjs.parentNode.insertBefore(js, fjs);\n\t\t}(document, 'script', 'facebook-jssdk'));\n\t<\/script>\n\t{{\/isPublished}}\n\n\t<div class=\"fb-comments\" data-href=\"{{content.pageUrl}}\" data-order-by=\"{{content.order_by}}\" data-colorscheme=\"{{content.colorscheme}}\" data-numposts=\"{{content.postNumber}}\" data-width=\"{{width}}\"><\/div>\n<\/div>\n";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('facebook_comment', {
	name: 'FB comments',
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 500, height: 400},
		resizable: true,
		renderOnce: true,
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{
                children: [{type: 'VerticalLayout', spacing: 15, children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('URL to comment on'), helpText:__('The URL that this comments box is associated with')},
					{type: 'TextField', id: 'pageUrl'}
				]},
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Number of Posts'), helpText:__('The number of posts to display by default')},
					{type: 'TextField', id: 'postNumber'}
				]},
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Color Scheme'), helpText: __('The color scheme used by the comments plugin')},
					{type: 'DropdownBox', id: 'colorscheme', options: [
						{id: '#light', name: 'light', value: 'light'},
						{id: '#dark', name: 'dark', value: 'dark'},
					]}
				]},			
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Comments Sorting'), helpText: __('The order to use when displaying comments')},
					{type: 'DropdownBox', id: 'order_by', options: [
						{id: '#social', name: 'social', value: 'social'},
						{id: '#reverse_time', name: 'reverse_time', value: 'reverse_time'},
						{id: '#time', name: 'time', value: 'time'},
					]}
				]}			
			]}
		]}
		]
	},
pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (typeof func === 'function') {
				if (this.scriptReady) {
					func.call(inst);
				} else {
					this.listeners.push({inst: inst, func: func});
				}
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://connect.facebook.net/en_US/sdk.js', function() {
					FB.init({
						status     : true,
						xfbml      : true,
						version    : 'v2.6'
					});
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}					
				});
			}
		}
	},	
	resizeTimeout: null,
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function () {
				self.resizeTimeout = null;
				self.updateElement();
				elem.children('.fb_comment_wrap').css({height:data.height,width:data.width});
				elem.find('.fb-comments').attr({'data-width':data.width});
				FB.XFBML.parse(elem.get(0));
			}, 1000);
		}
	},
	openAction: function(fields, data, elem) {
		var itm;
		itm = fields.colorscheme.getItemById('#' + data.content.colorscheme);
		fields.colorscheme.selectItem(itm);
		itm = fields.order_by.getItemById('#' + data.content.order_by);
		fields.order_by.selectItem(itm);
		fields.pageUrl.setText(data.content.pageUrl);
		fields.postNumber.setText(data.content.postNumber);
	},
	applyAction: function(fields, data, elem) {
		var itm;
		itm = fields.colorscheme.getSelectedItem();
		data.content.colorscheme = itm.getOriginal().value;		
		itm = fields.order_by.getSelectedItem();
		data.content.order_by = itm.getOriginal().value;		
		data.content.pageUrl = fields.pageUrl.getText();
		data.content.postNumber = fields.postNumber.getText();
		elem.find('.fb-comments').attr({'data-width':data.width,'data-href':data.content.pageUrl,'data-numposts': data.content.postNumber,'data-colorscheme':data.content.colorscheme, 'data-order-by':data.content.order_by});

	},
	loadAction: function (data) {
		if (!data.content.pageUrl) data.content.pageUrl = 'https://developers.facebook.com/docs/plugins/comments#configurator';
		if (!data.content.postNumber) data.content.postNumber = '5';
		if (!data.content.colorscheme) data.content.colorscheme = 'light';
		if (!data.content.order_by) data.content.order_by = 'social';
		
	},
	loadedAction: function(data, elem) {
		this.pluginScoped.addListener(this, function() {
		});		
	}
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/zopim\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n\t<div class=\"alert alert-warning\" style=\"height:100%; text-align: center;\" role=\"alert\">Zopim settings<\/div>\n{{\/isPublished}}\n{{#isPublished}}\n{{\/isPublished}}\n\t<script type=\"text\/javascript\">\n\twindow.$zopim||(function(d,s){var z=$zopim=function(c){z._.push(c)},$=z.s=\n\td.createElement(s),e=d.getElementsByTagName(s)[0];z.set=function(o){z.set.\n\t_.push(o)};z._=[];z.set._=[];$.async=!0;$.setAttribute(\"charset\",\"utf-8\");\n\t$.src=\"\/\/v2.zopim.com\/?{{content.groupId}}\";z.t=+new Date;$.\n\ttype=\"text\/javascript\";e.parentNode.insertBefore($,e)})(document,\"script\");\n\t<\/script>";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('zopim', {
    name: 'Zopim',
    element: {
        minSize: {
            width: 50,
            height: 50
        },
        defaultSize: {
            width: 90,
            height: 60
        },
        resizable: true
    },
    propertyDialog: {
        noScroll: true,
        tabs: [{
            name: 'General',
            children: [{
                type: 'VerticalLayout',
                children: [{
                    type: 'Label',
                    text: __('Zopim Widget code or src ID'),
					helpText: __('Src ID from widget code "/v2.zopim.com/?SRC_ID" ')
                }, {
                    type: 'TextField',
                    id: 'groupId',
                    css: {
                        width: 488
                    }
                }]
            }, ]
        }]
    },
    resizeTimeout: null,

    resizeAction: function(data, elem) {
        if (!this.resizeTimeout) {
            var self = this;
            this.resizeTimeout = setTimeout(function() {
                self.resizeTimeout = null;
                self.updateElement();
            }, 1000);
        }
    },
    openAction: function(fields, data, elem) {
        fields.groupId.setText(data.content.groupId);
    },
    applyAction: function(fields, data, elem) {
        data.content.groupId = fields.groupId.getText();
		splitedcode = data.content.groupId.split('"');
		if(typeof splitedcode[7] === 'undefined') {
		}
		else {
			splitedcode = splitedcode[7].replace("//v2.zopim.com/?","");
			data.content.groupId = splitedcode;
		}

    },
    loadAction: function(data) {
     if (!data.content.groupId) data.content.groupId = '3ZrujMLJe9EBEPhlUDBaPk777ZV3f2cQ';	
    }
});});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/odnoklassniki_share\/main.png";
PluginWrapper._config.template = "<div id=\"{{id}}_ok_shareWidget\"><\/div>\n{{^isPublished}}\n<script type=\"text\/javascript\">\n\tif (window.OK) window.OK.CONNECT.insertShareWidget('{{id}}_ok_shareWidget', '{{content.url}}', \"{{{content.opts}}}\");\n<\/script>\n{{\/isPublished}}\n{{#isPublished}}\n<script type=\"text\/javascript\">\n\t\/\/ -- {{#firstOnPage}}\n\twindow.wb_ok_group_widget = {\n\t\tscriptLoaded: false,\n\t\tscriptReady: false,\n\t\tlisteners: [],\n\t\taddListener: function(inst, func) {\n\t\t\tif (this.scriptReady) {\n\t\t\t\tfunc.call(inst);\n\t\t\t} else {\n\t\t\t\tthis.listeners.push({inst: inst, func: func});\n\t\t\t}\n\t\t\tif (!this.scriptLoaded) {\n\t\t\t\tthis.scriptLoaded = true;\n\t\t\t\tvar self = this;\n\t\t\t\t$.getScript('https:\/\/connect.ok.ru\/connect.js', function() {\n\t\t\t\t\tself.scriptReady = true;\n\t\t\t\t\tfor (var i = 0; i < self.listeners.length; i++) {\n\t\t\t\t\t\tself.listeners[i].func.call(self.listeners[i].inst);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\t\/\/ -- {{\/firstOnPage}}\n\twindow.wb_ok_group_widget.addListener(this, function() {\n\t\tOK.CONNECT.insertShareWidget('{{id}}_ok_shareWidget', '{{content.url}}', \"{{{content.opts}}}\");\n\t});\n<\/script>\n{{\/isPublished}}\n";
PluginWrapper._config.active = true;

PluginWrapper.registerPlugin('odnoklassniki_share', {
	name: 'Klass',
	element: {
		minSize: {width: 25, height: 25},
		defaultSize: {width: 125, height: 25},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{name: 'General', children: [
				{type: 'VerticalLayout', children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('URL to Like (required)')},
							{type: 'TextField', id: 'url'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Size')},
							{type: 'DropdownBox', id: 'size', options: [
								{id: '#12', name: '12', value: 12},
								{id: '#20', name: '20', value: 20},
								{id: '#30', name: '30', value: 30},
								{id: '#45', name: '45', value: 45},
								{id: '#70', name: '70', value: 70},
								{id: '#100', name: '100', value: 100},
								{id: '#150', name: '150', value: 150}
							]}
						]}
					]},
					{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Style')},
							{type: 'DropdownBox', id: 'style', options: [
								{id: 'oval', name: __('Oval')},
								{id: 'rounded', name: __('Rounded')},
								{id: 'straight', name: __('Straight')}
							]}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Counter position')},
							{type: 'DropdownBox', id: 'counter', options: [
								{id: 'none', name: __('None'), value: null},
								{id: 'right', name: __('Right'), value: 'right'},
								{id: 'top', name: __('Top'), value: 'top'}
							]}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Text')},
							{type: 'DropdownBox', id: 'text', options: [
								{id: '#0', name: __('None'), value: 0},
								{id: '#1', name: __('Klass'), value: 1},
								{id: '#2', name: __('Share'), value: 2},
								{id: '#3', name: __('Like'), value: 3}
							]}
						]}
					]}
				]}
			]}
		]
	},
	
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://connect.ok.ru/connect.js', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		}
	},
	resizeTimeout: null,
	
	openAction: function(fields, data, elem) {
		var itm;
		fields.url.setText(data.content.url);
		itm = fields.size.getItemById('#' + data.content.size);
		fields.size.selectItem(itm);
		itm = fields.style.getItemById(data.content.style);
		fields.style.selectItem(itm);
		itm = fields.counter.getItemById(data.content.counter ? data.content.counter : 'none');
		fields.counter.selectItem(itm);
		itm = fields.text.getItemById('#' + data.content.text);
		fields.text.selectItem(itm);
	},
	applyAction: function(fields, data, elem) {
		var itm, width, height, rwidth, rheight;
		data.content.url = fields.url.getText();
		itm = fields.size.getSelectedItem();
		data.content.size = itm.getOriginal().value;
		itm = fields.style.getSelectedItem();
		data.content.style = itm.getOriginal().id;
		itm = fields.counter.getSelectedItem();
		data.content.counter = itm.getOriginal().value;
		itm = fields.text.getSelectedItem();
		data.content.text = itm.getOriginal().value;
		if (data.content.size === 150) {
			width = 145;
			height = 145;
			data.content.counter = null;
			data.content.text = 0;
		} else if (data.content.size === 100) {
			width = 100;
			height = 100;
			data.content.counter = null;
			data.content.text = 0;
		} else if (data.content.size === 70) {
			width = 70;
			height = 70;
			data.content.counter = null;
			data.content.text = 0;
		} else if (data.content.size === 45) {
			width = (data.content.counter ? (data.content.counter === 'top' ? 115 : 160) : 45);
			if (data.content.text === 3) {
				width += (data.content.counter === 'top' ? 55 : 125);
			} else if (data.content.text === 2) {
				width += (data.content.counter === 'top' ? 80 : 150);
			} else if (data.content.text === 1) {
				width += (data.content.counter === 'top' ? 10 : 80);
			}
			height = (data.content.counter === 'top' ? 100 : 50);
		} else if (data.content.size === 30) {
			width = (data.content.counter ? (data.content.counter === 'top' ? 85 : 115) : 30);
			if (data.content.text === 3) {
				width += (data.content.counter === 'top' ? 25 : 80);
			} else if (data.content.text === 2) {
				width += (data.content.counter === 'top' ? 40 : 95);
			} else if (data.content.text === 1) {
				width += (data.content.counter === 'top' ? 0 : 50);
			}
			height = (data.content.counter === 'top' ? 70 : 35);
		} else if (data.content.size === 20) {
			width = (data.content.counter ? (data.content.counter === 'top' ? 75 : 100) : 25);
			if (data.content.text === 3) {
				width += (data.content.counter === 'top' ? 20 : 70);
			} else if (data.content.text === 2) {
				width += (data.content.counter === 'top' ? 40 : 90);
			} else if (data.content.text === 1) {
				width += (data.content.counter === 'top' ? 0 : 45);
			}
			height = (data.content.counter === 'top' ? 65 : 30);
		} else { // 12
			width = (data.content.counter ? (data.content.counter === 'top' ? 70 : 85) : 20);
			if (data.content.text === 3) {
				width += (data.content.counter === 'top' ? 10 : 60);
			} else if (data.content.text === 2) {
				width += (data.content.counter === 'top' ? 25 : 75);
			} else if (data.content.text === 1) {
				width += (data.content.counter === 'top' ? 0 : 40);
			}
			height = (data.content.counter === 'top' ? 50 : 25);
		}
		data.content.opts = "{width:" + width
				+ ",height:" + height
				+ ",st:'" + data.content.style + "'"
				+ ",sz:" + data.content.size
				+ (data.content.counter ? ((data.content.counter === 'top') ? ",vt:'1'" : "") : ",nc:1")
				+ (data.content.text ? (",ck:" + data.content.text) : ",nt:1")
			+ "}";
		rwidth = width;
		rheight = height;
		if (data.content.counter === 'top' && data.content.size > 20) {
			rheight += data.content.size;
		} else if (data.content.size === 150) {
			rwidth += 8;
			rheight += 8;
		}
		
		this.setSize(rwidth, rheight);
	},
	loadAction: function(data) {
		if (!data.content.url) data.content.url = 'http://dev.ok.ru';
		if (!data.content.size) data.content.size = 12;
		if (!data.content.style) data.content.style = 'oval';
		if (!data.content.counter) data.content.counter = 'right';
		if (!data.content.text) data.content.text = 1;
		if (!data.content.opts) data.content.opts = "{width:125,height:25,st:'oval',sz:12,ck:1}";
	},
	loadedAction: function(data, elem) {
		this.pluginScoped.addListener(this, function() {
			window.OK.CONNECT.insertShareWidget(data.id + '_ok_shareWidget', data.content.url, data.content.opts);
		});
	}
	
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/skrill\/main.png";
PluginWrapper._config.template = "<form action=\"https:\/\/www.moneybookers.com\/app\/payment.pl\" method=\"post\" target=\"_blank\" class=\"skrill\" data-gateway-id=\"Skrill\">\n\t<input type=\"hidden\" name=\"pay_to_email\" value=\"{{content.email}}\"\/>\n\t<input type=\"hidden\" name=\"language\" value=\"EN\"\/>\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\"\/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\"\/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"status_url\" value=\"{callbackUrl}\"\/>\n\t<input type=\"hidden\" name=\"transaction_id\" value=\"{transactionId}\"\/>\n\t{{\/content.store}}\n\t<input type=\"hidden\" name=\"detail1_description\" value=\"{{content.description}}\"\/>\n\t<input type=\"hidden\" name=\"detail1_text\" value=\"{{content.text}}\"\/>\n\t<input type=\"submit\" class=\"buton\" value=\"{{content.ht_title}}\"\n\t\t   title=\"{{content.ht_title}}\"\n\t\t   style=\"{{#width}}width: {{width}}px;{{\/width}}\n\t\t          {{#height}}height: {{height}}px;{{\/height}}\n\t\t          {{#content.border}}border: {{content.border.style}} {{content.border.weight}}px {{content.border.color}};{{\/content.border}}\n\t\t          {{#content.background}}background: {{content.background}};{{\/content.background}}\n\t\t          padding: 6px 10px;\n\t\t          {{#content.fontColor}}color: {{content.fontColor}};{{\/content.fontColor}}\n\t\t          {{#content.fontSize}}font-size: {{content.fontSize}}px;{{\/content.fontSize}}\n\t\t          {{#content.fontFamily}}font-family: {{content.fontFamily}};{{\/content.fontFamily}}\"\n\t\/>\n<\/form>";
PluginWrapper._config.active = true;
wb_builder.registerPaymentGateway({
	name: __('Skrill'),
	id: 'skrill',
	keyField: __('Email'),
	keyFieldId: 'email',
	titleFieldId: 'ht_title',
	nameFieldId: 'text,description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency'
});
PluginWrapper.registerPlugin('skrill', {
	name: __('Skrill'),
	element: {
		minSize: {width: 100, height: 30},
		defaultSize: {width: 160, height: 40}
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Email'), helpText: __('The email address of your Skrill')},
						{type: 'TextField', id: 'email'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Button label'), helpText: __('Label name on submit button')},
						{type: 'TextField', id: 'ht_title'}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
					{type: 'TextField', id: 'description'}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Detailed text')},
						{type: 'TextField', id: 'text'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred')},
						{type: 'TextField', id: 'amount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency'), helpText: __('Currency of the amount')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: '#EUR', name: 'EUR', value: 'EUR'},
							{id: '#USD', name: 'USD', value: 'USD'},
							{id: '#GBP', name: 'GBP', value: 'GBP'},
							{id: '#HKD', name: 'HKD', value: 'HKD'},
							{id: '#SGD', name: 'SGD', value: 'SGD'},
							{id: '#JPY', name: 'JPY', value: 'JPY'},
							{id: '#CAD', name: 'CAD', value: 'CAD'},
							{id: '#AUD', name: 'AUD', value: 'AUD'},
							{id: '#CHF', name: 'CHF', value: 'CHF'},
							{id: '#DKK', name: 'DKK', value: 'DKK'},
							{id: '#SEK', name: 'SEK', value: 'SEK'},
							{id: '#NOK', name: 'NOK', value: 'NOK'},
							{id: '#ILS', name: 'ILS', value: 'ILS'},
							{id: '#MYR', name: 'MYR', value: 'MYR'},
							{id: '#NZD', name: 'NZD', value: 'NZD'},
							{id: '#TRY', name: 'TRY', value: 'TRY'},
							{id: '#AED', name: 'AED', value: 'AED'},
							{id: '#MAD', name: 'MAD', value: 'MAD'},
							{id: '#QAR', name: 'QAR', value: 'QAR'},
							{id: '#SAR', name: 'SAR', value: 'SAR'},
							{id: '#TWD', name: 'TWD', value: 'TWD'},
							{id: '#THB', name: 'THB', value: 'THB'},
							{id: '#CZK', name: 'CZK', value: 'CZK'},
							{id: '#HUF', name: 'HUF', value: 'HUF'},
							{id: '#SKK', name: 'SKK', value: 'SKK'},
							{id: '#BGN', name: 'BGN', value: 'BGN'},
							{id: '#PLN', name: 'PLN', value: 'PLN'},
							{id: '#ISK', name: 'ISK', value: 'ISK'},
							{id: '#INR', name: 'INR', value: 'INR'},
							{id: '#KRW', name: 'KRW', value: 'KRW'},
							{id: '#ZAR', name: 'ZAR', value: 'ZAR'},
							{id: '#RON', name: 'RON', value: 'RON'},
							{id: '#HRK', name: 'HRK', value: 'HRK'},
							{id: '#JOD', name: 'JOD', value: 'JOD'},
							{id: '#OMR', name: 'OMR', value: 'OMR'},
							{id: '#RSD', name: 'RSD', value: 'RSD'},
							{id: '#TND', name: 'TND', value: 'TND'}
						]}
					]}
				]},
				{type: 'FlowLayout', spacing: 15, css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Border')},
						{type: 'BorderSelector', id: 'border'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Background')},
						{type: 'ColorSelector', id: 'background'}
					]},
					{type: 'VerticalLayout', css: {width: 150}, children: [
						{type: 'Label', text: __('Font')},
						{type: 'FontFamilySelector', id: 'fontFamily', noFixedWidth: true}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Size')},
						{type: 'SizeSelector', id: 'fontSize'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Color')},
						{type: 'ColorSelector', id: 'fontColor', noTransparent: true}
					]}
				]}
			]}
		]
	},
	resizeTimeout: null,

	resizeAction: function(data, elem) {
		elem.find('.buton').eq(0).css({width: data.width, height: data.height});
	},
	openAction: function(fields, data, elem) {
		var itm;
		itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		fields.amount.setText(data.content.amount);
		fields.ht_title.setText(data.content.ht_title);
		fields.description.setText(data.content.description);
		fields.text.setText(data.content.text);
		fields.email.setText(data.content.email);
		fields.border.setValue(data.content.border);
		fields.background.setValue(data.content.background);
		fields.fontFamily.setValue(data.content.fontFamily);
		fields.fontSize.setValue(data.content.fontSize);
		fields.fontColor.setValue(data.content.fontColor);
	},
	applyAction: function(fields, data, elem) {
		var itm;
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().value;
		data.content.amount = fields.amount.getText();
		data.content.ht_title = fields.ht_title.getText();
		data.content.description = fields.description.getText();
		data.content.text = fields.text.getText();
		data.content.email = fields.email.getText();
		data.content.border = fields.border.getValue();
		data.content.background = fields.background.getValue();
		data.content.fontFamily = fields.fontFamily.getValue();
		data.content.fontSize = fields.fontSize.getValue();
		data.content.fontColor = fields.fontColor.getValue();
	},
	loadAction: function(data) {
		if (!data.content.amount) data.content.amount = '9.99';
		if (!data.content.ht_title) data.content.ht_title = __('Pay %s via Skrill').replace('%s', data.content.amount + ' €');
		if (!data.content.currency) data.content.currency = 'EUR';
		if (!data.content.text) data.content.text = __('Skrill payment text');
		if (!data.content.description) data.content.description = __('Product description');
		if (!data.content.email) data.content.email = '';
		if (!data.content.border) data.content.border = {color: '#fff', style: 'solid', weight: 2};
		if (!data.content.background) data.content.background = '#811E68';
		if (!data.content.fontFamily) data.content.fontFamily = 'Trebuchet MS,sans-serif';
		if (!data.content.fontSize) data.content.fontSize = '15';
		if (!data.content.fontColor) data.content.fontColor = '#fff';
	}
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/instagram\/main.png";
PluginWrapper._config.template = "<style>\r\n#{{id}}_instafeed{\r\n list-style:none;\r\n float: left;\r\n margin-top: -10px;\r\n margin-left: -50px;\r\n margin-right: -10px;\r\n}\r\n\r\n#{{id}}_instafeed li{\r\n float:left;\r\n width: {{content.imgSize}}px;\r\n height: {{content.imgSize}}px;\r\n margin:{{content.imgMargin}}px;\r\n}\r\n\r\n.{{id}}_instagram_img {\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n\r\n<\/style>\r\n\r\n<ul id=\"{{id}}_instafeed\"><\/ul>\r\n<script>\r\n  $.ajax({\r\n  \turl: 'https:\/\/api.instagram.com\/v1\/users\/self\/media\/recent',\r\n  \tdataType: 'jsonp',\r\n  \ttype: 'GET',\r\n    resolution: 'standard_resolution',\r\n  \tdata: {access_token: '{{content.token}}', count: {{content.images}}},\r\n    success: function(data2){\r\n  \t\tfor(x in data2.data){\r\n  \t\t\t$('#{{id}}_instafeed').append('<li><a href=\"'+data2.data[x].link+'\" target=\"_blank\" ><img src=\"'+data2.data[x].images.standard_resolution.url+'\" class=\"{{id}}_instagram_img\"><a\/><\/li>');\r\n  \t\t}\r\n  \t}\r\n});\r\n<\/script>\r\n";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('instagram', {
	name: 'Instagram',
	element: {
		minSize: {width: 140, height: 140},
		defaultSize: {width: 910, height: 600},
		resizable: true,
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [{type: 'VerticalLayout', spacing: 20, children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Access token'), helpText: __('Get Access Token from %s').replace('%s', '<a href="https://www.instagram.com/developer/authentication/" target="_blank">https://www.instagram.com/\ndeveloper/authentication/</a>')},
					{type: 'TextField', id: 'token'}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Number of items to show')},
						{type: 'SizeSelector', id: 'images', max:20}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Image Size')},
						{type: 'SizeSelector', id: 'imgSize', max:640, min:150}
					]}
				]},
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Gallery padding (px)')},
					{type: 'SizeSelector', id: 'imgMargin', min:0}
				]}
			]}
		]}
		]
	},

pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (typeof func === 'function') {
				if (this.scriptReady) {
					func.call(inst);
				} else {
					this.listeners.push({inst: inst, func: func});
				}
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;

			}
		}
	},

	resizeTimeout: null,

	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function () {
				self.resizeTimeout = null;
				self.updateElement();
			}, 1000);
		}
	},

	openAction: function(fields, data, elem) {
		fields.token.setText(data.content.token);
		fields.images.setValue(data.content.images);
		fields.imgSize.setValue(data.content.imgSize);
		fields.imgMargin.setValue(data.content.imgMargin);
	},

	applyAction: function(fields, data, elem) {
		data.content.token = fields.token.getText();
		data.content.images = fields.images.getValue();
		data.content.imgSize = fields.imgSize.getValue();
		var imgs = data.content.images;
		var imgSize = data.content.imgSize;
		data.content.imgMargin = fields.imgMargin.getValue();

		//MAX 20 PICTURES
		if(imgs > 20) {
			data.content.images = 20;
		} else if (imgs < 0) {
			data.content.images = 0;
		}

		//MAX 640x640 pixels
		if(imgSize > 640) {
			data.content.imgSize = 640;
		} else if (imgSize < 150) {
			data.content.imgSize = 150;
		}
	},

	loadAction: function (data) {
		if (!data.content.token) data.content.token = '4270477368.8d84514.b5ddb07ee13f40cb89915731e81d0463';
		if (!data.content.images) data.content.images = '6';
		if (!data.content.imgSize) data.content.imgSize = '290';
		if (!data.content.imgMargin) data.content.imgMargin = '10';
	}
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/webmoney_widget\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n<div class=\"alert alert-warning\">{{tr.preview_not_available}}<\/div>\n{{\/isPublished}}\n{{#isPublished}}\n<script id=\"wm-script\" type=\"text\/javascript\"\n\t\tsrc=\"\/\/merchant.webmoney.ru\/conf\/lib\/wm-simple-x20.min.js?lang=en&amp;wmid={{content.wmId}}&amp;purse={{content.purseId}}&amp;key={{content.key}}&amp;amount={{content.amount}}&amp;desc={{content.descriptionUrlEnc}}\"><\/script>\n{{\/isPublished}}";
PluginWrapper._config.active = true;

PluginWrapper.registerPlugin('webmoney_widget', {
	name: __('WM Widget'),
	element: {
		minSize: {width: 25, height: 25},
		defaultSize: {width: 450, height: 224},
		resizable: false
	},
	propertyDialog: {
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('WebMoney ID')},
							{type: 'TextField', id: 'wmId'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Purse ID')},
							{type: 'TextField', id: 'purseId'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Key'), helpText: __('"Secret Key X20" field from your purse settings page')},
							{type: 'TextField', id: 'key'}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [9, 3], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Description')},
							{type: 'TextField', id: 'description'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount'), helpText: __('In WM units defined by purse')},
							{type: 'TextField', id: 'amount'}
						]}
					]}
				]}
			]}
		]
	},
	
	pluginScoped: {
		urlEncode: function (str) {
			//       discuss at: http://phpjs.org/functions/urlencode/
			//      original by: Philip Peterson
			//      improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
			//      improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
			//      improved by: Brett Zamir (http://brett-zamir.me)
			//      improved by: Lars Fischer
			//         input by: AJ
			//         input by: travc
			//         input by: Brett Zamir (http://brett-zamir.me)
			//         input by: Ratheous
			//      bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
			//      bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
			//      bugfixed by: Joris
			// reimplemented by: Brett Zamir (http://brett-zamir.me)
			// reimplemented by: Brett Zamir (http://brett-zamir.me)

			str = (str + '').toString();
			return window.encodeURIComponent(str)
					.replace(/!/g, '%21')
					.replace(/'/g, '%27')
					.replace(/\(/g, '%28')
					.replace(/\)/g, '%29')
					.replace(/\*/g, '%2A')
					.replace(/%20/g, '+');
		}
	},
	
	resizeAction: function(data, elem) {
		elem.find('.wmbtn').eq(0).css({width: data.width, height: data.height});
	},
	openAction: function(fields, data, elem) {
		fields.wmId.setText(data.content.wmId);
		fields.purseId.setText(data.content.purseId);
		fields.key.setText(data.content.key);
		fields.amount.setText(data.content.amount);
		fields.description.setText(data.content.description);
	},
	applyAction: function(fields, data, elem) {
		data.content.wmId = fields.wmId.getText();
		data.content.purseId = fields.purseId.getText();
		data.content.key = fields.key.getText();
		data.content.amount = parseFloat(fields.amount.getText().replace(',', '.'));
		if (isNaN(data.content.amount)) data.content.amount = 1.0;
		data.content.description = fields.description.getText();
		data.content.descriptionUrlEnc = this.pluginScoped.urlEncode(data.content.description);
	},
	loadAction: function(data) {
		if (!data.content.wmId) data.content.wmId = '368416627865';
		if (!data.content.purseId) data.content.purseId = 'Z734186494803';
		if (!data.content.key) data.content.key = '170093247';
		if (!data.content.amount) data.content.amount = 1.0;
		if (!data.content.description) data.content.description = __('Donation to charitable fund');
		if (!data.content.descriptionUrlEnc) data.content.descriptionUrlEnc = this.pluginScoped.urlEncode(data.content.description);
		data.tr = {preview_not_available: __('Preview not available')};
	}
	
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/alipay\/main.png";
PluginWrapper._config.template = "<form action=\"https:\/\/mapi.alipay.com\/gateway.do\" method=\"get\" target=\"_blank\" class=\"alipay\" data-gateway-id=\"AliPay\"{{#content.store}} data-onload=\"alipay_onload\" data-onsubmit=\"alipay_onsubmit\" data-sc=\"{{content.security_code}}\"{{\/content.store}}>\n\t<input type=\"hidden\" name=\"_input_charset\" value=\"utf-8\" \/>\n\t<input type=\"hidden\" name=\"apInitiateService_run\" value=\"1\" \/>\n\t<input type=\"hidden\" name=\"body\" value=\"{{content.description}}\" \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"notify_url\" value=\"{callbackUrl}\"\/>\n\t<input type=\"hidden\" name=\"out_trade_no\" value=\"{transactionId}\"\/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t<input type=\"hidden\" name=\"notify_url\" value=\"about:blank\"\/>\n\t<input type=\"hidden\" name=\"out_trade_no\" value=\"{{content.trade_no}}\"\/>\n\t{{\/content.store}}\n\t<input type=\"hidden\" name=\"partner\" value=\"{{content.partner}}\" \/>\n\t<input type=\"hidden\" name=\"service\" value=\"create_forex_trade\" \/>\n\t<input type=\"hidden\" name=\"subject\" value=\"{{content.description}}\" \/>\n\t<input type=\"hidden\" name=\"total_fee\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"sign\" value=\"{{content.sign}}\" \/>\n\t<input type=\"hidden\" name=\"sign_type\" value=\"MD5\" \/>\n\t<input type=\"submit\" class=\"btn btn-info\" value=\"{{content.label}}\"\n\t\t   title=\"{{content.label}}\"\n\t\t   style=\"{{#width}}width: {{width}}px;{{\/width}}\n\t\t          {{#height}}height: {{height}}px;{{\/height}}\n\t\t          {{#content.border}}border: {{content.border.style}} {{content.border.weight}}px {{content.border.color}};{{\/content.border}}\n\t\t          {{#content.background}}background: {{content.background}};{{\/content.background}}\n\t\t          padding: 6px 10px;\n\t\t          {{#content.fontColor}}color: {{content.fontColor}};{{\/content.fontColor}}\n\t\t          {{#content.fontSize}}font-size: {{content.fontSize}}px;{{\/content.fontSize}}\n\t\t          {{#content.fontFamily}}font-family: {{content.fontFamily}};{{\/content.fontFamily}}\"\n\t\/>\n<\/form>\n{{#content.store}}\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar alipay_onsubmit = function(form) {\n\t\t\tif (('wbMD5' in window) && (typeof window.wbMD5 == 'function') && window.alipay_sc) {\n\t\t\t\tvar elems = form.elements;\n\t\t\t\tvar sign = '_input_charset=utf-8&apInitiateService_run=1&body='+ elems['subject'].value + '&currency=' + elems['currency'].value + '&notify_url=' + elems['notify_url'].value + '&out_trade_no=' + elems['out_trade_no'].value + '&partner=' + elems['partner'].value + '&service=create_forex_trade&subject=' + elems['subject'].value + '&total_fee=' + elems['total_fee'].value + window.alipay_sc;\n\t\t\t\t$('input[name=\"sign\"]', $(form)).val(wbMD5(sign));\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar alipay_onload = function(form) {\n\t\t\tform = $(form);\n\t\t\twindow.alipay_sc = form.attr('data-sc');\n\t\t\tform.removeAttr('data-sc');\n\t\t}\n\t\twindow.alipay_onsubmit = alipay_onsubmit;\n\t\twindow.alipay_onload = alipay_onload;\n\t})();\n<\/script>\n{{\/content.store}}";
PluginWrapper._config.active = true;
wb_builder.registerPaymentGateway({
	name: __('Alipay'),
	id: 'alipay',
	keyField: __('Partner'),
	keyFieldId: 'partner',
	keyField2: __('Security code'),
	keyField2Id: 'security_code',
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency'
});
PluginWrapper.registerPlugin('alipay', {
	name: __('Alipay'),
	element: {
		minSize: {width: 100, height: 30},
		defaultSize: {width: 160, height: 40},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'description'}
					]},

					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred. Range 0.01 ~ 1000000.00')},
						{type: 'TextField', id: 'amount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency'), helpText: __('Currency of the amount')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: '#GBP', name: 'GBP', value: 'GBP'},
							{id: '#HKD', name: 'HKD', value: 'HKD'},
							{id: '#USD', name: 'USD', value: 'USD'},
							{id: '#CHF', name: 'CHF', value: 'CHF'},
							{id: '#SGD', name: 'SGD', value: 'SGD'},
							{id: '#SEK', name: 'SEK', value: 'SEK'},
							{id: '#DKK', name: 'DKK', value: 'DKK'},
							{id: '#NOK', name: 'NOK', value: 'NOK'},
							{id: '#JPY', name: 'JPY', value: 'JPY'},
							{id: '#CAD', name: 'CAD', value: 'CAD'},
							{id: '#AUD', name: 'AUD', value: 'AUD'},
							{id: '#EUR', name: 'EUR', value: 'EUR'},
							{id: '#NZD', name: 'NZD', value: 'NZD'},
							{id: '#RUB', name: 'RUB', value: 'RUB'},
							{id: '#MOP', name: 'MOP', value: 'MOP'}
						]}
					]}
				]},
				{type: 'HorizontalLayout',css: {marginTop: 15}, columnWeights: [6, 6], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Partner'), helpText: __('The ID of the partner on the Alipay system')},
						{type: 'TextField', id: 'partner'}
					]},									
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Security code'), helpText: __('Security key which we already offered you')},
						{type: 'TextField', id: 'security'}
					]},									
				]},
				{type: 'VerticalLayout',css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Button label'), helpText: __('Label name on submit button')},
						{type: 'TextField', id: 'label'}
					]},									
				]},
				{type: 'FlowLayout', spacing: 15, css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Border')},
						{type: 'BorderSelector', id: 'border'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Background')},
						{type: 'ColorSelector', id: 'background'}
					]},
					{type: 'VerticalLayout', css: {width: 150}, children: [
						{type: 'Label', text: __('Font')},
						{type: 'FontFamilySelector', id: 'fontFamily', noFixedWidth: true}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Size')},
						{type: 'SizeSelector', id: 'fontSize'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Color')},
						{type: 'ColorSelector', id: 'fontColor', noTransparent: true}
					]}
				]}
			]}
		]
	},
	resizeAction: function(data, elem) {
		elem.find('.btn').eq(0).css({width: data.width, height: data.height});
	},
	openAction: function(fields, data, elem) {
		fields.description.setText(data.content.description);
		fields.label.setText(data.content.label);
		fields.security.setText(data.content.security);
		fields.partner.setText(data.content.partner);
		fields.amount.setText(data.content.amount);
		var itm;
		itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		fields.border.setValue(data.content.border);
		fields.background.setValue(data.content.background);
		fields.fontFamily.setValue(data.content.fontFamily);
		fields.fontSize.setValue(data.content.fontSize);
		fields.fontColor.setValue(data.content.fontColor);
	},
	applyAction: function(fields, data, elem) {
		data.content.description = fields.description.getText();
		data.content.label = fields.label.getText();
		data.content.security = fields.security.getText();
		data.content.partner = fields.partner.getText();
		data.content.amount = fields.amount.getText();
		data.content.trade_no = this.StringHash.generate(17);
		var itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().value;
		data.content.sign = '_input_charset=utf-8&apInitiateService_run=1&body='+ data.content.description + '&currency=' + data.content.currency + '&notify_url=' + 'about:blank' + '&out_trade_no=' + data.content.trade_no + '&partner=' + data.content.partner + '&service=create_forex_trade&subject=' + data.content.description + '&total_fee=' + data.content.amount + data.content.security;
		data.content.sign = this.MD5(data.content.sign);
		data.content.border = fields.border.getValue();
		data.content.background = fields.background.getValue();
		data.content.fontFamily = fields.fontFamily.getValue();
		data.content.fontSize = fields.fontSize.getValue();
		data.content.fontColor = fields.fontColor.getValue();
	},
	loadAction: function(data) {
		if (!data.content.description) data.content.description = __('Product description');
		if (!data.content.label) data.content.label = 'Pay via Alipay';
		if (!data.content.security) data.content.security = '';
		if (!data.content.amount) data.content.amount = '10';
		if (!data.content.trade_no) data.content.trade_no = '';
		if (!data.content.currency) data.content.currency = 'USD';
		if (!data.content.border) data.content.border = {color: '#fff', style: 'solid', weight: 2};
		if (!data.content.background) data.content.background = '#5bc0de';
		if (!data.content.fontFamily) data.content.fontFamily = 'Trebuchet MS,sans-serif';
		if (!data.content.fontSize) data.content.fontSize = '15';
		if (!data.content.fontColor) data.content.fontColor = '#fff';
		if (!data.content.sign) data.content.sign = '';
		if (!data.content.partner) data.content.partner = '';
	},
	MD5: function(string) {

		function RotateLeft(lValue, iShiftBits) {
				return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));
		}

		function AddUnsigned(lX,lY) {
				var lX4,lY4,lX8,lY8,lResult;
				lX8 = (lX & 0x80000000);
				lY8 = (lY & 0x80000000);
				lX4 = (lX & 0x40000000);
				lY4 = (lY & 0x40000000);
				lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);
				if (lX4 & lY4) {
						return (lResult ^ 0x80000000 ^ lX8 ^ lY8);
				}
				if (lX4 | lY4) {
						if (lResult & 0x40000000) {
								return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);
						} else {
								return (lResult ^ 0x40000000 ^ lX8 ^ lY8);
						}
				} else {
						return (lResult ^ lX8 ^ lY8);
				}
		}

		function F(x,y,z) { return (x & y) | ((~x) & z); }
		function G(x,y,z) { return (x & z) | (y & (~z)); }
		function H(x,y,z) { return (x ^ y ^ z); }
		function I(x,y,z) { return (y ^ (x | (~z))); }

		function FF(a,b,c,d,x,s,ac) {
				a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));
				return AddUnsigned(RotateLeft(a, s), b);
		};

		function GG(a,b,c,d,x,s,ac) {
				a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));
				return AddUnsigned(RotateLeft(a, s), b);
		};

		function HH(a,b,c,d,x,s,ac) {
				a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));
				return AddUnsigned(RotateLeft(a, s), b);
		};

		function II(a,b,c,d,x,s,ac) {
				a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));
				return AddUnsigned(RotateLeft(a, s), b);
		};

		function ConvertToWordArray(string) {
				var lWordCount;
				var lMessageLength = string.length;
				var lNumberOfWords_temp1=lMessageLength + 8;
				var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;
				var lNumberOfWords = (lNumberOfWords_temp2+1)*16;
				var lWordArray=Array(lNumberOfWords-1);
				var lBytePosition = 0;
				var lByteCount = 0;
				while ( lByteCount < lMessageLength ) {
						lWordCount = (lByteCount-(lByteCount % 4))/4;
						lBytePosition = (lByteCount % 4)*8;
						lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)<<lBytePosition));
						lByteCount++;
				}
				lWordCount = (lByteCount-(lByteCount % 4))/4;
				lBytePosition = (lByteCount % 4)*8;
				lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);
				lWordArray[lNumberOfWords-2] = lMessageLength<<3;
				lWordArray[lNumberOfWords-1] = lMessageLength>>>29;
				return lWordArray;
		};

		function WordToHex(lValue) {
				var WordToHexValue="",WordToHexValue_temp="",lByte,lCount;
				for (lCount = 0;lCount<=3;lCount++) {
						lByte = (lValue>>>(lCount*8)) & 255;
						WordToHexValue_temp = "0" + lByte.toString(16);
						WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);
				}
				return WordToHexValue;
		};

		function Utf8Encode(string) {
				string = string.replace(/\r\n/g,"\n");
				var utftext = "";

				for (var n = 0; n < string.length; n++) {

						var c = string.charCodeAt(n);

						if (c < 128) {
								utftext += String.fromCharCode(c);
						}
						else if((c > 127) && (c < 2048)) {
								utftext += String.fromCharCode((c >> 6) | 192);
								utftext += String.fromCharCode((c & 63) | 128);
						}
						else {
								utftext += String.fromCharCode((c >> 12) | 224);
								utftext += String.fromCharCode(((c >> 6) & 63) | 128);
								utftext += String.fromCharCode((c & 63) | 128);
						}

				}

				return utftext;
		};

		var x=Array();
		var k,AA,BB,CC,DD,a,b,c,d;
		var S11=7, S12=12, S13=17, S14=22;
		var S21=5, S22=9 , S23=14, S24=20;
		var S31=4, S32=11, S33=16, S34=23;
		var S41=6, S42=10, S43=15, S44=21;

		string = Utf8Encode(string);

		x = ConvertToWordArray(string);

		a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;

		for (k=0;k<x.length;k+=16) {
				AA=a; BB=b; CC=c; DD=d;
				a=FF(a,b,c,d,x[k+0], S11,0xD76AA478);
				d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);
				c=FF(c,d,a,b,x[k+2], S13,0x242070DB);
				b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);
				a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);
				d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);
				c=FF(c,d,a,b,x[k+6], S13,0xA8304613);
				b=FF(b,c,d,a,x[k+7], S14,0xFD469501);
				a=FF(a,b,c,d,x[k+8], S11,0x698098D8);
				d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);
				c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);
				b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);
				a=FF(a,b,c,d,x[k+12],S11,0x6B901122);
				d=FF(d,a,b,c,x[k+13],S12,0xFD987193);
				c=FF(c,d,a,b,x[k+14],S13,0xA679438E);
				b=FF(b,c,d,a,x[k+15],S14,0x49B40821);
				a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);
				d=GG(d,a,b,c,x[k+6], S22,0xC040B340);
				c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);
				b=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);
				a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);
				d=GG(d,a,b,c,x[k+10],S22,0x2441453);
				c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);
				b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);
				a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);
				d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);
				c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);
				b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);
				a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);
				d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);
				c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);
				b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);
				a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);
				d=HH(d,a,b,c,x[k+8], S32,0x8771F681);
				c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);
				b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);
				a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);
				d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);
				c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);
				b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);
				a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);
				d=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);
				c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);
				b=HH(b,c,d,a,x[k+6], S34,0x4881D05);
				a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);
				d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);
				c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);
				b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);
				a=II(a,b,c,d,x[k+0], S41,0xF4292244);
				d=II(d,a,b,c,x[k+7], S42,0x432AFF97);
				c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);
				b=II(b,c,d,a,x[k+5], S44,0xFC93A039);
				a=II(a,b,c,d,x[k+12],S41,0x655B59C3);
				d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);
				c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);
				b=II(b,c,d,a,x[k+1], S44,0x85845DD1);
				a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);
				d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);
				c=II(c,d,a,b,x[k+6], S43,0xA3014314);
				b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);
				a=II(a,b,c,d,x[k+4], S41,0xF7537E82);
				d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);
				c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);
				b=II(b,c,d,a,x[k+9], S44,0xEB86D391);
				a=AddUnsigned(a,AA);
				b=AddUnsigned(b,BB);
				c=AddUnsigned(c,CC);
				d=AddUnsigned(d,DD);
			}

		var temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);

		return temp.toLowerCase();
	},
	StringHash: {
		_chars: ['A','B','C','D','E','F','G','H','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Z','1','2','3','4','5','6','7','8','9','0'],
		_getRandChar: function() {
			return this._chars[Math.floor(Math.random() * this._chars.length)];
		},
		generate: function(len) {
			if (!len) len = 17;
			var str = '';
			for (var i=0; i < len; i++) {
				str += this._getRandChar();
			}
			return str;
		}
	}
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/pinterest\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n<div class=\"alert alert-warning\" style=\"height: 100%; text-align: center;\" role=\"alert\">{{tr.preview_not_available}}<\/div>\n{{\/isPublished}}\n{{#isPublished}}\n<a data-pin-do=\"{{content.param_pindo}}\"\n   {{{content.param_large}}}\n   {{{content.param_round}}}\n   {{{content.param_color}}}\n   {{{content.param_s_imagewidth}}}\n   {{{content.param_s_boardheight}}}\n   {{{content.param_s_boardwidth}}}\n   href=\"{{content.user_url}}\">\n\t{{content.follow_title}}\n\t<img {{{content.img_tag}}} src=\"{{content.image}}\" alt=\"\" \/>\n<\/a>\n<script src=\"\/\/assets.pinterest.com\/js\/pinit.js\"><\/script>\n{{\/isPublished}}\n\n";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('pinterest', {
	name: 'Pinterest',
	element: {
		minSize: {width: 16, height: 16},
		defaultSize: {width: 250, height: 40},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Widget type')},
						{type: 'DropdownBox', id: 'typew',
							options: [
								{id: '#1', name: 'Pin It', value: 1},
								{id: '#2', name: 'Follow', value: 2},
								{id: '#3', name: 'Pin', value: 3},
								{id: '#4', name: 'Board', value: 4},
								{id: '#5', name: 'Profile', value: 5}
							],
							change: function(fields) {
								var type = this.getSelectedItem().getOriginal().value;
								if (type === 1) {
									fields.follow_block.setVisible(false);
									fields.userurl_block.setVisible(false);
									fields.image_block.setVisible(true);
									fields.pinit_block.setVisible(true);
									fields.sizes.setVisible(false);
								} else if (type === 2) {
									fields.follow_block.setVisible(true);
									fields.userurl_block.setVisible(true);
									fields.image_block.setVisible(false);
									fields.pinit_block.setVisible(false);
									fields.sizes.setVisible(false);
								} else if (type === 3) {
									fields.follow_block.setVisible(false);
									fields.userurl_block.setVisible(true);
									fields.pinit_block.setVisible(false);
									fields.image_block.setVisible(false);
									fields.sizes.setVisible(false);
								} else if (type === 4) {
									fields.follow_block.setVisible(false);
									fields.userurl_block.setVisible(true);
									fields.pinit_block.setVisible(false);
									fields.image_block.setVisible(false);
									fields.sizes.setVisible(true);
								} else if (type === 5) {
									fields.follow_block.setVisible(false);
									fields.userurl_block.setVisible(true);
									fields.pinit_block.setVisible(false);
									fields.image_block.setVisible(false);
									fields.sizes.setVisible(true);
								}
							}
						}
					]},
					{type: 'HorizontalLayout', id: 'pinit_block', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Large')},
							{type: 'RadioBox', id: 'large0', label: __('Yes'), group: 'large'},
							{type: 'RadioBox', id: 'large1', label: __('No'), group: 'large'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label',text: __('Round')},
							{type: 'RadioBox', id: 'round0', label: __('Yes'),
								group: 'round',
								change: function(fields) {
									fields.color_block.setVisible(!this.getValue());
								}
							},
							{type: 'RadioBox', id: 'round1', label: __('No'),
								group: 'round',
								change: function(fields) {
									fields.color_block.setVisible(this.getValue());
								}
							}
						]},
						{type: 'VerticalLayout', id: 'color_block', children: [
							{type: 'Label',text: __('Color')},
							{type: 'DropdownBox', id: 'color', options: [
								{id: 'gray', name: 'Gray'},
								{id: 'white', name: 'White'},
								{id: 'red', name: 'Red'}
							]}
						]}
					]},
					{type: 'VerticalLayout', id: 'image_block', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Custom image (optional)'), helpText: __('Enter image url.')},
						{type: 'TextField', id: 'custom_image'}
					]},
					{type: 'VerticalLayout', id: 'userurl_block', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Pinterest URL'), helpText: __('For following button.')},
						{type: 'TextField', id: 'user_url'}
					]},
					{type: 'VerticalLayout', id: 'follow_block', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Full name'), id: 'follow_titlel', helpText: __('For following button.')},
						{type: 'TextField', id: 'follow_title'}
					]},
					{type: 'HorizontalLayout', id: 'sizes', css: {marginTop: 15}, columnWeights: [3, 3, 3], children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Image width')},
							{type: 'SizeSelector', id: 's_imagewidth'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Board height')},
							{type: 'SizeSelector', id: 's_boardheight'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Board width')},
							{type: 'SizeSelector', id: 's_boardwidth'}
						]}
					]}
				]}
			]}
		]
	},
	
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('//assets.pinterest.com/js/pinit.js', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		}
	},
	retypewTimeout: null,
	
	openAction: function(fields, data, elem) {
		var itm;
		fields.custom_image.setText(data.content.custom_image);
		fields.user_url.setText(data.content.user_url);  
		fields.follow_title.setText(data.content.follow_title);
		fields.large0.setValue(data.content.large === 1);
		fields.large1.setValue(data.content.large === 0);
		fields.s_imagewidth.setValue(data.content.s_imagewidth);
		fields.s_boardheight.setValue(data.content.s_boardheight);
		fields.s_boardwidth.setValue(data.content.s_boardwidth);
		
		fields.round0.setValue(data.content.round === 1);
		fields.round1.setValue(data.content.round === 0);
		fields.round0.trigger('change');
		
		itm = fields.typew.getItemById('#' + data.content.typew);
		if (itm) {
			fields.typew.selectItem(itm);
		} else {
			fields.typew.selectItem(fields.typew.getItem(0));
		}
		fields.typew.trigger('change');
		
		itm = fields.color.getItemById(data.content.color);
		if (itm) {
			fields.color.selectItem(itm);
		} else {
			fields.color.selectItem(fields.color.getItem(0));
		}
	},
	applyAction: function(fields, data, elem) {
		var itm;
		if (fields.large0.getValue()) data.content.large = 1;
		if (fields.large1.getValue()) data.content.large = 0;
		if (fields.round0.getValue()) data.content.round = 1;
		if (fields.round1.getValue()) data.content.round = 0;
		
		itm = fields.typew.getSelectedItem();
		data.content.typew = itm.getOriginal().value;
		
		itm = fields.color.getSelectedItem();
		data.content.color = itm.getOriginal().id;
		data.content.param_color = '';
		data.content.param_customimage = '';
		data.content.follow_title = '';
		data.content.custom_image = fields.custom_image.getText();
		data.content.user_url = fields.user_url.getText();
		data.content.follow_title = fields.follow_title.getText();
		data.content.s_imagewidth = fields.s_imagewidth.getValue();
		data.content.s_boardheight = fields.s_boardheight.getValue();
		data.content.s_boardwidth = fields.s_boardwidth.getValue();
		
		if (data.content.typew === 1) { //Pin it type
			data.content.param_pindo = 'buttonBookmark';
			if (data.content.large === 1) {
				data.content.param_large = 'data-pin-tall="true"';
				data.content.param_s_imagewidth = '';
				data.content.param_s_boardheight = '';
				data.content.param_s_boardwidth = '';
				if (data.content.color === 'gray') {
					data.content.image = 'http://assets.pinterest.com/images/pidgets/pinit_fg_en_rect_gray_28.png';
				} else if (data.content.color === 'red') {
					data.content.param_color = 'data-pin-color="red"';
					data.content.image = 'http://assets.pinterest.com/images/pidgets/pinit_fg_en_rect_red_28.png';
				} else if (data.content.color === 'white') {
					data.content.param_color = 'data-pin-color="white"';
					data.content.image = 'http://assets.pinterest.com/images/pidgets/pinit_fg_en_rect_white_28.png';
				}
				this.setSize(56, 28);
			} else {
				if (data.content.color === 'gray') {
					data.content.image = 'http://assets.pinterest.com/images/pidgets/pinit_fg_en_rect_gray_20.png';
				} else if (data.content.color === 'red') {
					data.content.param_color = 'data-pin-color="red"';
					data.content.image = 'http://assets.pinterest.com/images/pidgets/pinit_fg_en_rect_red_20.png';
				} else if (data.content.color === 'white') {
					data.content.param_color = 'data-pin-color="white"';
					data.content.image = 'http://assets.pinterest.com/images/pidgets/pinit_fg_en_rect_white_20.png';
				}
				data.content.param_large = '';
				this.setSize(40, 20);
			}
			if (data.content.round === 1) {
				data.content.param_round = 'data-pin-round="true"';
				if (data.content.large === 1) {
					data.content.image = 'http://assets.pinterest.com/images/pidgets/pinit_fg_en_round_red_32.png';
					this.setSize(35, 35);
				} else {
					data.content.image = 'http://assets.pinterest.com/images/pidgets/pinit_fg_en_round_red_16.png';
					this.setSize(19, 19);
				}
			} else {
				data.content.param_round = '';
			}
			
			if (!data.content.custom_image) {
				data.content.image = data.content.custom_image;
				this.setSize(150, 150);
				data.content.param_customimage = 'data-pin-custom="true"';
			}
			data.content.user_url = 'http://www.pinterest.com/pin/create/button/';
			this.setSize(250, 40);
		} else if (data.content.typew === 2) { //Follow type
			data.content.param_s_imagewidth = '';
			data.content.param_s_boardheight = '';
			data.content.param_s_boardwidth = '';
			data.content.param_pindo = 'buttonFollow';
			data.content.img_tag = 'style="display: none;"';
			data.content.param_large = '';
			data.content.param_round = '';
			data.content.param_color = '';
			this.setSize(250, 40);
		} else if (data.content.typew === 3) { //Pin type
			data.content.param_s_imagewidth = '';
			data.content.param_s_boardheight = '';
			data.content.param_s_boardwidth = '';
			data.content.param_pindo = 'embedPin';
			data.content.img_tag = 'style="display: none;"';
			data.content.follow_title = '';
			data.content.param_large = '';
			data.content.param_round = '';
			data.content.param_color = '';
			this.setSize(250, 320);
		} else if (data.content.typew === 4) { //Board type
			data.content.param_s_imagewidth = 'data-pin-board-width="' + data.content.s_imagewidth + '"';
			data.content.param_s_boardheight = 'data-pin-scale-height="' + data.content.s_boardheight + '"';
			data.content.param_s_boardwidth = 'data-pin-scale-width="' + data.content.s_boardwidth + '"';
			data.content.param_pindo = 'embedBoard';
			data.content.img_tag = 'style="display: none;"';
			data.content.follow_title = '';
			data.content.param_large = '';
			data.content.param_round = '';
			data.content.param_color = '';
			this.setSize(data.content.s_imagewidth - data.content.s_boardwidth, data.content.s_boardheight + 107);
		} else if (data.content.typew === 5) {
			data.content.param_s_imagewidth = 'data-pin-board-width="' + data.content.s_imagewidth + '"';
			data.content.param_s_boardheight = 'data-pin-scale-height="' + data.content.s_boardheight + '"';
			data.content.param_s_boardwidth = 'data-pin-scale-width="' + data.content.s_boardwidth + '"';
			data.content.param_pindo = 'embedUser';
			data.content.img_tag = 'style="display: none;"';
			data.content.follow_title = '';
			data.content.param_large = '';
			data.content.param_round = '';
			data.content.param_color = '';
			this.setSize(data.content.s_imagewidth - data.content.s_boardwidth, data.content.s_boardheight + 107);
		}
	},
	loadAction: function(data) {
		if (!data.content.typew) data.content.typew = 1;
		if (!data.content.image) data.content.image = 'https://assets.pinterest.com/images/pidgets/pinit_fg_en_rect_gray_28.png';
		if (!data.content.param_large) data.content.param_large = 'data-pin-tall="true"';
		if (!data.content.param_round) data.content.param_round = '';
		if (!data.content.param_color) data.content.param_color = '';
		if (!data.content.follow_title) data.content.follow_title = '';
		if (!data.content.param_pindo) data.content.param_pindo = 'buttonBookmark';
		if (!data.content.img_tag) data.content.img_tag = '';
		if (!data.content.param_customimage) data.content.param_customimage = '';
		if (!data.content.color) data.content.color = 'gray';
		if (!data.content.large) data.content.large = 1;
		if (!data.content.round) data.content.round = 0;
		if (!data.content.custom_image) data.content.custom_image = '';
		if (!data.content.user_url) data.content.user_url = '';
		if (!data.content.follow_title) data.content.follow_title = '';
		
		if (!data.content.s_imagewidth) data.content.s_imagewidth = 400;
		if (!data.content.s_boardheight) data.content.s_boardheight = 240;
		if (!data.content.s_boardwidth) data.content.s_boardwidth = 80;
		data.tr = {preview_not_available: __('Preview not available')};
	}
	
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/google_calendar\/main.png";
PluginWrapper._config.template = "<iframe src=\"https:\/\/calendar.google.com\/calendar\/embed?src={{content.groupId}}&title={{content.calendar_name}}&mode={{content.mode}}&ctz={{content.timezone}}&bgcolor=%23{{content.color}}&wkst={{content.weekday}}&hl={{content.language}}{{content.check1}}{{content.check2}}{{content.check3}}{{content.check4}}{{content.check5}}{{content.check6}}{{content.check7}}\" style=\"{{content.border_style}} \" width=\"{{width}}\" height=\"{{height}}\" frameborder=\"0\" scrolling=\"no\"><\/iframe>\r\n\r\n";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('google_calendar', {
    name: __('Calendar'),
    element: {
        minSize: {width: 100, height: 100},
        defaultSize: {width: 800, height: 600},
        resizable: true
    },
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', columnWeights: [7, 5], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Google calendar ID'),
							helpText: __('To find calendar ID, go to calendar settings')
						},
						{type: 'TextField', id: 'groupId'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Calendar name')},
						{type: 'TextField', id: 'calendar_name'}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Language')},
						{type: 'DropdownBox', id: 'language', options: [
							{id: '', name: 'Default'},
							{id: 'id', name: 'Bahasa Indonesia'},
							{id: 'ca', name: 'Català'},
							{id: 'cs', name: 'Čeština'},
							{id: 'da', name: 'Dansk'},
							{id: 'de', name: 'Deutsch'},
							{id: 'en_GB', name: 'English (UK)'},
							{id: 'en', name: 'English (US)'},
							{id: 'es', name: 'Español'},
							{id: 'es_419', name: 'Español (Latinoamérica)'},
							{id: 'fil', name: 'Filipino'},
							{id: 'fr', name: 'Français'},
							{id: 'hr', name: 'Hrvatski'},
							{id: 'it', name: 'Italiano'},
							{id: 'lv', name: 'Latviešu'},
							{id: 'lt', name: 'Lietuvių'},
							{id: 'hu', name: 'Magyar'},
							{id: 'nl', name: 'Nederlands'},
							{id: 'no', name: 'Norsk (bokmål)'},
							{id: 'pl', name: 'Polski'},
							{id: 'pt_BR', name: 'Português (Brasil)'},
							{id: 'pt_PT', name: 'Português (Portugal)'},
							{id: 'ro', name: 'Română'},
							{id: 'sk', name: 'Slovenčina'},
							{id: 'sl', name: 'Slovenščina'},
							{id: 'fi', name: 'Suomi'},
							{id: 'sv', name: 'Svenska'},
							{id: 'tr', name: 'Türkçe'},
							{id: 'vi', name: 'Tiếng Việt'},
							{id: 'el', name: 'Ελληνικά'},
							{id: 'ru', name: 'Русский'},
							{id: 'sr', name: 'Српски'},
							{id: 'uk', name: 'Українська'},
							{id: 'bg', name: 'Български'},
							{id: 'iw', name: 'עברית'},
							{id: 'ar', name: 'العربية'},
							{id: 'fa', name: 'فارسی'},
							{id: 'hi', name: 'हिन्दी'},
							{id: 'th', name: 'ภาษาไทย'},
							{id: 'zh_TW', name: '中文（繁體）'},
							{id: 'zh_CN', name: '中文（简体）'},
							{id: 'ja', name: '日本語'},
							{id: 'ko', name: '한국어'}
						]}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Time zone')},
						{type: 'DropdownBox', id: 'timezone', options: [
							{id: '', name: 'Default'},
							{id: 'Pacific/Niue', name: '(GMT-11:00) Niue'},
							{id: 'Pacific/Pago_Pago', name: '(GMT-11:00) Pago Pago'},
							{id: 'Pacific/Honolulu', name: '(GMT-10:00) Honolulu'},
							{id: 'Pacific/Rarotonga', name: '(GMT-10:00) Rarotonga'},
							{id: 'Pacific/Tahiti', name: '(GMT-10:00) Tahiti'},
							{id: 'Pacific/Marquesas', name: '(GMT-09:30) Marquesas'},
							{id: 'America/Anchorage', name: '(GMT-09:00) Anchorage'},
							{id: 'Pacific/Gambier', name: '(GMT-09:00) Gambier'},
							{id: 'America/Los_Angeles', name: '(GMT-08:00) Los Angeles'},
							{id: 'America/Tijuana', name: '(GMT-08:00) Tijuana'},
							{id: 'America/Vancouver', name: '(GMT-08:00) Vancouver'},
							{id: 'America/Whitehorse', name: '(GMT-08:00) Whitehorse'},
							{id: 'Pacific/Pitcairn', name: '(GMT-08:00) Pitcairn'},
							{id: 'America/Dawson_Creek', name: '(GMT-07:00) Dawson Creek'},
							{id: 'America/Denver', name: '(GMT-07:00) Denver'},
							{id: 'America/Edmonton', name: '(GMT-07:00) Edmonton'},
							{id: 'America/Hermosillo', name: '(GMT-07:00) Hermosillo'},
							{id: 'America/Mazatlan', name: '(GMT-07:00) Mazatlan'},
							{id: 'America/Phoenix', name: '(GMT-07:00) Phoenix'},
							{id: 'America/Yellowknife', name: '(GMT-07:00) Yellowknife'},
							{id: 'America/Belize', name: '(GMT-06:00) Belize'},
							{id: 'America/Chicago', name: '(GMT-06:00) Chicago'},
							{id: 'America/Costa_Rica', name: '(GMT-06:00) Costa Rica'},
							{id: 'America/El_Salvador', name: '(GMT-06:00) El Salvador'},
							{id: 'America/Guatemala', name: '(GMT-06:00) Guatemala'},
							{id: 'America/Managua', name: '(GMT-06:00) Managua'},
							{id: 'America/Mexico_City', name: '(GMT-06:00) Mexico City'},
							{id: 'America/Regina', name: '(GMT-06:00) Regina'},
							{id: 'America/Tegucigalpa', name: '(GMT-06:00)Tegucigalpa'},
							{id: 'America/Winnipeg', name: '(GMT-06:00) Winnipeg'},
							{id: 'Pacific/Galapagos', name: '(GMT-06:00) Galapagos'},
							{id: 'America/Bogota', name: '(GMT-05:00) Bogota'},
							{id: 'America/Cancun', name: '(GMT-05:00) Cancun'},
							{id: 'America/Cayman', name: '(GMT-05:00) Cayman'},
							{id: 'America/Guayaquil', name: '(GMT-05:00) Guayaquil'},
							{id: 'America/Havana', name: '(GMT-05:00) Havana'},
							{id: 'America/Iqaluit', name: '(GMT-05:00) Iqaluit'},
							{id: 'America/Jamaica', name: '(GMT-05:00) Jamaica'},
							{id: 'America/Lima', name: '(GMT-05:00) Lima'},
							{id: 'America/Nassau', name: '(GMT-05:00) Nassau'},
							{id: 'America/New_York', name: '(GMT-05:00) New York'},
							{id: 'America/Panama', name: '(GMT-05:00) Panama'},
							{id: 'America/Port-au-Prince', name: '(GMT-05:00) Port au Prince'},
							{id: 'America/Rio_Branco', name: '(GMT-05:00) Rio Branco'},
							{id: 'America/Toronto', name: '(GMT-05:00) Toronto'},
							{id: 'Pacific/Easter', name: '(GMT-05:00) Easter'},
							{id: 'America/Caracas', name: '(GMT-04:30) Caracas'},
							{id: 'America/Asuncion', name: '(GMT-04:00) Asuncion'},
							{id: 'America/Barbados', name: '(GMT-04:00) Barbados'},
							{id: 'America/Boa_Vista', name: '(GMT-04:00) Boa Vista'},
							{id: 'America/Campo_Grande', name: '(GMT-04:00) Campo Grande'},
							{id: 'America/Cuiaba', name: '(GMT-04:00) Cuiaba'},
							{id: 'America/Curacao', name: '(GMT-04:00) Curacao'},
							{id: 'America/Grand_Turk', name: '(GMT-04:00) Grand Turk'},
							{id: 'America/Guyana', name: '(GMT-04:00) Guyana'},
							{id: 'America/Halifax', name: '(GMT-04:00) Halifax'},
							{id: 'America/La_Paz', name: '(GMT-04:00) La Paz'},
							{id: 'America/Manaus', name: '(GMT-04:00) Manaus'},
							{id: 'America/Martinique', name: '(GMT-04:00) Martinique'},
							{id: 'America/Port_of_Spain', name: '(GMT-04:00) Port of Spain'},
							{id: 'America/Porto_Velho', name: '(GMT-04:00) Porto Velho'},
							{id: 'America/Puerto_Rico', name: '(GMT-04:00) Puerto Rico'},
							{id: 'America/Santo_Domingo', name: '(GMT-04:00) Santo Domingo'},
							{id: 'America/Thule', name: '(GMT-04:00) Thule'},
							{id: 'Atlantic/Bermuda', name: '(GMT-04:00) Bermuda'},
							{id: 'America/St_Johns', name: '(GMT-03:30) St Johns'},
							{id: 'America/Araguaina', name: '(GMT-03:00) Araguaina'},
							{id: 'America/Argentina/Buenos_Aires', name: '(GMT-03:00) Buenos Aires'},
							{id: 'America/Bahia', name: '(GMT-03:00) Bahia'},
							{id: 'America/Belem', name: '(GMT-03:00) Belem'},
							{id: 'America/Cayenne', name: '(GMT-03:00) Cayenne'},
							{id: 'America/Fortaleza', name: '(GMT-03:00) Fortaleza'},
							{id: 'America/Godthab', name: '(GMT-03:00) Godthab'},
							{id: 'America/Maceio', name: '(GMT-03:00) Maceio'},
							{id: 'America/Miquelon', name: '(GMT-03:00) Miquelon'},
							{id: 'America/Montevideo', name: '(GMT-03:00) Montevideo'},
							{id: 'America/Paramaribo', name: '(GMT-03:00) Paramaribo'},
							{id: 'America/Recife', name: '(GMT-03:00) Recife'},
							{id: 'America/Santiago', name: '(GMT-03:00) Santiago'},
							{id: 'America/Sao_Paulo', name: '(GMT-03:00) Sao Paulo'},
							{id: 'Antarctica/Palmer', name: '(GMT-03:00) Palmer'},
							{id: 'Antarctica/Rothera', name: '(GMT-03:00) Rothera'},
							{id: 'Atlantic/Stanley', name: '(GMT-03:00) Stanley'},
							{id: 'America/Noronha', name: '(GMT-02:00) Noronha'},
							{id: 'Atlantic/South_Georgia', name: '(GMT-02:00) South Georgia'},
							{id: 'America/Scoresbysund', name: '(GMT-01:00) Scoresbysund'},
							{id: 'Atlantic/Azores', name: '(GMT-01:00) Azores'},
							{id: 'Atlantic/Cape_Verde', name: '(GMT-01:00) Cape Verde'},
							{id: 'Africa/Abidjan', name: '(GMT+00:00) Abidjan'},
							{id: 'Africa/Accra', name: '(GMT+00:00) Accra'},
							{id: 'Africa/Bissau', name: '(GMT+00:00) Bissau'},
							{id: 'Africa/Casablanca', name: '(GMT+00:00) Casablanca'},
							{id: 'Africa/El_Aaiun', name: '(GMT+00:00) El Aaiun'},
							{id: 'Africa/Monrovia', name: '(GMT+00:00) Monrovia'},
							{id: 'America/Danmarkshavn', name: '(GMT+00:00) Danmarkshavn'},
							{id: 'Atlantic/Canary', name: '(GMT+00:00) Canary'},
							{id: 'Atlantic/Faroe', name: '(GMT+00:00) Faroe'},
							{id: 'Atlantic/Reykjavik', name: '(GMT+00:00) Reykjavik'},
							{id: 'Etc/GMT', name: '(GMT+00:00) GMT'},
							{id: 'Europe/Dublin', name: '(GMT+00:00) Dublin'},
							{id: 'Europe/Lisbon', name: '(GMT+00:00) Lisbon'},
							{id: 'Europe/London', name: '(GMT+00:00) London'},
							{id: 'Africa/Algiers', name: '(GMT+01:00) Algiers'},
							{id: 'Africa/Ceuta', name: '(GMT+01:00) Ceuta'},
							{id: 'Africa/Lagos', name: '(GMT+01:00) Lagos'},
							{id: 'Africa/Ndjamena', name: '(GMT+01:00) Ndjamena'},
							{id: 'Africa/Tunis', name: '(GMT+01:00) Tunis'},
							{id: 'Africa/Windhoek', name: '(GMT+01:00) Windhoek'},
							{id: 'Europe/Amsterdam', name: '(GMT+01:00) Amsterdam'},
							{id: 'Europe/Andorra', name: '(GMT+01:00) Andorra'},
							{id: 'Europe/Belgrade', name: '(GMT+01:00) Belgrade'},
							{id: 'Europe/Berlin', name: '(GMT+01:00) Berlin'},
							{id: 'Europe/Brussels', name: '(GMT+01:00) Brussels'},
							{id: 'Europe/Budapest', name: '(GMT+01:00) Budapest'},
							{id: 'Europe/Copenhagen', name: '(GMT+01:00) Copenhagen'},
							{id: 'Europe/Gibraltar', name: '(GMT+01:00) Gibraltar'},
							{id: 'Europe/Luxembourg', name: '(GMT+01:00) Luxembourg'},
							{id: 'Europe/Madrid', name: '(GMT+01:00) Madrid'},
							{id: 'Europe/Malta', name: '(GMT+01:00) Malta'},
							{id: 'Europe/Monaco', name: '(GMT+01:00) Monaco'},
							{id: 'Europe/Oslo', name: '(GMT+01:00) Oslo'},
							{id: 'Europe/Paris', name: '(GMT+01:00) Paris'},
							{id: 'Europe/Prague', name: '(GMT+01:00) Prague'},
							{id: 'Europe/Rome', name: '(GMT+01:00) Rome'},
							{id: 'Europe/Stockholm', name: '(GMT+01:00) Stockholm'},
							{id: 'Europe/Tirane', name: '(GMT+01:00) Tirane'},
							{id: 'Europe/Vienna', name: '(GMT+01:00) Vienna'},
							{id: 'Europe/Warsaw', name: '(GMT+01:00) Warsaw'},
							{id: 'Europe/Zurich', name: '(GMT+01:00) Zurich'},
							{id: 'Africa/Cairo', name: '(GMT+02:00) Cairo'},
							{id: 'Africa/Johannesburg', name: '(GMT+02:00) Johannesburg'},
							{id: 'Africa/Maputo', name: '(GMT+02:00) Maputo'},
							{id: 'Africa/Tripoli', name: '(GMT+02:00) Tripoli'},
							{id: 'Asia/Amman', name: '(GMT+02:00) Amman'},
							{id: 'Asia/Beirut', name: '(GMT+02:00) Beirut'},
							{id: 'Asia/Damascus', name: '(GMT+02:00) Damascus'},
							{id: 'Asia/Gaza', name: '(GMT+02:00) Gaza'},
							{id: 'Asia/Jerusalem', name: '(GMT+02:00) Jerusalem'},
							{id: 'Asia/Nicosia', name: '(GMT+02:00) Nicosia'},
							{id: 'Europe/Athens', name: '(GMT+02:00) Athens'},
							{id: 'Europe/Bucharest', name: '(GMT+02:00) Bucharest'},
							{id: 'Europe/Chisinau', name: '(GMT+02:00) Chisinau'},
							{id: 'Europe/Helsinki', name: '(GMT+02:00) Helsinki'},
							{id: 'Europe/Istanbul', name: '(GMT+02:00) Istanbul'},
							{id: 'Europe/Kaliningrad', name: '(GMT+02:00) Kaliningrad'},
							{id: 'Europe/Kiev', name: '(GMT+02:00) Kiev'},
							{id: 'Europe/Riga', name: '(GMT+02:00) Riga'},
							{id: 'Europe/Sofia', name: '(GMT+02:00) Sofia'},
							{id: 'Europe/Tallinn', name: '(GMT+02:00) Tallinn'},
							{id: 'Europe/Vilnius', name: '(GMT+02:00) Vilnius'},
							{id: 'Africa/Khartoum', name: '(GMT+03:00) Khartoum'},
							{id: 'Africa/Nairobi', name: '(GMT+03:00) Nairobi'},
							{id: 'Antarctica/Syowa', name: '(GMT+03:00) Syowa'},
							{id: 'Asia/Baghdad', name: '(GMT+03:00) Baghdad'},
							{id: 'Asia/Qatar', name: '(GMT+03:00) Qatar'},
							{id: 'Asia/Riyadh', name: '(GMT+03:00) Riyadh'},
							{id: 'Europe/Minsk', name: '(GMT+03:00) Minsk'},
							{id: 'Europe/Moscow', name: '(GMT+03:00) Moscow'},
							{id: 'Asia/Tehran', name: '(GMT+03:30) Tehran'},
							{id: 'Asia/Baku', name: '(GMT+04:00) Baku'},
							{id: 'Asia/Dubai', name: '(GMT+04:00) Dubai'},
							{id: 'Asia/Tbilisi', name: '(GMT+04:00) Tbilisi'},
							{id: 'Asia/Yerevan', name: '(GMT+04:00) Yerevan'},
							{id: 'Europe/Samara', name: '(GMT+04:00) Samara'},
							{id: 'Indian/Mahe', name: '(GMT+04:00) Mahe'},
							{id: 'Indian/Mauritius', name: '(GMT+04:00) Mauritius'},
							{id: 'Indian/Reunion', name: '(GMT+04:00) Reunion'},
							{id: 'Asia/Kabul', name: '(GMT+04:30) Kabul'},
							{id: 'Antarctica/Mawson', name: '(GMT+05:00) Mawson'},
							{id: 'Asia/Aqtau', name: '(GMT+05:00) Aqtau'},
							{id: 'Asia/Aqtobe', name: '(GMT+05:00) Aqtobe'},
							{id: 'Asia/Ashgabat', name: '(GMT+05:00) Ashgabat'},
							{id: 'Asia/Dushanbe', name: '(GMT+05:00) Dushanbe'},
							{id: 'Asia/Karachi', name: '(GMT+05:00) Karachi'},
							{id: 'Asia/Tashkent', name: '(GMT+05:00) Tashkent'},
							{id: 'Asia/Yekaterinburg', name: '(GMT+05:00) Yekaterinburg'},
							{id: 'Indian/Kerguelen', name: '(GMT+05:00) Kerguelen'},
							{id: 'Indian/Maldives', name: '(GMT+05:00) Maldives'},
							{id: 'Asia/Calcutta', name: '(GMT+05:30) Calcutta'},
							{id: 'Asia/Colombo', name: '(GMT+05:30) Colombo'},
							{id: 'Asia/Katmandu', name: '(GMT+05:45) Katmandu'},
							{id: 'Antarctica/Vostok', name: '(GMT+06:00) Vostok'},
							{id: 'Asia/Almaty', name: '(GMT+06:00) Almaty'},
							{id: 'Asia/Bishkek', name: '(GMT+06:00) Bishkek'},
							{id: 'Asia/Dhaka', name: '(GMT+06:00) Dhaka'},
							{id: 'Asia/Omsk', name: '(GMT+06:00) Omsk'},
							{id: 'Asia/Thimphu', name: '(GMT+06:00) Thimphu'},
							{id: 'Indian/Chagos', name: '(GMT+06:00) Chagos'},
							{id: 'Asia/Rangoon', name: '(GMT+06:30) Rangoon'},
							{id: 'Indian/Cocos', name: '(GMT+06:30) Cocos'},
							{id: 'Antarctica/Davis', name: '(GMT+07:00) Davis'},
							{id: 'Asia/Bangkok', name: '(GMT+07:00) Bangkok'},
							{id: 'Asia/Hovd', name: '(GMT+07:00) Hovd'},
							{id: 'Asia/Jakarta', name: '(GMT+07:00) Jakarta'},
							{id: 'Asia/Krasnoyarsk', name: '(GMT+07:00) Krasnoyarsk'},
							{id: 'Asia/Saigon', name: '(GMT+07:00) Saigon'},
							{id: 'Indian/Christmas', name: '(GMT+07:00) Christmas'},
							{id: 'Antarctica/Casey', name: '(GMT+08:00) Casey'},
							{id: 'Asia/Brunei', name: '(GMT+08:00) Brunei'},
							{id: 'Asia/Choibalsan', name: '(GMT+08:00) Choibalsan'},
							{id: 'Asia/Hong_Kong', name: '(GMT+08:00) Hong Kong'},
							{id: 'Asia/Irkutsk', name: '(GMT+08:00) Irkutsk'},
							{id: 'Asia/Kuala_Lumpur', name: '(GMT+08:00) Kuala Lumpur'},
							{id: 'Asia/Macau', name: '(GMT+08:00) Macau'},
							{id: 'Asia/Makassar', name: '(GMT+08:00) Makassar'},
							{id: 'Asia/Manila', name: '(GMT+08:00) Manila'},
							{id: 'Asia/Shanghai', name: '(GMT+08:00) Shanghai'},
							{id: 'Asia/Singapore', name: '(GMT+08:00) Singapore'},
							{id: 'Asia/Taipei', name: '(GMT+08:00) Taipei'},
							{id: 'Asia/Ulaanbaatar', name: '(GMT+08:00) Ulaanbaatar'},
							{id: 'Australia/Perth', name: '(GMT+08:00) Perth'},
							{id: 'Asia/Pyongyang', name: '(GMT+08:30) Pyongyang'},
							{id: 'Asia/Dili', name: '(GMT+09:00) Dili'},
							{id: 'Asia/Jayapura', name: '(GMT+09:00) Jayapura'},
							{id: 'Asia/Seoul', name: '(GMT+09:00) Seoul'},
							{id: 'Asia/Tokyo', name: '(GMT+09:00) Tokyo'},
							{id: 'Asia/Yakutsk', name: '(GMT+09:00) Yakutsk'},
							{id: 'Pacific/Palau', name: '(GMT+09:00) Palau'},
							{id: 'Australia/Adelaide', name: '(GMT+09:30) Adelaide'},
							{id: 'Australia/Darwin', name: '(GMT+09:30) Darwin'},
							{id: 'Antarctica/DumontDUrville', name: '(GMT+10:00) DumontDUrville'},
							{id: 'Asia/Magadan', name: '(GMT+10:00) Magadan'},
							{id: 'Asia/Vladivostok', name: '(GMT+10:00) Vladivostok'},
							{id: 'Australia/Brisbane', name: '(GMT+10:00) Brisbane'},
							{id: 'Australia/Hobart', name: '(GMT+10:00) Hobart'},
							{id: 'Australia/Sydney', name: '(GMT+10:00) Sydney'},
							{id: 'Pacific/Chuuk', name: '(GMT+10:00) Chuuk'},
							{id: 'Pacific/Guam', name: '(GMT+10:00) Guam'},
							{id: 'Pacific/Port_Moresby', name: '(GMT+10:00) Port Moresby'},
							{id: 'Pacific/Efate', name: '(GMT+11:00) Efate'},
							{id: 'Pacific/Guadalcanal', name: '(GMT+11:00) Guadalcanal'},
							{id: 'Pacific/Kosrae', name: '(GMT+11:00) Kosrae'},
							{id: 'Pacific/Norfolk', name: '(GMT+11:00) Norfolk'},
							{id: 'Pacific/Noumea', name: '(GMT+11:00) Noumea'},
							{id: 'Pacific/Pohnpei', name: '(GMT+11:00) Pohnpei'},
							{id: 'Asia/Kamchatka', name: '(GMT+12:00) Kamchatka'},
							{id: 'Pacific/Auckland', name: '(GMT+12:00) Auckland'},
							{id: 'Pacific/Fiji', name: '(GMT+12:00) Fiji'},
							{id: 'Pacific/Funafuti', name: '(GMT+12:00) Funafuti'},
							{id: 'Pacific/Kwajalein', name: '(GMT+12:00) Kwajalein'},
							{id: 'Pacific/Majuro', name: '(GMT+12:00) Majuro'},
							{id: 'Pacific/Nauru', name: '(GMT+12:00) Nauru'},
							{id: 'Pacific/Tarawa', name: '(GMT+12:00) Tarawa'},
							{id: 'Pacific/Wake', name: '(GMT+12:00) Wake'},
							{id: 'Pacific/Wallis', name: '(GMT+12:00) Wallis'},
							{id: 'Pacific/Apia', name: '(GMT+13:00) Apia'},
							{id: 'Pacific/Enderbury', name: '(GMT+13:00) Enderbury'},
							{id: 'Pacific/Fakaofo', name: '(GMT+13:00) Fakaofo'},
							{id: 'Pacific/Tongatapu', name: '(GMT+13:00) Tongatapu'},
							{id: 'Pacific/Kiritimati', name: '(GMT+14:00) Kiritimati'}
						]}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('First day')},
						{type: 'DropdownBox', id: 'weekday', options: [
							{id: '1', name: 'Sunday'},
							{id: '2', name: 'Monday'},
							{id: '7', name: 'Saturday'}
						]}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('View mode')},
						{type: 'RadioBox', id: 'mode0', label: __('Week'), group: 'mode'},
						{type: 'RadioBox', id: 'mode1', label: __('Month'), group: 'mode'},
						{type: 'RadioBox', id: 'mode2', label: __('Agenda'), group: 'mode'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Border'), helpText: __('Show border on calendar')},
						{type: 'RadioBox', id: 'border0', label: __('Yes'), group: 'border'},
						{type: 'RadioBox', id: 'border1', label: __('No'), group: 'border'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Background color')},
						{type: 'ColorSelector', id: 'color'}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'CheckBox', id: 'check1', label: __('Title')},
						{type: 'CheckBox', id: 'check2', label: __('Navigation')},
						{type: 'CheckBox', id: 'check3', label: __('Date')}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'CheckBox', id: 'check4', label: __('Print icon')},
						{type: 'CheckBox', id: 'check5', label: __('Tabs')}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'CheckBox', id: 'check6', label: __('Calendars list')},
						{type: 'CheckBox', id: 'check7', label: __('Time zone')}
					]}
				]}
			]}
		]
	},
	resizeTimeout: null,
	
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function() {
				self.resizeTimeout = null;
				self.updateElement();
			}, 1000);
		}
	},
	openAction: function(fields, data, elem) {
		var itm;
		itm = fields.timezone.getItemById(data.content.timezone);
		if (!itm) itm = fields.timezone.getItem(0);
		fields.timezone.selectItem(itm);
		itm = fields.language.getItemById(data.content.language);
		if (!itm) itm = fields.language.getItem(0);
		fields.language.selectItem(itm);
		itm = fields.weekday.getItemById(data.content.weekday);
		if (!itm) itm = fields.weekday.getItem(0);
		fields.weekday.selectItem(itm);
		fields.groupId.setText(data.content.groupId);
		fields.calendar_name.setText(data.content.calendar_name);
		fields.border0.setValue(data.content.border === '1');
		fields.border1.setValue(data.content.border === '0');
		
		fields.check1.setValue(data.content.check1 === '');
		fields.check2.setValue(data.content.check2 === '');
		fields.check3.setValue(data.content.check3 === '');
		fields.check4.setValue(data.content.check4 === '');
		fields.check5.setValue(data.content.check5 === '');
		fields.check6.setValue(data.content.check6 === '');
		fields.check7.setValue(data.content.check7 === '');
		
		fields.mode0.setValue(data.content.mode === 'WEEK');
		fields.mode1.setValue(data.content.mode === 'MONTH');
		fields.mode2.setValue(data.content.mode === 'AGENDA');
		
		fields.color.setValue(data.content.color);
	},
	applyAction: function(fields, data, elem) {
		var itm, color;
		itm = fields.timezone.getSelectedItem();
		data.content.timezone = itm.getOriginal().id;
		itm = fields.language.getSelectedItem();
		data.content.language = itm.getOriginal().id;
		itm = fields.weekday.getSelectedItem();
		data.content.weekday = itm.getOriginal().id;
		
		data.content.check1 = fields.check1.getValue() ? '' : '&showTitle=0';
		data.content.check2 = fields.check2.getValue() ? '' : '&showNav=0';
		data.content.check3 = fields.check3.getValue() ? '' : '&showDate=0';
		data.content.check4 = fields.check4.getValue() ? '' : '&showPrint=0';
		data.content.check5 = fields.check5.getValue() ? '' : '&showTabs=0';
		data.content.check6 = fields.check6.getValue() ? '' : '&showCalendars=0';
		data.content.check7 = fields.check7.getValue() ? '' : '&showTz=0';
		
		if (fields.border0.getValue()) {
			data.content.border = '1';
			data.content.border_style = 'border:solid 1px #777';
		}
		if (fields.border1.getValue()) {
			data.content.border = '0';
			data.content.border_style = 'border-width:0';
		}
		if (fields.mode0.getValue()) data.content.mode = 'WEEK';
		if (fields.mode1.getValue()) data.content.mode = 'MONTH';
		if (fields.mode2.getValue()) data.content.mode = 'AGENDA';
		
		color = fields.color.getValue();
		data.content.color = color.replace('#', '');
		
		data.content.groupId = fields.groupId.getText();
		data.content.calendar_name = fields.calendar_name.getText();
	},
	loadAction: function(data) {
		if (!data.content.timezone) data.content.timezone = '';
		if (!data.content.language) data.content.language = '';
		if (!data.content.weekday) data.content.weekday = '2';
		if (!data.content.groupId) data.content.groupId = 'uk__en_gb@holiday.calendar.google.com';
		if (!data.content.calendar_name) data.content.calendar_name = 'Calendar name';
		if (!data.content.border) data.content.border = '0';
		if (!data.content.check1) data.content.check1 = '';
		if (!data.content.check2) data.content.check2 = '';
		if (!data.content.check3) data.content.check3 = '';
		if (!data.content.check4) data.content.check4 = '';
		if (!data.content.check5) data.content.check5 = '';
		if (!data.content.check6) data.content.check6 = '';
		if (!data.content.check7) data.content.check7 = '';
		if (!data.content.mode) data.content.mode = 'MONTH';
		if (!data.content.border_style) data.content.border_style = 'border-width:0';
		if (!data.content.color) data.content.color = '00adef';
	}
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/gplus_like\/main.png";
PluginWrapper._config.template = "<div id=\"{{id}}_gp_plus_one\"><\/div>\n{{#isPublished}}\n<script type=\"text\/javascript\">\n\twindow.___gcfg = {parsetags: 'explicit'};\n<\/script>\n<script src=\"https:\/\/apis.google.com\/js\/platform.js\" type=\"text\/javascript\"><\/script>\n{{\/isPublished}}\n<script type=\"text\/javascript\">\n\tif (window.gapi) {\n\t\twindow.gapi.plusone.render('{{id}}_gp_plus_one', {\n\t\t\tsize: '{{content.size}}',\n\t\t\tannotation: '{{content.annotation}}',\n\t\t\twidth: '{{width}}'\n\t\t});\n\t}\n<\/script>\n";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('gplus_like', {
	name: 'G+',
	noButton: true,
	element: {
		minSize: {width: 24, height: 20},
		defaultSize: {width: 300, height: 24},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Size')},								
						{type: 'RadioBox', id: 'sizeSmall', label: __('Small'), group: 'size'},
						{type: 'RadioBox', id: 'sizeMedium', label: __('Medium'), group: 'size'},
						{type: 'RadioBox', id: 'sizeStandard', label: __('Standard'), group: 'size'},
						{type: 'RadioBox', id: 'sizeTall', label: __('Tall'), group: 'size'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Annotation')},								
						{type: 'RadioBox', id: 'annInline', label: __('Inline'), group: 'ann'},
						{type: 'RadioBox', id: 'annBubble', label: __('Buble'), group: 'ann'},
						{type: 'RadioBox', id: 'annNone', label: __('None'), group: 'ann'}
					]}
				]}
			]}
		]
	},
	
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://apis.google.com/js/platform.js', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		}
	},
	resizeTimeout: null,

	resizeAction: function(data, elem) {
		if (data.content.annotation !== 'inline') return;
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function() {
				self.resizeTimeout = null;
				self.updateElement();
			}, 2000);
		}
	},
	openAction: function(fields, data, elem) {
		fields.sizeSmall.setValue(data.content.size === 'small');
		fields.sizeMedium.setValue(data.content.size === 'medium');
		fields.sizeStandard.setValue(data.content.size === 'standard');
		fields.sizeTall.setValue(data.content.size === 'tall');
		
		fields.annInline.setValue(data.content.annotation === 'inline');
		fields.annBubble.setValue(data.content.annotation === 'bubble');
		fields.annNone.setValue(data.content.annotation === 'none');
	},
	applyAction: function(fields, data, elem) {
		if (fields.sizeSmall.getValue()) data.content.size = 'small';
		if (fields.sizeMedium.getValue()) data.content.size = 'medium';
		if (fields.sizeStandard.getValue()) data.content.size = 'standard';
		if (fields.sizeTall.getValue()) data.content.size = 'tall';
		
		if (fields.annInline.getValue()) data.content.annotation = 'inline';
		if (fields.annBubble.getValue()) data.content.annotation = 'bubble';
		if (fields.annNone.getValue()) data.content.annotation = 'none';
		var w = null, h = 24;
		if (data.content.size === 'small') {
			if (data.content.annotation === 'none') w = 24;
			if (data.content.annotation === 'bubble') w = 70;
			h = 15;
		} else if (data.content.size === 'medium') {
			if (data.content.annotation === 'none') w = 32;
			if (data.content.annotation === 'bubble') w = 90;
			h = 20;
		} else if (data.content.size === 'standard') {
			if (data.content.annotation === 'none') w = 38;
			if (data.content.annotation === 'bubble') w = 106;
			h = 24;
		} else if (data.content.size === 'tall') {	
			if (data.content.annotation === 'inline') {
				w = null; h = 20;
			} else {
				w = 50;
			}
			if (data.content.annotation === 'none') h = 20;
			if (data.content.annotation === 'bubble') h = 60;
		}
		this.setSize(w, h);
	},
	loadAction: function(data) {
		if (!data.content.size) data.content.size = 'standard';
		if (!data.content.annotation) data.content.annotation = 'inline';
	},
	loadedAction: function(data, elem) {
		window.___gcfg = {parsetags: 'explicit'};
		this.pluginScoped.addListener(this, function() {
			window.gapi.plusone.render(data.id + '_gp_plus_one', {
				size: data.content.size,
				annotation: data.content.annotation,
				width: data.width
			});
		});		
	}
	
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/gplus_badge\/main.png";
PluginWrapper._config.template = "<div id=\"{{id}}_gp_comunity\"><\/div>\n{{#isPublished}}\n<script type=\"text\/javascript\">\n\twindow.___gcfg = {parsetags: 'explicit'};\n<\/script>\n<script src=\"https:\/\/apis.google.com\/js\/platform.js\" type=\"text\/javascript\"><\/script>\n{{\/isPublished}}\n<script type=\"text\/javascript\">\n\tif (window.gapi) {\n\t\twindow.gapi.{{{content.btype}}}.render('{{id}}_gp_comunity', {\n\t\t\tlayout: '{{content.mode}}',\n\t\t\tshowcoverphoto: '{{content.cover}}',\n\t\t\tshowtagline: '{{content.tagline}}',\n\t\t\ttheme: '{{content.theme}}',\n\t\t\twidth: '{{width}}',\n\t\t\thref: 'https:\/\/plus.google.com\/{{{content.community}}}{{content.profileId}}'\n\t\t});\n\t}\n<\/script>\n";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('gplus_badge', {
	name: 'Badge',
	noButton: true,
	element: {
		minSize: {width: 250, height: 100},
		defaultSize: {width: 400, height: 100},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('ID'),
						helpText: __('Please type profile, page or community ID and check respective badge type')
					},
					{type: 'TextField', id: 'profileId'}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Badge type')},
						{type: 'RadioBox', id: 'btype0', label: __('Profile badge'), group: 'btype'},
						{type: 'RadioBox', id: 'btype1', label: __('Google+ page badge'), group: 'btype'},
						{type: 'RadioBox', id: 'btype2', label: __('Community badge'), group: 'btype'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Layout'), helpText: __('Orientation of the badge')},
						{type: 'RadioBox', id: 'mode0', label: __('Landscape'), group: 'mode'},
						{type: 'RadioBox', id: 'mode1', label: __('Portrait'), group: 'mode'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Theme'),
							helpText: __('Color theme of the badge. Light for light pages and dark theme for dark pages')
						},
						{type: 'RadioBox', id: 'light', label: __('Light'), group: 'theme'},
						{type: 'RadioBox', id: 'dark', label: __('Dark'), group: 'theme'}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, columnWeights: [4, 8], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Cover photo'), helpText: __('Show cover photo if exists')},
						{type: 'RadioBox', id: 'cover0', label: __('Yes'), group: 'cover'},
						{type: 'RadioBox', id: 'cover1', label: __('No'), group: 'cover'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Tag line'), helpText: __('Show tag line if exists')},
						{type: 'RadioBox', id: 'tagline0', label: __('Yes'), group: 'tagline'},
						{type: 'RadioBox', id: 'tagline1', label: __('No'), group: 'tagline'}
					]}
				]}
			]}
		]
	},

	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://apis.google.com/js/platform.js', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		}
	},
	resizeTimeout: null,

	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function() {
				self.resizeTimeout = null;
				self.updateElement();
			}, 2000);
		}
	},
	openAction: function(fields, data, elem) {
		fields.profileId.setText(data.content.profileId);
		
		fields.mode0.setValue(data.content.mode === 'landscape');
		fields.mode1.setValue(data.content.mode === 'portrait');

		fields.btype0.setValue(data.content.btype === 'person');
		fields.btype1.setValue(data.content.btype === 'page');
		fields.btype2.setValue(data.content.btype === 'community');

		fields.cover0.setValue(data.content.cover === 'true');
		fields.cover1.setValue(data.content.cover === 'false');
		
		fields.tagline0.setValue(data.content.tagline === 'true');
		fields.tagline1.setValue(data.content.tagline === 'false');

		fields.light.setValue(data.content.theme === 'light');
		fields.dark.setValue(data.content.theme === 'dark');
	},
	applyAction: function(fields, data, elem) {
		data.content.profileId = fields.profileId.getText();
		if (fields.mode0.getValue()) data.content.mode = 'landscape';
		if (fields.mode1.getValue()) data.content.mode = 'portrait';

		if (fields.btype0.getValue()) data.content.btype = 'person';
		if (fields.btype1.getValue()) data.content.btype = 'page';
		if (fields.btype2.getValue()) data.content.btype = 'community';
		if (data.content.btype === 'community') {
			data.content.community = 'communities/';
		} else {
			data.content.community = '';
		}
		if (fields.light.getValue()) data.content.theme = 'light';
		if (fields.dark.getValue()) data.content.theme = 'dark';

		if (fields.cover0.getValue()) data.content.cover = 'true';
		if (fields.cover1.getValue()) data.content.cover = 'false';

		if (fields.tagline0.getValue()) data.content.tagline = 'true';
		if (fields.tagline1.getValue()) data.content.tagline = 'false';
		if (data.content.mode === 'portrait') {
			if (data.content.cover === 'true') {
				this.setSize('', 400);
			} else {
				this.setSize('', 245);
			}
		}
		if (data.content.mode === 'landscape') {
			this.setSize('', 100);
		}
	},
	loadAction: function(data) {
		if (!data.content.mode) data.content.mode = 'landscape';
		if (!data.content.btype) data.content.btype = 'page';
		if (!data.content.theme) data.content.theme = 'light';
		if (!data.content.cover) data.content.cover = 'false';
		if (!data.content.tagline) data.content.tagline = 'false';

		if (!data.content.profileId) data.content.profileId = '+googleplus';
		if (data.content.btype === 'community') {
			data.content.community = 'communities/';
		} else {
			data.content.community = '';
		}
	},
	loadedAction: function(data, elem) {
		window.___gcfg = {parsetags: 'explicit'};
		this.pluginScoped.addListener(this, function() {
			window.gapi[data.content.btype].render(data.id + '_gp_comunity', {
				layout: data.content.mode,
				showcoverphoto: data.content.cover,
				showtagline: data.content.tagline,
				theme: data.content.theme,
				width: data.width,
				href: 'https://plus.google.com/' + data.content.community + data.content.profileId
			});
		});
	},

	saveAction: function(data, elem) {
		// TODO: save data
	}

});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/baidu_maps\/main.png";
PluginWrapper._config.template = "<script type=\"text\/javascript\" src=\"http:\/\/api.map.baidu.com\/getscript?v=2.0&amp;ak=cfa0fgLRZZjvHugmDo51EPtUHgW0buAG&amp;services=&amp;t=20160801150053\"><\/script>\r\n<div id=\"allmap_{{id}}\" style=\"width: 100%; height: 100%; overflow: hidden; margin: 0;\"><\/div>\r\n<script type=\"text\/javascript\">\r\n\t(function() {\r\n\t\tvar getMap = function() {\r\n\t\t\tvar map = new BMap.Map(\"allmap_{{id}}\");\r\n\t\t\tmap.centerAndZoom(new BMap.Point({{content.coords}}), 11);\r\n\t\t\tvar point = new BMap.Point({{content.coords}});\r\n\r\n\t\t\tmap.addControl(new BMap.NavigationControl({anchor: BMAP_ANCHOR_TOP_LEFT, type: BMAP_NAVIGATION_CONTROL_SMALL}));\r\n\r\n\t\t\tmap.addControl(new BMap.MapTypeControl());\r\n\t\t\tmap.enableScrollWheelZoom(true);\r\n\t\t\tmap.centerAndZoom(point, {{content.zoom}});\r\n\t\t\t{{#content.marker}}\r\n\t\t\tvar marker = new BMap.Marker(point);\r\n\t\t\tmap.addOverlay(marker);\r\n\t\t\t{{\/content.marker}}\r\n\t\t\t{{#content.animate}}marker.setAnimation(BMAP_ANIMATION_BOUNCE);{{\/content.animate}}\r\n\t\t},\r\n\t\ttwait = function() {\r\n\t\t\tif (typeof window.BMap == 'object') {\r\n\t\t\t\tgetMap();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetTimeout(twait, 100);\r\n\t\t};\r\n\t\ttwait();\r\n\t})();\r\n<\/script>\r\n";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('baidu_maps', {
	name: __('Baidu Maps'),
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 602, height: 327},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Baidu Maps API key'), helpText: __('Get Baidu Maps API key from http://lbsyun.baidu.com/apiconsole/key?application=key')},
					{type: 'TextField', id: 'groupId'}
				]},
				{type: 'HorizontalLayout', columnWeights: [8, 4], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Coordinates')},
						{type: 'TextField', id: 'coords'},
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Zoom level'), helpText: __('ex. 4')},
						{type: 'SizeSelector', id: 'zoom'}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CustomContainer', id: 'map', init: function() {
						var map,
							_animate = false,
							_marker = true,
							_coords = [116.404, 39.915],
							_zoom = 15,
							_markerElem,
							_point,
							_fields;
							
						this.setZoom = function(zoom) {
							_zoom = zoom;
							map.centerAndZoom(new BMap.Point(_coords[0], _coords[1]), _zoom);
						};
						this.setCoords = function(coords) {
							_coords = coords.split(',').map(function(crd) {
								return parseFloat($.trim(crd));
							});
							_point = new BMap.Point(_coords[0], _coords[1]);
							map.centerAndZoom(_point, _zoom);
							this.setMarker(_marker);
						};
						this.setMarker = function(marker) {
							_marker = marker;
							if (_markerElem) map.removeOverlay(_markerElem);
							if (_marker) {
								_markerElem = new BMap.Marker(_point);
								_markerElem.enableDragging();
								_markerElem.addEventListener('dragend', function() {
									_coords = [
										_markerElem.getPosition().lng,
										_markerElem.getPosition().lat
									];
									_point = new BMap.Point(_coords[0], _coords[1]);
									map.centerAndZoom(_point, _zoom);
									_fields.coords.setText(_coords.join(', '));
								});
								map.addOverlay(_markerElem);
								this.setAnimate(_animate);
							} else {
								_markerElem = null;
							}
						};
						this.setAnimate = function(animate) {
							_animate = animate;
							if (_markerElem) _markerElem.setAnimation(_animate ? BMAP_ANIMATION_BOUNCE : null);
						};
						this.initOnView = function(elemId, fields) {
							var self = this;
							_fields = fields;
							this._elem.empty();
							this._elem.attr('id', 'demomap_' + elemId);
							map = new BMap.Map('demomap_' + elemId);
							map.enableScrollWheelZoom(true);
							map.addEventListener('zoomend', function() {
								_zoom = map.getZoom();
								_fields.zoom.setValue(_zoom);
							});
						};
					}, css: {width: '100%', height: 234, position: 'relative', border: '1px solid #aaaaaa', backgroundColor: '#ebebeb'}}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Show marker')},
						{type: 'RadioBox', id: 'marker0', label: __('Enable'), group: 'marker'},
						{type: 'RadioBox', id: 'marker1', label: __('Disable'), group: 'marker'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Animate marker')},
						{type: 'RadioBox', id: 'animate0', label: __('Enable'), group: 'animate'},
						{type: 'RadioBox', id: 'animate1', label: __('Disable'), group: 'animate'}
					]}
				]}
			]}
		]
	},
	
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('http://api.map.baidu.com/getscript?v=2.0&ak=cfa0fgLRZZjvHugmDo51EPtUHgW0buAG&services=&t=20160801150053', function() {
					var twait = function() {
						var wnd = window;
						if (typeof wnd.BMap == 'object') {
							self.scriptReady = true;
							for (var i = 0; i < self.listeners.length; i++) {
								self.listeners[i].func.call(self.listeners[i].inst);
							}
							return;
						}
						setTimeout(twait, 100);
					};
					twait();
				});
			}
		}
	},

	openAction: function (fields, data, elem) {
		fields.groupId.setText(data.content.groupId);
		fields.coords.setText(data.content.coords);
		fields.zoom.setValue(data.content.zoom);
		
		fields.marker0.setValue(data.content.marker);
		fields.marker1.setValue(!data.content.marker);
		fields.animate0.setValue(data.content.animate);
		fields.animate1.setValue(!data.content.animate);
		
		this.pluginScoped.addListener(this, function() {
			setTimeout(function() {
				fields.map.initOnView(data.id, fields);
				fields.map.setCoords(fields.coords.getText());
				fields.map.setZoom(fields.zoom.getValue());
				fields.map.setMarker(fields.marker0.getValue());
				fields.map.setAnimate(fields.animate0.getValue());
				
				fields.coords.on('change', function() {
					fields.map.setCoords(fields.coords.getText());
				});
				fields.zoom.on('change', function() {
					fields.map.setZoom(fields.zoom.getValue());
				});
				fields.marker0.on('change', function() {
					fields.map.setMarker(true);
				});
				fields.marker1.on('change', function() {
					fields.map.setMarker(false);
				});
				fields.animate0.on('change', function() {
					fields.map.setAnimate(true);
				});
				fields.animate1.on('change', function() {
					fields.map.setAnimate(false);
				});
			}, 500);
		});
	},

	applyAction: function (fields, data, elem) {
		data.content.groupId = fields.groupId.getText();
		data.content.coords = fields.coords.getText();
		data.content.zoom = fields.zoom.getValue();
		this.fixCoords(data);

		data.content.marker = (fields.marker0.getValue());
		data.content.animate = (fields.animate0.getValue());
	},

	loadAction: function (data) {
		if (!data.content.groupId) data.content.groupId = '';
		if (!data.content.marker) data.content.marker = true;
		if (!data.content.zoom) data.content.zoom = '15';
		if (!data.content.animate) data.content.animate = false;
		if (!data.content.coords) data.content.coords = '116.404, 39.915';
		this.fixCoords(data);

		this.pluginScoped.addListener(this, function() {});
	},

	fixCoords: function(data) {
		if (data.content.coords) {
			var coords = data.content.coords.split(',');
			if (coords.length < 2 || isNaN(Number(coords[0]).valueOf()) || isNaN(Number(coords[1]).valueOf())) {
				data.content.coords = '116.404, 39.915';
			}
		}
	}

});});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/payumoney\/main.png";
PluginWrapper._config.template = "<form method=\"post\" action=\"https:\/\/secure.payu.in\/_payment\">\n\t<input type=\"hidden\" name=\"key\" value=\"{{content.key}}\" \/>\n\t<input type=\"hidden\" name=\"txnid\" value=\"{{content.txnid}}\" \/>\n\t<input type=\"hidden\" name=\"hash\" value=\"{{content.hash}}\" \/>\n\t<input type=\"hidden\" name=\"productinfo\" value=\"{{content.productinfo}}\" \/>\n\t<input type=\"hidden\" name=\"firstname\" value=\"{{content.firstname}}\" \/>\n\t<input type=\"hidden\" name=\"email\" value=\"{{content.email}}\" \/>\n\t<input type=\"hidden\" name=\"phone\" value=\"{{content.phone}}\" \/>\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"surl\" value=\"{{content.successurl}}\" \/>\n\t<input type=\"hidden\" name=\"furl\" value=\"{{content.successurl}}\" \/>\n\t<button style=\"background: none; border: none;\" type=\"submit\" value=\"submit\">\n\t\t<img src=\"https:\/\/file.payumoney.com\/images\/payumoney_logo.png\" alt=\"iDEAL\" \/>\n\t<\/button>\n<\/form>";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('payumoney', {
	name: 'PayU money',
	element: {
		minSize: {width: 205, height: 55},
		defaultSize: {width: 205, height: 55},
		resizable: false,
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{
                children: [{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product Info:'), helpText:__('Product description')},
						{type: 'TextField', id: 'productinfo'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('First Name'), helpText:__("Only alphabets a-z are allowed")},
						{type: 'TextField', id: 'firstname'}
					]},						
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Email'), helpText:__("Customer's email Id")},
						{type: 'TextField', id: 'email'}
					]},						
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Phone'), helpText:__("Mobile number or landline number")},
						{type: 'TextField', id: 'phone'}
					]},						
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText:__("Payment amount")},
						{type: 'TextField', id: 'amount'}
					]},	
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Success URI:'), helpText:__("Success URL where PayUmoney will redirect the customer after successful payment")},
						{type: 'TextField', id: 'successurl'}
					]},	
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Failure URI:'), helpText:__("Failure URL where PayUmoney will redirect the customer after failed payment")},
						{type: 'TextField', id: 'failureurl'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Key'), helpText:__("Unique merchant key provided by PayUmoney")},
						{type: 'TextField', id: 'key'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Salt:'), helpText:__("Merchant Salt as provided by Payu")},
						{type: 'TextField', id: 'salt'}
					]}

			]}
		]}
		]
	},
	pluginScoped:{
		hex_sha512:(function(){
						/*
			 * A JavaScript implementation of the Secure Hash Algorithm, SHA-512, as defined
			 * in FIPS 180-2
			 * Version 2.2 Copyright Anonymous Contributor, Paul Johnston 2000 - 2009.
			 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
			 * Distributed under the BSD License
			 * See http://pajhome.org.uk/crypt/md5 for details.
			 */

			/*
			 * Configurable variables. You may need to tweak these to be compatible with
			 * the server-side, but the defaults work in most cases.
			 */
			var hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */
			var b64pad  = ""; /* base-64 pad character. "=" for strict RFC compliance   */

			/*
			 * These are the functions you'll usually want to call
			 * They take string arguments and return either hex or base-64 encoded strings
			 */
			function hex_sha512(s)    { return rstr2hex(rstr_sha512(str2rstr_utf8(s))); }
			function b64_sha512(s)    { return rstr2b64(rstr_sha512(str2rstr_utf8(s))); }
			function any_sha512(s, e) { return rstr2any(rstr_sha512(str2rstr_utf8(s)), e);}
			function hex_hmac_sha512(k, d)
			  { return rstr2hex(rstr_hmac_sha512(str2rstr_utf8(k), str2rstr_utf8(d))); }
			function b64_hmac_sha512(k, d)
			  { return rstr2b64(rstr_hmac_sha512(str2rstr_utf8(k), str2rstr_utf8(d))); }
			function any_hmac_sha512(k, d, e)
			  { return rstr2any(rstr_hmac_sha512(str2rstr_utf8(k), str2rstr_utf8(d)), e);}

			/*
			 * Perform a simple self-test to see if the VM is working
			 */
			function sha512_vm_test()
			{
			  return hex_sha512("abc").toLowerCase() ==
				"ddaf35a193617abacc417349ae20413112e6fa4e89a97ea20a9eeee64b55d39a" +
				"2192992a274fc1a836ba3c23a3feebbd454d4423643ce80e2a9ac94fa54ca49f";
			}

			/*
			 * Calculate the SHA-512 of a raw string
			 */
			function rstr_sha512(s)
			{
			  return binb2rstr(binb_sha512(rstr2binb(s), s.length * 8));
			}

			/*
			 * Calculate the HMAC-SHA-512 of a key and some data (raw strings)
			 */
			function rstr_hmac_sha512(key, data)
			{
			  var bkey = rstr2binb(key);
			  if(bkey.length > 32) bkey = binb_sha512(bkey, key.length * 8);

			  var ipad = Array(32), opad = Array(32);
			  for(var i = 0; i < 32; i++)
			  {
				ipad[i] = bkey[i] ^ 0x36363636;
				opad[i] = bkey[i] ^ 0x5C5C5C5C;
			  }

			  var hash = binb_sha512(ipad.concat(rstr2binb(data)), 1024 + data.length * 8);
			  return binb2rstr(binb_sha512(opad.concat(hash), 1024 + 512));
			}

			/*
			 * Convert a raw string to a hex string
			 */
			function rstr2hex(input)
			{
			  try { hexcase } catch(e) { hexcase=0; }
			  var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
			  var output = "";
			  var x;
			  for(var i = 0; i < input.length; i++)
			  {
				x = input.charCodeAt(i);
				output += hex_tab.charAt((x >>> 4) & 0x0F)
					   +  hex_tab.charAt( x        & 0x0F);
			  }
			  return output;
			}

			/*
			 * Convert a raw string to a base-64 string
			 */
			function rstr2b64(input)
			{
			  try { b64pad } catch(e) { b64pad=''; }
			  var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
			  var output = "";
			  var len = input.length;
			  for(var i = 0; i < len; i += 3)
			  {
				var triplet = (input.charCodeAt(i) << 16)
							| (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)
							| (i + 2 < len ? input.charCodeAt(i+2)      : 0);
				for(var j = 0; j < 4; j++)
				{
				  if(i * 8 + j * 6 > input.length * 8) output += b64pad;
				  else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);
				}
			  }
			  return output;
			}

			/*
			 * Convert a raw string to an arbitrary string encoding
			 */
			function rstr2any(input, encoding)
			{
			  var divisor = encoding.length;
			  var i, j, q, x, quotient;

			  /* Convert to an array of 16-bit big-endian values, forming the dividend */
			  var dividend = Array(Math.ceil(input.length / 2));
			  for(i = 0; i < dividend.length; i++)
			  {
				dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);
			  }

			  /*
			   * Repeatedly perform a long division. The binary array forms the dividend,
			   * the length of the encoding is the divisor. Once computed, the quotient
			   * forms the dividend for the next step. All remainders are stored for later
			   * use.
			   */
			  var full_length = Math.ceil(input.length * 8 /
												(Math.log(encoding.length) / Math.log(2)));
			  var remainders = Array(full_length);
			  for(j = 0; j < full_length; j++)
			  {
				quotient = Array();
				x = 0;
				for(i = 0; i < dividend.length; i++)
				{
				  x = (x << 16) + dividend[i];
				  q = Math.floor(x / divisor);
				  x -= q * divisor;
				  if(quotient.length > 0 || q > 0)
					quotient[quotient.length] = q;
				}
				remainders[j] = x;
				dividend = quotient;
			  }

			  /* Convert the remainders to the output string */
			  var output = "";
			  for(i = remainders.length - 1; i >= 0; i--)
				output += encoding.charAt(remainders[i]);

			  return output;
			}

			/*
			 * Encode a string as utf-8.
			 * For efficiency, this assumes the input is valid utf-16.
			 */
			function str2rstr_utf8(input)
			{
			  var output = "";
			  var i = -1;
			  var x, y;

			  while(++i < input.length)
			  {
				/* Decode utf-16 surrogate pairs */
				x = input.charCodeAt(i);
				y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;
				if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)
				{
				  x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);
				  i++;
				}

				/* Encode output as utf-8 */
				if(x <= 0x7F)
				  output += String.fromCharCode(x);
				else if(x <= 0x7FF)
				  output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),
												0x80 | ( x         & 0x3F));
				else if(x <= 0xFFFF)
				  output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),
												0x80 | ((x >>> 6 ) & 0x3F),
												0x80 | ( x         & 0x3F));
				else if(x <= 0x1FFFFF)
				  output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),
												0x80 | ((x >>> 12) & 0x3F),
												0x80 | ((x >>> 6 ) & 0x3F),
												0x80 | ( x         & 0x3F));
			  }
			  return output;
			}

			/*
			 * Encode a string as utf-16
			 */
			function str2rstr_utf16le(input)
			{
			  var output = "";
			  for(var i = 0; i < input.length; i++)
				output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,
											  (input.charCodeAt(i) >>> 8) & 0xFF);
			  return output;
			}

			function str2rstr_utf16be(input)
			{
			  var output = "";
			  for(var i = 0; i < input.length; i++)
				output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,
											   input.charCodeAt(i)        & 0xFF);
			  return output;
			}

			/*
			 * Convert a raw string to an array of big-endian words
			 * Characters >255 have their high-byte silently ignored.
			 */
			function rstr2binb(input)
			{
			  var output = Array(input.length >> 2);
			  for(var i = 0; i < output.length; i++)
				output[i] = 0;
			  for(var i = 0; i < input.length * 8; i += 8)
				output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);
			  return output;
			}

			/*
			 * Convert an array of big-endian words to a string
			 */
			function binb2rstr(input)
			{
			  var output = "";
			  for(var i = 0; i < input.length * 32; i += 8)
				output += String.fromCharCode((input[i>>5] >>> (24 - i % 32)) & 0xFF);
			  return output;
			}

			/*
			 * Calculate the SHA-512 of an array of big-endian dwords, and a bit length
			 */
			var sha512_k;
			function binb_sha512(x, len)
			{
			  if(sha512_k == undefined)
			  {
				//SHA512 constants
				sha512_k = new Array(
			new int64(0x428a2f98, -685199838), new int64(0x71374491, 0x23ef65cd),
			new int64(-1245643825, -330482897), new int64(-373957723, -2121671748),
			new int64(0x3956c25b, -213338824), new int64(0x59f111f1, -1241133031),
			new int64(-1841331548, -1357295717), new int64(-1424204075, -630357736),
			new int64(-670586216, -1560083902), new int64(0x12835b01, 0x45706fbe),
			new int64(0x243185be, 0x4ee4b28c), new int64(0x550c7dc3, -704662302),
			new int64(0x72be5d74, -226784913), new int64(-2132889090, 0x3b1696b1),
			new int64(-1680079193, 0x25c71235), new int64(-1046744716, -815192428),
			new int64(-459576895, -1628353838), new int64(-272742522, 0x384f25e3),
			new int64(0xfc19dc6, -1953704523), new int64(0x240ca1cc, 0x77ac9c65),
			new int64(0x2de92c6f, 0x592b0275), new int64(0x4a7484aa, 0x6ea6e483),
			new int64(0x5cb0a9dc, -1119749164), new int64(0x76f988da, -2096016459),
			new int64(-1740746414, -295247957), new int64(-1473132947, 0x2db43210),
			new int64(-1341970488, -1728372417), new int64(-1084653625, -1091629340),
			new int64(-958395405, 0x3da88fc2), new int64(-710438585, -1828018395),
			new int64(0x6ca6351, -536640913), new int64(0x14292967, 0xa0e6e70),
			new int64(0x27b70a85, 0x46d22ffc), new int64(0x2e1b2138, 0x5c26c926),
			new int64(0x4d2c6dfc, 0x5ac42aed), new int64(0x53380d13, -1651133473),
			new int64(0x650a7354, -1951439906), new int64(0x766a0abb, 0x3c77b2a8),
			new int64(-2117940946, 0x47edaee6), new int64(-1838011259, 0x1482353b),
			new int64(-1564481375, 0x4cf10364), new int64(-1474664885, -1136513023),
			new int64(-1035236496, -789014639), new int64(-949202525, 0x654be30),
			new int64(-778901479, -688958952), new int64(-694614492, 0x5565a910),
			new int64(-200395387, 0x5771202a), new int64(0x106aa070, 0x32bbd1b8),
			new int64(0x19a4c116, -1194143544), new int64(0x1e376c08, 0x5141ab53),
			new int64(0x2748774c, -544281703), new int64(0x34b0bcb5, -509917016),
			new int64(0x391c0cb3, -976659869), new int64(0x4ed8aa4a, -482243893),
			new int64(0x5b9cca4f, 0x7763e373), new int64(0x682e6ff3, -692930397),
			new int64(0x748f82ee, 0x5defb2fc), new int64(0x78a5636f, 0x43172f60),
			new int64(-2067236844, -1578062990), new int64(-1933114872, 0x1a6439ec),
			new int64(-1866530822, 0x23631e28), new int64(-1538233109, -561857047),
			new int64(-1090935817, -1295615723), new int64(-965641998, -479046869),
			new int64(-903397682, -366583396), new int64(-779700025, 0x21c0c207),
			new int64(-354779690, -840897762), new int64(-176337025, -294727304),
			new int64(0x6f067aa, 0x72176fba), new int64(0xa637dc5, -1563912026),
			new int64(0x113f9804, -1090974290), new int64(0x1b710b35, 0x131c471b),
			new int64(0x28db77f5, 0x23047d84), new int64(0x32caab7b, 0x40c72493),
			new int64(0x3c9ebe0a, 0x15c9bebc), new int64(0x431d67c4, -1676669620),
			new int64(0x4cc5d4be, -885112138), new int64(0x597f299c, -60457430),
			new int64(0x5fcb6fab, 0x3ad6faec), new int64(0x6c44198c, 0x4a475817));
			  }

			  //Initial hash values
			  var H = new Array(
			new int64(0x6a09e667, -205731576),
			new int64(-1150833019, -2067093701),
			new int64(0x3c6ef372, -23791573),
			new int64(-1521486534, 0x5f1d36f1),
			new int64(0x510e527f, -1377402159),
			new int64(-1694144372, 0x2b3e6c1f),
			new int64(0x1f83d9ab, -79577749),
			new int64(0x5be0cd19, 0x137e2179));

			  var T1 = new int64(0, 0),
				T2 = new int64(0, 0),
				a = new int64(0,0),
				b = new int64(0,0),
				c = new int64(0,0),
				d = new int64(0,0),
				e = new int64(0,0),
				f = new int64(0,0),
				g = new int64(0,0),
				h = new int64(0,0),
				//Temporary variables not specified by the document
				s0 = new int64(0, 0),
				s1 = new int64(0, 0),
				Ch = new int64(0, 0),
				Maj = new int64(0, 0),
				r1 = new int64(0, 0),
				r2 = new int64(0, 0),
				r3 = new int64(0, 0);
			  var j, i;
			  var W = new Array(80);
			  for(i=0; i<80; i++)
				W[i] = new int64(0, 0);

			  // append padding to the source string. The format is described in the FIPS.
			  x[len >> 5] |= 0x80 << (24 - (len & 0x1f));
			  x[((len + 128 >> 10)<< 5) + 31] = len;

			  for(i = 0; i<x.length; i+=32) //32 dwords is the block size
			  {
				int64copy(a, H[0]);
				int64copy(b, H[1]);
				int64copy(c, H[2]);
				int64copy(d, H[3]);
				int64copy(e, H[4]);
				int64copy(f, H[5]);
				int64copy(g, H[6]);
				int64copy(h, H[7]);

				for(j=0; j<16; j++)
				{
					W[j].h = x[i + 2*j];
					W[j].l = x[i + 2*j + 1];
				}

				for(j=16; j<80; j++)
				{
				  //sigma1
				  int64rrot(r1, W[j-2], 19);
				  int64revrrot(r2, W[j-2], 29);
				  int64shr(r3, W[j-2], 6);
				  s1.l = r1.l ^ r2.l ^ r3.l;
				  s1.h = r1.h ^ r2.h ^ r3.h;
				  //sigma0
				  int64rrot(r1, W[j-15], 1);
				  int64rrot(r2, W[j-15], 8);
				  int64shr(r3, W[j-15], 7);
				  s0.l = r1.l ^ r2.l ^ r3.l;
				  s0.h = r1.h ^ r2.h ^ r3.h;

				  int64add4(W[j], s1, W[j-7], s0, W[j-16]);
				}

				for(j = 0; j < 80; j++)
				{
				  //Ch
				  Ch.l = (e.l & f.l) ^ (~e.l & g.l);
				  Ch.h = (e.h & f.h) ^ (~e.h & g.h);

				  //Sigma1
				  int64rrot(r1, e, 14);
				  int64rrot(r2, e, 18);
				  int64revrrot(r3, e, 9);
				  s1.l = r1.l ^ r2.l ^ r3.l;
				  s1.h = r1.h ^ r2.h ^ r3.h;

				  //Sigma0
				  int64rrot(r1, a, 28);
				  int64revrrot(r2, a, 2);
				  int64revrrot(r3, a, 7);
				  s0.l = r1.l ^ r2.l ^ r3.l;
				  s0.h = r1.h ^ r2.h ^ r3.h;

				  //Maj
				  Maj.l = (a.l & b.l) ^ (a.l & c.l) ^ (b.l & c.l);
				  Maj.h = (a.h & b.h) ^ (a.h & c.h) ^ (b.h & c.h);

				  int64add5(T1, h, s1, Ch, sha512_k[j], W[j]);
				  int64add(T2, s0, Maj);

				  int64copy(h, g);
				  int64copy(g, f);
				  int64copy(f, e);
				  int64add(e, d, T1);
				  int64copy(d, c);
				  int64copy(c, b);
				  int64copy(b, a);
				  int64add(a, T1, T2);
				}
				int64add(H[0], H[0], a);
				int64add(H[1], H[1], b);
				int64add(H[2], H[2], c);
				int64add(H[3], H[3], d);
				int64add(H[4], H[4], e);
				int64add(H[5], H[5], f);
				int64add(H[6], H[6], g);
				int64add(H[7], H[7], h);
			  }

			  //represent the hash as an array of 32-bit dwords
			  var hash = new Array(16);
			  for(i=0; i<8; i++)
			  {
				hash[2*i] = H[i].h;
				hash[2*i + 1] = H[i].l;
			  }
			  return hash;
			}

			//A constructor for 64-bit numbers
			function int64(h, l)
			{
			  this.h = h;
			  this.l = l;
			  //this.toString = int64toString;
			}

			//Copies src into dst, assuming both are 64-bit numbers
			function int64copy(dst, src)
			{
			  dst.h = src.h;
			  dst.l = src.l;
			}

			//Right-rotates a 64-bit number by shift
			//Won't handle cases of shift>=32
			//The function revrrot() is for that
			function int64rrot(dst, x, shift)
			{
				dst.l = (x.l >>> shift) | (x.h << (32-shift));
				dst.h = (x.h >>> shift) | (x.l << (32-shift));
			}

			//Reverses the dwords of the source and then rotates right by shift.
			//This is equivalent to rotation by 32+shift
			function int64revrrot(dst, x, shift)
			{
				dst.l = (x.h >>> shift) | (x.l << (32-shift));
				dst.h = (x.l >>> shift) | (x.h << (32-shift));
			}

			//Bitwise-shifts right a 64-bit number by shift
			//Won't handle shift>=32, but it's never needed in SHA512
			function int64shr(dst, x, shift)
			{
				dst.l = (x.l >>> shift) | (x.h << (32-shift));
				dst.h = (x.h >>> shift);
			}

			//Adds two 64-bit numbers
			//Like the original implementation, does not rely on 32-bit operations
			function int64add(dst, x, y)
			{
			   var w0 = (x.l & 0xffff) + (y.l & 0xffff);
			   var w1 = (x.l >>> 16) + (y.l >>> 16) + (w0 >>> 16);
			   var w2 = (x.h & 0xffff) + (y.h & 0xffff) + (w1 >>> 16);
			   var w3 = (x.h >>> 16) + (y.h >>> 16) + (w2 >>> 16);
			   dst.l = (w0 & 0xffff) | (w1 << 16);
			   dst.h = (w2 & 0xffff) | (w3 << 16);
			}

			//Same, except with 4 addends. Works faster than adding them one by one.
			function int64add4(dst, a, b, c, d)
			{
			   var w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff);
			   var w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (w0 >>> 16);
			   var w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (w1 >>> 16);
			   var w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (w2 >>> 16);
			   dst.l = (w0 & 0xffff) | (w1 << 16);
			   dst.h = (w2 & 0xffff) | (w3 << 16);
			}

			//Same, except with 5 addends
			function int64add5(dst, a, b, c, d, e)
			{
			   var w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff) + (e.l & 0xffff);
			   var w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (e.l >>> 16) + (w0 >>> 16);
			   var w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (e.h & 0xffff) + (w1 >>> 16);
			   var w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (e.h >>> 16) + (w2 >>> 16);
			   dst.l = (w0 & 0xffff) | (w1 << 16);
			   dst.h = (w2 & 0xffff) | (w3 << 16);
			}
			return hex_sha512;
					})()
	},
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function() {
				self.resizeTimeout = null;
				self.updateElement();
			}, 1000);
		}
	},
	openAction: function(fields, data, elem) {
		fields.productinfo.setText(data.content.productinfo);
		fields.firstname.setText(data.content.firstname);
		fields.email.setText(data.content.email);
		fields.phone.setText(data.content.phone);
		fields.amount.setText(data.content.amount);
		fields.successurl.setText(data.content.successurl);
		fields.failureurl.setText(data.content.failureurl);
		fields.key.setText(data.content.key);
		fields.salt.setText(data.content.salt);
	},
	applyAction: function(fields, data, elem) {	
		data.content.productinfo = fields.productinfo.getText();
		data.content.firstname = fields.firstname.getText();
		data.content.email = fields.email.getText();
		data.content.phone = fields.phone.getText();
		data.content.amount = fields.amount.getText();
		data.content.successurl = fields.successurl.getText();
		data.content.failureurl = fields.failureurl.getText();
		data.content.key = fields.key.getText();
		data.content.salt = fields.salt.getText();
		data.content.hash = data.content.key + '|' + data.content.txnid + '|' + data.content.amount +'|' + data.content.productinfo + '|' + data.content.firstname + '|' +data.content.email+ '||||||||||' + data.content.salt;
		data.content.hash = this.pluginScoped.hex_sha512(data.content.hash);
		data.content.hash = data.content.hash.toLowerCase();
	},
	loadAction: function (data) {
		if (!data.content.productinfo) data.content.productinfo = 'Donate';	
		if (!data.content.firstname) data.content.firstname = 'Erik';	
		if (!data.content.email) data.content.email = 'example@example.com';	
		if (!data.content.phone) data.content.phone = '37060000000';	
		if (!data.content.amount) data.content.amount = '452';	
		if (!data.content.successurl) data.content.successurl = 'http://site.pro';	
		if (!data.content.failureurl) data.content.failureurl = 'http://site.pro';	
		if (!data.content.key) data.content.key = 'JBZaLc';	
		if (!data.content.salt) data.content.salt = 'GQs7yium';	
		if (!data.content.txnid) data.content.txnid = Date.now();
		if (!data.content.hash) data.content.hash = data.content.key + '|' + data.content.txnid + '|' + data.content.amount +'|' + data.content.productinfo + '|' + data.content.firstname + '|' +data.content.email+ '||||||||||' + data.content.salt;
		data.content.hash = this.pluginScoped.hex_sha512(data.content.hash);
		data.content.hash = data.content.hash.toLowerCase();
	}
});});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/easypay\/main.png";
PluginWrapper._config.template = "<form method=\"post\" action=\"https:\/\/ssl.easypay.by\/weborder\/\">\n\t<input type=\"hidden\" name=\"EP_OrderNo\" value=\"{{content.orderno}}\">\n\t<input type=\"hidden\" name=\"EP_Sum\" value=\"{{content.sum}}\">\t\n\t<input type=\"hidden\" name=\"EP_MerNo\" value=\"{{content.merno}}\">\n\t<input type=\"hidden\" name=\"EP_Expires\" value=\"{{content.expires}}\">\n\t<input type=\"hidden\" name=\"EP_Hash\" value=\"{{content.hash}}\">\n\t<input type=\"hidden\" name=\"EP_Comment\" value=\"{{content.ordername}}\">\n\t<input type=\"hidden\" name=\"EP_OrderInfo\" value=\"{{content.orderdescription}}\">\n\t<input name=\"submit\" style=\"border:1px solid #eee\" alt=\"EasyPay\" type=\"image\" width=\"100\" src=\"https:\/\/ssl.easypay.by\/imgs\/header\/ep.gif\"\/>  \n<\/form>";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('easypay', {
	name: 'EasyPay',
	element: {
		minSize: {width: 100, height: 50},
		defaultSize: {width: 100, height: 50},
		resizable: false
	},
	pluginScoped:{
		md5_hash:(function(){

			function md5_hash(s) { return md5(s); }
			
			function md5(string){
				function RotateLeft(lValue, iShiftBits) {
						return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));
				}

				function AddUnsigned(lX,lY) {
						var lX4,lY4,lX8,lY8,lResult;
						lX8 = (lX & 0x80000000);
						lY8 = (lY & 0x80000000);
						lX4 = (lX & 0x40000000);
						lY4 = (lY & 0x40000000);
						lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);
						if (lX4 & lY4) {
								return (lResult ^ 0x80000000 ^ lX8 ^ lY8);
						}
						if (lX4 | lY4) {
								if (lResult & 0x40000000) {
										return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);
								} else {
										return (lResult ^ 0x40000000 ^ lX8 ^ lY8);
								}
						} else {
								return (lResult ^ lX8 ^ lY8);
						}
				}

				function F(x,y,z) { return (x & y) | ((~x) & z); }
				function G(x,y,z) { return (x & z) | (y & (~z)); }
				function H(x,y,z) { return (x ^ y ^ z); }
				function I(x,y,z) { return (y ^ (x | (~z))); }

				function FF(a,b,c,d,x,s,ac) {
						a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));
						return AddUnsigned(RotateLeft(a, s), b);
				};

				function GG(a,b,c,d,x,s,ac) {
						a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));
						return AddUnsigned(RotateLeft(a, s), b);
				};

				function HH(a,b,c,d,x,s,ac) {
						a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));
						return AddUnsigned(RotateLeft(a, s), b);
				};

				function II(a,b,c,d,x,s,ac) {
						a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));
						return AddUnsigned(RotateLeft(a, s), b);
				};

				function ConvertToWordArray(string) {
						var lWordCount;
						var lMessageLength = string.length;
						var lNumberOfWords_temp1=lMessageLength + 8;
						var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;
						var lNumberOfWords = (lNumberOfWords_temp2+1)*16;
						var lWordArray=Array(lNumberOfWords-1);
						var lBytePosition = 0;
						var lByteCount = 0;
						while ( lByteCount < lMessageLength ) {
								lWordCount = (lByteCount-(lByteCount % 4))/4;
								lBytePosition = (lByteCount % 4)*8;
								lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)<<lBytePosition));
								lByteCount++;
						}
						lWordCount = (lByteCount-(lByteCount % 4))/4;
						lBytePosition = (lByteCount % 4)*8;
						lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);
						lWordArray[lNumberOfWords-2] = lMessageLength<<3;
						lWordArray[lNumberOfWords-1] = lMessageLength>>>29;
						return lWordArray;
				};

				function WordToHex(lValue) {
						var WordToHexValue="",WordToHexValue_temp="",lByte,lCount;
						for (lCount = 0;lCount<=3;lCount++) {
								lByte = (lValue>>>(lCount*8)) & 255;
								WordToHexValue_temp = "0" + lByte.toString(16);
								WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);
						}
						return WordToHexValue;
				};

				function Utf8Encode(string) {
						string = string.replace(/\r\n/g,"\n");
						var utftext = "";

						for (var n = 0; n < string.length; n++) {

								var c = string.charCodeAt(n);

								if (c < 128) {
										utftext += String.fromCharCode(c);
								}
								else if((c > 127) && (c < 2048)) {
										utftext += String.fromCharCode((c >> 6) | 192);
										utftext += String.fromCharCode((c & 63) | 128);
								}
								else {
										utftext += String.fromCharCode((c >> 12) | 224);
										utftext += String.fromCharCode(((c >> 6) & 63) | 128);
										utftext += String.fromCharCode((c & 63) | 128);
								}

						}

						return utftext;
				};

				var x=Array();
				var k,AA,BB,CC,DD,a,b,c,d;
				var S11=7, S12=12, S13=17, S14=22;
				var S21=5, S22=9 , S23=14, S24=20;
				var S31=4, S32=11, S33=16, S34=23;
				var S41=6, S42=10, S43=15, S44=21;

				string = Utf8Encode(string);

				x = ConvertToWordArray(string);

				a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;

				for (k=0;k<x.length;k+=16) {
						AA=a; BB=b; CC=c; DD=d;
						a=FF(a,b,c,d,x[k+0], S11,0xD76AA478);
						d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);
						c=FF(c,d,a,b,x[k+2], S13,0x242070DB);
						b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);
						a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);
						d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);
						c=FF(c,d,a,b,x[k+6], S13,0xA8304613);
						b=FF(b,c,d,a,x[k+7], S14,0xFD469501);
						a=FF(a,b,c,d,x[k+8], S11,0x698098D8);
						d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);
						c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);
						b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);
						a=FF(a,b,c,d,x[k+12],S11,0x6B901122);
						d=FF(d,a,b,c,x[k+13],S12,0xFD987193);
						c=FF(c,d,a,b,x[k+14],S13,0xA679438E);
						b=FF(b,c,d,a,x[k+15],S14,0x49B40821);
						a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);
						d=GG(d,a,b,c,x[k+6], S22,0xC040B340);
						c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);
						b=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);
						a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);
						d=GG(d,a,b,c,x[k+10],S22,0x2441453);
						c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);
						b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);
						a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);
						d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);
						c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);
						b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);
						a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);
						d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);
						c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);
						b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);
						a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);
						d=HH(d,a,b,c,x[k+8], S32,0x8771F681);
						c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);
						b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);
						a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);
						d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);
						c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);
						b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);
						a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);
						d=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);
						c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);
						b=HH(b,c,d,a,x[k+6], S34,0x4881D05);
						a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);
						d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);
						c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);
						b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);
						a=II(a,b,c,d,x[k+0], S41,0xF4292244);
						d=II(d,a,b,c,x[k+7], S42,0x432AFF97);
						c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);
						b=II(b,c,d,a,x[k+5], S44,0xFC93A039);
						a=II(a,b,c,d,x[k+12],S41,0x655B59C3);
						d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);
						c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);
						b=II(b,c,d,a,x[k+1], S44,0x85845DD1);
						a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);
						d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);
						c=II(c,d,a,b,x[k+6], S43,0xA3014314);
						b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);
						a=II(a,b,c,d,x[k+4], S41,0xF7537E82);
						d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);
						c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);
						b=II(b,c,d,a,x[k+9], S44,0xEB86D391);
						a=AddUnsigned(a,AA);
						b=AddUnsigned(b,BB);
						c=AddUnsigned(c,CC);
						d=AddUnsigned(d,DD);
					 }

				 var temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);

				 return temp.toLowerCase();
			}

			return md5_hash;
					})()
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{
                children: [{type: 'VerticalLayout', spacing: 15, children: [					
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Account number'), helpText:__("Unique electronic account number")},
						{type: 'TextField', id: 'orderno'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText:__("The amount in rubles")},
						{type: 'TextField', id: 'sum'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Order name'), helpText:__("Short order name")},
						{type: 'TextField', id: 'ordername'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Order description'), helpText:__("Short order descriptions")},
						{type: 'TextField', id: 'orderdescription'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Supplier number'), helpText:__("Supplier number easyPay")},
						{type: 'TextField', id: 'merno'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('web-key'), helpText:__("Personal key from easypay")},
						{type: 'TextField', id: 'webkey'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Validity time'), helpText:__("Account validity time in days")},
						{type: 'TextField', id: 'expires'}
					]}
			]}
		]}
		]
	},
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function() {
				self.resizeTimeout = null;
				self.updateElement();
			}, 1000);
		}
	},
	openAction: function(fields, data, elem) {
		fields.orderno.setText(data.content.orderno);
		fields.merno.setText(data.content.merno);
		fields.sum.setText(data.content.sum);
		fields.expires.setText(data.content.expires);
		fields.ordername.setText(data.content.ordername);
		fields.orderdescription.setText(data.content.orderdescription);
		fields.webkey.setText(data.content.webkey);
	},
	applyAction: function(fields, data, elem) {	
		data.content.orderno = fields.orderno.getText();
		data.content.merno = fields.merno.getText();
		data.content.sum = fields.sum.getText();
		data.content.expires = fields.expires.getText();
		data.content.ordername = fields.ordername.getText();
		data.content.orderdescription = fields.orderdescription.getText();
		data.content.webkey = fields.webkey.getText();
		data.content.hash = data.content.merno + data.content.webkey + data.content.orderno + data.content.sum;
		data.content.hash = this.pluginScoped.md5_hash(data.content.hash);	
	},
	loadAction: function (data) {
		if (!data.content.orderno) data.content.orderno = Date.now();
		if (!data.content.merno) data.content.merno = 'ok6666';
		if (!data.content.sum) data.content.sum = '20000.00';
		if (!data.content.expires) data.content.expires = 30;
		if (!data.content.ordername) data.content.ordername = 'Donate';
		if (!data.content.orderdescription) data.content.orderdescription = 'Donate 20000 RUB';
		if (!data.content.webkey) data.content.webkey = '00000000000000000';
		if (!data.content.hash) data.content.hash = data.content.merno + data.content.webkey + data.content.orderno + data.content.sum;
		data.content.hash = this.pluginScoped.md5_hash(data.content.hash);	
	}
});});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/vkontakte_like\/main.png";
PluginWrapper._config.template = "{{#isPublished}}\n\t{{#isPreview}}\n\t\t{{{content.previewHtml}}}\n\t{{\/isPreview}}\n\t{{^isPreview}}\n\t\t{{#firstOnPage}}\n<script type=\"text\/javascript\" src=\"\/\/vk.com\/js\/api\/openapi.js?116\"><\/script>\n<script type=\"text\/javascript\"> VK.init({apiId: '{{content.appId}}', onlyWidgets: true}); <\/script>\n\t\t{{\/firstOnPage}}\n<div id=\"{{id}}_vk_like\" class=\"vk_like\"><\/div>\n<script type=\"text\/javascript\">\n\tif (window.VK) VK.Widgets.Like('{{id}}_vk_like', {type: '{{content.type}}', verb: {{content.verb}}, height: {{content.height}}});\n<\/script>\n\t{{\/isPreview}}\n{{\/isPublished}}\n{{^isPublished}}\n<!-- dynamic -->\n{{\/isPublished}}";
PluginWrapper._config.active = true;

PluginWrapper.registerPlugin('vkontakte_like', {
	name: 'Like',
	noButton: true,
	element: {
		minSize: {width: 20, height: 20},
		defaultSize: {width: 110, height: 30},
		renderOnce: true,
		resizable: true
	},
	propertyDialog: {
		//size: {width: 500, height: 400},
		noScroll: true,
		tabs: [
			{name: 'General', children: [
				{type: 'VerticalLayout', children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('App ID'), helpText: __('Create app at %s').replace('https://vk.com/apps?act=manage')},
						{type: 'TextField', id: 'appId'}
					]},
					{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Button Layout')},
							{type: 'RadioBox', id: 'typeButton', label: __('Button with mini counter'), group: 'bl'},
							{type: 'RadioBox', id: 'typeFull', label: __('Button with text counter'), group: 'bl'},
							{type: 'RadioBox', id: 'typeMini', label: __('Mini button'), group: 'bl'},
							{type: 'RadioBox', id: 'typeVertical', label: __('Mini button with counter at the top'), group: 'bl'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Button Height')},
							{type: 'DropdownBox', id: 'height', options: [
								{id: '#18', name: '18 px', value: 18},
								{id: '#20', name: '20 px', value: 20},
								{id: '#22', name: '22 px', value: 22},
								{id: '#24', name: '24 px', value: 24}
							]},
							{type: 'Label', text: __('Button Name'), css: {marginTop: 15}},
							{type: 'DropdownBox', id: 'verb', options: [
								{id: '#0', name: __('Like'), value: 0},
								{id: '#1', name: __('This is interesting'), value: 1}
							]}
						]}
					]}
				]}
			]}
		]
	},
	
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('http://vk.com/js/api/openapi.js?116', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		}
	},
	previewHelper: {
		parentElem: null,
		elem: null,
		btnElem: null,
		counterElem: null,
		textCounterElem: null,
		textElem: null,
		type: 'button',
		init: function(parent) {
			this.parentElem = parent;
			this.elem = $('<div>');
			this.btnElem = $('<div>').css({
				minWidth: '41px',
				background: '#5F83AA',
				border: 'none',
				borderRadius: '2px',
				margin: '0px',
				padding: '3px',
				fontWeight: 'bold',
				fontSize: '10px',
				lineHeight: '12px',
				fontFamily: 'tahoma,verdana,arial,sans-serif,Lucida Sans',
				color: '#ffffff',
				textAlign: 'center',
				whiteSpace: 'nowrap',
				float: 'left',
				clear: 'left'
			});
			this.counterElem = $('<div>').css({
				minWidth: '41px',
				background: '#ffffff',
				border: '1px solid #BBBFC4',
				borderRadius: '2px',
				margin: '0px 0px 8px 0px',
				padding: '2px',
				fontWeight: 'bold',
				fontSize: '10px',
				lineHeight: '12px',
				fontFamily: 'tahoma,verdana,arial,sans-serif,Lucida Sans',
				color: '#666C73',
				textAlign: 'center',
				whiteSpace: 'nowrap',
				float: 'left'
			});
			this.textCounterElem = $('<div>').css({
				padding: '2px 2px 2px 8px',
				fontWeight: 'normal',
				fontSize: '10px',
				lineHeight: '12px',
				fontFamily: 'tahoma,verdana,arial,sans-serif,Lucida Sans',
				color: '#000000',
				whiteSpace: 'nowrap',
				float: 'left'
			});
			this.textElem = $('<span>').css({
				fontWeight: 'normal',
				marginLeft: '4px',
				display: 'inline-block'
			});
			this.counterElem.text('123K');
			this.textCounterElem.html('<b>123456</b> people find this interesting');
			this.btnElem.text('VK');
			this.elem.append(this.counterElem).append(this.btnElem.append(this.textElem));
			this.parentElem.append(this.elem);
		},
		setType: function(type) {
			this.type = type;
			if (type === 'full') {
				this.counterElem.detach();
				this.textCounterElem.detach().appendTo(this.elem);
			} else if (type === 'mini') {
				this.textCounterElem.detach();
				this.counterElem.detach().appendTo(this.elem);
				this.counterElem.css({marginBottom: '0px', marginLeft: '8px'});
			} else if (type === 'vertical') {
				this.textCounterElem.detach();
				this.counterElem.detach().prependTo(this.elem);
				this.counterElem.css({marginBottom: '8px', marginLeft: '0px'});
			} else { // (type === 'button')
				this.textCounterElem.detach();
				this.counterElem.detach().appendTo(this.elem);
				this.counterElem.css({marginBottom: '0px', marginLeft: '8px'});
			}
		},
		setVerb: function(verb) {
			if (this.type === 'mini' || this.type === 'vertical') {
				this.textElem.html('<i class="icon-heart icon-white" style="color:#AFC1D5; margin-bottom: -1px; margin-top: -1px; vertical-align: top; display: inline-block;"></i>');
			} else {
				if (verb === 1) {
					this.textElem.text('This is interesting');
				} else {
					this.textElem.text('Like');
				}
			}
		},
		setHeight: function(height) {
			var fontSize, lineHeight, paddingTop, paddingBottom;
			if (height === 24) {
				fontSize = 11; lineHeight = 13; paddingTop = 4; paddingBottom = 5;
			} else if (height === 22) {
				fontSize = 11; lineHeight = 13; paddingTop = 3; paddingBottom = 4;
			} else if (height === 20) {
				fontSize = 10; lineHeight = 12; paddingTop = paddingBottom = 3;
			} else { // (height === 18)
				fontSize = 10; lineHeight = 12; paddingTop = paddingBottom = 2;
			}
			this.counterElem.css({fontSize: (fontSize + 'px'), lineHeight: (lineHeight + 'px'), paddingTop: (paddingTop + 'px'), paddingBottom: (paddingBottom + 'px')});
			this.textCounterElem.css({fontSize: (fontSize + 'px'), lineHeight: (lineHeight + 'px'), paddingTop: ((paddingTop + 1) + 'px'), paddingBottom: ((paddingBottom + 1) + 'px')});
			this.btnElem.css({fontSize: (fontSize + 'px'), lineHeight: (lineHeight + 'px'), paddingTop: ((paddingTop + 1) + 'px'), paddingBottom: ((paddingBottom + 1) + 'px')});
		}
	},
	
	openAction: function(fields, data, elem) {
		var itm;
		fields.appId.setText(data.content.appId);
		fields.typeButton.setValue(data.content.type === 'button');
		fields.typeFull.setValue(data.content.type === 'full');
		fields.typeMini.setValue(data.content.type === 'mini');
		fields.typeVertical.setValue(data.content.type === 'vertical');
		itm = fields.height.getItemById('#' + data.content.height);
		fields.height.selectItem(itm);
		itm = fields.verb.getItemById('#' + data.content.verb);
		fields.verb.selectItem(itm);		
	},
	applyAction: function(fields, data, elem) {
		var itm;
		data.content.appId = fields.appId.getText();
		if (fields.typeButton.getValue()) data.content.type = 'button';
		if (fields.typeFull.getValue()) data.content.type = 'full';
		if (fields.typeMini.getValue()) data.content.type = 'mini';
		if (fields.typeVertical.getValue()) data.content.type = 'vertical';
		itm = fields.height.getSelectedItem();
		data.content.height = itm.getOriginal().value;
		itm = fields.verb.getSelectedItem();
		data.content.verb = itm.getOriginal().value;
		
		this.previewHelper.setType(data.content.type);
		this.previewHelper.setVerb(data.content.verb);
		this.previewHelper.setHeight(data.content.height);
		data.content.previewHtml = this.previewHelper.elem.html();
		var rwidth = this.previewHelper.btnElem.outerWidth(true) + ((data.content.type === 'vertical') ? 0 : ((data.content.type === 'full') ? this.previewHelper.textCounterElem.outerWidth(true) : this.previewHelper.counterElem.outerWidth(true))),
			rheight = (data.content.type === 'vertical') ? (data.content.height * 2 + 8) : data.content.height;
		
		this.setSize(rwidth, rheight);
	},
	loadAction: function(data) {
		if (!data.content.appId) data.content.appId = '';
		if (!data.content.type) data.content.type = 'button';
		if (!data.content.verb) data.content.verb = 0;
		if (!data.content.height) data.content.height = 22;
		if (!data.content.previewHtml) data.content.previewHtml = '';
	},
	loadedAction: function(data, elem) {
		this.previewHelper.init(elem);
		this.previewHelper.setType(data.content.type);
		this.previewHelper.setVerb(data.content.verb);
		this.previewHelper.setHeight(data.content.height);
		data.content.previewHtml = this.previewHelper.elem.html();
		/*this.pluginScoped.addListener(this, function() {
			window.VK.init({apiId: data.content.apiId, onlyWidgets: true});
			window.VK.Widgets.Like(data.id + '_vk_like', {type: data.content.type, verb: data.content.verb, height: data.content.height});
		});*/
	}
	
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/olark\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n\t<div class=\"alert alert-warning\" style=\"height:100%; text-align: center;\" role=\"alert\">Olark settings<\/div>\n{{\/isPublished}}\n{{#isPublished}}\n{{\/isPublished}}\n<script data-cfasync=\"false\" type='text\/javascript'>\/*<![CDATA[*\/window.olark||(function(c){var f=window,d=document,l=f.location.protocol==\"https:\"?\"https:\":\"http:\",z=c.name,r=\"load\";var nt=function(){\nf[z]=function(){\n(a.s=a.s||[]).push(arguments)};var a=f[z]._={\n},q=c.methods.length;while(q--){(function(n){f[z][n]=function(){\nf[z](\"call\",n,arguments)}})(c.methods[q])}a.l=c.loader;a.i=nt;a.p={\n0:+new Date};a.P=function(u){\na.p[u]=new Date-a.p[0]};function s(){\na.P(r);f[z](r)}f.addEventListener?f.addEventListener(r,s,false):f.attachEvent(\"on\"+r,s);var ld=function(){function p(hd){\nhd=\"head\";return[\"<\",hd,\"><\/\",hd,\"><\",i,' onl' + 'oad=\"var d=',g,\";d.getElementsByTagName('head')[0].\",j,\"(d.\",h,\"('script')).\",k,\"='\",l,\"\/\/\",a.l,\"'\",'\"',\"><\/\",i,\">\"].join(\"\")}var i=\"body\",m=d[i];if(!m){\nreturn setTimeout(ld,100)}a.P(1);var j=\"appendChild\",h=\"createElement\",k=\"src\",n=d[h](\"div\"),v=n[j](d[h](z)),b=d[h](\"iframe\"),g=\"document\",e=\"domain\",o;n.style.display=\"none\";m.insertBefore(n,m.firstChild).id=z;b.frameBorder=\"0\";b.id=z+\"-loader\";if(\/MSIE[ ]+6\/.test(navigator.userAgent)){\nb.src=\"javascript:false\"}b.allowTransparency=\"true\";v[j](b);try{\nb.contentWindow[g].open()}catch(w){\nc[e]=d[e];o=\"javascript:var d=\"+g+\".open();d.domain='\"+d.domain+\"';\";b[k]=o+\"void(0);\"}try{\nvar t=b.contentWindow[g];t.write(p());t.close()}catch(x){\nb[k]=o+'d.write(\"'+p().replace(\/\"\/g,String.fromCharCode(92)+'\"')+'\");d.close();'}a.P(2)};ld()};nt()})({\nloader: \"static.olark.com\/jsclient\/loader0.js\",name:\"olark\",methods:[\"configure\",\"extend\",\"declare\",\"identify\"]});\n\/* custom configuration goes here (www.olark.com\/documentation) *\/\nolark.identify('{{content.groupId}}');\/*]]>*\/<\/script><noscript><a href=\"https:\/\/www.olark.com\/site\/{{content.groupId}}\/contact\" title=\"Contact us\" target=\"_blank\">Questions? Feedback?<\/a> powered by <a href=\"http:\/\/www.olark.com?welcome\" title=\"Olark live chat software\">Olark live chat software<\/a><\/noscript>";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('olark', {
    name: 'Olark',
    element: {
        minSize: {
            width: 50,
            height: 50
        },
        defaultSize: {
            width: 90,
            height: 60
        },
        resizable: true
    },
    propertyDialog: {
        noScroll: true,
        tabs: [{
            name: 'General',
            children: [{
                type: 'VerticalLayout',
                children: [{
                    type: 'Label',
                    text: __('Olark Site ID'),
                }, {
                    type: 'TextField',
                    id: 'groupId',
                    css: {
                        width: 488
                    }
                }]
            }, ]
        }]
    },
    resizeTimeout: null,

    resizeAction: function(data, elem) {
        if (!this.resizeTimeout) {
            var self = this;
            this.resizeTimeout = setTimeout(function() {
                self.resizeTimeout = null;
                self.updateElement();
            }, 1000);
        }
    },
    openAction: function(fields, data, elem) {
        fields.groupId.setText(data.content.groupId);
    },
    applyAction: function(fields, data, elem) {
        data.content.groupId = fields.groupId.getText();
    },
    loadAction: function(data) {
        if (!data.content.groupId) data.content.groupId = '9336-205-10-2444';
    }
});});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/pagseguro\/main.png";
PluginWrapper._config.template = "<form method=\"post\" target=\"pagseguro\"  action=\"https:\/\/pagseguro.uol.com.br\/v2\/checkout\/payment.html\">  \n          \n        <input name=\"receiverEmail\" type=\"hidden\" value=\"{{content.email}}\"\/>\n        <input name=\"currency\" type=\"hidden\" value=\"BRL\"\/>\n  \n        <input name=\"itemId1\" type=\"hidden\" value=\"{{content.itemid}}\"\/>\n        <input name=\"itemDescription1\" type=\"hidden\" value=\"{{content.itemdescription}}\"\/>\n        <input name=\"itemAmount1\" type=\"hidden\" value=\"{{content.itemamount}}\" data-fixed-decimal=\"2\"\/>\n        <input name=\"itemQuantity1\" type=\"hidden\" value=\"{{#content.itemquantity}}{{content.itemquantity}}{{\/content.itemquantity}}{{^content.itemquantity}}1{{\/content.itemquantity}}\"\/>\n  \n        <input alt=\"Pague com PagSeguro\" name=\"submit\"  type=\"image\"  src=\"https:\/\/p.simg.uol.com.br\/out\/pagseguro\/i\/botoes\/pagamentos\/120x53-pagar.gif\"\/>  \n<\/form>  ";
PluginWrapper._config.active = true;
/* global PluginWrapper, wb_builder */

wb_builder.registerPaymentGateway({
	name: __('PagSeguro'),
	id: 'pagseguro',
	keyField: __('Email'),
	keyFieldId: 'email',
	titleFieldId: null,
	nameFieldId: 'itemdescription',
	priceFieldId: 'itemamount',
	priceFixedDecimal: 2,
	paymentIdFieldId: 'itemid',
	currencyFieldId: null
});
PluginWrapper.registerPlugin('pagseguro', {
	name: __('PagSeguro'),
	element: {
		minSize: {width: 120, height: 55},
		defaultSize: {width: 120, height: 55},
		resizable: false
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Email'), helpText:__("Email registered to your PagSeguro account.")},
							{type: 'TextField', id: 'email'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('ID'), helpText:__("Unique item identifier")},
							{type: 'TextField', id: 'itemid'}
						]}
					]},
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount')},
							{type: 'TextField', id: 'itemamount'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Quantity')},
							{type: 'TextField', id: 'itemquantity'}
						]}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Description')},
						{type: 'TextField', id: 'itemdescription'}
					]}
				]}
			]}
		]
	},
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function() {
				self.resizeTimeout = null;
				self.updateElement();
			}, 1000);
		}
	},
	openAction: function(fields, data, elem) {
		fields.email.setText(data.content.email);
		fields.itemid.setText(data.content.itemid);
		fields.itemdescription.setText(data.content.itemdescription);
		fields.itemamount.setText(data.content.itemamount);
		fields.itemquantity.setText(data.content.itemquantity);
	},
	applyAction: function(fields, data, elem) {
		data.content.email = fields.email.getText();
		data.content.itemid = fields.itemid.getText();
		data.content.itemdescription = fields.itemdescription.getText();
		data.content.itemamount = fields.itemamount.getText();
		data.content.itemquantity = fields.itemquantity.getText();
	},
	loadAction: function (data) {
		if (!data.content.email) data.content.email = 'suporte@lojamodelo.com.br';
		if (!data.content.itemid) data.content.itemid = Date.now();
		if (!data.content.itemdescription) data.content.itemdescription = 'Donate';
		if (!data.content.itemamount) data.content.itemamount = '24300.00';
		if (!data.content.itemquantity) data.content.itemquantity = 1;
	}
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/youku\/main.png";
PluginWrapper._config.template = "<embed src=\"http:\/\/player.youku.com\/player.php\/sid\/{{content.groupId}}==\/v.swf\" wmode=\"{{content.wmode}}\"\r\n       allowFullScreen=\"true\" quality=\"{{content.quality}}\"\r\n       width=\"100%\" height=\"100%\" align=\"middle\" allowScriptAccess=\"always\" type=\"application\/x-shockwave-flash\"\r\n       bgcolor=\"#{{content.color}}\" menu=\"false\" loop=\"true\"\r\n       flashvars=\"isAutoPlay={{content.play}}\">\r\n<\/embed>\r\n\r\n";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('youku', {
    name: __('Youku'),
    element: {
        minSize: {width: 100, height: 100},
        defaultSize: {width: 400, height: 300},
        resizable: true
    },
    propertyDialog: {
        noScroll: true,
        tabs: [
            {
                children: [
                    {
                        type: 'VerticalLayout', children: [
                        {
                            type: 'Label', text: __('Youku video url'),
                            helpText: __('Copy full youku video url (http://v.youku.com/v_show/id_XMTYzOTI2OTE4MA==.html?from=y1.2-2-85.3.2-1.1-3-1-1-0)')
                        },
                        {type: 'TextField', id: 'groupId'}
                    ]
                    }
                    ,
                    {
                        type: 'HorizontalLayout', css: {marginTop: 15}, children: [
                        {
                            type: 'VerticalLayout', children: [
                            {
                                type: 'Label',
                                text: __('Autoplay'),
                                helpText: __('Disable or enable autoplay.')
                            },
                            {type: 'RadioBox', id: 'autoplay0', label: __('Enable'), group: 'play'},
                            {type: 'RadioBox', id: 'autoplay1', label: __('Disable'), group: 'play'}
                        ]
                        },
                        {
                            type: 'VerticalLayout', children: [
                            {
                                type: 'Label',
                                text: __('Video quality settings'),
                                helpText: __('Allows to preset video quality settings.')
                            },
                            {type: 'RadioBox', id: 'quality0', label: __('low'), group: 'quality'},
                            {type: 'RadioBox', id: 'quality1', label: __('autolow'), group: 'quality'},
                            {type: 'RadioBox', id: 'quality2', label: __('autohigh'), group: 'quality'},
                            {type: 'RadioBox', id: 'quality3', label: __('Medium'), group: 'quality'},
                            {type: 'RadioBox', id: 'quality4', label: __('high'), group: 'quality'},
                            {type: 'RadioBox', id: 'quality5', label: __('best'), group: 'quality'}
                        ]


                        },
                        {
                            type: 'VerticalLayout', children: [
                            {
                                type: 'Label',
                                text: __('Window Mode settings'),
                                helpText: __('Changes settings to window mode.')
                            },
                            {type: 'RadioBox', id: 'wmode0', label: __('window'),       group: 'wmode', helpText: __('Broadest accessibility support.')},
                            {type: 'RadioBox', id: 'wmode1', label: __('Transparent'), group: 'wmode',helpText: __('Transparency and alpha blending over HTML elements supported. HTML elements can overlap SWF content. Explicit layering control (all browsers).') },
                            {type: 'RadioBox', id: 'wmode2', label: __('opaque'),    group: 'wmode', helpText: __('HTML elements can overlap SWF content. Explicit layering control (all browsers).')},
                            {type: 'RadioBox', id: 'wmode3', label: __('direct'),    group: 'wmode', helpText: __('Best performance. Hardware accelerated presentation, including Stage Video and Stage 3D (all browsers).')},
                            {type: 'RadioBox', id: 'wmode4', label: __('gpu'),      group: 'wmode', helpText: __('Additional hardware acceleration on some Internet connected TVs and mobile devices.')}
                        ]


                        },
                        {
                            type: 'VerticalLayout', children: [
                            {
                                type: 'Label',
                                text: __('Video background color'),
                                helpText: __('Sets background color while video is loading')
                            },
                            {type: 'ColorSelector', id: 'color'}
                        ]
                        }
                    ]
                    }
                ]
            }
        ]
    },

    openAction: function (fields, data, elem) {

        fields.groupId.setText(data.content.groupId);

        fields.color.setValue(data.content.color);

        fields.autoplay0.setValue(data.content.play === 'true');
        fields.autoplay1.setValue(data.content.play === 'false');

        fields.quality0.setValue(data.content.quality === 'low');
        fields.quality1.setValue(data.content.quality === 'autolow');
        fields.quality2.setValue(data.content.quality === 'autohigh');
        fields.quality3.setValue(data.content.quality === 'medium');
        fields.quality4.setValue(data.content.quality === 'high');
        fields.quality5.setValue(data.content.quality === 'best');

        fields.wmode0.setValue(data.content.wmode === 'window');
        fields.wmode1.setValue(data.content.wmode === 'transparent');
        fields.wmode2.setValue(data.content.wmode === 'opaque');
        fields.wmode3.setValue(data.content.wmode === 'direct');
        fields.wmode4.setValue(data.content.wmode === 'gpu');

        fields.groupId.on('change', function () {

            var url = fields.groupId.getText();
            var regExp = /http:\/\/(v.youku.com)\/(v_show)\/(id_)([A-Za-z0-9]*)/;

            var match = url.match(regExp);
            if (match) {
                fields.groupId.setText(match[4]);

            }
        });
    },

    applyAction: function (fields, data, elem) {
        data.content.groupId = fields.groupId.getText();
        data.content.color = fields.color.getValue().replace('#', '');

        if (fields.autoplay0.getValue()) data.content.play = 'true';
        if (fields.autoplay1.getValue()) data.content.play = 'false';

        if (fields.quality0.getValue()) data.content.quality = 'low';
        if (fields.quality1.getValue())data.content.quality = 'autolow';
        if (fields.quality2.getValue())data.content.quality = 'autohigh';
        if (fields.quality3.getValue())data.content.quality = 'medium';
        if (fields.quality4.getValue())data.content.quality = 'high';
        if (fields.quality5.getValue())data.content.quality = 'best';

        if (fields.wmode0.getValue())data.content.wmode = 'window';
        if (fields.wmode1.getValue())data.content.wmode = 'transparent';
        if (fields.wmode2.getValue())data.content.wmode = 'opaque';
        if (fields.wmode3.getValue())data.content.wmode = 'direct';
        if (fields.wmode4.getValue())data.content.wmode = 'gpu';

    },

    loadAction: function (data) {
        if (!data.content.groupId) data.content.groupId = 'XMTYzOTI2OTE4MA';
        if (!data.content.title) data.content.play = 'false';
        if (!data.content.quality) data.content.quality = 'high';
        if (!data.content.wmode) data.content.wmode = 'window';
        if (!data.content.color) data.content.color = 'ffffff';


    }
});

});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/ideal_payment\/main.png";
PluginWrapper._config.template = "<form id=\"{{id}}_form\" method=\"post\" action=\"https:\/\/internetkassa.abnamro.nl\/ncol\/prod\/orderstandard.asp\" target=\"_blank\" class=\"ideal\" data-gateway-id=\"iDEAL\"{{#content.store}} data-amount-onchange=\"ideal_amount_onchange\"{{\/content.store}}>\n\t<input type=\"hidden\" name=\"PSPID\" value=\"{{content.pspid}}\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"orderID\" value=\"{transactionId}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t<input type=\"hidden\" name=\"orderID\" value=\"{{content.orderId}}\" \/>\n\t{{\/content.store}}\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.pamount}}\"{{#content.store}}data-onchange=\"ideal_amount_onchange\"{{\/content.store}} \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t<input type=\"hidden\" name=\"PM\" value=\"iDEAL\" \/>\n\t<input type=\"hidden\" name=\"COM\" value=\"{{content.description}}\" \/>\n\t<button class=\"iDEALeasy\" type=\"submit\" name=\"submit1\" value=\"submit\"\n\t\t    style=\"{{#width}}width: {{width}}px;{{\/width}}\n\t\t           {{#height}}height: {{height}}px;{{\/height}}\">\n\t{{content.btnLabel}}\n\t<\/br>\n\t<img src=\"https:\/\/internetkassa.abnamro.nl\/images\/iDEAL_easy.gif\" alt=\"iDEAL\" \/>\n\t<\/button>\n<\/form>\n{{#content.store}}\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar ideal_amount_onchange = function(field) {\n\t\t\tfield.value = Math.floor(parseFloat(field.value) * 100);\n\t\t};\n\t\twindow.ideal_amount_onchange = ideal_amount_onchange;\n\t})();\n<\/script>\n{{\/content.store}}";
PluginWrapper._config.active = true;
wb_builder.registerPaymentGateway({
	name: __('iDEAL'),
	id: 'ideal_payment',
	keyField: __('PSPID'),
	keyFieldId: 'pspid',
	titleFieldId: 'btnLabel',
	nameFieldId: 'description',
	priceFieldId: 'pamount',
	currencyFieldId: 'currency'
});
PluginWrapper.registerPlugin('ideal_payment', {
	name: __('iDEAL'),
	element: {
		minSize: {width: 100, height: 80},
		defaultSize: {width: 100, height: 80},
		resizable: true,
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Button label'), helpText:__('Label name on submit button')},
						{type: 'TextField', id: 'btnLabel'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('PSPID'), helpText:__("Your affiliation name in ABN-AMRO system")},
						{type: 'TextField', id: 'pspid'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description'), helpText:__("The name of the goods. Cannot contain special symbols")},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount'), helpText:__('Amount to be transferred')},
							{type: 'TextField', id: 'amount'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Currency'), helpText: __('Currency of the amount')},
							{type: 'DropdownBox', id: 'currency', options: [
								{id: '#EUR', name: 'EUR', value: 'EUR'},
								{id: '#USD', name: 'USD', value: 'USD'},
								{id: '#GBP', name: 'GBP', value: 'GBP'},
								{id: '#HKD', name: 'HKD', value: 'HKD'},
								{id: '#SGD', name: 'SGD', value: 'SGD'},
								{id: '#JPY', name: 'JPY', value: 'JPY'},
								{id: '#CAD', name: 'CAD', value: 'CAD'},
								{id: '#AUD', name: 'AUD', value: 'AUD'},
								{id: '#CHF', name: 'CHF', value: 'CHF'},
								{id: '#DKK', name: 'DKK', value: 'DKK'},
								{id: '#SEK', name: 'SEK', value: 'SEK'},
								{id: '#NOK', name: 'NOK', value: 'NOK'},
								{id: '#ILS', name: 'ILS', value: 'ILS'},
								{id: '#MYR', name: 'MYR', value: 'MYR'},
								{id: '#NZD', name: 'NZD', value: 'NZD'},
								{id: '#TRY', name: 'TRY', value: 'TRY'},
								{id: '#AED', name: 'AED', value: 'AED'},
								{id: '#MAD', name: 'MAD', value: 'MAD'},
								{id: '#QAR', name: 'QAR', value: 'QAR'},
								{id: '#SAR', name: 'SAR', value: 'SAR'},
								{id: '#TWD', name: 'TWD', value: 'TWD'},
								{id: '#THB', name: 'THB', value: 'THB'},
								{id: '#CZK', name: 'CZK', value: 'CZK'},
								{id: '#HUF', name: 'HUF', value: 'HUF'},
								{id: '#SKK', name: 'SKK', value: 'SKK'},
								{id: '#BGN', name: 'BGN', value: 'BGN'},
								{id: '#PLN', name: 'PLN', value: 'PLN'},
								{id: '#ISK', name: 'ISK', value: 'ISK'},
								{id: '#INR', name: 'INR', value: 'INR'},
								{id: '#KRW', name: 'KRW', value: 'KRW'},
								{id: '#ZAR', name: 'ZAR', value: 'ZAR'},
								{id: '#RON', name: 'RON', value: 'RON'},
								{id: '#HRK', name: 'HRK', value: 'HRK'},
								{id: '#JOD', name: 'JOD', value: 'JOD'},
								{id: '#OMR', name: 'OMR', value: 'OMR'},
								{id: '#RSD', name: 'RSD', value: 'RSD'},
								{id: '#TND', name: 'TND', value: 'TND'}
							]}
						]}
					]}
				]}
			]}
		]
	},
	resizeAction: function(data, elem) {
		elem.find('.iDEALeasy').eq(0).css({width: data.width, height: data.height});
	},
	openAction: function(fields, data, elem) {
		fields.btnLabel.setText(data.content.btnLabel);
		fields.description.setText(data.content.description);
		fields.pspid.setText(data.content.pspid);
		fields.amount.setText(data.content.amount);
		var itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
	},
	applyAction: function(fields, data, elem) {
		data.content.btnLabel = fields.btnLabel.getText();
		data.content.description = fields.description.getText();
		data.content.pspid = fields.pspid.getText();
		data.content.amount = fields.amount.getText();
		data.content.pamount = Math.floor(parseFloat(data.content.amount) * 100);
		var itm = fields.currency.getSelectedItem();
		data.content.orderId = this.StringHash.generate(17);
		data.content.currency = itm.getOriginal().value;

	},
	loadAction: function (data) {
		if (!data.content.btnLabel) data.content.btnLabel = 'Betalen met';
		if (!data.content.description) data.content.description = __('Product description');
		if (!data.content.pspid) data.content.pspid = '';
		if (!data.content.amount) data.content.amount = '10';
		data.content.pamount = Math.floor(parseFloat(data.content.amount) * 100);
		if (!data.content.currency) data.content.currency = 'EUR';
	},
	StringHash: {
		_chars: ['A','B','C','D','E','F','G','H','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Z','1','2','3','4','5','6','7','8','9','0'],
		_getRandChar: function() {
			return this._chars[Math.floor(Math.random() * this._chars.length)];
		},
		generate: function(len) {
			if (!len) len = 17;
			var str = '';
			for (var i=0; i < len; i++) {
				str += this._getRandChar();
			}
			return str;
		}
	}
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/yandex_maps\/main.png";
PluginWrapper._config.template = "<div class=\"ymaps\" id=\"{{id}}_ymaps\" style=\"width: 100%; height: 100%;\"><\/div>\r\n{{#isPublished}}\r\n\t{{#firstOnPage}}\r\n<script type=\"text\/javascript\">\r\n\twindow.WB_YandexMaps = {\r\n\t\tscriptReady: false,\r\n\t\tymaps: null,\r\n\t\tlisteners: [],\r\n\t\taddListener: function(inst, func) {\r\n\t\t\tif (this.scriptReady) {\r\n\t\t\t\tfunc.call(inst, this.ymaps);\r\n\t\t\t} else {\r\n\t\t\t\tthis.listeners.push({inst: inst, func: func});\r\n\t\t\t}\r\n\t\t},\r\n\t\tready: function(ymaps) {\r\n\t\t\tthis.scriptReady = true;\r\n\t\t\tthis.ymaps = ymaps;\r\n\t\t\tfor (var i = 0; i < this.listeners.length; i++) {\r\n\t\t\t\tthis.listeners[i].func.call(this.listeners[i].inst, ymaps);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\twindow.WB_YandexMaps_script_fn = function(ymaps) { window.WB_YandexMaps.ready(ymaps); };\r\n<\/script>\r\n<script type=\"text\/javascript\" src=\"https:\/\/api-maps.yandex.ru\/2.1\/?lang=en_US&onload=WB_YandexMaps_script_fn&lang=ru_RU\"><\/script>\r\n\t{{\/firstOnPage}}\r\n<script type=\"text\/javascript\">\r\n\twindow.WB_YandexMaps.addListener(window, function(ymaps) {\r\n\t\tvar ll = [{{#content.ll}}{{.}},{{\/content.ll}}0], zoom = {{content.zoomLevel}}, type = '{{content.type}}';\r\n\t\tvar map = new ymaps.Map('{{id}}_ymaps', { center: ll, zoom: zoom });\r\n\t\tif (type) map.setType(type);\r\n\t\tvar marker = new ymaps.Placemark(ll, {});\r\n\t\tmap.geoObjects.add(marker);\r\n\t});\r\n<\/script>\r\n{{\/isPublished}}";
PluginWrapper._config.active = true;

PluginWrapper.registerPlugin('yandex_maps', {
	name: __('Yandex Maps'),
	noButton: true,
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 602, height: 327},
		resizable: true,
		renderOnce: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', columnWeights: [8, 4], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Coordinates or address'), helpText: __('Location address or coordinates')},
						{type: 'TextField', id: 'address'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: 'Zoom level', helpText: __('ex. 4')},
						{type: 'SizeSelector', id: 'zoomLevel'}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'Label', text: __('Drag marker to set your location')},
					{type: 'CustomContainer', id: 'mapElem', css: {width: '100%', height: 220, border: '1px solid #cccccc', backgroundColor: '#ebebeb'}}
				]}
			]}
		]
	},
	
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		ymaps: null,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst, this.ymaps);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				window.WB_YandexMaps_script_fn = function(ymaps) {
					self.scriptReady = true;
					self.ymaps = ymaps;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst, ymaps);
					}
				};
				$.getScript('https://api-maps.yandex.ru/2.1/?lang=en_US&onload=WB_YandexMaps_script_fn&lang=ru_RU');
			}
		},
		handleAddress: function(address, func) {
			if (('' + address).match(/[0-9\.]+[\ ]*,[\ ]*[0-9\.]+/i)) {
				var parts = ('' + address).split(',');
				if (typeof func === 'function') func.call(this, [parseFloat(parts[0]), parseFloat(parts[1])]);
			} else {
				var self = this, selfFunc = func, geoc = this.ymaps.geocode(address);
				geoc.then(function(res) {
					if (typeof selfFunc === 'function') selfFunc.call(self, res.geoObjects.get(0).geometry.getCoordinates());
				}, function(err) {});
			}
		}
	},
	map: null,
	mapMarker: null,
	mapElem: null,
	
	resizeAction: function(data, elem) {
		if (this.mapElem) this.mapElem.css({width: data.width, height: data.height});
		if (this.map) this.map.container.fitToViewport();
	},
	
	openAction: function(fields, data, elem) {
		fields.address.setText(data.content.address);
		fields.zoomLevel.setValue(data.content.zoomLevel);
		fields.type = data.content.type;
		var self = this;
		if (!fields.map) {
			fields.address.on('change', function() {
				self.pluginScoped.handleAddress(fields.address.getText(), function(ll) {
					fields.map.setCenter(ll);
					fields.mapMarker.geometry.setCoordinates(ll);
				});
			});
			fields.address.on('keydown', function(e) {
				if (e.keyCode === 13) {
					self.pluginScoped.handleAddress(fields.address.getText(), function(ll) {
						fields.map.setCenter(ll);
						fields.mapMarker.geometry.setCoordinates(ll);
					});
				}
			});
			fields.zoomLevel.on('change', function() {
				fields.map.setZoom(fields.zoomLevel.getValue());
			});
			this.pluginScoped.addListener(this, function(ymaps) {
				//fields.mapElem.css({width: fields.mapElem.getElem().outerWidth()});
				fields.map = new ymaps.Map(fields.mapElem.getElem().get(0), {
					center: data.content.ll,
					zoom: data.content.zoomLevel,
					controls: ['searchControl', 'typeSelector', 'zoomControl']
				});
				fields.map.events.add('boundschange', function(e) {
					fields.zoomLevel.setValue(e.get('newZoom'));
				});
				fields.map.events.add('typechange', function() {
					fields.type = fields.map.getType();
				});
				if (!fields.type) {
					fields.type = fields.map.getType();
				} else {
					fields.map.setType(fields.type);
				}
				fields.map.setZoom(data.content.zoomLevel);
				fields.mapMarker = new ymaps.Placemark(data.content.ll, {}, {draggable: true});
				fields.mapMarker.events.add('dragend', function() {
					var p = fields.mapMarker.geometry.getCoordinates();
					fields.address.setText(p[0] + ', ' + p[1]);
				});
				fields.map.geoObjects.add(fields.mapMarker);
				var searchControl = fields.map.controls.get(0);
				searchControl.events.add('resultselect', function() {
					if (searchControl.getResultsCount() > 0) {
						fields.address.setText(searchControl.getRequestString());
						var results = searchControl.getResultsArray();
						fields.mapMarker.geometry.setCoordinates(results[searchControl.getSelectedIndex()].geometry.getCoordinates());
					}
				});
				searchControl.events.add('load', function() {
					
				});
			});
		} else {
			if (data.content.type) fields.map.setType(data.content.type);
			fields.map.setZoom(data.content.zoomLevel);
			fields.map.setCenter(data.content.ll);
			fields.mapMarker.geometry.setCoordinates(data.content.ll);
		}
	},
	applyAction: function(fields, data, elem) {
		data.content.address = fields.address.getText();
		data.content.zoomLevel = fields.zoomLevel.getValue();
		data.content.type = fields.type;
		if (data.content.type) this.map.setType(data.content.type);
		this.map.setZoom(data.content.zoomLevel);
		var self = this;
		this.pluginScoped.handleAddress(data.content.address, function(ll) {
			data.content.ll = ll;
			self.map.setCenter(data.content.ll);
			self.mapMarker.geometry.setCoordinates(data.content.ll);
		});
	},
	loadAction: function(data) {
		if (!data.content.address) data.content.address = '55.76, 37.64';
		if (!data.content.ll) data.content.ll = [55.76, 37.64];
		if (!data.content.zoomLevel) data.content.zoomLevel = 12;
	},
	loadedAction: function(data, elem) {
		this.mapElem = elem.find('.ymaps');
		var self = this;
		this.pluginScoped.addListener(this, function(ymaps) {
			self.map = new ymaps.Map(self.mapElem.get(0), {
				center: data.content.ll,
				zoom: data.content.zoomLevel
			});
			if (data.content.type) self.map.setType(data.content.type);
			self.mapMarker = new ymaps.Placemark(data.content.ll, {});
			self.map.geoObjects.add(self.mapMarker);
		});
	},
	saveAction: function(data, elem) {
		// TODO: save data
	}
	
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/bing_maps\/main.png";
PluginWrapper._config.template = "<div id=\"{{id}}_myMap\" class=\"bingmap\" style=\"position:relative; min-width:200px; min-height:350px; height:100%;\"><\/div>\r\n<script type=\"text\/javascript\" src=\"https:\/\/ecn.dev.virtualearth.net\/mapcontrol\/mapcontrol.ashx?v=7.0\"><\/script>\r\n<script type=\"text\/javascript\">\r\n\t(function() {\r\n\t\tvar getMap_{{id}} = function() {\r\n\t\t\tMicrosoft.Maps.loadModule('Microsoft.Maps.Themes.BingTheme', { callback: function() {\r\n\t\t\t\tmap_{{id}} = new Microsoft.Maps.Map(document.getElementById('{{id}}_myMap'), { \r\n\t\t\t\t\tcredentials: 'ApPNwjkjVaJTByMcHel3UAEz1F9svn5Gj3sKrky4LimlC1IRKLCK6k3exq3wNlom', \r\n\t\t\t\t\tmapTypeId: Microsoft.Maps.MapTypeId.road,\r\n\t\t\t\t\ttheme: new Microsoft.Maps.Themes.BingTheme(),\r\n\t\t\t\t\tzoom: {{content.zoomLevel}},\r\n\t\t\t\t\tcenter: new Microsoft.Maps.Location(Number(\"{{content.loc1}}\").valueOf(), Number(\"{{content.loc2}}\").valueOf())\r\n\t\t\t\t});\r\n\t\t\t\tvar pushpin= new Microsoft.Maps.Pushpin(map_{{id}}.getCenter(), null); \r\n\t\t\t\tpushpin.setLocation(new Microsoft.Maps.Location(Number(\"{{content.loc1}}\").valueOf(), Number(\"{{content.loc2}}\").valueOf()));\r\n\t\t\t\tmap_{{id}}.entities.push(pushpin)\r\n\t\t\t}});\r\n\t\t}\r\n\t\ttwait = function() {\r\n\t\t\tif (window.Microsoft && window.Microsoft.Maps && typeof window.Microsoft.Maps.loadModule === 'function') {\r\n\t\t\t\tgetMap_{{id}}();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetTimeout(twait, 100);\r\n\t\t};\r\n\t\ttwait();\r\n\t})();\r\n<\/script>\r\n";
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('bing_maps', {
	name: __('Bing Maps'),
	noButton: true,
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 602, height: 327},
		resizable: true,
		renderOnce: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'HorizontalLayout', columnWeights: [8, 4], children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Coordinates or address'), helpText: __('Location address or coordinates')},
							{type: 'TextField', id: 'address'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Zoom level'), helpText: __('ex. 4')},
							{type: 'SizeSelector', id: 'zoomLevel'}
						]}
					]},
					{type: 'VerticalLayout', css: {marginTop:15}, children: [
						{type: 'Label', text: __('Drag marker to set your location')},
						{type: 'CustomContainer', id: 'mapElem', css: {width: '100%', height: 234, position: 'relative', border: '1px solid #aaaaaa', backgroundColor: '#ebebeb'}}
					]}
				]}
			]}
		]
	},

	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst, this.ymaps);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0', function() {
					var twait = function() {
						var wnd = window;
						if (wnd.Microsoft && wnd.Microsoft.Maps && typeof wnd.Microsoft.Maps.loadModule === 'function') {
							wnd.Microsoft.Maps.loadModule('Microsoft.Maps.Themes.BingTheme', {
								callback: function() {
									self.scriptReady = true;
									for (var i = 0; i < self.listeners.length; i++) {
										self.listeners[i].func.call(self.listeners[i].inst);
									}
								}
							});
							return;
						}
						setTimeout(twait, 100);
					};
					twait();
				});
			}
		}
	},
	map: null,
	mapElem: null,

	resizeAction: function(data, elem) {
		if (this.mapElem) this.mapElem.css({
			width: data.width,
			height: data.height
		});
		if (this.map && this.map.container) this.map.container.fitToViewport();
	},

	openAction: function(fields, data, elem) {
		fields.address.setText(data.content.address);
		fields.zoomLevel.setValue(data.content.zoomLevel);
		var self = this;
		data.content.coord = data.content.address.split(',');
		data.content.loc1 = data.content.coord[0];
		data.content.loc2 = data.content.coord[1];
		
		$(fields.address.getElem().get(0)).autocomplete({
			source: function(request, response) {
				$.ajax({
					url: 'https://dev.virtualearth.net/REST/v1/Locations',
					dataType: 'jsonp',
					data: {
						key: 'ApPNwjkjVaJTByMcHel3UAEz1F9svn5Gj3sKrky4LimlC1IRKLCK6k3exq3wNlom',
						q: request.term
					},
					jsonp: 'jsonp',
					success: function(data) {
						var result = data.resourceSets[0];
						if (result) {
							if (result.estimatedTotal > 0) {
								response($.map(result.resources, function(item) {
									return {
										data: item,
										label: item.name + ' (' + item.address.countryRegion + ')',
										value: item.name
									};
								}));
							}
						}
					}
				});
			},
			minLength: 1,
			change: function(event, ui) {
				if (ui.item) displaySelectedItem(ui.item.data);
			},
			select: function(event, ui) {
			}
		});

		function displaySelectedItem(item) {
			fields.address.setText(item.point.coordinates[0] + ', ' + item.point.coordinates[1]);
			fields.map.entities.clear();
			fields.map.setView({
				center: new Microsoft.Maps.Location(item.point.coordinates[0], item.point.coordinates[1])
			});
			var pushpinOptions = {
				draggable: true
			};
			var pushpin = new Microsoft.Maps.Pushpin(fields.map.getCenter(), pushpinOptions);
			fields.map.entities.push(pushpin);

		}

		Microsoft.Maps.loadModule('Microsoft.Maps.Themes.BingTheme', {
			callback: function() {
				fields.map = new Microsoft.Maps.Map(fields.mapElem.getElem().get(0), {
					credentials: 'ApPNwjkjVaJTByMcHel3UAEz1F9svn5Gj3sKrky4LimlC1IRKLCK6k3exq3wNlom',
					mapTypeId: Microsoft.Maps.MapTypeId.road,
					theme: new Microsoft.Maps.Themes.BingTheme(),
					zoom: data.content.zoomLevel,
					center: new Microsoft.Maps.Location(data.content.loc1, data.content.loc2)
				});
				var pushpinOptions = {
					draggable: true
				};
				var pushpin = new Microsoft.Maps.Pushpin(self.map.getCenter(), pushpinOptions);
				pushpin.setLocation(new Microsoft.Maps.Location(data.content.loc1, data.content.loc2));
				pushpindrag = Microsoft.Maps.Events.addHandler(pushpin, 'drag', function(e) {
					loc = e.entity.getLocation();
					fields.address.setText(loc.latitude + ', ' + loc.longitude);
					data.content.address = loc.latitude + ', ' + loc.longitude;
				});
				fields.map.entities.push(pushpin);
			}
		});

		function LoadSearchModule() {
			Microsoft.Maps.loadModule('Microsoft.Maps.Search', {
				callback: geocodeRequest
			});
		}

		function geocodeRequest() {
			fields.map.addComponent('searchManager', new Microsoft.Maps.Search.SearchManager(fields.map));
			searchManager = fields.map.getComponent('searchManager');

			var where = data.content.address;
			var userData = {
				name: 'Maps Test User',
				id: 'XYZ'
			};
			var request = {
				where: where,
				count: 5,
				bounds: fields.map.getBounds(),
				callback: onGeocodeSuccess,
				errorCallback: onGeocodeFailed,
				userData: userData
			};
			searchManager.geocode(request);
		}

		function onGeocodeSuccess(result, userData) {
			if (result) {
				fields.map.entities.clear();
				var topResult = result.results && result.results[0];
				if (topResult) {
					var pushpinOptions = {
						draggable: true
					};
					var pushpin = new Microsoft.Maps.Pushpin(topResult.location, pushpinOptions);

					fields.map.setView({
						zoom: data.content.zoomLevel,
						center: topResult.location,
						theme: new Microsoft.Maps.Themes.BingTheme()
					});

					locs = topResult.location;
					fields.address.setText(locs.latitude + ', ' + locs.longitude);
					data.content.address = locs.latitude + ', ' + locs.longitude;
					data.content.coord = data.content.address.split(",");
					data.content.loc1 = data.content.coord[0];
					data.content.loc2 = data.content.coord[1];
					pushpindrag = Microsoft.Maps.Events.addHandler(pushpin, 'drag', function(e) {
						loc = e.entity.getLocation();
						fields.address.setText(loc.latitude + ', ' + loc.longitude);
						data.content.address = loc.latitude + ', ' + loc.longitude;
					});
					fields.map.entities.push(pushpin);
				}
			}
		}

		function onGeocodeFailed(result, userData) {
			alert('Geocode failed');
		}

		fields.zoomLevel.on('change', function() {
			data.content.zoomLevel = fields.zoomLevel.getValue();
			fields.map.setView({
				zoom: data.content.zoomLevel
			});
		});

		fields.address.on('change', function() {
			data.content.address = fields.address.getText();
			data.content.zoomLevel = fields.zoomLevel.getValue();

			if (/[a-zA-Z]/.test(data.content.address)) {
				LoadSearchModule();
			} else {
				data.content.coord = data.content.address.split(",");
				data.content.loc1 = data.content.coord[0];
				data.content.loc2 = data.content.coord[1];
				fields.map.setView({
					center: new Microsoft.Maps.Location(data.content.loc1, data.content.loc2)
				});
				fields.map.entities.clear();
				var pushpinOptions = {
					draggable: true
				};
				var pushpin = new Microsoft.Maps.Pushpin(self.map.getCenter(), pushpinOptions);
				pushpin.setLocation(new Microsoft.Maps.Location(data.content.loc1, data.content.loc2));
				pushpindrag = Microsoft.Maps.Events.addHandler(pushpin, 'drag', function(e) {
					loc = e.entity.getLocation();
					fields.address.setText(loc.latitude + ', ' + loc.longitude);
					data.content.address = loc.latitude + ', ' + loc.longitude;
				});
				fields.map.entities.push(pushpin);
			}

		});

		this.pluginScoped.addListener(this, function() {});

	},
	applyAction: function(fields, data, elem) {
		var wnd = window, pin1;
		data.content.address = fields.address.getText();
		data.content.zoomLevel = fields.zoomLevel.getValue();
		data.content.coord = data.content.address.split(',');
		if (!this.getIsCorrectCoords(data.content.coord)) {
			this.loadAction(data, true);
		} else {
			data.content.loc1 = data.content.coord[0];
			data.content.loc2 = data.content.coord[1];
		}
		
		this.map.setView({
			zoom: data.content.zoomLevel,
			center: new wnd.Microsoft.Maps.Location(data.content.loc1, data.content.loc2)
		});
		this.map.entities.clear();
		pin1 = new wnd.Microsoft.Maps.Pushpin();
		pin1.setLocation(new wnd.Microsoft.Maps.Location(data.content.loc1, data.content.loc2));
		this.map.entities.push(pin1);
	},
	loadAction: function(data, forceApply) {
		if (!data.content.address || forceApply) data.content.address = '40.6898193359375, -74.0456314086914';
		if (!data.content.zoomLevel || forceApply) data.content.zoomLevel = 16;
		if (!data.content.loc1 || forceApply) data.content.loc1 = '40.6898193359375';
		if (!data.content.loc2 || forceApply) data.content.loc2 = '-74.0456314086914';
	},
	loadedAction: function(data, elem) {
		var self = this;
		if (!this.getIsCorrectCoords(data.content.coord)) {
			this.loadAction(data, true);
		} else {
			data.content.coord = data.content.address.split(",");
			data.content.loc1 = data.content.coord[0];
			data.content.loc2 = data.content.coord[1];
		}

		this.pluginScoped.addListener(this, function() {
			var wnd = window, pushpinOptions, pushpin;
			self.map = new wnd.Microsoft.Maps.Map(elem.children('.bingmap').get(0), {
				credentials: 'ApPNwjkjVaJTByMcHel3UAEz1F9svn5Gj3sKrky4LimlC1IRKLCK6k3exq3wNlom',
				mapTypeId: wnd.Microsoft.Maps.MapTypeId.road,
				theme: new wnd.Microsoft.Maps.Themes.BingTheme(),
				zoom: data.content.zoomLevel,
				center: new wnd.Microsoft.Maps.Location(data.content.loc1, data.content.loc2)

			});
			pushpinOptions = {draggable: true};
			pushpin = new wnd.Microsoft.Maps.Pushpin(self.map.getCenter(), pushpinOptions);
			pushpin.setLocation(new wnd.Microsoft.Maps.Location(data.content.loc1, data.content.loc2));
			self.map.entities.push(pushpin);
		});
	},
	getIsCorrectCoords: function(coord) {
		return !(!coord || coord.length < 2 || isNaN(Number(coord[0])) || isNaN(Number(coord[1])));
	},
	trim: function(str, symbols) {
		var cont = true, a, b, i;
		var symbs = {};
		if (typeof symbols != 'undefined') {
			symbols = symbols.split('');
		} else {
			symbols = [' '];
		}
		for (i = 0; i < symbols.length; i++) {
			symbs[symbols[i]] = true;
		}
		while (cont) {
			cont = false;
			a = str.substring(0,1);
			b = str.substring(str.length-1);
			if (a in symbs) { str = str.substring(1); cont = true; }
			if (b in symbs) { str = str.substring(0,str.length-1); cont = true; }
		}
		return str;
	}
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/vkontakte_community\/main.png";
PluginWrapper._config.template = "{{#isPublished}}\n\t{{#firstOnPage}}\n<script type=\"text\/javascript\" src=\"\/\/vk.com\/js\/api\/openapi.js?116\"><\/script>\n\t{{\/firstOnPage}}\n{{\/isPublished}}\n<div id=\"{{id}}_vk_groups\" class=\"vk_groups\"><\/div>\n<script type=\"text\/javascript\">\n\tif (window.VK) VK.Widgets.Group('{{id}}_vk_groups', {mode: {{content.mode}}, width: '{{width}}', height: '{{height}}', color1: '{{content.color1}}', color2: '{{content.color2}}', color3: '{{content.color3}}'}, {{content.profileId}});\n<\/script>\n";
PluginWrapper._config.active = true;

PluginWrapper.registerPlugin('vkontakte_community', {
	name: 'VK',
	noButton: true,
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 220, height: 260},
		resizable: true
	},
	propertyDialog: {
		//size: {width: 500, height: 400},
		noScroll: true,
		tabs: [
			{name: 'General', children: [
				{type: 'VerticalLayout', children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('ID for Page or Group'),
							helpText: __('Login to your account or group go to settings and find Profile ID (if it does not work try adding minus "-" in fron of ID)')
						},
						{type: 'TextField', id: 'link'}
					]},
					{type: 'HorizontalLayout',
						css: {marginTop: 15},
						columnWeights: [5, 7],
						children: [
							{type: 'VerticalLayout', children: [
								{type: 'Label', text: __('Layout')},
								{type: 'RadioBox', id: 'mode0', label: __('Members'), group: 'mode'},
								{type: 'RadioBox', id: 'mode2', label: __('News'), group: 'mode'},
								{type: 'RadioBox', id: 'mode1', label: __('Name only'), group: 'mode'}
							]},
							{type: 'VerticalLayout', children: [
								{type: 'HorizontalLayout', columnWeights: [8, 4], children: [
									{type: 'Label', text: __('Background color')},
									{type: 'ColorSelector', id: 'color1', noTransparent: true}
								]},
								{type: 'HorizontalLayout', columnWeights: [8, 4], css: {marginTop: 4}, children: [
									{type: 'Label', text: __('Text color')},
									{type: 'ColorSelector', id: 'color2', noTransparent: true}
								]},
								{type: 'HorizontalLayout', columnWeights: [8, 4], css: {marginTop: 4}, children: [
									{type: 'Label', text: __('Buttons color')},
									{type: 'ColorSelector', id: 'color3', noTransparent: true}
								]}
							]}
						]
					}
				]}
			]}
		]
	},
	
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('http://vk.com/js/api/openapi.js?116', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		},
		handleLink: function(link, func) {
			var selfFunc = func;
			if (('' + link).match(/^([0-9]+|\-[0-9]+)$/i)) {
				if (typeof selfFunc === 'function') selfFunc(link);
			} else {
				$.post('https://vk.com/al_pages.php', {act: 'a_oid_by_link', url: link}, function(oid) {
					if (typeof selfFunc === 'function') selfFunc((oid && oid.match(/^[0-9]+$/)) ? oid : null);
				});
			}
		}
	},
	resizeTimeout: null,
	
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function() { self.resizeTimeout = null; self.updateElement(); }, 2000);
		}
	},
	openAction: function(fields, data, elem) {
		fields.link.setText(data.content.link);
		fields.mode0.setValue(data.content.mode === 0);
		fields.mode1.setValue(data.content.mode === 1);
		fields.mode2.setValue(data.content.mode === 2);
		fields.color1.setValue(data.content.color1);
		fields.color2.setValue(data.content.color2);
		fields.color3.setValue(data.content.color3);
	},
	applyAction: function(fields, data, elem) {
		data.content.link = fields.link.getText();
		if (data.content.link) this.pluginScoped.handleLink(data.content.link, function(profileId) {
			if (profileId) data.content.profileId = profileId;
		});
		if (fields.mode0.getValue()) data.content.mode = 0;
		if (fields.mode1.getValue()) data.content.mode = 1;
		if (fields.mode2.getValue()) data.content.mode = 2;
		data.content.color1 = fields.color1.getValue().substring(1);
		data.content.color2 = fields.color2.getValue().substring(1);
		data.content.color3 = fields.color3.getValue().substring(1);
	},
	loadAction: function(data) {
		if (!data.content.mode) data.content.mode = 0;
		if (!data.content.color1) data.content.color1 = 'ffffff';
		if (!data.content.color2) data.content.color2 = '2B587A';
		if (!data.content.color3) data.content.color3 = '5B7FA6';
		if (!data.content.link) data.content.link = '20003922'; //'http://vk.com/public20003922';
		if (!data.content.profileId) data.content.profileId = 20003922;
	},
	loadedAction: function(data, elem) {
		this.pluginScoped.addListener(this, function() {
			window.VK.Widgets.Group(data.id + '_vk_groups', {mode: data.content.mode, width: data.width, height: data.height, color1: data.content.color1, color2: data.content.color2, color3: data.content.color3}, data.content.profileId);
		});
	},
	saveAction: function(data, elem) {
		// TODO: save data
	}
	
});
});
require(['PluginWrapper'], function(PluginWrapper) {
PluginWrapper._config.icon = "http:\/\/us.zyro.com\/plugins\/odnoklassniki\/main.png";
PluginWrapper._config.template = "<div id=\"{{id}}_ok_group_widget\"><\/div>\n{{^isPublished}}\n<script type=\"text\/javascript\">\n\tif (window.OK) window.OK.CONNECT.insertGroupWidget('{{id}}_ok_group_widget', '{{content.groupId}}', '{width:{{width}},height:{{height}}}');\n<\/script>\n{{\/isPublished}}\n{{#isPublished}}\n<script type=\"text\/javascript\">\n\t\/\/ -- {{#firstOnPage}}\n\twindow.wb_ok_group_widget = {\n\t\tscriptLoaded: false,\n\t\tscriptReady: false,\n\t\tlisteners: [],\n\t\taddListener: function(inst, func) {\n\t\t\tif (this.scriptReady) {\n\t\t\t\tfunc.call(inst);\n\t\t\t} else {\n\t\t\t\tthis.listeners.push({inst: inst, func: func});\n\t\t\t}\n\t\t\tif (!this.scriptLoaded) {\n\t\t\t\tthis.scriptLoaded = true;\n\t\t\t\tvar self = this;\n\t\t\t\t$.getScript('https:\/\/connect.ok.ru\/connect.js', function() {\n\t\t\t\t\tself.scriptReady = true;\n\t\t\t\t\tfor (var i = 0; i < self.listeners.length; i++) {\n\t\t\t\t\t\tself.listeners[i].func.call(self.listeners[i].inst);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\t\/\/ -- {{\/firstOnPage}}\n\twindow.wb_ok_group_widget.addListener(this, function() {\n\t\tOK.CONNECT.insertGroupWidget('{{id}}_ok_group_widget', '{{content.groupId}}', '{width:{{width}},height:{{height}}}');\n\t});\n<\/script>\n{{\/isPublished}}\n";
PluginWrapper._config.active = true;

PluginWrapper.registerPlugin('odnoklassniki', {
	name: 'OK',
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 200, height: 285},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{name: 'General', children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Group ID'), helpText: __('Open your group (as administrator), on left side under group logo in menu select "change settings", then at the bottom of the page you will find "ID of this group on Odnoklassniki".')},
					{type: 'TextField', id: 'groupId'}
				]}
			]}
		]
	},
	
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://connect.ok.ru/connect.js', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		}
	},
	resizeTimeout: null,
	
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function() { self.resizeTimeout = null; self.updateElement(); }, 2000);
		}
	},
	openAction: function(fields, data, elem) {
		fields.groupId.setText(data.content.groupId);
	},
	applyAction: function(fields, data, elem) {
		data.content.groupId = fields.groupId.getText();
	},
	loadAction: function(data) {
		if (!data.content.groupId) data.content.groupId = '50582132228315';
	},
	loadedAction: function(data, elem) {
		this.pluginScoped.addListener(this, function() {
			window.OK.CONNECT.insertGroupWidget(data.id + '_ok_group_widget', data.content.groupId, '{width:' + data.width + ',height:' + data.height + '}');
		});
	}
	
});
});
};
